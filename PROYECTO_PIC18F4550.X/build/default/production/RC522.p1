Version 4.0 HI-TECH Software Intermediate Code
"9948 C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 9948: extern volatile __bit LATB0 __attribute__((address(0x7C50)));
[v _LATB0 `Vb ~T0 @X0 0 e@31824 ]
"36 ./SPI_SOFT.h
[; ;./SPI_SOFT.h: 36: void Soft_SPI_Write(char dato_);
[v _Soft_SPI_Write `(v ~T0 @X0 0 ef1`uc ]
"38
[; ;./SPI_SOFT.h: 38: unsigned char Soft_SPI_Read();
[v _Soft_SPI_Read `(uc ~T0 @X0 0 e? ]
"10902 C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 10902: extern volatile __bit TRISB0 __attribute__((address(0x7C98)));
[v _TRISB0 `Vb ~T0 @X0 0 e@31896 ]
"10911
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 10911: extern volatile __bit TRISB3 __attribute__((address(0x7C9B)));
[v _TRISB3 `Vb ~T0 @X0 0 e@31899 ]
"9957
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 9957: extern volatile __bit LATB3 __attribute__((address(0x7C53)));
[v _LATB3 `Vb ~T0 @X0 0 e@31827 ]
"12 ./CONFIG_PIC.h
[p x PLLDIV = 5 ]
"13
[p x CPUDIV = OSC1_PLL2 ]
"14
[p x USBDIV = 1 ]
"17
[p x FOSC = HSPLL_HS ]
"18
[p x FCMEN = ON ]
"19
[p x IESO = OFF ]
"22
[p x PWRT = ON ]
"23
[p x BOR = OFF ]
"24
[p x BORV = 3 ]
"25
[p x VREGEN = OFF ]
"28
[p x WDT = ON ]
"29
[p x WDTPS = 8192 ]
"32
[p x CCP2MX = ON ]
"33
[p x PBADEN = OFF ]
"34
[p x LPT1OSC = OFF ]
"35
[p x MCLRE = ON ]
"38
[p x STVREN = OFF ]
"39
[p x LVP = OFF ]
"40
[p x ICPRT = OFF ]
"41
[p x XINST = OFF ]
"44
[p x CP0 = OFF ]
"45
[p x CP1 = OFF ]
"46
[p x CP2 = OFF ]
"47
[p x CP3 = OFF ]
"50
[p x CPB = OFF ]
"51
[p x CPD = OFF ]
"54
[p x WRT0 = OFF ]
"55
[p x WRT1 = OFF ]
"56
[p x WRT2 = OFF ]
"57
[p x WRT3 = OFF ]
"60
[p x WRTC = OFF ]
"61
[p x WRTB = OFF ]
"62
[p x WRTD = OFF ]
"65
[p x EBTR0 = OFF ]
"66
[p x EBTR1 = OFF ]
"67
[p x EBTR2 = OFF ]
"68
[p x EBTR3 = OFF ]
"71
[p x EBTRB = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 54: __asm("SPPDATA equ 0F62h");
[; <" SPPDATA equ 0F62h ;# ">
"74
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 74: __asm("SPPCFG equ 0F63h");
[; <" SPPCFG equ 0F63h ;# ">
"151
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 151: __asm("SPPEPS equ 0F64h");
[; <" SPPEPS equ 0F64h ;# ">
"225
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 225: __asm("SPPCON equ 0F65h");
[; <" SPPCON equ 0F65h ;# ">
"251
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 251: __asm("UFRM equ 0F66h");
[; <" UFRM equ 0F66h ;# ">
"258
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 258: __asm("UFRML equ 0F66h");
[; <" UFRML equ 0F66h ;# ">
"336
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 336: __asm("UFRMH equ 0F67h");
[; <" UFRMH equ 0F67h ;# ">
"376
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 376: __asm("UIR equ 0F68h");
[; <" UIR equ 0F68h ;# ">
"432
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 432: __asm("UIE equ 0F69h");
[; <" UIE equ 0F69h ;# ">
"488
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 488: __asm("UEIR equ 0F6Ah");
[; <" UEIR equ 0F6Ah ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 539: __asm("UEIE equ 0F6Bh");
[; <" UEIE equ 0F6Bh ;# ">
"590
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 590: __asm("USTAT equ 0F6Ch");
[; <" USTAT equ 0F6Ch ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 650: __asm("UCON equ 0F6Dh");
[; <" UCON equ 0F6Dh ;# ">
"701
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 701: __asm("UADDR equ 0F6Eh");
[; <" UADDR equ 0F6Eh ;# ">
"765
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 765: __asm("UCFG equ 0F6Fh");
[; <" UCFG equ 0F6Fh ;# ">
"844
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 844: __asm("UEP0 equ 0F70h");
[; <" UEP0 equ 0F70h ;# ">
"952
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 952: __asm("UEP1 equ 0F71h");
[; <" UEP1 equ 0F71h ;# ">
"1060
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1060: __asm("UEP2 equ 0F72h");
[; <" UEP2 equ 0F72h ;# ">
"1168
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1168: __asm("UEP3 equ 0F73h");
[; <" UEP3 equ 0F73h ;# ">
"1276
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1276: __asm("UEP4 equ 0F74h");
[; <" UEP4 equ 0F74h ;# ">
"1384
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1384: __asm("UEP5 equ 0F75h");
[; <" UEP5 equ 0F75h ;# ">
"1492
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1492: __asm("UEP6 equ 0F76h");
[; <" UEP6 equ 0F76h ;# ">
"1600
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1600: __asm("UEP7 equ 0F77h");
[; <" UEP7 equ 0F77h ;# ">
"1708
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1708: __asm("UEP8 equ 0F78h");
[; <" UEP8 equ 0F78h ;# ">
"1784
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1784: __asm("UEP9 equ 0F79h");
[; <" UEP9 equ 0F79h ;# ">
"1860
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1860: __asm("UEP10 equ 0F7Ah");
[; <" UEP10 equ 0F7Ah ;# ">
"1936
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 1936: __asm("UEP11 equ 0F7Bh");
[; <" UEP11 equ 0F7Bh ;# ">
"2012
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2012: __asm("UEP12 equ 0F7Ch");
[; <" UEP12 equ 0F7Ch ;# ">
"2088
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2088: __asm("UEP13 equ 0F7Dh");
[; <" UEP13 equ 0F7Dh ;# ">
"2164
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2164: __asm("UEP14 equ 0F7Eh");
[; <" UEP14 equ 0F7Eh ;# ">
"2240
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2240: __asm("UEP15 equ 0F7Fh");
[; <" UEP15 equ 0F7Fh ;# ">
"2316
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2316: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"2455
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2455: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"2565
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2565: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"2707
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2707: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"2828
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2828: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"2975
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 2975: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"3075
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3075: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"3187
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3187: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"3265
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3265: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"3377
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3377: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"3429
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3429: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"3434
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3434: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"3627
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3627: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"3632
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3632: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"3849
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3849: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"3854
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 3854: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"4003
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4003: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"4008
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4008: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"4225
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4225: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"4230
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4230: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"4327
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4327: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"4386
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4386: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"4470
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4470: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"4554
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4554: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"4638
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4638: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"4709
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4709: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"4780
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4780: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"4851
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4851: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"4917
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4917: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"4924
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4924: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"4931
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4931: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"4938
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4938: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"4943
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 4943: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"5148
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5148: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"5153
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5153: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"5404
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5404: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"5409
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5409: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"5416
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5416: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"5421
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5421: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"5428
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5428: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"5433
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5433: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"5440
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5440: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"5447
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5447: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"5568
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5568: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"5575
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5575: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"5582
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5582: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"5589
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5589: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"5679
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5679: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"5764
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5764: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"5769
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5769: __asm("CCP1AS equ 0FB6h");
[; <" CCP1AS equ 0FB6h ;# ">
"5926
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5926: __asm("ECCP1DEL equ 0FB7h");
[; <" ECCP1DEL equ 0FB7h ;# ">
"5931
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 5931: __asm("CCP1DEL equ 0FB7h");
[; <" CCP1DEL equ 0FB7h ;# ">
"6064
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6064: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"6069
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6069: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"6244
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6244: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"6308
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6308: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"6315
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6315: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"6322
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6322: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"6329
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6329: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"6334
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6334: __asm("ECCP1CON equ 0FBDh");
[; <" ECCP1CON equ 0FBDh ;# ">
"6491
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6491: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"6498
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6498: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"6505
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6505: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"6512
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6512: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"6583
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6583: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"6668
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6668: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"6787
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6787: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"6794
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6794: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"6801
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6801: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"6808
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6808: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"6870
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6870: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"6940
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 6940: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"7188
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7188: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"7195
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7195: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"7202
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7202: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"7300
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7300: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"7305
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7305: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"7410
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7410: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"7417
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7417: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"7520
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7520: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"7527
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7527: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"7534
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7534: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"7541
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7541: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"7690
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7690: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"7718
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7718: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"7723
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7723: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"7988
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 7988: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"8071
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8071: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"8141
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8141: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"8148
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8148: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"8155
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8155: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"8162
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8162: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"8233
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8233: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"8240
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8240: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"8247
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8247: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"8254
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8254: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"8261
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8261: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"8268
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8268: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"8275
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8275: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"8282
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8282: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"8289
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8289: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"8296
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8296: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"8303
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8303: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"8310
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8310: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"8317
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8317: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"8324
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8324: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"8331
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8331: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"8338
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8338: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"8345
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8345: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"8352
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8352: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"8359
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8359: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"8366
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8366: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"8373
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8373: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"8380
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8380: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"8387
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8387: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"8394
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8394: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"8401
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8401: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"8408
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8408: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"8415
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8415: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"8507
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8507: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"8584
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8584: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"8701
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8701: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"8708
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8708: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"8715
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8715: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"8722
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8722: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"8731
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8731: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"8738
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8738: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"8745
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8745: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"8752
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8752: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"8761
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8761: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"8768
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8768: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"8775
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8775: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"8782
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8782: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"8789
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8789: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"8796
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8796: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"8872
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8872: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"8879
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8879: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"8886
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8886: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"8893
[; ;C:\Program Files (x86)\Microchip\xc8\pic\include\proc\pic18f4550.h: 8893: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"33 ./SPI_SOFT.h
[; ;./SPI_SOFT.h: 33: unsigned char Dato;
[v _Dato `uc ~T0 @X0 1 e ]
"3 RC522.c
[; ;RC522.c: 3: static void MFRC522_Wr( char addr, char value )
[v _MFRC522_Wr `(v ~T0 @X0 1 sf2`uc`uc ]
"4
[; ;RC522.c: 4: {
{
[e :U _MFRC522_Wr ]
"3
[; ;RC522.c: 3: static void MFRC522_Wr( char addr, char value )
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
"4
[; ;RC522.c: 4: {
[f ]
"5
[; ;RC522.c: 5:     LATB0 = 0;
[e = _LATB0 -> -> 0 `i `b ]
"6
[; ;RC522.c: 6:     Soft_SPI_Write((addr<<1) & 0x7E);
[e ( _Soft_SPI_Write (1 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
"7
[; ;RC522.c: 7:     Soft_SPI_Write( value );
[e ( _Soft_SPI_Write (1 _value ]
"8
[; ;RC522.c: 8:     LATB0 = 1;
[e = _LATB0 -> -> 1 `i `b ]
"9
[; ;RC522.c: 9: }
[e :UE 367 ]
}
"10
[; ;RC522.c: 10: static char MFRC522_Rd( char addr )
[v _MFRC522_Rd `(uc ~T0 @X0 1 sf1`uc ]
"11
[; ;RC522.c: 11: {
{
[e :U _MFRC522_Rd ]
"10
[; ;RC522.c: 10: static char MFRC522_Rd( char addr )
[v _addr `uc ~T0 @X0 1 r1 ]
"11
[; ;RC522.c: 11: {
[f ]
"12
[; ;RC522.c: 12:     char value;
[v _value `uc ~T0 @X0 1 a ]
"14
[; ;RC522.c: 14:     LATB0 = 0;
[e = _LATB0 -> -> 0 `i `b ]
"15
[; ;RC522.c: 15:     Soft_SPI_Write( (( addr << 1 ) & 0x7E) | 0x80 );
[e ( _Soft_SPI_Write (1 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"16
[; ;RC522.c: 16:     value = Soft_SPI_Read( 0x00 );
[e = _value -> ( _Soft_SPI_Read -> 0 `i `uc ]
"17
[; ;RC522.c: 17:     LATB0 = 1;
[e = _LATB0 -> -> 1 `i `b ]
"18
[; ;RC522.c: 18:     return value;
[e ) _value ]
[e $UE 368  ]
"19
[; ;RC522.c: 19: }
[e :UE 368 ]
}
"20
[; ;RC522.c: 20: static void MFRC522_Clear_Bit( char addr, char mask )
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"21
[; ;RC522.c: 21: {
{
[e :U _MFRC522_Clear_Bit ]
"20
[; ;RC522.c: 20: static void MFRC522_Clear_Bit( char addr, char mask )
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"21
[; ;RC522.c: 21: {
[f ]
"22
[; ;RC522.c: 22:     MFRC522_Wr( addr, MFRC522_Rd( addr ) & (~mask) );
[e ( _MFRC522_Wr (2 , _addr -> & -> ( _MFRC522_Rd (1 _addr `i ~ -> _mask `i `uc ]
"23
[; ;RC522.c: 23: }
[e :UE 369 ]
}
"24
[; ;RC522.c: 24: static void MFRC522_Set_Bit( char addr, char mask )
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"25
[; ;RC522.c: 25: {
{
[e :U _MFRC522_Set_Bit ]
"24
[; ;RC522.c: 24: static void MFRC522_Set_Bit( char addr, char mask )
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"25
[; ;RC522.c: 25: {
[f ]
"26
[; ;RC522.c: 26:     MFRC522_Wr( addr, MFRC522_Rd( addr ) | mask );
[e ( _MFRC522_Wr (2 , _addr -> | -> ( _MFRC522_Rd (1 _addr `i -> _mask `i `uc ]
"27
[; ;RC522.c: 27: }
[e :UE 370 ]
}
"28
[; ;RC522.c: 28: void MFRC522_Reset()
[v _MFRC522_Reset `(v ~T0 @X0 1 ef ]
"29
[; ;RC522.c: 29: {
{
[e :U _MFRC522_Reset ]
[f ]
"30
[; ;RC522.c: 30:     MFRC522_Wr( 0x01, 0x0F );
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
"31
[; ;RC522.c: 31: }
[e :UE 371 ]
}
"32
[; ;RC522.c: 32: void MFRC522_AntennaOn()
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
"33
[; ;RC522.c: 33: {
{
[e :U _MFRC522_AntennaOn ]
[f ]
"34
[; ;RC522.c: 34:     MFRC522_Set_Bit( 0x14, 0x03 );
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"35
[; ;RC522.c: 35: }
[e :UE 372 ]
}
"36
[; ;RC522.c: 36: void MFRC522_AntennaOff()
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
"37
[; ;RC522.c: 37: {
{
[e :U _MFRC522_AntennaOff ]
[f ]
"38
[; ;RC522.c: 38:     MFRC522_Clear_Bit( 0x14, 0x03 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"39
[; ;RC522.c: 39: }
[e :UE 373 ]
}
"40
[; ;RC522.c: 40: void MFRC522_Init(void)
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
"41
[; ;RC522.c: 41: {
{
[e :U _MFRC522_Init ]
[f ]
"42
[; ;RC522.c: 42:     TRISB0 = 0;
[e = _TRISB0 -> -> 0 `i `b ]
"43
[; ;RC522.c: 43:     TRISB3 = 0;
[e = _TRISB3 -> -> 0 `i `b ]
"44
[; ;RC522.c: 44:     LATB0 = 1;
[e = _LATB0 -> -> 1 `i `b ]
"45
[; ;RC522.c: 45:     LATB3 = 1;
[e = _LATB3 -> -> 1 `i `b ]
"47
[; ;RC522.c: 47:     MFRC522_Reset();
[e ( _MFRC522_Reset ..  ]
"49
[; ;RC522.c: 49:     MFRC522_Wr( 0x2A, 0x8D );
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
"50
[; ;RC522.c: 50:     MFRC522_Wr( 0x2B, 0x3E );
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
"51
[; ;RC522.c: 51:     MFRC522_Wr( 0x2D, 30 );
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
"52
[; ;RC522.c: 52:     MFRC522_Wr( 0x2C, 0 );
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
"54
[; ;RC522.c: 54:     MFRC522_Wr( 0x15, 0x40 );
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
"55
[; ;RC522.c: 55:     MFRC522_Wr( 0x11, 0x3D );
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
"60
[; ;RC522.c: 60:     MFRC522_AntennaOn();
[e ( _MFRC522_AntennaOn ..  ]
"61
[; ;RC522.c: 61: }
[e :UE 374 ]
}
"62
[; ;RC522.c: 62: char MFRC522_ToCard( char command, char *sendData, char sendLen, char *backData, unsigned *backLen )
[v _MFRC522_ToCard `(uc ~T0 @X0 1 ef5`uc`*uc`uc`*uc`*ui ]
"63
[; ;RC522.c: 63: {
{
[e :U _MFRC522_ToCard ]
"62
[; ;RC522.c: 62: char MFRC522_ToCard( char command, char *sendData, char sendLen, char *backData, unsigned *backLen )
[v _command `uc ~T0 @X0 1 r1 ]
[v _sendData `*uc ~T0 @X0 1 r2 ]
[v _sendLen `uc ~T0 @X0 1 r3 ]
[v _backData `*uc ~T0 @X0 1 r4 ]
[v _backLen `*ui ~T0 @X0 1 r5 ]
"63
[; ;RC522.c: 63: {
[f ]
"64
[; ;RC522.c: 64:   char _status = 2;
[v __status `uc ~T0 @X0 1 a ]
[e = __status -> -> 2 `i `uc ]
"65
[; ;RC522.c: 65:   char irqEn = 0x00;
[v _irqEn `uc ~T0 @X0 1 a ]
[e = _irqEn -> -> 0 `i `uc ]
"66
[; ;RC522.c: 66:   char waitIRq = 0x00;
[v _waitIRq `uc ~T0 @X0 1 a ]
[e = _waitIRq -> -> 0 `i `uc ]
"67
[; ;RC522.c: 67:   char lastBits;
[v _lastBits `uc ~T0 @X0 1 a ]
"68
[; ;RC522.c: 68:   char n;
[v _n `uc ~T0 @X0 1 a ]
"69
[; ;RC522.c: 69:   unsigned i;
[v _i `ui ~T0 @X0 1 a ]
"71
[; ;RC522.c: 71:   switch (command)
[e $U 377  ]
"72
[; ;RC522.c: 72:   {
{
"73
[; ;RC522.c: 73:     case 0x0E:
[e :U 378 ]
"74
[; ;RC522.c: 74:     {
{
"75
[; ;RC522.c: 75:       irqEn = 0x12;
[e = _irqEn -> -> 18 `i `uc ]
"76
[; ;RC522.c: 76:       waitIRq = 0x10;
[e = _waitIRq -> -> 16 `i `uc ]
"77
[; ;RC522.c: 77:       break;
[e $U 376  ]
"78
[; ;RC522.c: 78:     }
}
"79
[; ;RC522.c: 79:     case 0x0C:
[e :U 379 ]
"80
[; ;RC522.c: 80:     {
{
"81
[; ;RC522.c: 81:       irqEn = 0x77;
[e = _irqEn -> -> 119 `i `uc ]
"82
[; ;RC522.c: 82:       waitIRq = 0x30;
[e = _waitIRq -> -> 48 `i `uc ]
"83
[; ;RC522.c: 83:       break;
[e $U 376  ]
"84
[; ;RC522.c: 84:     }
}
"85
[; ;RC522.c: 85:     default:
[e :U 380 ]
"86
[; ;RC522.c: 86:       break;
[e $U 376  ]
"87
[; ;RC522.c: 87:   }
}
[e $U 376  ]
[e :U 377 ]
[e [\ -> _command `i , $ -> 14 `i 378
 , $ -> 12 `i 379
 380 ]
[e :U 376 ]
"88
[; ;RC522.c: 88:   MFRC522_Wr( 0x02, irqEn | 0x80 );
[e ( _MFRC522_Wr (2 , -> -> 2 `i `uc -> | -> _irqEn `i -> 128 `i `uc ]
"89
[; ;RC522.c: 89:   MFRC522_Clear_Bit( 0x04, 0x80 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 4 `i `uc -> -> 128 `i `uc ]
"90
[; ;RC522.c: 90:   MFRC522_Set_Bit( 0x0A, 0x80 );
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"91
[; ;RC522.c: 91:   MFRC522_Wr( 0x01, 0x00 );
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"94
[; ;RC522.c: 94:   for ( i=0; i < sendLen; i++ )
{
[e = _i -> -> 0 `i `ui ]
[e $U 384  ]
[e :U 381 ]
"95
[; ;RC522.c: 95:   {
{
"96
[; ;RC522.c: 96:     MFRC522_Wr( 0x09, sendData[i] );
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U + _sendData * -> _i `ux -> -> # *U _sendData `ui `ux ]
"97
[; ;RC522.c: 97:   }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 384 ]
[e $ < _i -> _sendLen `ui 381  ]
[e :U 382 ]
}
"99
[; ;RC522.c: 99:   MFRC522_Wr( 0x01, command );
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc _command ]
"100
[; ;RC522.c: 100:   if (command == 0x0C )
[e $ ! == -> _command `i -> 12 `i 385  ]
"101
[; ;RC522.c: 101:   {
{
"102
[; ;RC522.c: 102:     MFRC522_Set_Bit( 0x0D, 0x80 );
[e ( _MFRC522_Set_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"103
[; ;RC522.c: 103:   }
}
[e :U 385 ]
"106
[; ;RC522.c: 106:   i = 0xFFFF;
[e = _i -> 65535 `ui ]
"107
[; ;RC522.c: 107:   do
[e :U 388 ]
"108
[; ;RC522.c: 108:   {
{
"111
[; ;RC522.c: 111:     n = MFRC522_Rd( 0x04 );
[e = _n ( _MFRC522_Rd (1 -> -> 4 `i `uc ]
"112
[; ;RC522.c: 112:     i--;
[e -- _i -> -> 1 `i `ui ]
"113
[; ;RC522.c: 113:   }
}
[e $ && && != _i -> -> 0 `i `ui ! != & -> _n `i -> 1 `i -> 0 `i ! != & -> _n `i -> _waitIRq `i -> 0 `i 388  ]
[e :U 387 ]
"115
[; ;RC522.c: 115:   MFRC522_Clear_Bit( 0x0D, 0x80 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"116
[; ;RC522.c: 116:   if (i != 0)
[e $ ! != _i -> -> 0 `i `ui 389  ]
"117
[; ;RC522.c: 117:   {
{
"118
[; ;RC522.c: 118:     if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
[e $ ! ! != & -> ( _MFRC522_Rd (1 -> -> 6 `i `uc `i -> 27 `i -> 0 `i 390  ]
"119
[; ;RC522.c: 119:     {
{
"120
[; ;RC522.c: 120:       _status = 0;
[e = __status -> -> 0 `i `uc ]
"121
[; ;RC522.c: 121:       if ( n & irqEn & 0x01 )
[e $ ! != & & -> _n `i -> _irqEn `i -> 1 `i -> 0 `i 391  ]
"122
[; ;RC522.c: 122:       {
{
"123
[; ;RC522.c: 123:         _status = 1;
[e = __status -> -> 1 `i `uc ]
"124
[; ;RC522.c: 124:       }
}
[e :U 391 ]
"125
[; ;RC522.c: 125:       if ( command == 0x0C )
[e $ ! == -> _command `i -> 12 `i 392  ]
"126
[; ;RC522.c: 126:       {
{
"127
[; ;RC522.c: 127:         n = MFRC522_Rd( 0x0A );
[e = _n ( _MFRC522_Rd (1 -> -> 10 `i `uc ]
"128
[; ;RC522.c: 128:         lastBits = MFRC522_Rd( 0x0C ) & 0x07;
[e = _lastBits -> & -> ( _MFRC522_Rd (1 -> -> 12 `i `uc `i -> 7 `i `uc ]
"129
[; ;RC522.c: 129:         if (lastBits)
[e $ ! != -> _lastBits `i -> 0 `i 393  ]
"130
[; ;RC522.c: 130:         {
{
"131
[; ;RC522.c: 131:           *backLen = (n-1) * 8 + lastBits;
[e = *U _backLen -> + * - -> _n `i -> 1 `i -> 8 `i -> _lastBits `i `ui ]
"132
[; ;RC522.c: 132:         }
}
[e $U 394  ]
"133
[; ;RC522.c: 133:         else
[e :U 393 ]
"134
[; ;RC522.c: 134:         {
{
"135
[; ;RC522.c: 135:           *backLen = n * 8;
[e = *U _backLen -> * -> _n `i -> 8 `i `ui ]
"136
[; ;RC522.c: 136:         }
}
[e :U 394 ]
"137
[; ;RC522.c: 137:         if (n == 0)
[e $ ! == -> _n `i -> 0 `i 395  ]
"138
[; ;RC522.c: 138:         {
{
"139
[; ;RC522.c: 139:           n = 1;
[e = _n -> -> 1 `i `uc ]
"140
[; ;RC522.c: 140:         }
}
[e :U 395 ]
"141
[; ;RC522.c: 141:         if (n > 16)
[e $ ! > -> _n `i -> 16 `i 396  ]
"142
[; ;RC522.c: 142:         {
{
"143
[; ;RC522.c: 143:           n = 16;
[e = _n -> -> 16 `i `uc ]
"144
[; ;RC522.c: 144:         }
}
[e :U 396 ]
"146
[; ;RC522.c: 146:         for (i=0; i < n; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 400  ]
[e :U 397 ]
"147
[; ;RC522.c: 147:         {
{
"148
[; ;RC522.c: 148:           backData[i] = MFRC522_Rd( 0x09 );
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"149
[; ;RC522.c: 149:         }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 400 ]
[e $ < _i -> _n `ui 397  ]
[e :U 398 ]
}
"151
[; ;RC522.c: 151:     backData[i] = 0;
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux -> -> 0 `i `uc ]
"152
[; ;RC522.c: 152:       }
}
[e :U 392 ]
"153
[; ;RC522.c: 153:     }
}
[e $U 401  ]
"154
[; ;RC522.c: 154:     else
[e :U 390 ]
"155
[; ;RC522.c: 155:     {
{
"156
[; ;RC522.c: 156:       _status = 2;
[e = __status -> -> 2 `i `uc ]
"157
[; ;RC522.c: 157:     }
}
[e :U 401 ]
"158
[; ;RC522.c: 158:   }
}
[e :U 389 ]
"161
[; ;RC522.c: 161:   return _status;
[e ) __status ]
[e $UE 375  ]
"162
[; ;RC522.c: 162: }
[e :UE 375 ]
}
"163
[; ;RC522.c: 163: char MFRC522_Request( char reqMode, char *TagType )
[v _MFRC522_Request `(uc ~T0 @X0 1 ef2`uc`*uc ]
"164
[; ;RC522.c: 164: {
{
[e :U _MFRC522_Request ]
"163
[; ;RC522.c: 163: char MFRC522_Request( char reqMode, char *TagType )
[v _reqMode `uc ~T0 @X0 1 r1 ]
[v _TagType `*uc ~T0 @X0 1 r2 ]
"164
[; ;RC522.c: 164: {
[f ]
"165
[; ;RC522.c: 165:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"166
[; ;RC522.c: 166:   unsigned backBits;
[v _backBits `ui ~T0 @X0 1 a ]
"167
[; ;RC522.c: 167:   MFRC522_Wr( 0x0D, 0x07 );
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 7 `i `uc ]
"168
[; ;RC522.c: 168:   TagType[0] = reqMode;
[e = *U + _TagType * -> -> 0 `i `x -> -> # *U _TagType `i `x _reqMode ]
"169
[; ;RC522.c: 169:   _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _TagType -> -> 1 `i `uc _TagType &U _backBits ]
"170
[; ;RC522.c: 170:   if ( (_status != 0) || (backBits != 0x10) )
[e $ ! || != -> __status `i -> 0 `i != _backBits -> -> 16 `i `ui 403  ]
"171
[; ;RC522.c: 171:   {
{
"172
[; ;RC522.c: 172:     _status = 2;
[e = __status -> -> 2 `i `uc ]
"173
[; ;RC522.c: 173:   }
}
[e :U 403 ]
"174
[; ;RC522.c: 174:   return _status;
[e ) __status ]
[e $UE 402  ]
"175
[; ;RC522.c: 175: }
[e :UE 402 ]
}
"176
[; ;RC522.c: 176: void MFRC522_CRC( char *dataIn, char length, char *dataOut )
[v _MFRC522_CRC `(v ~T0 @X0 1 ef3`*uc`uc`*uc ]
"177
[; ;RC522.c: 177: {
{
[e :U _MFRC522_CRC ]
"176
[; ;RC522.c: 176: void MFRC522_CRC( char *dataIn, char length, char *dataOut )
[v _dataIn `*uc ~T0 @X0 1 r1 ]
[v _length `uc ~T0 @X0 1 r2 ]
[v _dataOut `*uc ~T0 @X0 1 r3 ]
"177
[; ;RC522.c: 177: {
[f ]
"178
[; ;RC522.c: 178: char i, n;
[v _i `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
"179
[; ;RC522.c: 179:     MFRC522_Clear_Bit( 0x05, 0x04 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 5 `i `uc -> -> 4 `i `uc ]
"180
[; ;RC522.c: 180:     MFRC522_Set_Bit( 0x0A, 0x80 );
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"183
[; ;RC522.c: 183:     for ( i = 0; i < length; i++ )
{
[e = _i -> -> 0 `i `uc ]
[e $U 408  ]
[e :U 405 ]
"184
[; ;RC522.c: 184:     {
{
"185
[; ;RC522.c: 185:         MFRC522_Wr( 0x09, *dataIn++ );
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U ++ _dataIn * -> -> 1 `i `x -> -> # *U _dataIn `i `x ]
"186
[; ;RC522.c: 186:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 408 ]
[e $ < -> _i `i -> _length `i 405  ]
[e :U 406 ]
}
"188
[; ;RC522.c: 188:     MFRC522_Wr( 0x01, 0x03 );
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
"190
[; ;RC522.c: 190:     i = 0xFF;
[e = _i -> -> 255 `i `uc ]
"192
[; ;RC522.c: 192:     do
[e :U 411 ]
"193
[; ;RC522.c: 193:     {
{
"194
[; ;RC522.c: 194:         n = MFRC522_Rd( 0x05 );
[e = _n ( _MFRC522_Rd (1 -> -> 5 `i `uc ]
"195
[; ;RC522.c: 195:         i--;
[e -- _i -> -> 1 `i `uc ]
"196
[; ;RC522.c: 196:     }
}
[e $ && != -> _i `i -> 0 `i ! != & -> _n `i -> 4 `i -> 0 `i 411  ]
[e :U 410 ]
"199
[; ;RC522.c: 199:     dataOut[0] = MFRC522_Rd( 0x22 );
[e = *U + _dataOut * -> -> 0 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 34 `i `uc ]
"200
[; ;RC522.c: 200:     dataOut[1] = MFRC522_Rd( 0x21 );
[e = *U + _dataOut * -> -> 1 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 33 `i `uc ]
"201
[; ;RC522.c: 201: }
[e :UE 404 ]
}
"202
[; ;RC522.c: 202: char MFRC522_SelectTag( char *serNum )
[v _MFRC522_SelectTag `(uc ~T0 @X0 1 ef1`*uc ]
"203
[; ;RC522.c: 203: {
{
[e :U _MFRC522_SelectTag ]
"202
[; ;RC522.c: 202: char MFRC522_SelectTag( char *serNum )
[v _serNum `*uc ~T0 @X0 1 r1 ]
"203
[; ;RC522.c: 203: {
[f ]
"204
[; ;RC522.c: 204:   char i;
[v _i `uc ~T0 @X0 1 a ]
"205
[; ;RC522.c: 205:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"206
[; ;RC522.c: 206:   char size;
[v _size `uc ~T0 @X0 1 a ]
"207
[; ;RC522.c: 207:   unsigned recvBits;
[v _recvBits `ui ~T0 @X0 1 a ]
"208
[; ;RC522.c: 208:   char buffer[9];
[v _buffer `uc ~T0 @X0 -> 9 `i a ]
"212
[; ;RC522.c: 212:   buffer[0] = 0x93;
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 147 `i `uc ]
"213
[; ;RC522.c: 213:   buffer[1] = 0x70;
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 112 `i `uc ]
"215
[; ;RC522.c: 215:   for ( i=2; i < 7; i++ )
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 7 `i 413  ]
[e $U 414  ]
[e :U 413 ]
"216
[; ;RC522.c: 216:   {
{
"217
[; ;RC522.c: 217:     buffer[i] = *serNum++;
[e = *U + &U _buffer * -> _i `ux -> -> # *U &U _buffer `ui `ux *U ++ _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x ]
"218
[; ;RC522.c: 218:   }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 413  ]
[e :U 414 ]
}
"220
[; ;RC522.c: 220:   MFRC522_CRC( buffer, 7, &buffer[7] );
[e ( _MFRC522_CRC (3 , , &U _buffer -> -> 7 `i `uc &U *U + &U _buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"222
[; ;RC522.c: 222:   _status = MFRC522_ToCard( 0x0C, buffer, 9, buffer, &recvBits );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buffer -> -> 9 `i `uc &U _buffer &U _recvBits ]
"223
[; ;RC522.c: 223:   if ( (_status == 0) && (recvBits == 0x18) )
[e $ ! && == -> __status `i -> 0 `i == _recvBits -> -> 24 `i `ui 416  ]
"224
[; ;RC522.c: 224:   {
{
"225
[; ;RC522.c: 225:     size = buffer[0];
[e = _size *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"226
[; ;RC522.c: 226:   }
}
[e $U 417  ]
"227
[; ;RC522.c: 227:   else
[e :U 416 ]
"228
[; ;RC522.c: 228:   {
{
"229
[; ;RC522.c: 229:     size = 0;
[e = _size -> -> 0 `i `uc ]
"230
[; ;RC522.c: 230:   }
}
[e :U 417 ]
"231
[; ;RC522.c: 231:   return size;
[e ) _size ]
[e $UE 412  ]
"232
[; ;RC522.c: 232: }
[e :UE 412 ]
}
"234
[; ;RC522.c: 234: void MFRC522_Halt()
[v _MFRC522_Halt `(v ~T0 @X0 1 ef ]
"235
[; ;RC522.c: 235: {
{
[e :U _MFRC522_Halt ]
[f ]
"236
[; ;RC522.c: 236:   unsigned unLen;
[v _unLen `ui ~T0 @X0 1 a ]
"237
[; ;RC522.c: 237:   char buff[4];
[v _buff `uc ~T0 @X0 -> 4 `i a ]
"239
[; ;RC522.c: 239:   buff[0] = 0x50;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 80 `i `uc ]
"240
[; ;RC522.c: 240:   buff[1] = 0;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"241
[; ;RC522.c: 241:   MFRC522_CRC( buff, 2, &buff[2] );
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"242
[; ;RC522.c: 242:   MFRC522_Clear_Bit( 0x08, 0x80 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 128 `i `uc ]
"243
[; ;RC522.c: 243:   MFRC522_ToCard( 0x0C, buff, 4, buff, &unLen );
[e ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _unLen ]
"244
[; ;RC522.c: 244:   MFRC522_Clear_Bit( 0x08, 0x08 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"245
[; ;RC522.c: 245: }
[e :UE 418 ]
}
"246
[; ;RC522.c: 246: char MFRC522_Auth( char authMode, char BlockAddr, char *Sectorkey, char *serNum )
[v _MFRC522_Auth `(uc ~T0 @X0 1 ef4`uc`uc`*uc`*uc ]
"247
[; ;RC522.c: 247: {
{
[e :U _MFRC522_Auth ]
"246
[; ;RC522.c: 246: char MFRC522_Auth( char authMode, char BlockAddr, char *Sectorkey, char *serNum )
[v _authMode `uc ~T0 @X0 1 r1 ]
[v _BlockAddr `uc ~T0 @X0 1 r2 ]
[v _Sectorkey `*uc ~T0 @X0 1 r3 ]
[v _serNum `*uc ~T0 @X0 1 r4 ]
"247
[; ;RC522.c: 247: {
[f ]
"248
[; ;RC522.c: 248:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"249
[; ;RC522.c: 249:   unsigned recvBits;
[v _recvBits `ui ~T0 @X0 1 a ]
"250
[; ;RC522.c: 250:   char i;
[v _i `uc ~T0 @X0 1 a ]
"251
[; ;RC522.c: 251:   char buff[12];
[v _buff `uc ~T0 @X0 -> 12 `i a ]
"254
[; ;RC522.c: 254:   buff[0] = authMode;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _authMode ]
"255
[; ;RC522.c: 255:   buff[1] = BlockAddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _BlockAddr ]
"257
[; ;RC522.c: 257:   for ( i = 2; i < 8; i++ )
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 8 `i 420  ]
[e $U 421  ]
[e :U 420 ]
"258
[; ;RC522.c: 258:   {
{
"259
[; ;RC522.c: 259:     buff[i] = Sectorkey[i-2];
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _Sectorkey * -> - -> _i `i -> 2 `i `x -> -> # *U _Sectorkey `i `x ]
"260
[; ;RC522.c: 260:   }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 420  ]
[e :U 421 ]
}
"262
[; ;RC522.c: 262:   for ( i = 8; i < 12; i++ )
{
[e = _i -> -> 8 `i `uc ]
[e $ < -> _i `i -> 12 `i 423  ]
[e $U 424  ]
[e :U 423 ]
"263
[; ;RC522.c: 263:   {
{
"264
[; ;RC522.c: 264:     buff[i] = serNum[i-8];
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _serNum * -> - -> _i `i -> 8 `i `x -> -> # *U _serNum `i `x ]
"265
[; ;RC522.c: 265:   }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 12 `i 423  ]
[e :U 424 ]
}
"267
[; ;RC522.c: 267:   _status = MFRC522_ToCard( 0x0E, buff, 12, buff, &recvBits );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 14 `i `uc &U _buff -> -> 12 `i `uc &U _buff &U _recvBits ]
"269
[; ;RC522.c: 269:   if ( ( _status != 0 ) || !( MFRC522_Rd( 0x08 ) & 0x08 ) )
[e $ ! || != -> __status `i -> 0 `i ! != & -> ( _MFRC522_Rd (1 -> -> 8 `i `uc `i -> 8 `i -> 0 `i 426  ]
"270
[; ;RC522.c: 270:   {
{
"271
[; ;RC522.c: 271:     _status = 2;
[e = __status -> -> 2 `i `uc ]
"272
[; ;RC522.c: 272:   }
}
[e :U 426 ]
"274
[; ;RC522.c: 274:   return _status;
[e ) __status ]
[e $UE 419  ]
"275
[; ;RC522.c: 275: }
[e :UE 419 ]
}
"276
[; ;RC522.c: 276: char MFRC522_Write( char blockAddr, char *writeData )
[v _MFRC522_Write `(uc ~T0 @X0 1 ef2`uc`*uc ]
"277
[; ;RC522.c: 277: {
{
[e :U _MFRC522_Write ]
"276
[; ;RC522.c: 276: char MFRC522_Write( char blockAddr, char *writeData )
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _writeData `*uc ~T0 @X0 1 r2 ]
"277
[; ;RC522.c: 277: {
[f ]
"278
[; ;RC522.c: 278:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"279
[; ;RC522.c: 279:   unsigned recvBits;
[v _recvBits `ui ~T0 @X0 1 a ]
"280
[; ;RC522.c: 280:   char i;
[v _i `uc ~T0 @X0 1 a ]
"281
[; ;RC522.c: 281:   char buff[18];
[v _buff `uc ~T0 @X0 -> 18 `i a ]
"282
[; ;RC522.c: 282:   buff[0] = 0xA0;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 160 `i `uc ]
"283
[; ;RC522.c: 283:   buff[1] = blockAddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _blockAddr ]
"285
[; ;RC522.c: 285:   MFRC522_CRC( buff, 2, &buff[2] );
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"286
[; ;RC522.c: 286:   _status = MFRC522_ToCard( 0x0C, buff, 4, buff, &recvBits );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvBits ]
"287
[; ;RC522.c: 287:   if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A) )
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 428  ]
"288
[; ;RC522.c: 288:   {
{
"289
[; ;RC522.c: 289:     _status = 2;
[e = __status -> -> 2 `i `uc ]
"290
[; ;RC522.c: 290:   }
}
[e :U 428 ]
"291
[; ;RC522.c: 291:   if (_status == 0)
[e $ ! == -> __status `i -> 0 `i 429  ]
"292
[; ;RC522.c: 292:   {
{
"293
[; ;RC522.c: 293:     for ( i = 0; i < 16; i++ )
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 430  ]
[e $U 431  ]
[e :U 430 ]
"294
[; ;RC522.c: 294:     {
{
"295
[; ;RC522.c: 295:       buff[i] = writeData[i];
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _writeData * -> _i `ux -> -> # *U _writeData `ui `ux ]
"296
[; ;RC522.c: 296:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 430  ]
[e :U 431 ]
}
"298
[; ;RC522.c: 298:     MFRC522_CRC( buff, 16, &buff[16] );
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 16 `i `uc &U *U + &U _buff * -> -> -> 16 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"299
[; ;RC522.c: 299:     _status = MFRC522_ToCard( 0x0C, buff, 18, buff, &recvBits );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 18 `i `uc &U _buff &U _recvBits ]
"300
[; ;RC522.c: 300:     if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A ) )
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 433  ]
"301
[; ;RC522.c: 301:     {
{
"302
[; ;RC522.c: 302:       _status = 2;
[e = __status -> -> 2 `i `uc ]
"303
[; ;RC522.c: 303:     }
}
[e :U 433 ]
"304
[; ;RC522.c: 304:   }
}
[e :U 429 ]
"305
[; ;RC522.c: 305:   return _status;
[e ) __status ]
[e $UE 427  ]
"306
[; ;RC522.c: 306: }
[e :UE 427 ]
}
"307
[; ;RC522.c: 307: char MFRC522_Read( char blockAddr, char *recvData )
[v _MFRC522_Read `(uc ~T0 @X0 1 ef2`uc`*uc ]
"308
[; ;RC522.c: 308: {
{
[e :U _MFRC522_Read ]
"307
[; ;RC522.c: 307: char MFRC522_Read( char blockAddr, char *recvData )
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _recvData `*uc ~T0 @X0 1 r2 ]
"308
[; ;RC522.c: 308: {
[f ]
"309
[; ;RC522.c: 309:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"310
[; ;RC522.c: 310:   unsigned unLen;
[v _unLen `ui ~T0 @X0 1 a ]
"311
[; ;RC522.c: 311:   recvData[0] = 0x30;
[e = *U + _recvData * -> -> 0 `i `x -> -> # *U _recvData `i `x -> -> 48 `i `uc ]
"312
[; ;RC522.c: 312:   recvData[1] = blockAddr;
[e = *U + _recvData * -> -> 1 `i `x -> -> # *U _recvData `i `x _blockAddr ]
"314
[; ;RC522.c: 314:   MFRC522_CRC( recvData, 2, &recvData[2] );
[e ( _MFRC522_CRC (3 , , _recvData -> -> 2 `i `uc &U *U + _recvData * -> -> 2 `i `x -> -> # *U _recvData `i `x ]
"316
[; ;RC522.c: 316:   _status = MFRC522_ToCard( 0x0C, recvData, 4, recvData, &unLen );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _recvData -> -> 4 `i `uc _recvData &U _unLen ]
"317
[; ;RC522.c: 317:   if ( (_status != 0) || (unLen != 0x90) )
[e $ ! || != -> __status `i -> 0 `i != _unLen -> -> 144 `i `ui 435  ]
"318
[; ;RC522.c: 318:   {
{
"319
[; ;RC522.c: 319:     _status = 2;
[e = __status -> -> 2 `i `uc ]
"320
[; ;RC522.c: 320:   }
}
[e :U 435 ]
"321
[; ;RC522.c: 321:   return _status;
[e ) __status ]
[e $UE 434  ]
"322
[; ;RC522.c: 322: }
[e :UE 434 ]
}
"323
[; ;RC522.c: 323: char MFRC522_AntiColl( char *serNum )
[v _MFRC522_AntiColl `(uc ~T0 @X0 1 ef1`*uc ]
"324
[; ;RC522.c: 324: {
{
[e :U _MFRC522_AntiColl ]
"323
[; ;RC522.c: 323: char MFRC522_AntiColl( char *serNum )
[v _serNum `*uc ~T0 @X0 1 r1 ]
"324
[; ;RC522.c: 324: {
[f ]
"325
[; ;RC522.c: 325:   char _status;
[v __status `uc ~T0 @X0 1 a ]
"326
[; ;RC522.c: 326:   char i;
[v _i `uc ~T0 @X0 1 a ]
"327
[; ;RC522.c: 327:   char serNumCheck = 0;
[v _serNumCheck `uc ~T0 @X0 1 a ]
[e = _serNumCheck -> -> 0 `i `uc ]
"328
[; ;RC522.c: 328:   unsigned unLen;
[v _unLen `ui ~T0 @X0 1 a ]
"329
[; ;RC522.c: 329:   MFRC522_Wr( 0x0D, 0x00 );
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 0 `i `uc ]
"330
[; ;RC522.c: 330:   serNum[0] = 0x93;
[e = *U + _serNum * -> -> 0 `i `x -> -> # *U _serNum `i `x -> -> 147 `i `uc ]
"331
[; ;RC522.c: 331:   serNum[1] = 0x20;
[e = *U + _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x -> -> 32 `i `uc ]
"332
[; ;RC522.c: 332:   MFRC522_Clear_Bit( 0x08, 0x08 );
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"333
[; ;RC522.c: 333:   _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _serNum -> -> 2 `i `uc _serNum &U _unLen ]
"334
[; ;RC522.c: 334:   if (_status == 0)
[e $ ! == -> __status `i -> 0 `i 437  ]
"335
[; ;RC522.c: 335:   {
{
"336
[; ;RC522.c: 336:     for ( i=0; i < 4; i++ )
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 438  ]
[e $U 439  ]
[e :U 438 ]
"337
[; ;RC522.c: 337:     {
{
"338
[; ;RC522.c: 338:       serNumCheck ^= serNum[i];
[e =^ _serNumCheck -> *U + _serNum * -> _i `ux -> -> # *U _serNum `ui `ux `uc ]
"339
[; ;RC522.c: 339:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 438  ]
[e :U 439 ]
}
"341
[; ;RC522.c: 341:     if ( serNumCheck != serNum[4] )
[e $ ! != -> _serNumCheck `i -> *U + _serNum * -> -> 4 `i `x -> -> # *U _serNum `i `x `i 441  ]
"342
[; ;RC522.c: 342:     {
{
"343
[; ;RC522.c: 343:       _status = 2;
[e = __status -> -> 2 `i `uc ]
"344
[; ;RC522.c: 344:     }
}
[e :U 441 ]
"345
[; ;RC522.c: 345:   }
}
[e :U 437 ]
"346
[; ;RC522.c: 346:   return _status;
[e ) __status ]
[e $UE 436  ]
"347
[; ;RC522.c: 347: }
[e :UE 436 ]
}
"353
[; ;RC522.c: 353: char MFRC522_isCard(char *TagType)
[v _MFRC522_isCard `(uc ~T0 @X0 1 ef1`*uc ]
"354
[; ;RC522.c: 354: {
{
[e :U _MFRC522_isCard ]
"353
[; ;RC522.c: 353: char MFRC522_isCard(char *TagType)
[v _TagType `*uc ~T0 @X0 1 r1 ]
"354
[; ;RC522.c: 354: {
[f ]
"355
[; ;RC522.c: 355:     if (MFRC522_Request(0x26,TagType) == 0)
[e $ ! == -> ( _MFRC522_Request (2 , -> -> 38 `i `uc _TagType `i -> 0 `i 443  ]
"356
[; ;RC522.c: 356:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 442  ]
[e $U 444  ]
"357
[; ;RC522.c: 357:     else
[e :U 443 ]
"358
[; ;RC522.c: 358:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 442  ]
[e :U 444 ]
"359
[; ;RC522.c: 359: }
[e :UE 442 ]
}
"360
[; ;RC522.c: 360: char MFRC522_ReadCardSerial( char *str )
[v _MFRC522_ReadCardSerial `(uc ~T0 @X0 1 ef1`*uc ]
"361
[; ;RC522.c: 361: {
{
[e :U _MFRC522_ReadCardSerial ]
"360
[; ;RC522.c: 360: char MFRC522_ReadCardSerial( char *str )
[v _str `*uc ~T0 @X0 1 r1 ]
"361
[; ;RC522.c: 361: {
[f ]
"362
[; ;RC522.c: 362:     char _status;
[v __status `uc ~T0 @X0 1 a ]
"364
[; ;RC522.c: 364:     _status = MFRC522_AntiColl( str );
[e = __status ( _MFRC522_AntiColl (1 _str ]
"365
[; ;RC522.c: 365:     str[5] = 0;
[e = *U + _str * -> -> 5 `i `x -> -> # *U _str `i `x -> -> 0 `i `uc ]
"366
[; ;RC522.c: 366:     if (_status == 0)
[e $ ! == -> __status `i -> 0 `i 446  ]
"367
[; ;RC522.c: 367:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 445  ]
[e $U 447  ]
"368
[; ;RC522.c: 368:     else
[e :U 446 ]
"369
[; ;RC522.c: 369:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 445  ]
[e :U 447 ]
"370
[; ;RC522.c: 370: }
[e :UE 445 ]
}
