

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Dec 21 03:08:50 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 09/04/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F886 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  0105                     	;# 
   175  0107                     	;# 
   176  0108                     	;# 
   177  0109                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0185                     	;# 
   184  0187                     	;# 
   185  0188                     	;# 
   186  0189                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0014                     	;# 
   210  0015                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  001D                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  0087                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  008F                     	;# 
   232  0090                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0093                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  0105                     	;# 
   251  0107                     	;# 
   252  0108                     	;# 
   253  0109                     	;# 
   254  010C                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  0185                     	;# 
   260  0187                     	;# 
   261  0188                     	;# 
   262  0189                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  008F                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0093                     	;# 
   313  0093                     	;# 
   314  0094                     	;# 
   315  0095                     	;# 
   316  0096                     	;# 
   317  0097                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009E                     	;# 
   325  009F                     	;# 
   326  0105                     	;# 
   327  0107                     	;# 
   328  0108                     	;# 
   329  0109                     	;# 
   330  010C                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  0185                     	;# 
   336  0187                     	;# 
   337  0188                     	;# 
   338  0189                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0097                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009A                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  0105                     	;# 
   403  0107                     	;# 
   404  0108                     	;# 
   405  0109                     	;# 
   406  010C                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0185                     	;# 
   412  0187                     	;# 
   413  0188                     	;# 
   414  0189                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  0081                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454  0087                     	;# 
   455  0089                     	;# 
   456  008C                     	;# 
   457  008D                     	;# 
   458  008E                     	;# 
   459  008F                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0095                     	;# 
   468  0096                     	;# 
   469  0097                     	;# 
   470  0098                     	;# 
   471  0099                     	;# 
   472  009A                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  0105                     	;# 
   479  0107                     	;# 
   480  0108                     	;# 
   481  0109                     	;# 
   482  010C                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0187                     	;# 
   489  0188                     	;# 
   490  0189                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000D                     	;# 
   506  000E                     	;# 
   507  000E                     	;# 
   508  000F                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0013                     	;# 
   513  0014                     	;# 
   514  0015                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  001D                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  0081                     	;# 
   528  0085                     	;# 
   529  0086                     	;# 
   530  0087                     	;# 
   531  0089                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  008F                     	;# 
   536  0090                     	;# 
   537  0091                     	;# 
   538  0092                     	;# 
   539  0093                     	;# 
   540  0093                     	;# 
   541  0093                     	;# 
   542  0094                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  009F                     	;# 
   554  0105                     	;# 
   555  0107                     	;# 
   556  0108                     	;# 
   557  0109                     	;# 
   558  010C                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  010F                     	;# 
   563  0185                     	;# 
   564  0187                     	;# 
   565  0188                     	;# 
   566  0189                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  000E                     	;# 
   583  000E                     	;# 
   584  000F                     	;# 
   585  0010                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0014                     	;# 
   590  0015                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  0081                     	;# 
   604  0085                     	;# 
   605  0086                     	;# 
   606  0087                     	;# 
   607  0089                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0091                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0093                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  0105                     	;# 
   631  0107                     	;# 
   632  0108                     	;# 
   633  0109                     	;# 
   634  010C                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  010F                     	;# 
   639  0185                     	;# 
   640  0187                     	;# 
   641  0188                     	;# 
   642  0189                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  000E                     	;# 
   660  000F                     	;# 
   661  0010                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0014                     	;# 
   666  0015                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  0081                     	;# 
   680  0085                     	;# 
   681  0086                     	;# 
   682  0087                     	;# 
   683  0089                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  008F                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0093                     	;# 
   693  0093                     	;# 
   694  0094                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0097                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009A                     	;# 
   701  009B                     	;# 
   702  009C                     	;# 
   703  009D                     	;# 
   704  009E                     	;# 
   705  009F                     	;# 
   706  0105                     	;# 
   707  0107                     	;# 
   708  0108                     	;# 
   709  0109                     	;# 
   710  010C                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010F                     	;# 
   715  0185                     	;# 
   716  0187                     	;# 
   717  0188                     	;# 
   718  0189                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000D                     	;# 
   734  000E                     	;# 
   735  000E                     	;# 
   736  000F                     	;# 
   737  0010                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0014                     	;# 
   742  0015                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0017                     	;# 
   746  0018                     	;# 
   747  0019                     	;# 
   748  001A                     	;# 
   749  001B                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  001D                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  0081                     	;# 
   756  0085                     	;# 
   757  0086                     	;# 
   758  0087                     	;# 
   759  0089                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  008E                     	;# 
   763  008F                     	;# 
   764  0090                     	;# 
   765  0091                     	;# 
   766  0092                     	;# 
   767  0093                     	;# 
   768  0093                     	;# 
   769  0093                     	;# 
   770  0094                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009E                     	;# 
   781  009F                     	;# 
   782  0105                     	;# 
   783  0107                     	;# 
   784  0108                     	;# 
   785  0109                     	;# 
   786  010C                     	;# 
   787  010C                     	;# 
   788  010D                     	;# 
   789  010E                     	;# 
   790  010F                     	;# 
   791  0185                     	;# 
   792  0187                     	;# 
   793  0188                     	;# 
   794  0189                     	;# 
   795  018C                     	;# 
   796  018D                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  000E                     	;# 
   812  000F                     	;# 
   813  0010                     	;# 
   814  0011                     	;# 
   815  0012                     	;# 
   816  0013                     	;# 
   817  0014                     	;# 
   818  0015                     	;# 
   819  0015                     	;# 
   820  0016                     	;# 
   821  0017                     	;# 
   822  0018                     	;# 
   823  0019                     	;# 
   824  001A                     	;# 
   825  001B                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  001D                     	;# 
   829  001E                     	;# 
   830  001F                     	;# 
   831  0081                     	;# 
   832  0085                     	;# 
   833  0086                     	;# 
   834  0087                     	;# 
   835  0089                     	;# 
   836  008C                     	;# 
   837  008D                     	;# 
   838  008E                     	;# 
   839  008F                     	;# 
   840  0090                     	;# 
   841  0091                     	;# 
   842  0092                     	;# 
   843  0093                     	;# 
   844  0093                     	;# 
   845  0093                     	;# 
   846  0094                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0098                     	;# 
   851  0099                     	;# 
   852  009A                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  0105                     	;# 
   859  0107                     	;# 
   860  0108                     	;# 
   861  0109                     	;# 
   862  010C                     	;# 
   863  010C                     	;# 
   864  010D                     	;# 
   865  010E                     	;# 
   866  010F                     	;# 
   867  0185                     	;# 
   868  0187                     	;# 
   869  0188                     	;# 
   870  0189                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  000E                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001D                     	;# 
   905  001E                     	;# 
   906  001F                     	;# 
   907  0081                     	;# 
   908  0085                     	;# 
   909  0086                     	;# 
   910  0087                     	;# 
   911  0089                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  008E                     	;# 
   915  008F                     	;# 
   916  0090                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0093                     	;# 
   922  0094                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0097                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009A                     	;# 
   929  009B                     	;# 
   930  009C                     	;# 
   931  009D                     	;# 
   932  009E                     	;# 
   933  009F                     	;# 
   934  0105                     	;# 
   935  0107                     	;# 
   936  0108                     	;# 
   937  0109                     	;# 
   938  010C                     	;# 
   939  010C                     	;# 
   940  010D                     	;# 
   941  010E                     	;# 
   942  010F                     	;# 
   943  0185                     	;# 
   944  0187                     	;# 
   945  0188                     	;# 
   946  0189                     	;# 
   947  018C                     	;# 
   948  018D                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0009                     	;# 
   958  000A                     	;# 
   959  000B                     	;# 
   960  000C                     	;# 
   961  000D                     	;# 
   962  000E                     	;# 
   963  000E                     	;# 
   964  000F                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0014                     	;# 
   970  0015                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001B                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  001D                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  0081                     	;# 
   984  0085                     	;# 
   985  0086                     	;# 
   986  0087                     	;# 
   987  0089                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008F                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0093                     	;# 
   997  0093                     	;# 
   998  0094                     	;# 
   999  0095                     	;# 
  1000  0096                     	;# 
  1001  0097                     	;# 
  1002  0098                     	;# 
  1003  0099                     	;# 
  1004  009A                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  0105                     	;# 
  1011  0107                     	;# 
  1012  0108                     	;# 
  1013  0109                     	;# 
  1014  010C                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  010F                     	;# 
  1019  0185                     	;# 
  1020  0187                     	;# 
  1021  0188                     	;# 
  1022  0189                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025                           
  1026                           	psect	idataBANK0
  1027  10E5                     __pidataBANK0:
  1028                           
  1029                           ;initializer for _Delay1s
  1030  10E5  3410               	retlw	16
  1031  10E6  3427               	retlw	39
  1032                           
  1033                           ;initializer for _Delay200ms
  1034  10E7  34D0               	retlw	208
  1035  10E8  3407               	retlw	7
  1036                           
  1037                           ;initializer for _Delay100ms
  1038  10E9  34E8               	retlw	232
  1039  10EA  3403               	retlw	3
  1040                           
  1041                           	psect	idataBANK1
  1042  10FA                     __pidataBANK1:
  1043                           
  1044                           ;initializer for Pant_Inicio@F1334
  1045  10FA  3406               	retlw	6
  1046  10FB  3409               	retlw	9
  1047  10FC  3409               	retlw	9
  1048  10FD  3406               	retlw	6
  1049  10FE  3400               	retlw	0
  1050  10FF  3400               	retlw	0
  1051  1100  3400               	retlw	0
  1052  1101  3400               	retlw	0
  1053                           
  1054                           	psect	stringtext
  1055  0500                     __pstringtext:
  1056  0500                     stringtab:
  1057  0500                     __stringtab:
  1058                           
  1059                           ;	String table - string pointers are 2 bytes each
  1060  0500  1BFF               	btfsc	btemp+1,7
  1061  0501  2D0A               	ljmp	stringcode
  1062  0502  1383               	bcf	3,7
  1063  0503  187F               	btfsc	btemp+1,0
  1064  0504  1783               	bsf	3,7
  1065  0505  0800               	movf	0,w
  1066  0506  0A84               	incf	4,f
  1067  0507  1903               	skipnz
  1068  0508  0AFF               	incf	btemp+1,f
  1069  0509  0008               	return
  1070  050A                     stringcode:
  1071  050A  087F               	movf	btemp+1,w
  1072  050B  397F               	andlw	127
  1073  050C  008A               	movwf	10
  1074  050D  0804               	movf	4,w
  1075  050E  0A84               	incf	4,f
  1076  050F  1903               	skipnz
  1077  0510  0AFF               	incf	btemp+1,f
  1078  0511  0082               	movwf	2
  1079  0512                     __stringbase:
  1080  0512                     __end_of__stringtab:
  1081  0512                     _dpowers:
  1082  0512  3401               	retlw	1
  1083  0513  3400               	retlw	0
  1084  0514  340A               	retlw	10
  1085  0515  3400               	retlw	0
  1086  0516  3464               	retlw	100
  1087  0517  3400               	retlw	0
  1088  0518  34E8               	retlw	232
  1089  0519  3403               	retlw	3
  1090  051A  3410               	retlw	16
  1091  051B  3427               	retlw	39
  1092  051C                     __end_of_dpowers:
  1093  000E                     _TMR1	set	14
  1094  001E                     _ADRESH	set	30
  1095  001F                     _ADCON0	set	31
  1096  001F                     _ADCON0bits	set	31
  1097  0010                     _T1CONbits	set	16
  1098  0007                     _PORTCbits	set	7
  1099  0006                     _PORTBbits	set	6
  1100  0005                     _PORTAbits	set	5
  1101  0007                     _PORTC	set	7
  1102  0006                     _PORTB	set	6
  1103  0005                     _PORTA	set	5
  1104  0034                     _RB4	set	52
  1105  005F                     _GIE	set	95
  1106  005E                     _PEIE	set	94
  1107  0080                     _TMR1ON	set	128
  1108  0060                     _TMR1IF	set	96
  1109  009E                     _ADRESL	set	158
  1110  009F                     _ADCON1bits	set	159
  1111  0087                     _TRISCbits	set	135
  1112  0086                     _TRISBbits	set	134
  1113  0087                     _TRISC	set	135
  1114  0086                     _TRISB	set	134
  1115  0085                     _TRISAbits	set	133
  1116  0434                     _TRISB4	set	1076
  1117  0460                     _TMR1IE	set	1120
  1118  0105                     _WDTCONbits	set	261
  1119  0188                     _ANSELbits	set	392
  1120  0189                     _ANSELHbits	set	393
  1121  051C                     STR_38:
  1122  051C  3420               	retlw	32	;' '
  1123  051D  3420               	retlw	32	;' '
  1124  051E  3420               	retlw	32	;' '
  1125  051F  3420               	retlw	32	;' '
  1126  0520  3420               	retlw	32	;' '
  1127  0521  3420               	retlw	32	;' '
  1128  0522  3420               	retlw	32	;' '
  1129  0523  3420               	retlw	32	;' '
  1130  0524  3420               	retlw	32	;' '
  1131  0525  3420               	retlw	32	;' '
  1132  0526  3420               	retlw	32	;' '
  1133  0527  3420               	retlw	32	;' '
  1134  0528  3420               	retlw	32	;' '
  1135  0529  3420               	retlw	32	;' '
  1136  052A  3420               	retlw	32	;' '
  1137  052B  3420               	retlw	32	;' '
  1138  052C  3420               	retlw	32	;' '
  1139  052D  3420               	retlw	32	;' '
  1140  052E  3420               	retlw	32	;' '
  1141  052F  3420               	retlw	32	;' '
  1142  0530  3400               	retlw	0
  1143  0531                     STR_3:
  1144  0531  3420               	retlw	32	;' '
  1145  0532  3420               	retlw	32	;' '
  1146  0533  3420               	retlw	32	;' '
  1147  0534  3444               	retlw	68	;'D'
  1148  0535  3445               	retlw	69	;'E'
  1149  0536  3420               	retlw	32	;' '
  1150  0537  3449               	retlw	73	;'I'
  1151  0538  344E               	retlw	78	;'N'
  1152  0539  3459               	retlw	89	;'Y'
  1153  053A  3445               	retlw	69	;'E'
  1154  053B  3443               	retlw	67	;'C'
  1155  053C  3454               	retlw	84	;'T'
  1156  053D  344F               	retlw	79	;'O'
  1157  053E  3452               	retlw	82	;'R'
  1158  053F  3445               	retlw	69	;'E'
  1159  0540  3453               	retlw	83	;'S'
  1160  0541  3420               	retlw	32	;' '
  1161  0542  3420               	retlw	32	;' '
  1162  0543  3420               	retlw	32	;' '
  1163  0544  3420               	retlw	32	;' '
  1164  0545  3400               	retlw	0
  1165  0546                     STR_2:
  1166  0546  3450               	retlw	80	;'P'
  1167  0547  3452               	retlw	82	;'R'
  1168  0548  344F               	retlw	79	;'O'
  1169  0549  3442               	retlw	66	;'B'
  1170  054A  3441               	retlw	65	;'A'
  1171  054B  3444               	retlw	68	;'D'
  1172  054C  344F               	retlw	79	;'O'
  1173  054D  3452               	retlw	82	;'R'
  1174  054E  3420               	retlw	32	;' '
  1175  054F  3441               	retlw	65	;'A'
  1176  0550  3455               	retlw	85	;'U'
  1177  0551  3454               	retlw	84	;'T'
  1178  0552  344F               	retlw	79	;'O'
  1179  0553  344D               	retlw	77	;'M'
  1180  0554  344F               	retlw	79	;'O'
  1181  0555  3454               	retlw	84	;'T'
  1182  0556  3452               	retlw	82	;'R'
  1183  0557  3449               	retlw	73	;'I'
  1184  0558  345A               	retlw	90	;'Z'
  1185  0559  3420               	retlw	32	;' '
  1186  055A  3400               	retlw	0
  1187  055B                     STR_1:
  1188  055B  343D               	retlw	61	;'='
  1189  055C  343D               	retlw	61	;'='
  1190  055D  343D               	retlw	61	;'='
  1191  055E  343D               	retlw	61	;'='
  1192  055F  343D               	retlw	61	;'='
  1193  0560  343D               	retlw	61	;'='
  1194  0561  343D               	retlw	61	;'='
  1195  0562  343D               	retlw	61	;'='
  1196  0563  343D               	retlw	61	;'='
  1197  0564  343D               	retlw	61	;'='
  1198  0565  343D               	retlw	61	;'='
  1199  0566  343D               	retlw	61	;'='
  1200  0567  343D               	retlw	61	;'='
  1201  0568  343D               	retlw	61	;'='
  1202  0569  343D               	retlw	61	;'='
  1203  056A  343D               	retlw	61	;'='
  1204  056B  343D               	retlw	61	;'='
  1205  056C  343D               	retlw	61	;'='
  1206  056D  343D               	retlw	61	;'='
  1207  056E  343D               	retlw	61	;'='
  1208  056F  3400               	retlw	0
  1209  0570                     STR_39:
  1210  0570  3420               	retlw	32	;' '
  1211  0571  3450               	retlw	80	;'P'
  1212  0572  3472               	retlw	114	;'r'
  1213  0573  346F               	retlw	111	;'o'
  1214  0574  3463               	retlw	99	;'c'
  1215  0575  3465               	retlw	101	;'e'
  1216  0576  3473               	retlw	115	;'s'
  1217  0577  346F               	retlw	111	;'o'
  1218  0578  3420               	retlw	32	;' '
  1219  0579  3446               	retlw	70	;'F'
  1220  057A  3469               	retlw	105	;'i'
  1221  057B  346E               	retlw	110	;'n'
  1222  057C  3461               	retlw	97	;'a'
  1223  057D  346C               	retlw	108	;'l'
  1224  057E  3469               	retlw	105	;'i'
  1225  057F  347A               	retlw	122	;'z'
  1226  0580  3461               	retlw	97	;'a'
  1227  0581  3464               	retlw	100	;'d'
  1228  0582  346F               	retlw	111	;'o'
  1229  0583  3400               	retlw	0
  1230  0584                     STR_33:
  1231  0584  3420               	retlw	32	;' '
  1232  0585  3420               	retlw	32	;' '
  1233  0586  3420               	retlw	32	;' '
  1234  0587  3420               	retlw	32	;' '
  1235  0588  3450               	retlw	80	;'P'
  1236  0589  3455               	retlw	85	;'U'
  1237  058A  344C               	retlw	76	;'L'
  1238  058B  3456               	retlw	86	;'V'
  1239  058C  3445               	retlw	69	;'E'
  1240  058D  3452               	retlw	82	;'R'
  1241  058E  3449               	retlw	73	;'I'
  1242  058F  345A               	retlw	90	;'Z'
  1243  0590  3441               	retlw	65	;'A'
  1244  0591  3443               	retlw	67	;'C'
  1245  0592  3449               	retlw	73	;'I'
  1246  0593  344F               	retlw	79	;'O'
  1247  0594  344E               	retlw	78	;'N'
  1248  0595  3400               	retlw	0
  1249  0596                     STR_17:
  1250  0596  344C               	retlw	76	;'L'
  1251  0597  3449               	retlw	73	;'I'
  1252  0598  344D               	retlw	77	;'M'
  1253  0599  3450               	retlw	80	;'P'
  1254  059A  342E               	retlw	46	;'.'
  1255  059B  3420               	retlw	32	;' '
  1256  059C  3455               	retlw	85	;'U'
  1257  059D  344C               	retlw	76	;'L'
  1258  059E  3454               	retlw	84	;'T'
  1259  059F  3452               	retlw	82	;'R'
  1260  05A0  3441               	retlw	65	;'A'
  1261  05A1  3453               	retlw	83	;'S'
  1262  05A2  344F               	retlw	79	;'O'
  1263  05A3  344E               	retlw	78	;'N'
  1264  05A4  3449               	retlw	73	;'I'
  1265  05A5  3444               	retlw	68	;'D'
  1266  05A6  344F               	retlw	79	;'O'
  1267  05A7  3400               	retlw	0
  1268  05A8                     STR_32:
  1269  05A8  3420               	retlw	32	;' '
  1270  05A9  3420               	retlw	32	;' '
  1271  05AA  3420               	retlw	32	;' '
  1272  05AB  3420               	retlw	32	;' '
  1273  05AC  344D               	retlw	77	;'M'
  1274  05AD  346F               	retlw	111	;'o'
  1275  05AE  3464               	retlw	100	;'d'
  1276  05AF  346F               	retlw	111	;'o'
  1277  05B0  3420               	retlw	32	;' '
  1278  05B1  3450               	retlw	80	;'P'
  1279  05B2  3472               	retlw	114	;'r'
  1280  05B3  3475               	retlw	117	;'u'
  1281  05B4  3465               	retlw	101	;'e'
  1282  05B5  3462               	retlw	98	;'b'
  1283  05B6  3461               	retlw	97	;'a'
  1284  05B7  343A               	retlw	58	;':'
  1285  05B8  3400               	retlw	0
  1286  05B9                     STR_31:
  1287  05B9  3450               	retlw	80	;'P'
  1288  05BA  3472               	retlw	114	;'r'
  1289  05BB  346F               	retlw	111	;'o'
  1290  05BC  3463               	retlw	99	;'c'
  1291  05BD  3465               	retlw	101	;'e'
  1292  05BE  3473               	retlw	115	;'s'
  1293  05BF  346F               	retlw	111	;'o'
  1294  05C0  3420               	retlw	32	;' '
  1295  05C1  3444               	retlw	68	;'D'
  1296  05C2  3465               	retlw	101	;'e'
  1297  05C3  3474               	retlw	116	;'t'
  1298  05C4  3465               	retlw	101	;'e'
  1299  05C5  346E               	retlw	110	;'n'
  1300  05C6  3469               	retlw	105	;'i'
  1301  05C7  3464               	retlw	100	;'d'
  1302  05C8  346F               	retlw	111	;'o'
  1303  05C9  3400               	retlw	0
  1304  05CA                     STR_22:
  1305  05CA  3454               	retlw	84	;'T'
  1306  05CB  3445               	retlw	69	;'E'
  1307  05CC  344D               	retlw	77	;'M'
  1308  05CD  3450               	retlw	80	;'P'
  1309  05CE  3445               	retlw	69	;'E'
  1310  05CF  3452               	retlw	82	;'R'
  1311  05D0  3441               	retlw	65	;'A'
  1312  05D1  3454               	retlw	84	;'T'
  1313  05D2  3455               	retlw	85	;'U'
  1314  05D3  3452               	retlw	82	;'R'
  1315  05D4  3441               	retlw	65	;'A'
  1316  05D5  343A               	retlw	58	;':'
  1317  05D6  3400               	retlw	0
  1318  05D7                     STR_37:
  1319  05D7  3420               	retlw	32	;' '
  1320  05D8  3420               	retlw	32	;' '
  1321  05D9  3420               	retlw	32	;' '
  1322  05DA  3420               	retlw	32	;' '
  1323  05DB  3446               	retlw	70	;'F'
  1324  05DC  344C               	retlw	76	;'L'
  1325  05DD  3455               	retlw	85	;'U'
  1326  05DE  344A               	retlw	74	;'J'
  1327  05DF  344F               	retlw	79	;'O'
  1328  05E0  3400               	retlw	0
  1329  05E1                     STR_35:
  1330  05E1  3420               	retlw	32	;' '
  1331  05E2  3420               	retlw	32	;' '
  1332  05E3  3420               	retlw	32	;' '
  1333  05E4  3420               	retlw	32	;' '
  1334  05E5  3446               	retlw	70	;'F'
  1335  05E6  3455               	retlw	85	;'U'
  1336  05E7  3447               	retlw	71	;'G'
  1337  05E8  3441               	retlw	65	;'A'
  1338  05E9  3400               	retlw	0
  1339  05EA                     STR_20:
  1340  05EA  3454               	retlw	84	;'T'
  1341  05EB  3449               	retlw	73	;'I'
  1342  05EC  3445               	retlw	69	;'E'
  1343  05ED  344D               	retlw	77	;'M'
  1344  05EE  3450               	retlw	80	;'P'
  1345  05EF  344F               	retlw	79	;'O'
  1346  05F0  343A               	retlw	58	;':'
  1347  05F1  3400               	retlw	0
  1348  05F2                     STR_18:
  1349  05F2  3452               	retlw	82	;'R'
  1350  05F3  3450               	retlw	80	;'P'
  1351  05F4  344D               	retlw	77	;'M'
  1352  05F5  343A               	retlw	58	;':'
  1353  05F6  3400               	retlw	0
  1354  05F7                     STR_19:
  1355  05F7  3450               	retlw	80	;'P'
  1356  05F8  3457               	retlw	87	;'W'
  1357  05F9  344D               	retlw	77	;'M'
  1358  05FA  343A               	retlw	58	;':'
  1359  05FB  3400               	retlw	0
  1360  05FC                     STR_25:
  1361  05FC  3425               	retlw	37	;'%'
  1362  05FD  3430               	retlw	48	;'0'
  1363  05FE  3432               	retlw	50	;'2'
  1364  05FF  3464               	retlw	100	;'d'
  1365  0600  3400               	retlw	0
  1366  0601                     STR_24:
  1367  0601  3425               	retlw	37	;'%'
  1368  0602  3430               	retlw	48	;'0'
  1369  0603  3435               	retlw	53	;'5'
  1370  0604  3475               	retlw	117	;'u'
  1371  0605  3400               	retlw	0
  1372  0606                     STR_5:
  1373  0606  343E               	retlw	62	;'>'
  1374  0607  3400               	retlw	0
  1375  0608                     STR_23:
  1376  0608  3443               	retlw	67	;'C'
  1377  0609  3400               	retlw	0
  1378  052F                     
  1379                           	psect	cinit
  1380  0013                     start_initialization:	
  1381                           ; #config settings
  1382                           
  1383  0013                     __initialization:
  1384                           
  1385                           ; Initialize objects allocated to BANK1
  1386  0013  1383               	bcf	3,7	;select IRP bank0
  1387  0014  30D0               	movlw	low (__pdataBANK1+8)
  1388  0015  00FD               	movwf	btemp+-1
  1389  0016  3010               	movlw	high __pidataBANK1
  1390  0017  00FE               	movwf	btemp
  1391  0018  30FA               	movlw	low __pidataBANK1
  1392  0019  00FF               	movwf	btemp+1
  1393  001A  30C8               	movlw	low __pdataBANK1
  1394  001B  0084               	movwf	4
  1395  001C  160A  118A  2135  120A  118A  	fcall	init_ram0
  1396                           
  1397                           ; Initialize objects allocated to BANK0
  1398  0021  306C               	movlw	low (__pdataBANK0+6)
  1399  0022  00FD               	movwf	btemp+-1
  1400  0023  3010               	movlw	high __pidataBANK0
  1401  0024  00FE               	movwf	btemp
  1402  0025  30E5               	movlw	low __pidataBANK0
  1403  0026  00FF               	movwf	btemp+1
  1404  0027  3066               	movlw	low __pdataBANK0
  1405  0028  0084               	movwf	4
  1406  0029  160A  118A  2135  120A  118A  	fcall	init_ram0
  1407                           
  1408                           ; Clear objects allocated to BANK1
  1409  002E  30A0               	movlw	low __pbssBANK1
  1410  002F  0084               	movwf	4
  1411  0030  30BD               	movlw	low (__pbssBANK1+29)
  1412  0031  160A  118A  20F2   	fcall	clear_ram0
  1413                           
  1414                           ; Clear objects allocated to BANK0
  1415  0034  01E0               	clrf	__pbssBANK0& (0+127)
  1416  0035  01E1               	clrf	(__pbssBANK0+1)& (0+127)
  1417  0036  01E2               	clrf	(__pbssBANK0+2)& (0+127)
  1418  0037  01E3               	clrf	(__pbssBANK0+3)& (0+127)
  1419  0038  01E4               	clrf	(__pbssBANK0+4)& (0+127)
  1420  0039  01E5               	clrf	(__pbssBANK0+5)& (0+127)
  1421                           
  1422                           ; Clear objects allocated to COMMON
  1423  003A  01F6               	clrf	__pbssCOMMON& (0+127)
  1424  003B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1425  003C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1426  003D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1427  003E                     end_of_initialization:	
  1428                           ;End of C runtime variable initialization code
  1429                           
  1430  003E                     __end_of__initialization:
  1431  003E  0183               	clrf	3
  1432  003F  160A  118A  2ADB   	ljmp	_main	;jump to C main() function
  1433                           
  1434                           	psect	bssCOMMON
  1435  0076                     __pbssCOMMON:
  1436  0076                     _Reset:
  1437  0076                     	ds	1
  1438  0077                     _Output:
  1439  0077                     	ds	1
  1440  0078                     _Seg:
  1441  0078                     	ds	1
  1442  0079                     _Min:
  1443  0079                     	ds	1
  1444                           
  1445                           	psect	bssBANK0
  1446  0060                     __pbssBANK0:
  1447  0060                     _PwmS1:
  1448  0060                     	ds	2
  1449  0062                     _Estado_Actual:
  1450  0062                     	ds	1
  1451  0063                     _mod_tiempo:
  1452  0063                     	ds	1
  1453  0064                     _Pwm:
  1454  0064                     	ds	1
  1455  0065                     _Modo:
  1456  0065                     	ds	1
  1457                           
  1458                           	psect	dataBANK0
  1459  0066                     __pdataBANK0:
  1460  0066                     _Delay1s:
  1461  0066                     	ds	2
  1462  0068                     _Delay200ms:
  1463  0068                     	ds	2
  1464  006A                     _Delay100ms:
  1465  006A                     	ds	2
  1466                           
  1467                           	psect	bssBANK1
  1468  00A0                     __pbssBANK1:
  1469  00A0                     Pant_Inicio@F1336:
  1470  00A0                     	ds	8
  1471  00A8                     _Pw_PwmS1:
  1472  00A8                     	ds	3
  1473  00AB                     _Per_PwmS1:
  1474  00AB                     	ds	3
  1475  00AE                     _Rpm:
  1476  00AE                     	ds	2
  1477  00B0                     _PER_T_S1:
  1478  00B0                     	ds	2
  1479  00B2                     _P_W_T_S1:
  1480  00B2                     	ds	2
  1481  00B4                     _freqPwmS1:
  1482  00B4                     	ds	2
  1483  00B6                     _Subestado_Actual:
  1484  00B6                     	ds	1
  1485  00B7                     _Pwm_Seteado:
  1486  00B7                     	ds	1
  1487  00B8                     _Temporizador:
  1488  00B8                     	ds	1
  1489  00B9                     _Act_Variables:
  1490  00B9                     	ds	1
  1491  00BA                     _Mostrar:
  1492  00BA                     	ds	1
  1493  00BB                     _Temp:
  1494  00BB                     	ds	1
  1495  00BC                     _Act_PwmS1:
  1496  00BC                     	ds	1
  1497                           
  1498                           	psect	dataBANK1
  1499  00C8                     __pdataBANK1:
  1500  00C8                     Pant_Inicio@F1334:
  1501  00C8                     	ds	8
  1502                           
  1503                           	psect	inittext
  1504  1131                     init_fetch0:	
  1505                           ;	Called with low address in FSR and high address in W
  1506                           
  1507  1131  087E               	movf	126,w
  1508  1132  008A               	movwf	10
  1509  1133  087F               	movf	127,w
  1510  1134  0082               	movwf	2
  1511  1135                     init_ram0:	
  1512                           ;Called with:
  1513                           ;	high address of idata address in btemp 
  1514                           ;	low address of idata address in btemp+1 
  1515                           ;	low address of data in FSR
  1516                           ;	high address + 1 of data in btemp-1
  1517                           
  1518  1135  2131  160A  118A   	fcall	init_fetch0
  1519  1138  0080               	movwf	0
  1520  1139  0A84               	incf	4,f
  1521  113A  0804               	movf	4,w
  1522  113B  067D               	xorwf	125,w
  1523  113C  1903               	btfsc	3,2
  1524  113D  3400               	retlw	0
  1525  113E  0AFF               	incf	127,f
  1526  113F  1903               	btfsc	3,2
  1527  1140  0AFE               	incf	126,f
  1528  1141  2935               	goto	init_ram0
  1529                           
  1530                           	psect	clrtext
  1531  10F2                     clear_ram0:	
  1532                           ;	Called with FSR containing the base address, and
  1533                           ;	W with the last address+1
  1534                           
  1535  10F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1536  10F3                     clrloop0:
  1537  10F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1538  10F4  0A84               	incf	4,f	;increment pointer
  1539  10F5  0604               	xorwf	4,w	;XOR with final address
  1540  10F6  1903               	btfsc	3,2	;have we reached the end yet?
  1541  10F7  3400               	retlw	0	;all done for this memory range, return
  1542  10F8  0604               	xorwf	4,w	;XOR again to restore value
  1543  10F9  28F3               	goto	clrloop0	;do the next byte
  1544                           
  1545                           	psect	cstackBANK1
  1546  00BD                     __pcstackBANK1:
  1547  00BD                     _Adc_Rpm_Read$1523:
  1548                           
  1549                           ; 3 bytes @ 0x0
  1550  00BD                     	ds	3
  1551  00C0                     Adc_Rpm_Read@cent:
  1552                           
  1553                           ; 2 bytes @ 0x3
  1554  00C0                     	ds	2
  1555  00C2                     Adc_Rpm_Read@uni_m:
  1556                           
  1557                           ; 2 bytes @ 0x5
  1558  00C2                     	ds	2
  1559  00C4                     Adc_Rpm_Read@dec_m:
  1560                           
  1561                           ; 2 bytes @ 0x7
  1562  00C4                     	ds	2
  1563  00C6                     Adc_Rpm_Read@valor:
  1564                           
  1565                           ; 2 bytes @ 0x9
  1566  00C6                     	ds	2
  1567                           
  1568                           	psect	cstackCOMMON
  1569  0070                     __pcstackCOMMON:
  1570  0070                     ?_isdigit:
  1571  0070                     ?_Pines_Init:	
  1572                           ; 1 bit 
  1573                           
  1574  0070                     ?_MEF_Init:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_LCD_init:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_Pwm_init:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_Adc_init:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_Pwm1_stop:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_MEF_Actualizacion:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_Task_Ready:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ??_Task_Ready:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_Pwm_Signal:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ??_Pwm_Signal:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_Pant_Inicio:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_Select_Modo:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_MEF_Subest_Actualizacion:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_Pant_Pulverizacion:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_Pant_Fuga:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_Pant_Flujo:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_Pant_Modos:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_Pant_Val_Act:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?_Lec_Adc_Modo_Pulv:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ?_Lec_Adc_Modo_Fuga:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_Lec_Adc_Modo_Flujo:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_Detener:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?_Salida_Modo_Pulv:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_Salida_Modo_Fuga:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ?_Salida_Modo_Flujo:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_Pant_Temporizador:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ?_Fin_Proceso:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_LCD_command:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ?_Pant_Menu:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ?_Pant_Selector:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_Pant_Detener:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_Proceso_Fin:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_Adc_Rpm_Read:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_Adc_Pwm_Read:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_Adc_Min_Read:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_Adc_Temp_Read:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_LCD_date:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_main:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_Antirrebote:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_ISR:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ??_ISR:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x0
  1699  0070                     	ds	3
  1700  0073                     ISR@f_pwmS1:
  1701                           
  1702                           ; 1 bytes @ 0x3
  1703  0073                     	ds	1
  1704  0074                     ??_Pines_Init:
  1705  0074                     ??_MEF_Init:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708  0074                     ??_Pwm_init:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     ??_Adc_init:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714  0074                     ??_Pwm1_stop:	
  1715                           ; 1 bytes @ 0x4
  1716                           
  1717  0074                     ??_Salida_Modo_Fuga:	
  1718                           ; 1 bytes @ 0x4
  1719                           
  1720  0074                     ??_Salida_Modo_Flujo:	
  1721                           ; 1 bytes @ 0x4
  1722                           
  1723  0074                     ??_LCD_command:	
  1724                           ; 1 bytes @ 0x4
  1725                           
  1726  0074                     ??_LCD_date:	
  1727                           ; 1 bytes @ 0x4
  1728                           
  1729  0074                     ??_isdigit:	
  1730                           ; 1 bytes @ 0x4
  1731                           
  1732  0074                     ??___wmul:	
  1733                           ; 1 bytes @ 0x4
  1734                           
  1735  0074                     ??___lwdiv:	
  1736                           ; 1 bytes @ 0x4
  1737                           
  1738  0074                     ??___lwmod:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0074                     ??___lwtoft:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0074                     ?_Adc:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0074                     ___lbtoft@c:	
  1748                           ; 2 bytes @ 0x4
  1749                           
  1750  0074                     ___lwmod@counter:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0074                     _isdigit$1337:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0074                     ___wmul@product:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x4
  1761  0074                     	ds	1
  1762  0075                     isdigit@c:
  1763                           
  1764                           ; 1 bytes @ 0x5
  1765  0075                     	ds	1
  1766  0076                     ??_Select_Modo:
  1767  0076                     ??_Pant_Modos:	
  1768                           ; 1 bytes @ 0x6
  1769                           
  1770  0076                     ??_Lec_Adc_Modo_Pulv:	
  1771                           ; 1 bytes @ 0x6
  1772                           
  1773  0076                     ??_Lec_Adc_Modo_Fuga:	
  1774                           ; 1 bytes @ 0x6
  1775                           
  1776  0076                     ??_Lec_Adc_Modo_Flujo:	
  1777                           ; 1 bytes @ 0x6
  1778                           
  1779  0076                     ??_Salida_Modo_Pulv:	
  1780                           ; 1 bytes @ 0x6
  1781                           
  1782  0076                     ??_Pant_Menu:	
  1783                           ; 1 bytes @ 0x6
  1784                           
  1785  0076                     ??_Pant_Selector:	
  1786                           ; 1 bytes @ 0x6
  1787                           
  1788  0076                     ??_Pant_Detener:	
  1789                           ; 1 bytes @ 0x6
  1790                           
  1791  0076                     ??_Proceso_Fin:	
  1792                           ; 1 bytes @ 0x6
  1793                           
  1794  0076                     ??_Adc_Pwm_Read:	
  1795                           ; 1 bytes @ 0x6
  1796                           
  1797  0076                     ??_Adc_Min_Read:	
  1798                           ; 1 bytes @ 0x6
  1799                           
  1800  0076                     ??_Adc_Temp_Read:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803  0076                     ??_Pwm1_init:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806  0076                     ??_Pwm1:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809  0076                     ??_LCD_xy:	
  1810                           ; 1 bytes @ 0x6
  1811                           
  1812  0076                     ??_main:	
  1813                           ; 1 bytes @ 0x6
  1814                           
  1815  0076                     ??___awtoft:	
  1816                           ; 1 bytes @ 0x6
  1817                           
  1818                           
  1819                           	psect	cstackBANK0
  1820  0020                     __pcstackBANK0:	
  1821                           ; 1 bytes @ 0x6
  1822                           
  1823  0020                     ??_Antirrebote:
  1824  0020                     ??_Adc:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827  0020                     ?___lwdiv:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830  0020                     ?___ftpack:	
  1831                           ; 2 bytes @ 0x0
  1832                           
  1833  0020                     LCD_command@cmd:	
  1834                           ; 3 bytes @ 0x0
  1835                           
  1836  0020                     LCD_date@date:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839  0020                     ___lwdiv@divisor:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842  0020                     ___ftpack@arg:	
  1843                           ; 2 bytes @ 0x0
  1844                           
  1845                           
  1846                           ; 3 bytes @ 0x0
  1847  0020                     	ds	1
  1848  0021                     ??_LCD_init:
  1849  0021                     ?_LCD_character:	
  1850                           ; 1 bytes @ 0x1
  1851                           
  1852  0021                     ?_LCD_array:	
  1853                           ; 1 bytes @ 0x1
  1854                           
  1855  0021                     ?_LCD_xy:	
  1856                           ; 1 bytes @ 0x1
  1857                           
  1858  0021                     LCD_character@caracter:	
  1859                           ; 1 bytes @ 0x1
  1860                           
  1861  0021                     LCD_array@x:	
  1862                           ; 1 bytes @ 0x1
  1863                           
  1864  0021                     LCD_xy@x:	
  1865                           ; 2 bytes @ 0x1
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x1
  1869  0021                     	ds	1
  1870  0022                     ??_LCD_character:
  1871  0022                     Adc@channel:	
  1872                           ; 1 bytes @ 0x2
  1873                           
  1874  0022                     ___lwdiv@dividend:	
  1875                           ; 1 bytes @ 0x2
  1876                           
  1877                           
  1878                           ; 2 bytes @ 0x2
  1879  0022                     	ds	1
  1880  0023                     LCD_init@i:
  1881  0023                     LCD_character@adress:	
  1882                           ; 1 bytes @ 0x3
  1883                           
  1884  0023                     ___ftpack@exp:	
  1885                           ; 1 bytes @ 0x3
  1886                           
  1887  0023                     LCD_array@y:	
  1888                           ; 1 bytes @ 0x3
  1889                           
  1890  0023                     LCD_xy@y:	
  1891                           ; 2 bytes @ 0x3
  1892                           
  1893  0023                     Adc@convertion:	
  1894                           ; 2 bytes @ 0x3
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0x3
  1898  0023                     	ds	1
  1899  0024                     LCD_character@i:
  1900  0024                     ___ftpack@sign:	
  1901                           ; 1 bytes @ 0x4
  1902                           
  1903  0024                     ___lwdiv@counter:	
  1904                           ; 1 bytes @ 0x4
  1905                           
  1906                           
  1907                           ; 1 bytes @ 0x4
  1908  0024                     	ds	1
  1909  0025                     ??___ftpack:
  1910  0025                     LCD_array@date:	
  1911                           ; 1 bytes @ 0x5
  1912                           
  1913  0025                     ___lwdiv@quotient:	
  1914                           ; 2 bytes @ 0x5
  1915                           
  1916                           
  1917                           ; 2 bytes @ 0x5
  1918  0025                     	ds	2
  1919  0027                     ??_LCD_array:
  1920  0027                     ?___wmul:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923  0027                     ?___lwmod:	
  1924                           ; 2 bytes @ 0x7
  1925                           
  1926  0027                     ___wmul@multiplier:	
  1927                           ; 2 bytes @ 0x7
  1928                           
  1929  0027                     ___lwmod@divisor:	
  1930                           ; 2 bytes @ 0x7
  1931                           
  1932                           
  1933                           ; 2 bytes @ 0x7
  1934  0027                     	ds	1
  1935  0028                     ?___awtoft:
  1936  0028                     ?___lbtoft:	
  1937                           ; 3 bytes @ 0x8
  1938                           
  1939  0028                     ?___lwtoft:	
  1940                           ; 3 bytes @ 0x8
  1941                           
  1942  0028                     ___awtoft@c:	
  1943                           ; 3 bytes @ 0x8
  1944                           
  1945  0028                     ___lwtoft@c:	
  1946                           ; 2 bytes @ 0x8
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x8
  1950  0028                     	ds	1
  1951  0029                     ??_Pant_Inicio:
  1952  0029                     ??_Pant_Pulverizacion:	
  1953                           ; 1 bytes @ 0x9
  1954                           
  1955  0029                     ??_Pant_Fuga:	
  1956                           ; 1 bytes @ 0x9
  1957                           
  1958  0029                     ??_Pant_Flujo:	
  1959                           ; 1 bytes @ 0x9
  1960                           
  1961  0029                     ??_Detener:	
  1962                           ; 1 bytes @ 0x9
  1963                           
  1964  0029                     ??_Fin_Proceso:	
  1965                           ; 1 bytes @ 0x9
  1966                           
  1967  0029                     ___wmul@multiplicand:	
  1968                           ; 1 bytes @ 0x9
  1969                           
  1970  0029                     ___lwmod@dividend:	
  1971                           ; 2 bytes @ 0x9
  1972                           
  1973                           
  1974                           ; 2 bytes @ 0x9
  1975  0029                     	ds	2
  1976  002B                     ??___lbtoft:
  1977  002B                     ?_sprintf:	
  1978                           ; 1 bytes @ 0xB
  1979                           
  1980  002B                     ___awtoft@sign:	
  1981                           ; 2 bytes @ 0xB
  1982                           
  1983  002B                     sprintf@f:	
  1984                           ; 1 bytes @ 0xB
  1985                           
  1986                           
  1987                           ; 2 bytes @ 0xB
  1988  002B                     	ds	1
  1989  002C                     ?___ftmul:
  1990  002C                     Detener@i:	
  1991                           ; 3 bytes @ 0xC
  1992                           
  1993  002C                     Fin_Proceso@i:	
  1994                           ; 1 bytes @ 0xC
  1995                           
  1996  002C                     ___ftmul@f1:	
  1997                           ; 1 bytes @ 0xC
  1998                           
  1999                           
  2000                           ; 3 bytes @ 0xC
  2001  002C                     	ds	1
  2002  002D                     Pant_Inicio@caracter1:
  2003                           
  2004                           ; 8 bytes @ 0xD
  2005  002D                     	ds	2
  2006  002F                     ??_sprintf:
  2007  002F                     ___ftmul@f2:	
  2008                           ; 1 bytes @ 0xF
  2009                           
  2010                           
  2011                           ; 3 bytes @ 0xF
  2012  002F                     	ds	3
  2013  0032                     ??___ftmul:
  2014                           
  2015                           ; 1 bytes @ 0x12
  2016  0032                     	ds	1
  2017  0033                     sprintf@prec:
  2018                           
  2019                           ; 1 bytes @ 0x13
  2020  0033                     	ds	1
  2021  0034                     sprintf@ap:
  2022                           
  2023                           ; 1 bytes @ 0x14
  2024  0034                     	ds	1
  2025  0035                     ___ftmul@exp:
  2026  0035                     sprintf@val:	
  2027                           ; 1 bytes @ 0x15
  2028                           
  2029  0035                     Pant_Inicio@caracter:	
  2030                           ; 2 bytes @ 0x15
  2031                           
  2032                           
  2033                           ; 8 bytes @ 0x15
  2034  0035                     	ds	1
  2035  0036                     ___ftmul@f3_as_product:
  2036                           
  2037                           ; 3 bytes @ 0x16
  2038  0036                     	ds	1
  2039  0037                     sprintf@flag:
  2040                           
  2041                           ; 1 bytes @ 0x17
  2042  0037                     	ds	1
  2043  0038                     sprintf@width:
  2044                           
  2045                           ; 2 bytes @ 0x18
  2046  0038                     	ds	1
  2047  0039                     ___ftmul@cntr:
  2048                           
  2049                           ; 1 bytes @ 0x19
  2050  0039                     	ds	1
  2051  003A                     sprintf@c:
  2052  003A                     ___ftmul@sign:	
  2053                           ; 1 bytes @ 0x1A
  2054                           
  2055                           
  2056                           ; 1 bytes @ 0x1A
  2057  003A                     	ds	1
  2058  003B                     ?___ftdiv:
  2059  003B                     sprintf@sp:	
  2060                           ; 3 bytes @ 0x1B
  2061                           
  2062  003B                     ___ftdiv@f2:	
  2063                           ; 1 bytes @ 0x1B
  2064                           
  2065                           
  2066                           ; 3 bytes @ 0x1B
  2067  003B                     	ds	1
  2068  003C                     ??_Pant_Val_Act:
  2069  003C                     ??_Pant_Temporizador:	
  2070                           ; 1 bytes @ 0x1C
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0x1C
  2074  003C                     	ds	2
  2075  003E                     ___ftdiv@f1:
  2076  003E                     Pant_Val_Act@buffer:	
  2077                           ; 3 bytes @ 0x1E
  2078                           
  2079  003E                     Pant_Temporizador@buffer:	
  2080                           ; 20 bytes @ 0x1E
  2081                           
  2082                           
  2083                           ; 20 bytes @ 0x1E
  2084  003E                     	ds	3
  2085  0041                     ??___ftdiv:
  2086                           
  2087                           ; 1 bytes @ 0x21
  2088  0041                     	ds	3
  2089  0044                     ___ftdiv@cntr:
  2090                           
  2091                           ; 1 bytes @ 0x24
  2092  0044                     	ds	1
  2093  0045                     ___ftdiv@f3:
  2094                           
  2095                           ; 3 bytes @ 0x25
  2096  0045                     	ds	3
  2097  0048                     ___ftdiv@exp:
  2098                           
  2099                           ; 1 bytes @ 0x28
  2100  0048                     	ds	1
  2101  0049                     ___ftdiv@sign:
  2102                           
  2103                           ; 1 bytes @ 0x29
  2104  0049                     	ds	1
  2105  004A                     ?___fttol:
  2106  004A                     ___fttol@f1:	
  2107                           ; 4 bytes @ 0x2A
  2108                           
  2109                           
  2110                           ; 3 bytes @ 0x2A
  2111  004A                     	ds	4
  2112  004E                     ??___fttol:
  2113                           
  2114                           ; 1 bytes @ 0x2E
  2115  004E                     	ds	3
  2116  0051                     ___fttol@sign1:
  2117                           
  2118                           ; 1 bytes @ 0x31
  2119  0051                     	ds	1
  2120  0052                     ___fttol@lval:
  2121                           
  2122                           ; 4 bytes @ 0x32
  2123  0052                     	ds	4
  2124  0056                     ___fttol@exp1:
  2125                           
  2126                           ; 1 bytes @ 0x36
  2127  0056                     	ds	1
  2128  0057                     ??_Adc_Rpm_Read:
  2129  0057                     ?_Pwm1_init:	
  2130                           ; 1 bytes @ 0x37
  2131                           
  2132  0057                     ?_Pwm1:	
  2133                           ; 1 bytes @ 0x37
  2134                           
  2135  0057                     Pwm1_init@frecuencia:	
  2136                           ; 1 bytes @ 0x37
  2137                           
  2138  0057                     Pwm1@duty:	
  2139                           ; 2 bytes @ 0x37
  2140                           
  2141  0057                     _Adc_Pwm_Read$1524:	
  2142                           ; 3 bytes @ 0x37
  2143                           
  2144  0057                     _Adc_Min_Read$1525:	
  2145                           ; 3 bytes @ 0x37
  2146                           
  2147  0057                     _Adc_Temp_Read$1526:	
  2148                           ; 3 bytes @ 0x37
  2149                           
  2150                           
  2151                           ; 3 bytes @ 0x37
  2152  0057                     	ds	3
  2153  005A                     _Salida_Modo_Pulv$1522:
  2154                           
  2155                           ; 2 bytes @ 0x3A
  2156  005A                     	ds	2
  2157  005C                     ??_MEF_Subest_Actualizacion:
  2158                           
  2159                           ; 1 bytes @ 0x3C
  2160  005C                     	ds	2
  2161  005E                     ??_MEF_Actualizacion:
  2162                           
  2163                           ; 1 bytes @ 0x3E
  2164  005E                     	ds	2
  2165                           
  2166                           	psect	maintext
  2167  12DB                     __pmaintext:	
  2168 ;;
  2169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2170 ;;
  2171 ;; *************** function _main *****************
  2172 ;; Defined at:
  2173 ;;		line 33 in file "Main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : B00/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels required when called:    8
  2193 ;; This function calls:
  2194 ;;		_Adc_init
  2195 ;;		_LCD_init
  2196 ;;		_MEF_Actualizacion
  2197 ;;		_MEF_Init
  2198 ;;		_Pines_Init
  2199 ;;		_Pwm1_stop
  2200 ;;		_Pwm_init
  2201 ;; This function is called by:
  2202 ;;		Startup code after reset
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _main
  2208  12DB                     _main:
  2209                           
  2210                           ;Main.c: 36:     Pines_Init();
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2214  12DB  160A  118A  2172  160A  118A  	fcall	_Pines_Init
  2215                           
  2216                           ;Main.c: 37:     MEF_Init();
  2217  12E0  160A  118A  20EB  160A  118A  	fcall	_MEF_Init
  2218                           
  2219                           ;Main.c: 38:     LCD_init();
  2220  12E5  120A  158A  2217  160A  118A  	fcall	_LCD_init
  2221                           
  2222                           ;Main.c: 39:     Pwm_init();
  2223  12EA  160A  118A  218B  160A  118A  	fcall	_Pwm_init
  2224                           
  2225                           ;Main.c: 40:     Adc_init();
  2226  12EF  160A  118A  220A  160A  118A  	fcall	_Adc_init
  2227                           
  2228                           ;Main.c: 41:     Pwm1_stop();
  2229  12F4  160A  118A  2122  160A  118A  	fcall	_Pwm1_stop
  2230                           
  2231                           ;Main.c: 43:     TMR1IE=1,TMR1IF=1;
  2232  12F9  1683               	bsf	3,5	;RP0=1, select bank1
  2233  12FA  1303               	bcf	3,6	;RP1=0, select bank1
  2234  12FB  140C               	bsf	12,0	;volatile
  2235  12FC  1283               	bcf	3,5	;RP0=0, select bank0
  2236  12FD  1303               	bcf	3,6	;RP1=0, select bank0
  2237  12FE  140C               	bsf	12,0	;volatile
  2238                           
  2239                           ;Main.c: 45:     WDTCONbits.SWDTEN = 1;
  2240  12FF  1283               	bcf	3,5	;RP0=0, select bank2
  2241  1300  1703               	bsf	3,6	;RP1=1, select bank2
  2242  1301  1405               	bsf	5,0	;volatile
  2243                           
  2244                           ;Main.c: 46:     WDTCONbits.WDTPS = 0b1010;
  2245  1302  0805               	movf	5,w	;volatile
  2246  1303  39E1               	andlw	-31
  2247  1304  3814               	iorlw	20
  2248  1305  0085               	movwf	5	;volatile
  2249  1306                     l5051:
  2250                           
  2251                           ;Main.c: 49:     {;Main.c: 50:         MEF_Actualizacion();
  2252  1306  160A  118A  2663  160A  118A  	fcall	_MEF_Actualizacion
  2253  130B  2B06               	goto	l5051
  2254  130C                     __end_of_main:
  2255                           
  2256                           	psect	text1
  2257  118B                     __ptext1:	
  2258 ;; *************** function _Pwm_init *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "Pwm_Soft.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _Pwm_init
  2290  118B                     _Pwm_init:
  2291                           
  2292                           ;Pwm_Soft.c: 7:     ANSELHbits.ANS11 = 0;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _Pwm_init: [wreg+status,2+status,0]
  2296  118B  1683               	bsf	3,5	;RP0=1, select bank3
  2297  118C  1703               	bsf	3,6	;RP1=1, select bank3
  2298  118D  1189               	bcf	9,3	;volatile
  2299                           
  2300                           ;Pwm_Soft.c: 10:     T1CONbits.TMR1GE = 0;
  2301  118E  1283               	bcf	3,5	;RP0=0, select bank0
  2302  118F  1303               	bcf	3,6	;RP1=0, select bank0
  2303  1190  1310               	bcf	16,6	;volatile
  2304                           
  2305                           ;Pwm_Soft.c: 11:     T1CONbits.T1SYNC = 1;
  2306  1191  1510               	bsf	16,2	;volatile
  2307                           
  2308                           ;Pwm_Soft.c: 12:     T1CONbits.TMR1CS = 0;
  2309  1192  1090               	bcf	16,1	;volatile
  2310                           
  2311                           ;Pwm_Soft.c: 13:     T1CONbits.T1CKPS = 0b01;
  2312  1193  0810               	movf	16,w	;volatile
  2313  1194  39CF               	andlw	-49
  2314  1195  3810               	iorlw	16
  2315  1196  0090               	movwf	16	;volatile
  2316                           
  2317                           ;Pwm_Soft.c: 14:     T1CONbits.TMR1ON = 1;
  2318  1197  1410               	bsf	16,0	;volatile
  2319                           
  2320                           ;Pwm_Soft.c: 16:     TMR1 = 65285;
  2321  1198  30FF               	movlw	255
  2322  1199  008F               	movwf	15	;volatile
  2323  119A  3005               	movlw	5
  2324  119B  008E               	movwf	14	;volatile
  2325                           
  2326                           ;Pwm_Soft.c: 19:     PEIE = 1;
  2327  119C  170B               	bsf	11,6	;volatile
  2328                           
  2329                           ;Pwm_Soft.c: 20:     GIE = 1;
  2330  119D  178B               	bsf	11,7	;volatile
  2331                           
  2332                           ;Pwm_Soft.c: 21:     TMR1IE = 0;
  2333  119E  1683               	bsf	3,5	;RP0=1, select bank1
  2334  119F  1303               	bcf	3,6	;RP1=0, select bank1
  2335  11A0  100C               	bcf	12,0	;volatile
  2336                           
  2337                           ;Pwm_Soft.c: 22:     TMR1IF = 1;
  2338  11A1  1283               	bcf	3,5	;RP0=0, select bank0
  2339  11A2  1303               	bcf	3,6	;RP1=0, select bank0
  2340  11A3  140C               	bsf	12,0	;volatile
  2341  11A4  0008               	return
  2342  11A5                     __end_of_Pwm_init:
  2343                           
  2344                           	psect	text2
  2345  1172                     __ptext2:	
  2346 ;; *************** function _Pines_Init *****************
  2347 ;; Defined at:
  2348 ;;		line 56 in file "Main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _Pines_Init
  2378  1172                     _Pines_Init:
  2379                           
  2380                           ;Main.c: 59:     TRISAbits.TRISA5 = 0;
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _Pines_Init: [wreg+status,2]
  2384  1172  1683               	bsf	3,5	;RP0=1, select bank1
  2385  1173  1303               	bcf	3,6	;RP1=0, select bank1
  2386  1174  1285               	bcf	5,5	;volatile
  2387                           
  2388                           ;Main.c: 60:     PORTA = 0;
  2389  1175  1283               	bcf	3,5	;RP0=0, select bank0
  2390  1176  1303               	bcf	3,6	;RP1=0, select bank0
  2391  1177  0185               	clrf	5	;volatile
  2392                           
  2393                           ;Main.c: 61:     PORTB = 0;
  2394  1178  0186               	clrf	6	;volatile
  2395                           
  2396                           ;Main.c: 62:     PORTC = 0;
  2397  1179  0187               	clrf	7	;volatile
  2398                           
  2399                           ;Main.c: 63:     TRISB = 0xFF;
  2400  117A  30FF               	movlw	255
  2401  117B  1683               	bsf	3,5	;RP0=1, select bank1
  2402  117C  1303               	bcf	3,6	;RP1=0, select bank1
  2403  117D  0086               	movwf	6	;volatile
  2404                           
  2405                           ;Main.c: 64:     TRISC = 0x00;
  2406  117E  0187               	clrf	7	;volatile
  2407                           
  2408                           ;Main.c: 65:     ANSELHbits.ANS12 = 0;
  2409  117F  1683               	bsf	3,5	;RP0=1, select bank3
  2410  1180  1703               	bsf	3,6	;RP1=1, select bank3
  2411  1181  1209               	bcf	9,4	;volatile
  2412                           
  2413                           ;Main.c: 66:     ANSELHbits.ANS11 = 0;
  2414  1182  1189               	bcf	9,3	;volatile
  2415                           
  2416                           ;Main.c: 67:     ANSELHbits.ANS10 = 0;
  2417  1183  1109               	bcf	9,2	;volatile
  2418                           
  2419                           ;Main.c: 68:     ANSELHbits.ANS8 = 0;
  2420  1184  1009               	bcf	9,0	;volatile
  2421                           
  2422                           ;Main.c: 69:     ANSELHbits.ANS9 = 0;
  2423  1185  1089               	bcf	9,1	;volatile
  2424                           
  2425                           ;Main.c: 70:     ANSELbits.ANS4 = 0;
  2426  1186  1208               	bcf	8,4	;volatile
  2427                           
  2428                           ;Main.c: 72:     TRISBbits.TRISB4 = 0;
  2429  1187  1683               	bsf	3,5	;RP0=1, select bank1
  2430  1188  1303               	bcf	3,6	;RP1=0, select bank1
  2431  1189  1206               	bcf	6,4	;volatile
  2432  118A  0008               	return
  2433  118B                     __end_of_Pines_Init:
  2434                           
  2435                           	psect	text3
  2436  10EB                     __ptext3:	
  2437 ;; *************** function _MEF_Init *****************
  2438 ;; Defined at:
  2439 ;;		line 40 in file "MEF.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		status,2
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _MEF_Init
  2469  10EB                     _MEF_Init:
  2470                           
  2471                           ;MEF.c: 42:     Estado_Actual = ESTADO_INICIO;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _MEF_Init: [status,2]
  2475  10EB  1283               	bcf	3,5	;RP0=0, select bank0
  2476  10EC  1303               	bcf	3,6	;RP1=0, select bank0
  2477  10ED  01E2               	clrf	_Estado_Actual
  2478                           
  2479                           ;MEF.c: 43:     Subestado_Actual = SUBEST_INICIAL;
  2480  10EE  1683               	bsf	3,5	;RP0=1, select bank1
  2481  10EF  1303               	bcf	3,6	;RP1=0, select bank1
  2482  10F0  01B6               	clrf	_Subestado_Actual^(0+128)
  2483  10F1  0008               	return
  2484  10F2                     __end_of_MEF_Init:
  2485                           
  2486                           	psect	text4
  2487  1663                     __ptext4:	
  2488 ;; *************** function _MEF_Actualizacion *****************
  2489 ;; Defined at:
  2490 ;;		line 48 in file "MEF.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       2       0       0       0
  2507 ;;      Totals:         0       2       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    7
  2511 ;; This function calls:
  2512 ;;		_Antirrebote
  2513 ;;		_MEF_Subest_Actualizacion
  2514 ;;		_Pant_Inicio
  2515 ;;		_Select_Modo
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _MEF_Actualizacion
  2523  1663                     _MEF_Actualizacion:
  2524                           
  2525                           ;MEF.c: 50:     switch(Estado_Actual)
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _MEF_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2529  1663  2EA5               	goto	l5025
  2530  1664                     l4975:
  2531                           
  2532                           ;MEF.c: 53:         {;MEF.c: 54:             Pant_Inicio();
  2533  1664  120A  158A  2462   	fcall	_Pant_Inicio
  2534  1667                     l4977:
  2535                           
  2536                           ;MEF.c: 56:             Estado_Actual = ESTADO_MENU;
  2537  1667  1283               	bcf	3,5	;RP0=0, select bank0
  2538  1668  1303               	bcf	3,6	;RP1=0, select bank0
  2539  1669  01E2               	clrf	_Estado_Actual
  2540  166A  0AE2               	incf	_Estado_Actual,f
  2541                           
  2542                           ;MEF.c: 57:         break;
  2543  166B  0008               	return
  2544  166C                     l4979:
  2545                           
  2546                           ;MEF.c: 60:         {;MEF.c: 61:             Select_Modo();
  2547  166C  160A  118A  2283  160A  118A  	fcall	_Select_Modo
  2548                           
  2549                           ;MEF.c: 63:             if(PORTBbits.RB1 && Modo==1) Estado_Actual = ESTADO_MODO_PULV,An
      +                          tirrebote();
  2550  1671  1283               	bcf	3,5	;RP0=0, select bank0
  2551  1672  1303               	bcf	3,6	;RP1=0, select bank0
  2552  1673  1C86               	btfss	6,1	;volatile
  2553  1674  2E86               	goto	l231
  2554  1675  0365               	decf	_Modo,w
  2555  1676  1D03               	btfss	3,2
  2556  1677  2E86               	goto	l231
  2557  1678  3002               	movlw	2
  2558  1679  2E7F               	goto	L1
  2559  167A                     l4989:
  2560  167A  3002               	movlw	2
  2561  167B  0665               	xorwf	_Modo,w
  2562  167C  1D03               	btfss	3,2
  2563  167D  2E88               	goto	l233
  2564  167E  3003               	movlw	3
  2565  167F                     L1:
  2566  167F  00FF               	movwf	127
  2567  1680  087F               	movf	127,w
  2568  1681  00E2               	movwf	_Estado_Actual
  2569  1682  160A  118A  222E   	fcall	_Antirrebote
  2570  1685  0008               	return
  2571  1686                     l231:	
  2572                           ;MEF.c: 64:             else if(PORTBbits.RB1 && Modo==2) Estado_Actual = ESTADO_MODO_FU
      +                          GA,Antirrebote();
  2573                           
  2574  1686  1886               	btfsc	6,1	;volatile
  2575  1687  2E7A               	goto	l4989
  2576  1688                     l233:	
  2577                           ;MEF.c: 65:             else if(PORTBbits.RB1 && Modo==3) Estado_Actual = ESTADO_MODO_FL
      +                          UJO,Antirrebote();
  2578                           
  2579  1688  1C86               	btfss	6,1	;volatile
  2580  1689  0008               	return
  2581  168A  3003               	movlw	3
  2582  168B  0665               	xorwf	_Modo,w
  2583  168C  1D03               	btfss	3,2
  2584  168D  0008               	return
  2585  168E  3004               	movlw	4
  2586  168F  2E7F               	goto	L1
  2587  1690                     l5001:	
  2588                           ;MEF.c: 66:         break;
  2589                           
  2590                           
  2591                           ;MEF.c: 69:         {;MEF.c: 70:             MEF_Subest_Actualizacion();
  2592  1690  120A  118A  23AD  160A  118A  	fcall	_MEF_Subest_Actualizacion
  2593                           
  2594                           ;MEF.c: 72:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2595  1695  0876               	movf	_Reset,w
  2596  1696  1903               	btfsc	3,2
  2597  1697  0008               	return
  2598  1698  3005               	movlw	5
  2599  1699  00FF               	movwf	127
  2600  169A  087F               	movf	127,w
  2601  169B  1283               	bcf	3,5	;RP0=0, select bank0
  2602  169C  1303               	bcf	3,6	;RP1=0, select bank0
  2603  169D  00E2               	movwf	_Estado_Actual
  2604  169E  0008               	return
  2605  169F                     l5007:
  2606  169F                     l5013:	
  2607                           ;MEF.c: 79:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2608                           
  2609                           ;MEF.c: 76:         {;MEF.c: 77:             MEF_Subest_Actualizacion();
  2610                           
  2611  169F  2E90               	goto	l5001
  2612  16A0                     l5019:	
  2613                           ;MEF.c: 86:             if(Reset) Estado_Actual = ESTADO_MODO_RESET;
  2614                           
  2615                           ;MEF.c: 83:         {;MEF.c: 84:             MEF_Subest_Actualizacion();
  2616                           
  2617                           
  2618                           ;MEF.c: 90:         {;MEF.c: 91:             Subestado_Actual = SUBEST_INICIAL;
  2619  16A0  1683               	bsf	3,5	;RP0=1, select bank1
  2620  16A1  1303               	bcf	3,6	;RP1=0, select bank1
  2621  16A2  01B6               	clrf	_Subestado_Actual^(0+128)
  2622                           
  2623                           ;MEF.c: 92:             Reset = 0;
  2624  16A3  01F6               	clrf	_Reset
  2625  16A4  2E67               	goto	l4977
  2626  16A5                     l5025:
  2627  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2628  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2629  16A7  0862               	movf	_Estado_Actual,w
  2630  16A8  00DE               	movwf	??_MEF_Actualizacion
  2631  16A9  01DF               	clrf	??_MEF_Actualizacion+1
  2632                           
  2633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 1, Range of values is 0 to 0
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            4     3 (average)
  2639                           ; direct_byte           11     8 (fixed)
  2640                           ; jumptable            260     6 (fixed)
  2641                           ;	Chosen strategy is simple_byte
  2642  16AA  085F               	movf	??_MEF_Actualizacion+1,w
  2643  16AB  3A00               	xorlw	0	; case 0
  2644  16AC  1903               	skipnz
  2645  16AD  2EAF               	goto	l5187
  2646  16AE  2EC3               	goto	l243
  2647  16AF                     l5187:
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 6, Range of values is 0 to 5
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           19    10 (average)
  2654                           ; direct_byte           26     8 (fixed)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  16AF  085E               	movf	??_MEF_Actualizacion,w
  2658  16B0  3A00               	xorlw	0	; case 0
  2659  16B1  1903               	skipnz
  2660  16B2  2E64               	goto	l4975
  2661  16B3  3A01               	xorlw	1	; case 1
  2662  16B4  1903               	skipnz
  2663  16B5  2E6C               	goto	l4979
  2664  16B6  3A03               	xorlw	3	; case 2
  2665  16B7  1903               	skipnz
  2666  16B8  2E90               	goto	l5001
  2667  16B9  3A01               	xorlw	1	; case 3
  2668  16BA  1903               	skipnz
  2669  16BB  2E9F               	goto	l5007
  2670  16BC  3A07               	xorlw	7	; case 4
  2671  16BD  1903               	skipnz
  2672  16BE  2E9F               	goto	l5013
  2673  16BF  3A01               	xorlw	1	; case 5
  2674  16C0  1903               	skipnz
  2675  16C1  2EA0               	goto	l5019
  2676  16C2  2EC3               	goto	l243
  2677  16C3                     l243:
  2678  16C3  0008               	return
  2679  16C4                     __end_of_MEF_Actualizacion:
  2680                           
  2681                           	psect	text5
  2682  1283                     __ptext5:	
  2683 ;; *************** function _Select_Modo *****************
  2684 ;; Defined at:
  2685 ;;		line 14 in file "Menu_Modo.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    5
  2706 ;; This function calls:
  2707 ;;		_Antirrebote
  2708 ;;		_Pant_Menu
  2709 ;;		_Pant_Selector
  2710 ;; This function is called by:
  2711 ;;		_MEF_Actualizacion
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Select_Modo
  2717  1283                     _Select_Modo:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _Select_Modo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2721  1283  0064               	clrwdt	;# 
  2722                           
  2723                           ;Menu_Modo.c: 18:     if(Mostrar) Pant_Menu(),Mostrar=0;
  2724  1284  1683               	bsf	3,5	;RP0=1, select bank1
  2725  1285  1303               	bcf	3,6	;RP1=0, select bank1
  2726  1286  083A               	movf	_Mostrar^(0+128),w
  2727  1287  1903               	btfsc	3,2
  2728  1288  2A91               	goto	l4811
  2729  1289  160A  118A  24B9  160A  118A  	fcall	_Pant_Menu
  2730  128E  1683               	bsf	3,5	;RP0=1, select bank1
  2731  128F  1303               	bcf	3,6	;RP1=0, select bank1
  2732  1290  01BA               	clrf	_Mostrar^(0+128)
  2733  1291                     l4811:
  2734                           
  2735                           ;Menu_Modo.c: 20:     if(PORTBbits.RB3 || Modo==0)
  2736  1291  1283               	bcf	3,5	;RP0=0, select bank0
  2737  1292  1303               	bcf	3,6	;RP1=0, select bank0
  2738  1293  1986               	btfsc	6,3	;volatile
  2739  1294  2A98               	goto	l4815
  2740  1295  0865               	movf	_Modo,w
  2741  1296  1D03               	btfss	3,2
  2742  1297  0008               	return
  2743  1298                     l4815:
  2744                           
  2745                           ;Menu_Modo.c: 21:     {;Menu_Modo.c: 22:         Modo+=1;
  2746  1298  3001               	movlw	1
  2747  1299  00FF               	movwf	127
  2748  129A  087F               	movf	127,w
  2749  129B  07E5               	addwf	_Modo,f
  2750                           
  2751                           ;Menu_Modo.c: 23:         if(Modo>=5||Modo<1) Modo=1;
  2752  129C  3005               	movlw	5
  2753  129D  0265               	subwf	_Modo,w
  2754  129E  1803               	skipnc
  2755  129F  2AA3               	goto	l330
  2756  12A0  0865               	movf	_Modo,w
  2757  12A1  1D03               	btfss	3,2
  2758  12A2  2AA5               	goto	l4821
  2759  12A3                     l330:
  2760  12A3  01E5               	clrf	_Modo
  2761  12A4  0AE5               	incf	_Modo,f
  2762  12A5                     l4821:
  2763                           
  2764                           ;Menu_Modo.c: 24:         Pant_Selector(),Antirrebote();
  2765  12A5  120A  158A  23C5  160A  118A  	fcall	_Pant_Selector
  2766  12AA  160A  118A  222E   	fcall	_Antirrebote
  2767  12AD  0008               	return
  2768  12AE                     __end_of_Select_Modo:
  2769                           
  2770                           	psect	text6
  2771  0BC5                     __ptext6:	
  2772 ;; *************** function _Pant_Selector *****************
  2773 ;; Defined at:
  2774 ;;		line 44 in file "Display_Lcd.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    4
  2795 ;; This function calls:
  2796 ;;		_LCD_array
  2797 ;; This function is called by:
  2798 ;;		_Select_Modo
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _Pant_Selector
  2804  0BC5                     _Pant_Selector:
  2805                           
  2806                           ;Display_Lcd.c: 46:     if(Modo == 1) LCD_array(4,1," "),LCD_array(1,1,">");
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _Pant_Selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2810  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0BC7  0365               	decf	_Modo,w
  2813  0BC8  1D03               	btfss	3,2
  2814  0BC9  2BED               	goto	l4749
  2815  0BCA  3004               	movlw	4
  2816  0BCB  00A1               	movwf	LCD_array@x
  2817  0BCC  3000               	movlw	0
  2818  0BCD  00A2               	movwf	LCD_array@x+1
  2819  0BCE  3001               	movlw	1
  2820  0BCF  00A3               	movwf	LCD_array@y
  2821  0BD0  3000               	movlw	0
  2822  0BD1  00A4               	movwf	LCD_array@y+1
  2823  0BD2  302F               	movlw	low ((STR_38+19)| (0+32768))
  2824  0BD3  00A5               	movwf	LCD_array@date
  2825  0BD4  3085               	movlw	high ((STR_38+19)| (0+32768))
  2826  0BD5  00A6               	movwf	LCD_array@date+1
  2827  0BD6  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2828  0BDB  3001               	movlw	1
  2829  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0BDE  00A1               	movwf	LCD_array@x
  2832  0BDF  3000               	movlw	0
  2833  0BE0  00A2               	movwf	LCD_array@x+1
  2834  0BE1  3001               	movlw	1
  2835  0BE2  00A3               	movwf	LCD_array@y
  2836  0BE3  3000               	movlw	0
  2837  0BE4  00A4               	movwf	LCD_array@y+1
  2838  0BE5  3006               	movlw	low (STR_5| (0+32768))
  2839  0BE6  00A5               	movwf	LCD_array@date
  2840  0BE7  3086               	movlw	high (STR_5| (0+32768))
  2841  0BE8  00A6               	movwf	LCD_array@date+1
  2842  0BE9  160A  118A  2728   	fcall	_LCD_array
  2843  0BEC  0008               	return
  2844  0BED                     l4749:
  2845  0BED  3002               	movlw	2
  2846  0BEE  0665               	xorwf	_Modo,w
  2847  0BEF  1D03               	btfss	3,2
  2848  0BF0  2C14               	goto	l4753
  2849  0BF1  3001               	movlw	1
  2850  0BF2  00A1               	movwf	LCD_array@x
  2851  0BF3  3000               	movlw	0
  2852  0BF4  00A2               	movwf	LCD_array@x+1
  2853  0BF5  3001               	movlw	1
  2854  0BF6  00A3               	movwf	LCD_array@y
  2855  0BF7  3000               	movlw	0
  2856  0BF8  00A4               	movwf	LCD_array@y+1
  2857  0BF9  302F               	movlw	low ((STR_38+19)| (0+32768))
  2858  0BFA  00A5               	movwf	LCD_array@date
  2859  0BFB  3085               	movlw	high ((STR_38+19)| (0+32768))
  2860  0BFC  00A6               	movwf	LCD_array@date+1
  2861  0BFD  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2862  0C02  3002               	movlw	2
  2863  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0C05  00A1               	movwf	LCD_array@x
  2866  0C06  3000               	movlw	0
  2867  0C07  00A2               	movwf	LCD_array@x+1
  2868  0C08  3001               	movlw	1
  2869  0C09  00A3               	movwf	LCD_array@y
  2870  0C0A  3000               	movlw	0
  2871  0C0B  00A4               	movwf	LCD_array@y+1
  2872  0C0C  3006               	movlw	low (STR_5| (0+32768))
  2873  0C0D  00A5               	movwf	LCD_array@date
  2874  0C0E  3086               	movlw	high (STR_5| (0+32768))
  2875  0C0F  00A6               	movwf	LCD_array@date+1
  2876  0C10  160A  118A  2728   	fcall	_LCD_array
  2877  0C13  0008               	return
  2878  0C14                     l4753:
  2879  0C14  3003               	movlw	3
  2880  0C15  0665               	xorwf	_Modo,w
  2881  0C16  1D03               	btfss	3,2
  2882  0C17  2C3B               	goto	l4757
  2883  0C18  3002               	movlw	2
  2884  0C19  00A1               	movwf	LCD_array@x
  2885  0C1A  3000               	movlw	0
  2886  0C1B  00A2               	movwf	LCD_array@x+1
  2887  0C1C  3001               	movlw	1
  2888  0C1D  00A3               	movwf	LCD_array@y
  2889  0C1E  3000               	movlw	0
  2890  0C1F  00A4               	movwf	LCD_array@y+1
  2891  0C20  302F               	movlw	low ((STR_38+19)| (0+32768))
  2892  0C21  00A5               	movwf	LCD_array@date
  2893  0C22  3085               	movlw	high ((STR_38+19)| (0+32768))
  2894  0C23  00A6               	movwf	LCD_array@date+1
  2895  0C24  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2896  0C29  3003               	movlw	3
  2897  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0C2C  00A1               	movwf	LCD_array@x
  2900  0C2D  3000               	movlw	0
  2901  0C2E  00A2               	movwf	LCD_array@x+1
  2902  0C2F  3001               	movlw	1
  2903  0C30  00A3               	movwf	LCD_array@y
  2904  0C31  3000               	movlw	0
  2905  0C32  00A4               	movwf	LCD_array@y+1
  2906  0C33  3006               	movlw	low (STR_5| (0+32768))
  2907  0C34  00A5               	movwf	LCD_array@date
  2908  0C35  3086               	movlw	high (STR_5| (0+32768))
  2909  0C36  00A6               	movwf	LCD_array@date+1
  2910  0C37  160A  118A  2728   	fcall	_LCD_array
  2911  0C3A  0008               	return
  2912  0C3B                     l4757:
  2913  0C3B  3004               	movlw	4
  2914  0C3C  0665               	xorwf	_Modo,w
  2915  0C3D  1D03               	btfss	3,2
  2916  0C3E  0008               	return
  2917  0C3F  3003               	movlw	3
  2918  0C40  00A1               	movwf	LCD_array@x
  2919  0C41  3000               	movlw	0
  2920  0C42  00A2               	movwf	LCD_array@x+1
  2921  0C43  3001               	movlw	1
  2922  0C44  00A3               	movwf	LCD_array@y
  2923  0C45  3000               	movlw	0
  2924  0C46  00A4               	movwf	LCD_array@y+1
  2925  0C47  302F               	movlw	low ((STR_38+19)| (0+32768))
  2926  0C48  00A5               	movwf	LCD_array@date
  2927  0C49  3085               	movlw	high ((STR_38+19)| (0+32768))
  2928  0C4A  00A6               	movwf	LCD_array@date+1
  2929  0C4B  160A  118A  2728  120A  158A  	fcall	_LCD_array
  2930  0C50  3004               	movlw	4
  2931  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0C53  00A1               	movwf	LCD_array@x
  2934  0C54  3000               	movlw	0
  2935  0C55  00A2               	movwf	LCD_array@x+1
  2936  0C56  3001               	movlw	1
  2937  0C57  00A3               	movwf	LCD_array@y
  2938  0C58  3000               	movlw	0
  2939  0C59  00A4               	movwf	LCD_array@y+1
  2940  0C5A  3006               	movlw	low (STR_5| (0+32768))
  2941  0C5B  00A5               	movwf	LCD_array@date
  2942  0C5C  3086               	movlw	high (STR_5| (0+32768))
  2943  0C5D  00A6               	movwf	LCD_array@date+1
  2944  0C5E  160A  118A  2728   	fcall	_LCD_array
  2945  0C61  0008               	return
  2946  0C62                     __end_of_Pant_Selector:
  2947                           
  2948                           	psect	text7
  2949  14B9                     __ptext7:	
  2950 ;; *************** function _Pant_Menu *****************
  2951 ;; Defined at:
  2952 ;;		line 54 in file "Display_Lcd.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    4
  2973 ;; This function calls:
  2974 ;;		_LCD_array
  2975 ;; This function is called by:
  2976 ;;		_Select_Modo
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _Pant_Menu
  2982  14B9                     _Pant_Menu:
  2983                           
  2984                           ;Display_Lcd.c: 56:     LCD_array(1,3,"PULVERIZACION");
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _Pant_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2988  14B9  3001               	movlw	1
  2989  14BA  1283               	bcf	3,5	;RP0=0, select bank0
  2990  14BB  1303               	bcf	3,6	;RP1=0, select bank0
  2991  14BC  00A1               	movwf	LCD_array@x
  2992  14BD  3000               	movlw	0
  2993  14BE  00A2               	movwf	LCD_array@x+1
  2994  14BF  3003               	movlw	3
  2995  14C0  00A3               	movwf	LCD_array@y
  2996  14C1  3000               	movlw	0
  2997  14C2  00A4               	movwf	LCD_array@y+1
  2998  14C3  3088               	movlw	low ((STR_33+4)| (0+32768))
  2999  14C4  00A5               	movwf	LCD_array@date
  3000  14C5  3085               	movlw	high ((STR_33+4)| (0+32768))
  3001  14C6  00A6               	movwf	LCD_array@date+1
  3002  14C7  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3003                           
  3004                           ;Display_Lcd.c: 57:     LCD_array(2,3,"FUGA");
  3005  14CC  3002               	movlw	2
  3006  14CD  1283               	bcf	3,5	;RP0=0, select bank0
  3007  14CE  1303               	bcf	3,6	;RP1=0, select bank0
  3008  14CF  00A1               	movwf	LCD_array@x
  3009  14D0  3000               	movlw	0
  3010  14D1  00A2               	movwf	LCD_array@x+1
  3011  14D2  3003               	movlw	3
  3012  14D3  00A3               	movwf	LCD_array@y
  3013  14D4  3000               	movlw	0
  3014  14D5  00A4               	movwf	LCD_array@y+1
  3015  14D6  30E5               	movlw	low ((STR_35+4)| (0+32768))
  3016  14D7  00A5               	movwf	LCD_array@date
  3017  14D8  3085               	movlw	high ((STR_35+4)| (0+32768))
  3018  14D9  00A6               	movwf	LCD_array@date+1
  3019  14DA  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3020                           
  3021                           ;Display_Lcd.c: 58:     LCD_array(3,3,"FLUJO");
  3022  14DF  3003               	movlw	3
  3023  14E0  1283               	bcf	3,5	;RP0=0, select bank0
  3024  14E1  1303               	bcf	3,6	;RP1=0, select bank0
  3025  14E2  00A1               	movwf	LCD_array@x
  3026  14E3  3000               	movlw	0
  3027  14E4  00A2               	movwf	LCD_array@x+1
  3028  14E5  3003               	movlw	3
  3029  14E6  00A3               	movwf	LCD_array@y
  3030  14E7  3000               	movlw	0
  3031  14E8  00A4               	movwf	LCD_array@y+1
  3032  14E9  30DB               	movlw	low ((STR_37+4)| (0+32768))
  3033  14EA  00A5               	movwf	LCD_array@date
  3034  14EB  3085               	movlw	high ((STR_37+4)| (0+32768))
  3035  14EC  00A6               	movwf	LCD_array@date+1
  3036  14ED  160A  118A  2728  160A  118A  	fcall	_LCD_array
  3037                           
  3038                           ;Display_Lcd.c: 59:     LCD_array(4,3,"LIMP. ULTRASONIDO");
  3039  14F2  3004               	movlw	4
  3040  14F3  1283               	bcf	3,5	;RP0=0, select bank0
  3041  14F4  1303               	bcf	3,6	;RP1=0, select bank0
  3042  14F5  00A1               	movwf	LCD_array@x
  3043  14F6  3000               	movlw	0
  3044  14F7  00A2               	movwf	LCD_array@x+1
  3045  14F8  3003               	movlw	3
  3046  14F9  00A3               	movwf	LCD_array@y
  3047  14FA  3000               	movlw	0
  3048  14FB  00A4               	movwf	LCD_array@y+1
  3049  14FC  3096               	movlw	low (STR_17| (0+32768))
  3050  14FD  00A5               	movwf	LCD_array@date
  3051  14FE  3085               	movlw	high (STR_17| (0+32768))
  3052  14FF  00A6               	movwf	LCD_array@date+1
  3053  1500  160A  118A  2728   	fcall	_LCD_array
  3054  1503  0008               	return
  3055  1504                     __end_of_Pant_Menu:
  3056                           
  3057                           	psect	text8
  3058  0C62                     __ptext8:	
  3059 ;; *************** function _Pant_Inicio *****************
  3060 ;; Defined at:
  3061 ;;		line 8 in file "Display_Lcd.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  caracter        8   21[BANK0 ] unsigned char [8]
  3066 ;;  caracter1       8   13[BANK0 ] unsigned char [8]
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0      16       0       0       0
  3078 ;;      Temps:          0       4       0       0       0
  3079 ;;      Totals:         0      20       0       0       0
  3080 ;;Total ram usage:       20 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    4
  3083 ;; This function calls:
  3084 ;;		_LCD_array
  3085 ;;		_LCD_character
  3086 ;;		_LCD_command
  3087 ;; This function is called by:
  3088 ;;		_MEF_Actualizacion
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _Pant_Inicio
  3094  0C62                     _Pant_Inicio:
  3095                           
  3096                           ;Display_Lcd.c: 11:     char caracter1[8] =
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _Pant_Inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3100  0C62  302D               	movlw	Pant_Inicio@caracter1& (0+255)
  3101  0C63  0084               	movwf	4
  3102  0C64  30C8               	movlw	low Pant_Inicio@F1334
  3103  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0C67  00A9               	movwf	??_Pant_Inicio
  3106  0C68  0804               	movf	4,w
  3107  0C69  00AA               	movwf	??_Pant_Inicio+1
  3108  0C6A  3008               	movlw	8
  3109  0C6B  00AB               	movwf	??_Pant_Inicio+2
  3110  0C6C                     u4920:
  3111  0C6C  0829               	movf	??_Pant_Inicio,w
  3112  0C6D  0084               	movwf	4
  3113  0C6E  1383               	bcf	3,7	;select IRP bank1
  3114  0C6F  0800               	movf	0,w
  3115  0C70  00AC               	movwf	??_Pant_Inicio+3
  3116  0C71  0AA9               	incf	??_Pant_Inicio,f
  3117  0C72  082A               	movf	??_Pant_Inicio+1,w
  3118  0C73  0084               	movwf	4
  3119  0C74  082C               	movf	??_Pant_Inicio+3,w
  3120  0C75  0080               	movwf	0
  3121  0C76  0AAA               	incf	??_Pant_Inicio+1,f
  3122  0C77  0BAB               	decfsz	??_Pant_Inicio+2,f
  3123  0C78  2C6C               	goto	u4920
  3124                           
  3125                           ;Display_Lcd.c: 22:     LCD_character(0x01,caracter1);
  3126  0C79  302D               	movlw	(low (Pant_Inicio@caracter1| 0))& (0+255)
  3127  0C7A  00FF               	movwf	127
  3128  0C7B  087F               	movf	127,w
  3129  0C7C  00A1               	movwf	LCD_character@caracter
  3130  0C7D  3001               	movlw	1
  3131  0C7E  160A  118A  22AE  120A  158A  	fcall	_LCD_character
  3132                           
  3133                           ;Display_Lcd.c: 25:     char caracter[8] = {0,0,0,0,0,0,0,0};
  3134  0C83  3035               	movlw	Pant_Inicio@caracter& (0+255)
  3135  0C84  0084               	movwf	4
  3136  0C85  3008               	movlw	8
  3137  0C86  00FF               	movwf	127
  3138  0C87                     u4930:
  3139  0C87  1383               	bcf	3,7	;select IRP bank0
  3140  0C88  0180               	clrf	0
  3141  0C89  0A84               	incf	4,f
  3142  0C8A  0BFF               	decfsz	127,f
  3143  0C8B  2C87               	goto	u4930
  3144                           
  3145                           ;Display_Lcd.c: 26:     LCD_character(0x00,caracter);
  3146  0C8C  3035               	movlw	(low (Pant_Inicio@caracter| 0))& (0+255)
  3147  0C8D  00FF               	movwf	127
  3148  0C8E  087F               	movf	127,w
  3149  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0C91  00A1               	movwf	LCD_character@caracter
  3152  0C92  3000               	movlw	0
  3153  0C93  160A  118A  22AE  120A  158A  	fcall	_LCD_character
  3154                           
  3155                           ;Display_Lcd.c: 29:     LCD_command(0x01);
  3156  0C98  3001               	movlw	1
  3157  0C99  120A  158A  2680  120A  158A  	fcall	_LCD_command
  3158                           
  3159                           ;Display_Lcd.c: 30:     LCD_array(1,1,"====================");
  3160  0C9E  3001               	movlw	1
  3161  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0CA1  00A1               	movwf	LCD_array@x
  3164  0CA2  3000               	movlw	0
  3165  0CA3  00A2               	movwf	LCD_array@x+1
  3166  0CA4  3001               	movlw	1
  3167  0CA5  00A3               	movwf	LCD_array@y
  3168  0CA6  3000               	movlw	0
  3169  0CA7  00A4               	movwf	LCD_array@y+1
  3170  0CA8  305B               	movlw	low (STR_1| (0+32768))
  3171  0CA9  00A5               	movwf	LCD_array@date
  3172  0CAA  3085               	movlw	high (STR_1| (0+32768))
  3173  0CAB  00A6               	movwf	LCD_array@date+1
  3174  0CAC  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3175                           
  3176                           ;Display_Lcd.c: 31:     LCD_array(2,1,"PROBADOR AUTOMOTRIZ ");
  3177  0CB1  3002               	movlw	2
  3178  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0CB4  00A1               	movwf	LCD_array@x
  3181  0CB5  3000               	movlw	0
  3182  0CB6  00A2               	movwf	LCD_array@x+1
  3183  0CB7  3001               	movlw	1
  3184  0CB8  00A3               	movwf	LCD_array@y
  3185  0CB9  3000               	movlw	0
  3186  0CBA  00A4               	movwf	LCD_array@y+1
  3187  0CBB  3046               	movlw	low (STR_2| (0+32768))
  3188  0CBC  00A5               	movwf	LCD_array@date
  3189  0CBD  3085               	movlw	high (STR_2| (0+32768))
  3190  0CBE  00A6               	movwf	LCD_array@date+1
  3191  0CBF  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3192                           
  3193                           ;Display_Lcd.c: 32:     LCD_array(3,1,"   DE INYECTORES    ");
  3194  0CC4  3003               	movlw	3
  3195  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0CC7  00A1               	movwf	LCD_array@x
  3198  0CC8  3000               	movlw	0
  3199  0CC9  00A2               	movwf	LCD_array@x+1
  3200  0CCA  3001               	movlw	1
  3201  0CCB  00A3               	movwf	LCD_array@y
  3202  0CCC  3000               	movlw	0
  3203  0CCD  00A4               	movwf	LCD_array@y+1
  3204  0CCE  3031               	movlw	low (STR_3| (0+32768))
  3205  0CCF  00A5               	movwf	LCD_array@date
  3206  0CD0  3085               	movlw	high (STR_3| (0+32768))
  3207  0CD1  00A6               	movwf	LCD_array@date+1
  3208  0CD2  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3209                           
  3210                           ;Display_Lcd.c: 33:     LCD_array(4,1,"====================");
  3211  0CD7  3004               	movlw	4
  3212  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0CDA  00A1               	movwf	LCD_array@x
  3215  0CDB  3000               	movlw	0
  3216  0CDC  00A2               	movwf	LCD_array@x+1
  3217  0CDD  3001               	movlw	1
  3218  0CDE  00A3               	movwf	LCD_array@y
  3219  0CDF  3000               	movlw	0
  3220  0CE0  00A4               	movwf	LCD_array@y+1
  3221  0CE1  305B               	movlw	low (STR_1| (0+32768))
  3222  0CE2  00A5               	movwf	LCD_array@date
  3223  0CE3  3085               	movlw	high (STR_1| (0+32768))
  3224  0CE4  00A6               	movwf	LCD_array@date+1
  3225  0CE5  160A  118A  2728  120A  158A  	fcall	_LCD_array
  3226                           
  3227                           ;Display_Lcd.c: 34:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  3228  0CEA  3033               	movlw	51
  3229  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0CED  00AB               	movwf	??_Pant_Inicio+2
  3232  0CEE  30BB               	movlw	187
  3233  0CEF  00AA               	movwf	??_Pant_Inicio+1
  3234  0CF0  30DF               	movlw	223
  3235  0CF1  00A9               	movwf	??_Pant_Inicio
  3236  0CF2                     u5327:
  3237  0CF2  0BA9               	decfsz	??_Pant_Inicio,f
  3238  0CF3  2CF2               	goto	u5327
  3239  0CF4  0BAA               	decfsz	??_Pant_Inicio+1,f
  3240  0CF5  2CF2               	goto	u5327
  3241  0CF6  0BAB               	decfsz	??_Pant_Inicio+2,f
  3242  0CF7  2CF2               	goto	u5327
  3243                           
  3244                           ;Display_Lcd.c: 37:     LCD_command(0x01);
  3245  0CF8  3001               	movlw	1
  3246  0CF9  120A  158A  2680  120A  158A  	fcall	_LCD_command
  3247                           
  3248                           ;Display_Lcd.c: 39:     LCD_array(1,1,">");
  3249  0CFE  3001               	movlw	1
  3250  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0D01  00A1               	movwf	LCD_array@x
  3253  0D02  3000               	movlw	0
  3254  0D03  00A2               	movwf	LCD_array@x+1
  3255  0D04  3001               	movlw	1
  3256  0D05  00A3               	movwf	LCD_array@y
  3257  0D06  3000               	movlw	0
  3258  0D07  00A4               	movwf	LCD_array@y+1
  3259  0D08  3006               	movlw	low (STR_5| (0+32768))
  3260  0D09  00A5               	movwf	LCD_array@date
  3261  0D0A  3086               	movlw	high (STR_5| (0+32768))
  3262  0D0B  00A6               	movwf	LCD_array@date+1
  3263  0D0C  160A  118A  2728   	fcall	_LCD_array
  3264  0D0F  0008               	return
  3265  0D10                     __end_of_Pant_Inicio:
  3266                           
  3267                           	psect	text9
  3268  12AE                     __ptext9:	
  3269 ;; *************** function _LCD_character *****************
  3270 ;; Defined at:
  3271 ;;		line 197 in file "Lcd.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  adress          1    wreg     unsigned char 
  3274 ;;  caracter        1    1[BANK0 ] PTR unsigned char 
  3275 ;;		 -> Pant_Inicio@caracter(8), Pant_Inicio@caracter1(8), 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  adress          1    3[BANK0 ] unsigned char 
  3278 ;;  i               1    4[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       1       0       0       0
  3289 ;;      Locals:         0       2       0       0       0
  3290 ;;      Temps:          0       1       0       0       0
  3291 ;;      Totals:         0       4       0       0       0
  3292 ;;Total ram usage:        4 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		_LCD_command
  3297 ;;		_LCD_date
  3298 ;; This function is called by:
  3299 ;;		_Pant_Inicio
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _LCD_character
  3305  12AE                     _LCD_character:
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _LCD_character: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3309                           ;LCD_character@adress stored from wreg
  3310  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  3311  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  3312  12B0  00A3               	movwf	LCD_character@adress
  3313                           
  3314                           ;Lcd.c: 197: void LCD_character(unsigned char adress,char caracter[]);Lcd.c: 198: {;Lcd.
      +                          c: 199:     LCD_command(0x40 + (adress * 8));
  3315  12B1  0823               	movf	LCD_character@adress,w
  3316  12B2  00A2               	movwf	??_LCD_character
  3317  12B3  3002               	movlw	2
  3318  12B4                     u4905:
  3319  12B4  1003               	clrc
  3320  12B5  0DA2               	rlf	??_LCD_character,f
  3321  12B6  3EFF               	addlw	-1
  3322  12B7  1D03               	skipz
  3323  12B8  2AB4               	goto	u4905
  3324  12B9  1003               	clrc
  3325  12BA  0D22               	rlf	??_LCD_character,w
  3326  12BB  3E40               	addlw	64
  3327  12BC  120A  158A  2680  160A  118A  	fcall	_LCD_command
  3328                           
  3329                           ;Lcd.c: 200:     for(char i=0;i<8;i++)
  3330  12C1  1283               	bcf	3,5	;RP0=0, select bank0
  3331  12C2  1303               	bcf	3,6	;RP1=0, select bank0
  3332  12C3  01A4               	clrf	LCD_character@i
  3333  12C4                     l4771:
  3334                           
  3335                           ;Lcd.c: 201:     {;Lcd.c: 202:         LCD_date(caracter[i]);
  3336  12C4  0824               	movf	LCD_character@i,w
  3337  12C5  0721               	addwf	LCD_character@caracter,w
  3338  12C6  00A2               	movwf	??_LCD_character
  3339  12C7  0822               	movf	??_LCD_character,w
  3340  12C8  0084               	movwf	4
  3341  12C9  1383               	bcf	3,7	;select IRP bank0
  3342  12CA  0800               	movf	0,w
  3343  12CB  120A  158A  2510  160A  118A  	fcall	_LCD_date
  3344                           
  3345                           ;Lcd.c: 203:     }
  3346  12D0  3001               	movlw	1
  3347  12D1  00FF               	movwf	127
  3348  12D2  087F               	movf	127,w
  3349  12D3  1283               	bcf	3,5	;RP0=0, select bank0
  3350  12D4  1303               	bcf	3,6	;RP1=0, select bank0
  3351  12D5  07A4               	addwf	LCD_character@i,f
  3352  12D6  3008               	movlw	8
  3353  12D7  0224               	subwf	LCD_character@i,w
  3354  12D8  1803               	btfsc	3,0
  3355  12D9  0008               	return
  3356  12DA  2AC4               	goto	l4771
  3357  12DB                     __end_of_LCD_character:
  3358                           
  3359                           	psect	text10
  3360  03AD                     __ptext10:	
  3361 ;; *************** function _MEF_Subest_Actualizacion *****************
  3362 ;; Defined at:
  3363 ;;		line 102 in file "MEF.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       2       0       0       0
  3380 ;;      Totals:         0       2       0       0       0
  3381 ;;Total ram usage:        2 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    6
  3384 ;; This function calls:
  3385 ;;		_Antirrebote
  3386 ;;		_Detener
  3387 ;;		_Fin_Proceso
  3388 ;;		_LCD_command
  3389 ;;		_Lec_Adc_Modo_Flujo
  3390 ;;		_Lec_Adc_Modo_Fuga
  3391 ;;		_Lec_Adc_Modo_Pulv
  3392 ;;		_Pant_Flujo
  3393 ;;		_Pant_Fuga
  3394 ;;		_Pant_Modos
  3395 ;;		_Pant_Pulverizacion
  3396 ;;		_Pant_Temporizador
  3397 ;;		_Pant_Val_Act
  3398 ;;		_Salida_Modo_Flujo
  3399 ;;		_Salida_Modo_Fuga
  3400 ;;		_Salida_Modo_Pulv
  3401 ;; This function is called by:
  3402 ;;		_MEF_Actualizacion
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _MEF_Subest_Actualizacion
  3408  03AD                     _MEF_Subest_Actualizacion:
  3409                           
  3410                           ;MEF.c: 104:     switch(Subestado_Actual)
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _MEF_Subest_Actualizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  3414  03AD  2CA9               	goto	l4929
  3415  03AE                     l4829:
  3416                           
  3417                           ;MEF.c: 107:         {;MEF.c: 108:             if(Estado_Actual==ESTADO_MODO_PULV) Pant_
      +                          Pulverizacion();
  3418  03AE  3002               	movlw	2
  3419  03AF  0662               	xorwf	_Estado_Actual,w
  3420  03B0  1D03               	btfss	3,2
  3421  03B1  2BB8               	goto	l4833
  3422  03B2  160A  118A  23B7  120A  118A  	fcall	_Pant_Pulverizacion
  3423  03B7  2BCB               	goto	l249
  3424  03B8                     l4833:
  3425  03B8  3003               	movlw	3
  3426  03B9  0662               	xorwf	_Estado_Actual,w
  3427  03BA  1D03               	btfss	3,2
  3428  03BB  2BC2               	goto	l4837
  3429  03BC  160A  118A  237B  120A  118A  	fcall	_Pant_Fuga
  3430  03C1  2BCB               	goto	l249
  3431  03C2                     l4837:
  3432  03C2  3004               	movlw	4
  3433  03C3  0662               	xorwf	_Estado_Actual,w
  3434  03C4  1D03               	btfss	3,2
  3435  03C5  2BCB               	goto	l249
  3436  03C6  160A  118A  233F  120A  118A  	fcall	_Pant_Flujo
  3437  03CB                     l249:
  3438                           
  3439                           ;MEF.c: 112:             Pant_Modos();
  3440  03CB  120A  158A  22A3   	fcall	_Pant_Modos
  3441                           
  3442                           ;MEF.c: 114:             Subestado_Actual = SUBEST_DISPLAY;
  3443  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3444  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3445  03D0  01B6               	clrf	_Subestado_Actual^(0+128)
  3446  03D1  0AB6               	incf	_Subestado_Actual^(0+128),f
  3447                           
  3448                           ;MEF.c: 115:         break;
  3449  03D2  0008               	return
  3450  03D3                     l4843:
  3451                           
  3452                           ;MEF.c: 118:         {;MEF.c: 119:             Pant_Val_Act();
  3453  03D3  120A  158A  273A   	fcall	_Pant_Val_Act
  3454                           
  3455                           ;MEF.c: 121:             Subestado_Actual = SUBEST_ADC;
  3456  03D6  3002               	movlw	2
  3457  03D7  00FF               	movwf	127
  3458  03D8  087F               	movf	127,w
  3459  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  3460  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  3461  03DB  00B6               	movwf	_Subestado_Actual^(0+128)
  3462                           
  3463                           ;MEF.c: 122:         break;
  3464  03DC  0008               	return
  3465  03DD                     l4847:
  3466                           
  3467                           ;MEF.c: 125:         {;MEF.c: 126:             if(Estado_Actual==ESTADO_MODO_PULV) Lec_A
      +                          dc_Modo_Pulv();
  3468  03DD  3002               	movlw	2
  3469  03DE  0662               	xorwf	_Estado_Actual,w
  3470  03DF  1D03               	btfss	3,2
  3471  03E0  2BE7               	goto	l4851
  3472  03E1  120A  158A  2000  120A  118A  	fcall	_Lec_Adc_Modo_Pulv
  3473  03E6  2BFA               	goto	l4859
  3474  03E7                     l4851:
  3475  03E7  3003               	movlw	3
  3476  03E8  0662               	xorwf	_Estado_Actual,w
  3477  03E9  1D03               	btfss	3,2
  3478  03EA  2BF1               	goto	l4855
  3479  03EB  160A  118A  210B  120A  118A  	fcall	_Lec_Adc_Modo_Fuga
  3480  03F0  2BFA               	goto	l4859
  3481  03F1                     l4855:
  3482  03F1  3004               	movlw	4
  3483  03F2  0662               	xorwf	_Estado_Actual,w
  3484  03F3  1D03               	btfss	3,2
  3485  03F4  2BFA               	goto	l4859
  3486  03F5  160A  118A  2102  120A  118A  	fcall	_Lec_Adc_Modo_Flujo
  3487  03FA                     l4859:
  3488                           
  3489                           ;MEF.c: 130:             if(PORTBbits.RB3) mod_tiempo=!mod_tiempo,Antirrebote();
  3490  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3491  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3492  03FC  1D86               	btfss	6,3	;volatile
  3493  03FD  2C0C               	goto	l4865
  3494  03FE  0863               	movf	_mod_tiempo,w
  3495  03FF  1D03               	btfss	3,2
  3496  0400  2C03               	goto	u5060
  3497  0401  3001               	movlw	1
  3498  0402  2C04               	goto	u5070
  3499  0403                     u5060:
  3500  0403  3000               	movlw	0
  3501  0404                     u5070:
  3502  0404  00FF               	movwf	127
  3503  0405  087F               	movf	127,w
  3504  0406  00E3               	movwf	_mod_tiempo
  3505  0407  160A  118A  222E  120A  118A  	fcall	_Antirrebote
  3506  040C                     l4865:
  3507                           
  3508                           ;MEF.c: 132:             if(Act_Variables) Subestado_Actual = SUBEST_DISPLAY,Act_Variabl
      +                          es=0;
  3509  040C  1683               	bsf	3,5	;RP0=1, select bank1
  3510  040D  1303               	bcf	3,6	;RP1=0, select bank1
  3511  040E  0839               	movf	_Act_Variables^(0+128),w
  3512  040F  1903               	btfsc	3,2
  3513  0410  2C14               	goto	l4871
  3514  0411  01B6               	clrf	_Subestado_Actual^(0+128)
  3515  0412  0AB6               	incf	_Subestado_Actual^(0+128),f
  3516  0413  01B9               	clrf	_Act_Variables^(0+128)
  3517  0414                     l4871:
  3518                           
  3519                           ;MEF.c: 133:             if(PORTBbits.RB0) Subestado_Actual = SUBEST_SALIDA,Antirrebote(
      +                          ),Output=!Output;
  3520  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0416  1C06               	btfss	6,0	;volatile
  3523  0417  2C2C               	goto	l4879
  3524  0418  3003               	movlw	3
  3525  0419  00FF               	movwf	127
  3526  041A  087F               	movf	127,w
  3527  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3528  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3529  041D  00B6               	movwf	_Subestado_Actual^(0+128)
  3530  041E  160A  118A  222E  120A  118A  	fcall	_Antirrebote
  3531  0423  0877               	movf	_Output,w
  3532  0424  1D03               	btfss	3,2
  3533  0425  2C28               	goto	u5100
  3534  0426  3001               	movlw	1
  3535  0427  2C29               	goto	u5110
  3536  0428                     u5100:
  3537  0428  3000               	movlw	0
  3538  0429                     u5110:
  3539  0429  00FF               	movwf	127
  3540  042A  087F               	movf	127,w
  3541  042B  00F7               	movwf	_Output
  3542  042C                     l4879:
  3543                           
  3544                           ;MEF.c: 134:             if(PORTBbits.RB2) Subestado_Actual = SUBEST_RESET,Output=!Outpu
      +                          t,Detener();
  3545  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3546  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3547  042E  1D06               	btfss	6,2	;volatile
  3548  042F  0008               	return
  3549  0430  3005               	movlw	5
  3550  0431  00FF               	movwf	127
  3551  0432  087F               	movf	127,w
  3552  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0435  00B6               	movwf	_Subestado_Actual^(0+128)
  3555  0436  0877               	movf	_Output,w
  3556  0437  1D03               	btfss	3,2
  3557  0438  2C3B               	goto	u5130
  3558  0439  3001               	movlw	1
  3559  043A  2C3C               	goto	u5140
  3560  043B                     u5130:
  3561  043B  3000               	movlw	0
  3562  043C                     u5140:
  3563  043C  00FF               	movwf	127
  3564  043D  087F               	movf	127,w
  3565  043E  00F7               	movwf	_Output
  3566  043F                     l4885:
  3567  043F  160A  118A  2551   	fcall	_Detener
  3568  0442  0008               	return
  3569  0443                     l4887:
  3570                           
  3571                           ;MEF.c: 138:         {;MEF.c: 139:             if(Estado_Actual==ESTADO_MODO_PULV) Salid
      +                          a_Modo_Pulv();
  3572  0443  3002               	movlw	2
  3573  0444  0662               	xorwf	_Estado_Actual,w
  3574  0445  1D03               	btfss	3,2
  3575  0446  2C4D               	goto	l4891
  3576  0447  160A  118A  25AC  120A  118A  	fcall	_Salida_Modo_Pulv
  3577  044C  2C60               	goto	l4899
  3578  044D                     l4891:
  3579  044D  3003               	movlw	3
  3580  044E  0662               	xorwf	_Estado_Actual,w
  3581  044F  1D03               	btfss	3,2
  3582  0450  2C57               	goto	l4895
  3583  0451  160A  118A  20E1  120A  118A  	fcall	_Salida_Modo_Fuga
  3584  0456  2C60               	goto	l4899
  3585  0457                     l4895:
  3586  0457  3004               	movlw	4
  3587  0458  0662               	xorwf	_Estado_Actual,w
  3588  0459  1D03               	btfss	3,2
  3589  045A  2C60               	goto	l4899
  3590  045B  160A  118A  20DD  120A  118A  	fcall	_Salida_Modo_Flujo
  3591  0460                     l4899:
  3592                           
  3593                           ;MEF.c: 143:             if(Temporizador) Subestado_Actual = SUBEST_TIEMPO;
  3594  0460  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0461  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0462  0838               	movf	_Temporizador^(0+128),w
  3597  0463  1903               	btfsc	3,2
  3598  0464  2C69               	goto	l4903
  3599  0465  3004               	movlw	4
  3600  0466  00FF               	movwf	127
  3601  0467  087F               	movf	127,w
  3602  0468  00B6               	movwf	_Subestado_Actual^(0+128)
  3603  0469                     l4903:
  3604                           
  3605                           ;MEF.c: 144:             if(PORTBbits.RB2) Subestado_Actual = SUBEST_RESET,Detener();
  3606  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3607  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3608  046B  1D06               	btfss	6,2	;volatile
  3609  046C  0008               	return
  3610  046D  3005               	movlw	5
  3611  046E  00FF               	movwf	127
  3612  046F  087F               	movf	127,w
  3613  0470  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0471  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0472  00B6               	movwf	_Subestado_Actual^(0+128)
  3616  0473  2C3F               	goto	l4885
  3617  0474                     l4909:
  3618                           
  3619                           ;MEF.c: 148:         {;MEF.c: 149:             Pant_Temporizador();
  3620  0474  160A  118A  246E  120A  118A  	fcall	_Pant_Temporizador
  3621                           
  3622                           ;MEF.c: 150:             Fin_Proceso();
  3623  0479  160A  118A  2607  120A  118A  	fcall	_Fin_Proceso
  3624                           
  3625                           ;MEF.c: 152:             if(Output) Subestado_Actual = SUBEST_SALIDA;
  3626  047E  0877               	movf	_Output,w
  3627  047F  1903               	btfsc	3,2
  3628  0480  2C88               	goto	l4915
  3629  0481  3003               	movlw	3
  3630  0482  00FF               	movwf	127
  3631  0483  087F               	movf	127,w
  3632  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3633  0485  1303               	bcf	3,6	;RP1=0, select bank1
  3634  0486  00B6               	movwf	_Subestado_Actual^(0+128)
  3635  0487  0008               	return
  3636  0488                     l4915:
  3637  0488  3005               	movlw	5
  3638  0489  00FF               	movwf	127
  3639  048A  087F               	movf	127,w
  3640  048B  1683               	bsf	3,5	;RP0=1, select bank1
  3641  048C  1303               	bcf	3,6	;RP1=0, select bank1
  3642  048D  00B6               	movwf	_Subestado_Actual^(0+128)
  3643  048E  0008               	return
  3644  048F                     l4917:
  3645                           
  3646                           ;MEF.c: 157:         {;MEF.c: 158:             Rpm=0,Pwm=0,Min=0,Seg=0,Temp=0,Modo=0;
  3647  048F  1683               	bsf	3,5	;RP0=1, select bank1
  3648  0490  1303               	bcf	3,6	;RP1=0, select bank1
  3649  0491  01AE               	clrf	_Rpm^(0+128)
  3650  0492  01AF               	clrf	(_Rpm+1)^(0+128)
  3651  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0495  01E4               	clrf	_Pwm
  3654  0496  01F9               	clrf	_Min
  3655  0497  01F8               	clrf	_Seg
  3656  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3657  0499  1303               	bcf	3,6	;RP1=0, select bank1
  3658  049A  01BB               	clrf	_Temp^(0+128)
  3659  049B  1283               	bcf	3,5	;RP0=0, select bank0
  3660  049C  1303               	bcf	3,6	;RP1=0, select bank0
  3661  049D  01E5               	clrf	_Modo
  3662                           
  3663                           ;MEF.c: 159:             PORTBbits.RB4=0;
  3664  049E  1206               	bcf	6,4	;volatile
  3665                           
  3666                           ;MEF.c: 160:             LCD_command(0x01);
  3667  049F  3001               	movlw	1
  3668  04A0  120A  158A  2680   	fcall	_LCD_command
  3669                           
  3670                           ;MEF.c: 161:             Reset = 1;
  3671  04A3  01F6               	clrf	_Reset
  3672  04A4  0AF6               	incf	_Reset,f
  3673                           
  3674                           ;MEF.c: 163:             Subestado_Actual = SUBEST_INICIAL;
  3675  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  3676  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  3677  04A7  01B6               	clrf	_Subestado_Actual^(0+128)
  3678                           
  3679                           ;MEF.c: 164:         break;
  3680  04A8  0008               	return
  3681  04A9                     l4929:
  3682  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3683  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3684  04AB  0836               	movf	_Subestado_Actual^(0+128),w
  3685  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3686  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3687  04AE  00DC               	movwf	??_MEF_Subest_Actualizacion
  3688  04AF  01DD               	clrf	??_MEF_Subest_Actualizacion+1
  3689                           
  3690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3691                           ; Switch size 1, requested type "simple"
  3692                           ; Number of cases is 1, Range of values is 0 to 0
  3693                           ; switch strategies available:
  3694                           ; Name         Instructions Cycles
  3695                           ; simple_byte            4     3 (average)
  3696                           ; direct_byte           11     8 (fixed)
  3697                           ; jumptable            260     6 (fixed)
  3698                           ;	Chosen strategy is simple_byte
  3699  04B0  085D               	movf	??_MEF_Subest_Actualizacion+1,w
  3700  04B1  3A00               	xorlw	0	; case 0
  3701  04B2  1903               	skipnz
  3702  04B3  2CB5               	goto	l5189
  3703  04B4  2CC9               	goto	l277
  3704  04B5                     l5189:
  3705                           
  3706                           ; Switch size 1, requested type "simple"
  3707                           ; Number of cases is 6, Range of values is 0 to 5
  3708                           ; switch strategies available:
  3709                           ; Name         Instructions Cycles
  3710                           ; simple_byte           19    10 (average)
  3711                           ; direct_byte           26     8 (fixed)
  3712                           ; jumptable            260     6 (fixed)
  3713                           ;	Chosen strategy is simple_byte
  3714  04B5  085C               	movf	??_MEF_Subest_Actualizacion,w
  3715  04B6  3A00               	xorlw	0	; case 0
  3716  04B7  1903               	skipnz
  3717  04B8  2BAE               	goto	l4829
  3718  04B9  3A01               	xorlw	1	; case 1
  3719  04BA  1903               	skipnz
  3720  04BB  2BD3               	goto	l4843
  3721  04BC  3A03               	xorlw	3	; case 2
  3722  04BD  1903               	skipnz
  3723  04BE  2BDD               	goto	l4847
  3724  04BF  3A01               	xorlw	1	; case 3
  3725  04C0  1903               	skipnz
  3726  04C1  2C43               	goto	l4887
  3727  04C2  3A07               	xorlw	7	; case 4
  3728  04C3  1903               	skipnz
  3729  04C4  2C74               	goto	l4909
  3730  04C5  3A01               	xorlw	1	; case 5
  3731  04C6  1903               	skipnz
  3732  04C7  2C8F               	goto	l4917
  3733  04C8  2CC9               	goto	l277
  3734  04C9                     l277:
  3735  04C9  0008               	return
  3736  04CA                     __end_of_MEF_Subest_Actualizacion:
  3737                           
  3738                           	psect	text11
  3739  15AC                     __ptext11:	
  3740 ;; *************** function _Salida_Modo_Pulv *****************
  3741 ;; Defined at:
  3742 ;;		line 21 in file "Modo_Pulverizacion.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         0       2       0       0       0
  3758 ;;      Temps:          0       0       0       0       0
  3759 ;;      Totals:         0       2       0       0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    5
  3763 ;; This function calls:
  3764 ;;		_Pwm1
  3765 ;;		_Pwm1_init
  3766 ;;		___ftdiv
  3767 ;;		___fttol
  3768 ;;		___lbtoft
  3769 ;;		___lwtoft
  3770 ;; This function is called by:
  3771 ;;		_MEF_Subest_Actualizacion
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _Salida_Modo_Pulv
  3777  15AC                     _Salida_Modo_Pulv:
  3778                           
  3779                           ;Modo_Pulverizacion.c: 23:     if(!Pwm_Seteado)
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _Salida_Modo_Pulv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3783  15AC  1683               	bsf	3,5	;RP0=1, select bank1
  3784  15AD  1303               	bcf	3,6	;RP1=0, select bank1
  3785  15AE  0837               	movf	_Pwm_Seteado^(0+128),w
  3786  15AF  1D03               	btfss	3,2
  3787  15B0  0008               	return
  3788                           
  3789                           ;Modo_Pulverizacion.c: 24:     {;Modo_Pulverizacion.c: 25:         Pwm1_init((int)(Rpm/6
      +                          0.0));
  3790  15B1  082F               	movf	(_Rpm+1)^(0+128),w
  3791  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  3792  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  3793  15B4  00A9               	movwf	___lwtoft@c+1
  3794  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  3795  15B6  1303               	bcf	3,6	;RP1=0, select bank1
  3796  15B7  082E               	movf	_Rpm^(0+128),w
  3797  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  3798  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  3799  15BA  00A8               	movwf	___lwtoft@c
  3800  15BB  160A  118A  215A  160A  118A  	fcall	___lwtoft
  3801  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  3802  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  3803  15C2  0828               	movf	?___lwtoft,w
  3804  15C3  00BE               	movwf	___ftdiv@f1
  3805  15C4  0829               	movf	?___lwtoft+1,w
  3806  15C5  00BF               	movwf	___ftdiv@f1+1
  3807  15C6  082A               	movf	?___lwtoft+2,w
  3808  15C7  00C0               	movwf	___ftdiv@f1+2
  3809  15C8  3000               	movlw	0
  3810  15C9  00BB               	movwf	___ftdiv@f2
  3811  15CA  3070               	movlw	112
  3812  15CB  00BC               	movwf	___ftdiv@f2+1
  3813  15CC  3042               	movlw	66
  3814  15CD  00BD               	movwf	___ftdiv@f2+2
  3815  15CE  120A  158A  25C8  160A  118A  	fcall	___ftdiv
  3816  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  3817  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  3818  15D5  083B               	movf	?___ftdiv,w
  3819  15D6  00CA               	movwf	___fttol@f1
  3820  15D7  083C               	movf	?___ftdiv+1,w
  3821  15D8  00CB               	movwf	___fttol@f1+1
  3822  15D9  083D               	movf	?___ftdiv+2,w
  3823  15DA  00CC               	movwf	___fttol@f1+2
  3824  15DB  120A  158A  2013  160A  118A  	fcall	___fttol
  3825  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  3826  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  3827  15E2  084B               	movf	?___fttol+1,w
  3828  15E3  00DB               	movwf	_Salida_Modo_Pulv$1522+1
  3829  15E4  084A               	movf	?___fttol,w
  3830  15E5  00DA               	movwf	_Salida_Modo_Pulv$1522
  3831                           
  3832                           ;Modo_Pulverizacion.c: 24:     {;Modo_Pulverizacion.c: 25:         Pwm1_init((int)(Rpm/6
      +                          0.0));
  3833  15E6  085B               	movf	_Salida_Modo_Pulv$1522+1,w
  3834  15E7  00D8               	movwf	Pwm1_init@frecuencia+1
  3835  15E8  085A               	movf	_Salida_Modo_Pulv$1522,w
  3836  15E9  00D7               	movwf	Pwm1_init@frecuencia
  3837  15EA  120A  158A  2090  160A  118A  	fcall	_Pwm1_init
  3838                           
  3839                           ;Modo_Pulverizacion.c: 26:         Pwm1(Pwm);
  3840  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  3841  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  3842  15F1  0864               	movf	_Pwm,w
  3843  15F2  160A  118A  21A5  160A  118A  	fcall	___lbtoft
  3844  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  3845  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  3846  15F9  0828               	movf	?___lbtoft,w
  3847  15FA  00D7               	movwf	Pwm1@duty
  3848  15FB  0829               	movf	?___lbtoft+1,w
  3849  15FC  00D8               	movwf	Pwm1@duty+1
  3850  15FD  082A               	movf	?___lbtoft+2,w
  3851  15FE  00D9               	movwf	Pwm1@duty+2
  3852  15FF  120A  158A  210D   	fcall	_Pwm1
  3853                           
  3854                           ;Modo_Pulverizacion.c: 27:         Pwm_Seteado = 1;
  3855  1602  1683               	bsf	3,5	;RP0=1, select bank1
  3856  1603  1303               	bcf	3,6	;RP1=0, select bank1
  3857  1604  01B7               	clrf	_Pwm_Seteado^(0+128)
  3858  1605  0AB7               	incf	_Pwm_Seteado^(0+128),f
  3859  1606  0008               	return
  3860  1607                     __end_of_Salida_Modo_Pulv:
  3861                           
  3862                           	psect	text12
  3863  11A5                     __ptext12:	
  3864 ;; *************** function ___lbtoft *****************
  3865 ;; Defined at:
  3866 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lbtoft.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  c               1    wreg     unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  c               1    4[COMMON] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  3    8[BANK0 ] float 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       3       0       0       0
  3881 ;;      Locals:         1       0       0       0       0
  3882 ;;      Temps:          0       3       0       0       0
  3883 ;;      Totals:         1       6       0       0       0
  3884 ;;Total ram usage:        7 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    3
  3887 ;; This function calls:
  3888 ;;		___ftpack
  3889 ;; This function is called by:
  3890 ;;		_Salida_Modo_Pulv
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function ___lbtoft
  3896  11A5                     ___lbtoft:
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3900                           ;___lbtoft@c stored from wreg
  3901  11A5  00F4               	movwf	___lbtoft@c
  3902  11A6  0874               	movf	___lbtoft@c,w
  3903  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  3904  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  3905  11A9  00AB               	movwf	??___lbtoft
  3906  11AA  01AC               	clrf	??___lbtoft+1
  3907  11AB  01AD               	clrf	??___lbtoft+2
  3908  11AC  082B               	movf	??___lbtoft,w
  3909  11AD  00A0               	movwf	___ftpack@arg
  3910  11AE  082C               	movf	??___lbtoft+1,w
  3911  11AF  00A1               	movwf	___ftpack@arg+1
  3912  11B0  082D               	movf	??___lbtoft+2,w
  3913  11B1  00A2               	movwf	___ftpack@arg+2
  3914  11B2  308E               	movlw	142
  3915  11B3  00FF               	movwf	127
  3916  11B4  087F               	movf	127,w
  3917  11B5  00A3               	movwf	___ftpack@exp
  3918  11B6  01A4               	clrf	___ftpack@sign
  3919  11B7  160A  118A  2792   	fcall	___ftpack
  3920  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  3921  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  3922  11BC  0820               	movf	?___ftpack,w
  3923  11BD  00A8               	movwf	?___lbtoft
  3924  11BE  0821               	movf	?___ftpack+1,w
  3925  11BF  00A9               	movwf	?___lbtoft+1
  3926  11C0  0822               	movf	?___ftpack+2,w
  3927  11C1  00AA               	movwf	?___lbtoft+2
  3928  11C2  0008               	return
  3929  11C3                     __end_of___lbtoft:
  3930                           
  3931                           	psect	text13
  3932  0890                     __ptext13:	
  3933 ;; *************** function _Pwm1_init *****************
  3934 ;; Defined at:
  3935 ;;		line 29 in file "Pwm_Soft.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  frecuencia      2   55[BANK0 ] unsigned int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       2       0       0       0
  3950 ;;      Locals:         0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0
  3952 ;;      Totals:         0       2       0       0       0
  3953 ;;Total ram usage:        2 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    4
  3956 ;; This function calls:
  3957 ;;		___ftdiv
  3958 ;;		___fttol
  3959 ;;		___lwtoft
  3960 ;; This function is called by:
  3961 ;;		_Salida_Modo_Pulv
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _Pwm1_init
  3967  0890                     _Pwm1_init:
  3968                           
  3969                           ;Pwm_Soft.c: 29: void Pwm1_init(unsigned int frecuencia);Pwm_Soft.c: 30: {;Pwm_Soft.c: 3
      +                          2:     TRISB4 = 0;
  3970                           
  3971                           ;incstack = 0
  3972                           ; Regs used in _Pwm1_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3973  0890  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0891  1303               	bcf	3,6	;RP1=0, select bank1
  3975  0892  1206               	bcf	6,4	;volatile
  3976                           
  3977                           ;Pwm_Soft.c: 33:     RB4=0;
  3978  0893  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0894  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0895  1206               	bcf	6,4	;volatile
  3981                           
  3982                           ;Pwm_Soft.c: 40:     freqPwmS1 = frecuencia;
  3983  0896  0858               	movf	Pwm1_init@frecuencia+1,w
  3984  0897  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0898  1303               	bcf	3,6	;RP1=0, select bank1
  3986  0899  00B5               	movwf	(_freqPwmS1+1)^(0+128)
  3987  089A  1283               	bcf	3,5	;RP0=0, select bank0
  3988  089B  1303               	bcf	3,6	;RP1=0, select bank0
  3989  089C  0857               	movf	Pwm1_init@frecuencia,w
  3990  089D  1683               	bsf	3,5	;RP0=1, select bank1
  3991  089E  1303               	bcf	3,6	;RP1=0, select bank1
  3992  089F  00B4               	movwf	_freqPwmS1^(0+128)
  3993                           
  3994                           ;Pwm_Soft.c: 41:     Per_PwmS1 = 1.0/frecuencia;
  3995  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  3996  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  3997  08A2  0858               	movf	Pwm1_init@frecuencia+1,w
  3998  08A3  00A9               	movwf	___lwtoft@c+1
  3999  08A4  0857               	movf	Pwm1_init@frecuencia,w
  4000  08A5  00A8               	movwf	___lwtoft@c
  4001  08A6  160A  118A  215A  120A  158A  	fcall	___lwtoft
  4002  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  4003  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  4004  08AD  0828               	movf	?___lwtoft,w
  4005  08AE  00BB               	movwf	___ftdiv@f2
  4006  08AF  0829               	movf	?___lwtoft+1,w
  4007  08B0  00BC               	movwf	___ftdiv@f2+1
  4008  08B1  082A               	movf	?___lwtoft+2,w
  4009  08B2  00BD               	movwf	___ftdiv@f2+2
  4010  08B3  3000               	movlw	0
  4011  08B4  00BE               	movwf	___ftdiv@f1
  4012  08B5  3080               	movlw	128
  4013  08B6  00BF               	movwf	___ftdiv@f1+1
  4014  08B7  303F               	movlw	63
  4015  08B8  00C0               	movwf	___ftdiv@f1+2
  4016  08B9  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4017  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  4018  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  4019  08C0  083B               	movf	?___ftdiv,w
  4020  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  4021  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  4022  08C3  00AB               	movwf	_Per_PwmS1^(0+128)
  4023  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  4024  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  4025  08C6  083C               	movf	?___ftdiv+1,w
  4026  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  4027  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  4028  08C9  00AC               	movwf	(_Per_PwmS1+1)^(0+128)
  4029  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  4030  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  4031  08CC  083D               	movf	?___ftdiv+2,w
  4032  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  4033  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  4034  08CF  00AD               	movwf	(_Per_PwmS1+2)^(0+128)
  4035                           
  4036                           ;Pwm_Soft.c: 42:     PER_T_S1 = Per_PwmS1 / 0.0001;
  4037  08D0  082B               	movf	_Per_PwmS1^(0+128),w
  4038  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  4039  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  4040  08D3  00BE               	movwf	___ftdiv@f1
  4041  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  4042  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  4043  08D6  082C               	movf	(_Per_PwmS1+1)^(0+128),w
  4044  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4045  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4046  08D9  00BF               	movwf	___ftdiv@f1+1
  4047  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  4048  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  4049  08DC  082D               	movf	(_Per_PwmS1+2)^(0+128),w
  4050  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  4051  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  4052  08DF  00C0               	movwf	___ftdiv@f1+2
  4053  08E0  30B7               	movlw	183
  4054  08E1  00BB               	movwf	___ftdiv@f2
  4055  08E2  30D1               	movlw	209
  4056  08E3  00BC               	movwf	___ftdiv@f2+1
  4057  08E4  3038               	movlw	56
  4058  08E5  00BD               	movwf	___ftdiv@f2+2
  4059  08E6  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4060  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  4061  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  4062  08ED  083B               	movf	?___ftdiv,w
  4063  08EE  00CA               	movwf	___fttol@f1
  4064  08EF  083C               	movf	?___ftdiv+1,w
  4065  08F0  00CB               	movwf	___fttol@f1+1
  4066  08F1  083D               	movf	?___ftdiv+2,w
  4067  08F2  00CC               	movwf	___fttol@f1+2
  4068  08F3  120A  158A  2013   	fcall	___fttol
  4069  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  4070  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  4071  08F8  084B               	movf	?___fttol+1,w
  4072  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  4073  08FA  1303               	bcf	3,6	;RP1=0, select bank1
  4074  08FB  00B1               	movwf	(_PER_T_S1+1)^(0+128)
  4075  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  4076  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  4077  08FE  084A               	movf	?___fttol,w
  4078  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  4079  0900  1303               	bcf	3,6	;RP1=0, select bank1
  4080  0901  00B0               	movwf	_PER_T_S1^(0+128)
  4081                           
  4082                           ;Pwm_Soft.c: 45:     Pw_PwmS1 = 0;
  4083  0902  3000               	movlw	0
  4084  0903  00A8               	movwf	_Pw_PwmS1^(0+128)
  4085  0904  3000               	movlw	0
  4086  0905  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  4087  0906  3000               	movlw	0
  4088  0907  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  4089                           
  4090                           ;Pwm_Soft.c: 46:     PwmS1 = 0;
  4091  0908  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0909  1303               	bcf	3,6	;RP1=0, select bank0
  4093  090A  01E0               	clrf	_PwmS1
  4094  090B  01E1               	clrf	_PwmS1+1
  4095  090C  0008               	return
  4096  090D                     __end_of_Pwm1_init:
  4097                           
  4098                           	psect	text14
  4099  115A                     __ptext14:	
  4100 ;; *************** function ___lwtoft *****************
  4101 ;; Defined at:
  4102 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwtoft.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  c               2    8[BANK0 ] unsigned int 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  3    8[BANK0 ] float 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       3       0       0       0
  4117 ;;      Locals:         0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0
  4119 ;;      Totals:         0       3       0       0       0
  4120 ;;Total ram usage:        3 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    3
  4123 ;; This function calls:
  4124 ;;		___ftpack
  4125 ;; This function is called by:
  4126 ;;		_Salida_Modo_Pulv
  4127 ;;		_Pwm1_init
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function ___lwtoft
  4133  115A                     ___lwtoft:
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4137  115A  1283               	bcf	3,5	;RP0=0, select bank0
  4138  115B  1303               	bcf	3,6	;RP1=0, select bank0
  4139  115C  0828               	movf	___lwtoft@c,w
  4140  115D  00A0               	movwf	___ftpack@arg
  4141  115E  0829               	movf	___lwtoft@c+1,w
  4142  115F  00A1               	movwf	___ftpack@arg+1
  4143  1160  01A2               	clrf	___ftpack@arg+2
  4144  1161  308E               	movlw	142
  4145  1162  00FF               	movwf	127
  4146  1163  087F               	movf	127,w
  4147  1164  00A3               	movwf	___ftpack@exp
  4148  1165  01A4               	clrf	___ftpack@sign
  4149  1166  160A  118A  2792   	fcall	___ftpack
  4150  1169  1283               	bcf	3,5	;RP0=0, select bank0
  4151  116A  1303               	bcf	3,6	;RP1=0, select bank0
  4152  116B  0820               	movf	?___ftpack,w
  4153  116C  00A8               	movwf	?___lwtoft
  4154  116D  0821               	movf	?___ftpack+1,w
  4155  116E  00A9               	movwf	?___lwtoft+1
  4156  116F  0822               	movf	?___ftpack+2,w
  4157  1170  00AA               	movwf	?___lwtoft+2
  4158  1171  0008               	return
  4159  1172                     __end_of___lwtoft:
  4160                           
  4161                           	psect	text15
  4162  090D                     __ptext15:	
  4163 ;; *************** function _Pwm1 *****************
  4164 ;; Defined at:
  4165 ;;		line 53 in file "Pwm_Soft.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  duty            3   55[BANK0 ] float 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       3       0       0       0
  4180 ;;      Locals:         0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0
  4182 ;;      Totals:         0       3       0       0       0
  4183 ;;Total ram usage:        3 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    4
  4186 ;; This function calls:
  4187 ;;		___ftdiv
  4188 ;;		___ftmul
  4189 ;;		___fttol
  4190 ;; This function is called by:
  4191 ;;		_Salida_Modo_Pulv
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _Pwm1
  4197  090D                     _Pwm1:
  4198                           
  4199                           ;Pwm_Soft.c: 53: void Pwm1(float duty);Pwm_Soft.c: 54: {;Pwm_Soft.c: 56:     Act_PwmS1 =
      +                           1;
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _Pwm1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4203  090D  1683               	bsf	3,5	;RP0=1, select bank1
  4204  090E  1303               	bcf	3,6	;RP1=0, select bank1
  4205  090F  01BC               	clrf	_Act_PwmS1^(0+128)
  4206  0910  0ABC               	incf	_Act_PwmS1^(0+128),f
  4207                           
  4208                           ;Pwm_Soft.c: 58:     Pw_PwmS1 = (duty * Per_PwmS1) / 100.0;
  4209  0911  3000               	movlw	0
  4210  0912  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0913  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0914  00BB               	movwf	___ftdiv@f2
  4213  0915  30C8               	movlw	200
  4214  0916  00BC               	movwf	___ftdiv@f2+1
  4215  0917  3042               	movlw	66
  4216  0918  00BD               	movwf	___ftdiv@f2+2
  4217  0919  1683               	bsf	3,5	;RP0=1, select bank1
  4218  091A  1303               	bcf	3,6	;RP1=0, select bank1
  4219  091B  082B               	movf	_Per_PwmS1^(0+128),w
  4220  091C  1283               	bcf	3,5	;RP0=0, select bank0
  4221  091D  1303               	bcf	3,6	;RP1=0, select bank0
  4222  091E  00AC               	movwf	___ftmul@f1
  4223  091F  1683               	bsf	3,5	;RP0=1, select bank1
  4224  0920  1303               	bcf	3,6	;RP1=0, select bank1
  4225  0921  082C               	movf	(_Per_PwmS1+1)^(0+128),w
  4226  0922  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0923  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0924  00AD               	movwf	___ftmul@f1+1
  4229  0925  1683               	bsf	3,5	;RP0=1, select bank1
  4230  0926  1303               	bcf	3,6	;RP1=0, select bank1
  4231  0927  082D               	movf	(_Per_PwmS1+2)^(0+128),w
  4232  0928  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0929  1303               	bcf	3,6	;RP1=0, select bank0
  4234  092A  00AE               	movwf	___ftmul@f1+2
  4235  092B  0857               	movf	Pwm1@duty,w
  4236  092C  00AF               	movwf	___ftmul@f2
  4237  092D  0858               	movf	Pwm1@duty+1,w
  4238  092E  00B0               	movwf	___ftmul@f2+1
  4239  092F  0859               	movf	Pwm1@duty+2,w
  4240  0930  00B1               	movwf	___ftmul@f2+2
  4241  0931  120A  118A  2705  120A  158A  	fcall	___ftmul
  4242  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0938  082C               	movf	?___ftmul,w
  4245  0939  00BE               	movwf	___ftdiv@f1
  4246  093A  082D               	movf	?___ftmul+1,w
  4247  093B  00BF               	movwf	___ftdiv@f1+1
  4248  093C  082E               	movf	?___ftmul+2,w
  4249  093D  00C0               	movwf	___ftdiv@f1+2
  4250  093E  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4251  0943  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0944  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0945  083B               	movf	?___ftdiv,w
  4254  0946  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0947  1303               	bcf	3,6	;RP1=0, select bank1
  4256  0948  00A8               	movwf	_Pw_PwmS1^(0+128)
  4257  0949  1283               	bcf	3,5	;RP0=0, select bank0
  4258  094A  1303               	bcf	3,6	;RP1=0, select bank0
  4259  094B  083C               	movf	?___ftdiv+1,w
  4260  094C  1683               	bsf	3,5	;RP0=1, select bank1
  4261  094D  1303               	bcf	3,6	;RP1=0, select bank1
  4262  094E  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  4263  094F  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0950  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0951  083D               	movf	?___ftdiv+2,w
  4266  0952  1683               	bsf	3,5	;RP0=1, select bank1
  4267  0953  1303               	bcf	3,6	;RP1=0, select bank1
  4268  0954  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  4269                           
  4270                           ;Pwm_Soft.c: 59:     P_W_T_S1 = Pw_PwmS1 / 0.0001;
  4271  0955  0828               	movf	_Pw_PwmS1^(0+128),w
  4272  0956  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0957  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0958  00BE               	movwf	___ftdiv@f1
  4275  0959  1683               	bsf	3,5	;RP0=1, select bank1
  4276  095A  1303               	bcf	3,6	;RP1=0, select bank1
  4277  095B  0829               	movf	(_Pw_PwmS1+1)^(0+128),w
  4278  095C  1283               	bcf	3,5	;RP0=0, select bank0
  4279  095D  1303               	bcf	3,6	;RP1=0, select bank0
  4280  095E  00BF               	movwf	___ftdiv@f1+1
  4281  095F  1683               	bsf	3,5	;RP0=1, select bank1
  4282  0960  1303               	bcf	3,6	;RP1=0, select bank1
  4283  0961  082A               	movf	(_Pw_PwmS1+2)^(0+128),w
  4284  0962  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0963  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0964  00C0               	movwf	___ftdiv@f1+2
  4287  0965  30B7               	movlw	183
  4288  0966  00BB               	movwf	___ftdiv@f2
  4289  0967  30D1               	movlw	209
  4290  0968  00BC               	movwf	___ftdiv@f2+1
  4291  0969  3038               	movlw	56
  4292  096A  00BD               	movwf	___ftdiv@f2+2
  4293  096B  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  4294  0970  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0971  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0972  083B               	movf	?___ftdiv,w
  4297  0973  00CA               	movwf	___fttol@f1
  4298  0974  083C               	movf	?___ftdiv+1,w
  4299  0975  00CB               	movwf	___fttol@f1+1
  4300  0976  083D               	movf	?___ftdiv+2,w
  4301  0977  00CC               	movwf	___fttol@f1+2
  4302  0978  120A  158A  2013   	fcall	___fttol
  4303  097B  1283               	bcf	3,5	;RP0=0, select bank0
  4304  097C  1303               	bcf	3,6	;RP1=0, select bank0
  4305  097D  084B               	movf	?___fttol+1,w
  4306  097E  1683               	bsf	3,5	;RP0=1, select bank1
  4307  097F  1303               	bcf	3,6	;RP1=0, select bank1
  4308  0980  00B3               	movwf	(_P_W_T_S1+1)^(0+128)
  4309  0981  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0982  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0983  084A               	movf	?___fttol,w
  4312  0984  1683               	bsf	3,5	;RP0=1, select bank1
  4313  0985  1303               	bcf	3,6	;RP1=0, select bank1
  4314  0986  00B2               	movwf	_P_W_T_S1^(0+128)
  4315                           
  4316                           ;Pwm_Soft.c: 61:     if(PwmS1 == 0) RB4=1;
  4317  0987  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0988  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0989  0860               	movf	_PwmS1,w
  4320  098A  0461               	iorwf	_PwmS1+1,w
  4321  098B  1903               	btfsc	3,2
  4322  098C  1606               	bsf	6,4	;volatile
  4323                           
  4324                           ;Pwm_Soft.c: 64:     TMR1ON = 1;
  4325  098D  1410               	bsf	16,0	;volatile
  4326                           
  4327                           ;Pwm_Soft.c: 66:     return;
  4328  098E  0008               	return
  4329  098F                     __end_of_Pwm1:
  4330                           
  4331                           	psect	text16
  4332  10E1                     __ptext16:	
  4333 ;; *************** function _Salida_Modo_Fuga *****************
  4334 ;; Defined at:
  4335 ;;		line 15 in file "Modo_Fuga.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		None
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0
  4352 ;;      Totals:         0       0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    2
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_MEF_Subest_Actualizacion
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _Salida_Modo_Fuga
  4365  10E1                     _Salida_Modo_Fuga:
  4366                           
  4367                           ;Modo_Fuga.c: 17:     PORTBbits.RB4=0;
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in _Salida_Modo_Fuga: []
  4371  10E1  1283               	bcf	3,5	;RP0=0, select bank0
  4372  10E2  1303               	bcf	3,6	;RP1=0, select bank0
  4373  10E3  1206               	bcf	6,4	;volatile
  4374                           
  4375                           ;Modo_Fuga.c: 19:     return;
  4376  10E4  0008               	return
  4377  10E5                     __end_of_Salida_Modo_Fuga:
  4378                           
  4379                           	psect	text17
  4380  10DD                     __ptext17:	
  4381 ;; *************** function _Salida_Modo_Flujo *****************
  4382 ;; Defined at:
  4383 ;;		line 15 in file "Modo_Flujo.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		None
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    2
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_MEF_Subest_Actualizacion
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _Salida_Modo_Flujo
  4413  10DD                     _Salida_Modo_Flujo:
  4414                           
  4415                           ;Modo_Flujo.c: 17:     PORTBbits.RB4=1;
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _Salida_Modo_Flujo: []
  4419  10DD  1283               	bcf	3,5	;RP0=0, select bank0
  4420  10DE  1303               	bcf	3,6	;RP1=0, select bank0
  4421  10DF  1606               	bsf	6,4	;volatile
  4422                           
  4423                           ;Modo_Flujo.c: 19:     return;
  4424  10E0  0008               	return
  4425  10E1                     __end_of_Salida_Modo_Flujo:
  4426                           
  4427                           	psect	text18
  4428  0F3A                     __ptext18:	
  4429 ;; *************** function _Pant_Val_Act *****************
  4430 ;; Defined at:
  4431 ;;		line 76 in file "Display_Lcd.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  buffer         20   30[BANK0 ] unsigned char [20]
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         0      20       0       0       0
  4447 ;;      Temps:          0       2       0       0       0
  4448 ;;      Totals:         0      22       0       0       0
  4449 ;;Total ram usage:       22 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    4
  4452 ;; This function calls:
  4453 ;;		_LCD_array
  4454 ;;		_sprintf
  4455 ;; This function is called by:
  4456 ;;		_MEF_Subest_Actualizacion
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _Pant_Val_Act
  4462  0F3A                     _Pant_Val_Act:
  4463                           
  4464                           ;Display_Lcd.c: 78:     char buffer[20];;Display_Lcd.c: 80:     sprintf(buffer,"%05u",Rp
      +                          m);
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _Pant_Val_Act: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4468  0F3A  3001               	movlw	low (STR_24| (0+32768))
  4469  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0F3D  00AB               	movwf	sprintf@f
  4472  0F3E  3086               	movlw	high (STR_24| (0+32768))
  4473  0F3F  00AC               	movwf	sprintf@f+1
  4474  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  4476  0F42  082F               	movf	(_Rpm+1)^(0+128),w
  4477  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0F45  00AE               	movwf	?_sprintf+3
  4480  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  4481  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  4482  0F48  082E               	movf	_Rpm^(0+128),w
  4483  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0F4B  00AD               	movwf	?_sprintf+2
  4486  0F4C  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4487  0F4D  120A  118A  2042  120A  158A  	fcall	_sprintf
  4488                           
  4489                           ;Display_Lcd.c: 81:     LCD_array(1,5,buffer);
  4490  0F52  3001               	movlw	1
  4491  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0F55  00A1               	movwf	LCD_array@x
  4494  0F56  3000               	movlw	0
  4495  0F57  00A2               	movwf	LCD_array@x+1
  4496  0F58  3005               	movlw	5
  4497  0F59  00A3               	movwf	LCD_array@y
  4498  0F5A  3000               	movlw	0
  4499  0F5B  00A4               	movwf	LCD_array@y+1
  4500  0F5C  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4501  0F5D  00A5               	movwf	LCD_array@date
  4502  0F5E  3000               	movlw	0
  4503  0F5F  00A6               	movwf	LCD_array@date+1
  4504  0F60  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4505                           
  4506                           ;Display_Lcd.c: 82:     sprintf(buffer,"%02d",Pwm);
  4507  0F65  30FC               	movlw	low (STR_25| (0+32768))
  4508  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0F68  00AB               	movwf	sprintf@f
  4511  0F69  3085               	movlw	high (STR_25| (0+32768))
  4512  0F6A  00AC               	movwf	sprintf@f+1
  4513  0F6B  0864               	movf	_Pwm,w
  4514  0F6C  00BC               	movwf	??_Pant_Val_Act
  4515  0F6D  01BD               	clrf	??_Pant_Val_Act+1
  4516  0F6E  083C               	movf	??_Pant_Val_Act,w
  4517  0F6F  00AD               	movwf	?_sprintf+2
  4518  0F70  083D               	movf	??_Pant_Val_Act+1,w
  4519  0F71  00AE               	movwf	?_sprintf+3
  4520  0F72  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4521  0F73  120A  118A  2042  120A  158A  	fcall	_sprintf
  4522                           
  4523                           ;Display_Lcd.c: 83:     LCD_array(2,5,buffer);
  4524  0F78  3002               	movlw	2
  4525  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0F7B  00A1               	movwf	LCD_array@x
  4528  0F7C  3000               	movlw	0
  4529  0F7D  00A2               	movwf	LCD_array@x+1
  4530  0F7E  3005               	movlw	5
  4531  0F7F  00A3               	movwf	LCD_array@y
  4532  0F80  3000               	movlw	0
  4533  0F81  00A4               	movwf	LCD_array@y+1
  4534  0F82  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4535  0F83  00A5               	movwf	LCD_array@date
  4536  0F84  3000               	movlw	0
  4537  0F85  00A6               	movwf	LCD_array@date+1
  4538  0F86  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4539                           
  4540                           ;Display_Lcd.c: 84:     sprintf(buffer,"%02d",Min);
  4541  0F8B  30FC               	movlw	low (STR_25| (0+32768))
  4542  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0F8E  00AB               	movwf	sprintf@f
  4545  0F8F  3085               	movlw	high (STR_25| (0+32768))
  4546  0F90  00AC               	movwf	sprintf@f+1
  4547  0F91  0879               	movf	_Min,w
  4548  0F92  00BC               	movwf	??_Pant_Val_Act
  4549  0F93  01BD               	clrf	??_Pant_Val_Act+1
  4550  0F94  083C               	movf	??_Pant_Val_Act,w
  4551  0F95  00AD               	movwf	?_sprintf+2
  4552  0F96  083D               	movf	??_Pant_Val_Act+1,w
  4553  0F97  00AE               	movwf	?_sprintf+3
  4554  0F98  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4555  0F99  120A  118A  2042  120A  158A  	fcall	_sprintf
  4556                           
  4557                           ;Display_Lcd.c: 85:     LCD_array(3,8,buffer);
  4558  0F9E  3003               	movlw	3
  4559  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0FA1  00A1               	movwf	LCD_array@x
  4562  0FA2  3000               	movlw	0
  4563  0FA3  00A2               	movwf	LCD_array@x+1
  4564  0FA4  3008               	movlw	8
  4565  0FA5  00A3               	movwf	LCD_array@y
  4566  0FA6  3000               	movlw	0
  4567  0FA7  00A4               	movwf	LCD_array@y+1
  4568  0FA8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4569  0FA9  00A5               	movwf	LCD_array@date
  4570  0FAA  3000               	movlw	0
  4571  0FAB  00A6               	movwf	LCD_array@date+1
  4572  0FAC  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4573                           
  4574                           ;Display_Lcd.c: 86:     sprintf(buffer,"%02d",Seg);
  4575  0FB1  30FC               	movlw	low (STR_25| (0+32768))
  4576  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0FB4  00AB               	movwf	sprintf@f
  4579  0FB5  3085               	movlw	high (STR_25| (0+32768))
  4580  0FB6  00AC               	movwf	sprintf@f+1
  4581  0FB7  0878               	movf	_Seg,w
  4582  0FB8  00BC               	movwf	??_Pant_Val_Act
  4583  0FB9  01BD               	clrf	??_Pant_Val_Act+1
  4584  0FBA  083C               	movf	??_Pant_Val_Act,w
  4585  0FBB  00AD               	movwf	?_sprintf+2
  4586  0FBC  083D               	movf	??_Pant_Val_Act+1,w
  4587  0FBD  00AE               	movwf	?_sprintf+3
  4588  0FBE  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4589  0FBF  120A  118A  2042  120A  158A  	fcall	_sprintf
  4590                           
  4591                           ;Display_Lcd.c: 87:     LCD_array(3,11,buffer);
  4592  0FC4  3003               	movlw	3
  4593  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0FC7  00A1               	movwf	LCD_array@x
  4596  0FC8  3000               	movlw	0
  4597  0FC9  00A2               	movwf	LCD_array@x+1
  4598  0FCA  300B               	movlw	11
  4599  0FCB  00A3               	movwf	LCD_array@y
  4600  0FCC  3000               	movlw	0
  4601  0FCD  00A4               	movwf	LCD_array@y+1
  4602  0FCE  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4603  0FCF  00A5               	movwf	LCD_array@date
  4604  0FD0  3000               	movlw	0
  4605  0FD1  00A6               	movwf	LCD_array@date+1
  4606  0FD2  160A  118A  2728  120A  158A  	fcall	_LCD_array
  4607                           
  4608                           ;Display_Lcd.c: 88:     sprintf(buffer,"%02d",Temp);
  4609  0FD7  30FC               	movlw	low (STR_25| (0+32768))
  4610  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0FDA  00AB               	movwf	sprintf@f
  4613  0FDB  3085               	movlw	high (STR_25| (0+32768))
  4614  0FDC  00AC               	movwf	sprintf@f+1
  4615  0FDD  1683               	bsf	3,5	;RP0=1, select bank1
  4616  0FDE  1303               	bcf	3,6	;RP1=0, select bank1
  4617  0FDF  083B               	movf	_Temp^(0+128),w
  4618  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0FE2  00BC               	movwf	??_Pant_Val_Act
  4621  0FE3  01BD               	clrf	??_Pant_Val_Act+1
  4622  0FE4  083C               	movf	??_Pant_Val_Act,w
  4623  0FE5  00AD               	movwf	?_sprintf+2
  4624  0FE6  083D               	movf	??_Pant_Val_Act+1,w
  4625  0FE7  00AE               	movwf	?_sprintf+3
  4626  0FE8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4627  0FE9  120A  118A  2042  120A  158A  	fcall	_sprintf
  4628                           
  4629                           ;Display_Lcd.c: 89:     LCD_array(4,13,buffer);
  4630  0FEE  3004               	movlw	4
  4631  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4633  0FF1  00A1               	movwf	LCD_array@x
  4634  0FF2  3000               	movlw	0
  4635  0FF3  00A2               	movwf	LCD_array@x+1
  4636  0FF4  300D               	movlw	13
  4637  0FF5  00A3               	movwf	LCD_array@y
  4638  0FF6  3000               	movlw	0
  4639  0FF7  00A4               	movwf	LCD_array@y+1
  4640  0FF8  303E               	movlw	(low (Pant_Val_Act@buffer| 0))& (0+255)
  4641  0FF9  00A5               	movwf	LCD_array@date
  4642  0FFA  3000               	movlw	0
  4643  0FFB  00A6               	movwf	LCD_array@date+1
  4644  0FFC  160A  118A  2728   	fcall	_LCD_array
  4645  0FFF  0008               	return
  4646  1000                     __end_of_Pant_Val_Act:
  4647                           
  4648                           	psect	text19
  4649  146E                     __ptext19:	
  4650 ;; *************** function _Pant_Temporizador *****************
  4651 ;; Defined at:
  4652 ;;		line 94 in file "Display_Lcd.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  buffer         20   30[BANK0 ] unsigned char [20]
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4666 ;;      Params:         0       0       0       0       0
  4667 ;;      Locals:         0      20       0       0       0
  4668 ;;      Temps:          0       2       0       0       0
  4669 ;;      Totals:         0      22       0       0       0
  4670 ;;Total ram usage:       22 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    4
  4673 ;; This function calls:
  4674 ;;		_LCD_array
  4675 ;;		_sprintf
  4676 ;; This function is called by:
  4677 ;;		_MEF_Subest_Actualizacion
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _Pant_Temporizador
  4683  146E                     _Pant_Temporizador:
  4684                           
  4685                           ;Display_Lcd.c: 96:     char buffer[20];;Display_Lcd.c: 98:     sprintf(buffer,"%02d",Mi
      +                          n);
  4686                           
  4687                           ;incstack = 0
  4688                           ; Regs used in _Pant_Temporizador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4689  146E  30FC               	movlw	low (STR_25| (0+32768))
  4690  146F  1283               	bcf	3,5	;RP0=0, select bank0
  4691  1470  1303               	bcf	3,6	;RP1=0, select bank0
  4692  1471  00AB               	movwf	sprintf@f
  4693  1472  3085               	movlw	high (STR_25| (0+32768))
  4694  1473  00AC               	movwf	sprintf@f+1
  4695  1474  0879               	movf	_Min,w
  4696  1475  00BC               	movwf	??_Pant_Temporizador
  4697  1476  01BD               	clrf	??_Pant_Temporizador+1
  4698  1477  083C               	movf	??_Pant_Temporizador,w
  4699  1478  00AD               	movwf	?_sprintf+2
  4700  1479  083D               	movf	??_Pant_Temporizador+1,w
  4701  147A  00AE               	movwf	?_sprintf+3
  4702  147B  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4703  147C  120A  118A  2042  160A  118A  	fcall	_sprintf
  4704                           
  4705                           ;Display_Lcd.c: 99:     LCD_array(3,8,buffer);
  4706  1481  3003               	movlw	3
  4707  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4708  1483  1303               	bcf	3,6	;RP1=0, select bank0
  4709  1484  00A1               	movwf	LCD_array@x
  4710  1485  3000               	movlw	0
  4711  1486  00A2               	movwf	LCD_array@x+1
  4712  1487  3008               	movlw	8
  4713  1488  00A3               	movwf	LCD_array@y
  4714  1489  3000               	movlw	0
  4715  148A  00A4               	movwf	LCD_array@y+1
  4716  148B  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4717  148C  00A5               	movwf	LCD_array@date
  4718  148D  3000               	movlw	0
  4719  148E  00A6               	movwf	LCD_array@date+1
  4720  148F  160A  118A  2728  160A  118A  	fcall	_LCD_array
  4721                           
  4722                           ;Display_Lcd.c: 100:     sprintf(buffer,"%02d",Seg);
  4723  1494  30FC               	movlw	low (STR_25| (0+32768))
  4724  1495  1283               	bcf	3,5	;RP0=0, select bank0
  4725  1496  1303               	bcf	3,6	;RP1=0, select bank0
  4726  1497  00AB               	movwf	sprintf@f
  4727  1498  3085               	movlw	high (STR_25| (0+32768))
  4728  1499  00AC               	movwf	sprintf@f+1
  4729  149A  0878               	movf	_Seg,w
  4730  149B  00BC               	movwf	??_Pant_Temporizador
  4731  149C  01BD               	clrf	??_Pant_Temporizador+1
  4732  149D  083C               	movf	??_Pant_Temporizador,w
  4733  149E  00AD               	movwf	?_sprintf+2
  4734  149F  083D               	movf	??_Pant_Temporizador+1,w
  4735  14A0  00AE               	movwf	?_sprintf+3
  4736  14A1  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4737  14A2  120A  118A  2042  160A  118A  	fcall	_sprintf
  4738                           
  4739                           ;Display_Lcd.c: 101:     LCD_array(3,11,buffer);
  4740  14A7  3003               	movlw	3
  4741  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4742  14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4743  14AA  00A1               	movwf	LCD_array@x
  4744  14AB  3000               	movlw	0
  4745  14AC  00A2               	movwf	LCD_array@x+1
  4746  14AD  300B               	movlw	11
  4747  14AE  00A3               	movwf	LCD_array@y
  4748  14AF  3000               	movlw	0
  4749  14B0  00A4               	movwf	LCD_array@y+1
  4750  14B1  303E               	movlw	(low (Pant_Temporizador@buffer| 0))& (0+255)
  4751  14B2  00A5               	movwf	LCD_array@date
  4752  14B3  3000               	movlw	0
  4753  14B4  00A6               	movwf	LCD_array@date+1
  4754  14B5  160A  118A  2728   	fcall	_LCD_array
  4755  14B8  0008               	return
  4756  14B9                     __end_of_Pant_Temporizador:
  4757                           
  4758                           	psect	text20
  4759  0042                     __ptext20:	
  4760 ;; *************** function _sprintf *****************
  4761 ;; Defined at:
  4762 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  sp              1    wreg     PTR unsigned char 
  4765 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4766 ;;  f               2   11[BANK0 ] PTR const unsigned char 
  4767 ;;		 -> STR_30(5), STR_29(5), STR_28(5), STR_27(5), 
  4768 ;;		 -> STR_26(5), STR_25(5), STR_24(5), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  4771 ;;		 -> Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), 
  4772 ;;  tmpval          4    0        struct .
  4773 ;;  width           2   24[BANK0 ] int 
  4774 ;;  val             2   21[BANK0 ] unsigned int 
  4775 ;;  cp              2    0        PTR const unsigned char 
  4776 ;;  len             2    0        unsigned int 
  4777 ;;  c               1   26[BANK0 ] unsigned char 
  4778 ;;  flag            1   23[BANK0 ] unsigned char 
  4779 ;;  ap              1   20[BANK0 ] PTR void [1]
  4780 ;;		 -> ?_sprintf(2), 
  4781 ;;  prec            1   19[BANK0 ] char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2   11[BANK0 ] int 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4791 ;;      Params:         0       4       0       0       0
  4792 ;;      Locals:         0       9       0       0       0
  4793 ;;      Temps:          0       4       0       0       0
  4794 ;;      Totals:         0      17       0       0       0
  4795 ;;Total ram usage:       17 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    3
  4798 ;; This function calls:
  4799 ;;		___lwdiv
  4800 ;;		___lwmod
  4801 ;;		___wmul
  4802 ;;		_isdigit
  4803 ;; This function is called by:
  4804 ;;		_Pant_Val_Act
  4805 ;;		_Pant_Temporizador
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _sprintf
  4811  0042                     _sprintf:
  4812                           
  4813                           ;incstack = 0
  4814                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4815                           ;sprintf@sp stored from wreg
  4816  0042  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0043  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0044  00BB               	movwf	sprintf@sp
  4819                           
  4820                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  4821  0045  302D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4822  0046  00FF               	movwf	127
  4823  0047  087F               	movf	127,w
  4824  0048  00B4               	movwf	sprintf@ap
  4825  0049                     l4583:	
  4826                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4827                           
  4828                           
  4829                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4830  0049  082C               	movf	sprintf@f+1,w
  4831  004A  00B0               	movwf	??_sprintf+1
  4832  004B  082B               	movf	sprintf@f,w
  4833  004C  00AF               	movwf	??_sprintf
  4834  004D  0AAB               	incf	sprintf@f,f
  4835  004E  1903               	skipnz
  4836  004F  0AAC               	incf	sprintf@f+1,f
  4837  0050  0830               	movf	??_sprintf+1,w
  4838  0051  00FF               	movwf	127
  4839  0052  082F               	movf	??_sprintf,w
  4840  0053  0084               	movwf	4
  4841  0054  120A  118A  2500  120A  118A  	fcall	stringtab
  4842  0059  00FF               	movwf	127
  4843  005A  087F               	movf	127,w
  4844  005B  00BA               	movwf	sprintf@c
  4845  005C  083A               	movf	sprintf@c,w
  4846  005D  1903               	btfsc	3,2
  4847  005E  2A1C               	goto	l4585
  4848                           
  4849                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4850  005F  3025               	movlw	37
  4851  0060  063A               	xorwf	sprintf@c,w
  4852  0061  1903               	btfsc	3,2
  4853  0062  286F               	goto	l4481
  4854                           
  4855                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4856  0063  083A               	movf	sprintf@c,w
  4857  0064  00FF               	movwf	127
  4858  0065  083B               	movf	sprintf@sp,w
  4859  0066  0084               	movwf	4
  4860  0067  087F               	movf	127,w
  4861  0068  1383               	bcf	3,7	;select IRP bank0
  4862  0069  0080               	movwf	0
  4863  006A  3001               	movlw	1
  4864  006B  00FF               	movwf	127
  4865  006C  087F               	movf	127,w
  4866  006D  07BB               	addwf	sprintf@sp,f
  4867                           
  4868                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  4869  006E  2849               	goto	l4583
  4870  006F                     l4481:
  4871                           
  4872                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  4873  006F  01B8               	clrf	sprintf@width
  4874  0070  01B9               	clrf	sprintf@width+1
  4875                           
  4876                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4877  0071  01B7               	clrf	sprintf@flag
  4878  0072  287A               	goto	l4487
  4879  0073                     l751:	
  4880                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 596:    case '0':
  4881                           
  4882                           
  4883                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  4884  0073  1537               	bsf	sprintf@flag,2
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 598:     f++;
  4887  0074  3001               	movlw	1
  4888  0075  07AB               	addwf	sprintf@f,f
  4889  0076  1803               	skipnc
  4890  0077  0AAC               	incf	sprintf@f+1,f
  4891  0078  3000               	movlw	0
  4892  0079  07AC               	addwf	sprintf@f+1,f
  4893  007A                     l4487:	
  4894                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  4895                           
  4896  007A  082C               	movf	sprintf@f+1,w
  4897  007B  00FF               	movwf	127
  4898  007C  082B               	movf	sprintf@f,w
  4899  007D  0084               	movwf	4
  4900  007E  120A  118A  2500  120A  118A  	fcall	stringtab
  4901  0083  00AF               	movwf	??_sprintf
  4902  0084  01B0               	clrf	??_sprintf+1
  4903                           
  4904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4905                           ; Switch size 1, requested type "simple"
  4906                           ; Number of cases is 1, Range of values is 0 to 0
  4907                           ; switch strategies available:
  4908                           ; Name         Instructions Cycles
  4909                           ; simple_byte            4     3 (average)
  4910                           ; direct_byte           11     8 (fixed)
  4911                           ; jumptable            260     6 (fixed)
  4912                           ;	Chosen strategy is simple_byte
  4913  0085  0830               	movf	??_sprintf+1,w
  4914  0086  3A00               	xorlw	0	; case 0
  4915  0087  1903               	skipnz
  4916  0088  288A               	goto	l5191
  4917  0089  288F               	goto	l4489
  4918  008A                     l5191:
  4919                           
  4920                           ; Switch size 1, requested type "simple"
  4921                           ; Number of cases is 1, Range of values is 48 to 48
  4922                           ; switch strategies available:
  4923                           ; Name         Instructions Cycles
  4924                           ; simple_byte            4     3 (average)
  4925                           ; direct_byte           14    11 (fixed)
  4926                           ; jumptable            263     9 (fixed)
  4927                           ;	Chosen strategy is simple_byte
  4928  008A  082F               	movf	??_sprintf,w
  4929  008B  3A30               	xorlw	48	; case 48
  4930  008C  1903               	skipnz
  4931  008D  2873               	goto	l751
  4932  008E  288F               	goto	l4489
  4933  008F                     l4489:
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  4936  008F  082C               	movf	sprintf@f+1,w
  4937  0090  00FF               	movwf	127
  4938  0091  082B               	movf	sprintf@f,w
  4939  0092  0084               	movwf	4
  4940  0093  120A  118A  2500  120A  118A  	fcall	stringtab
  4941  0098  160A  118A  2114  120A  118A  	fcall	_isdigit
  4942  009D  1C03               	btfss	3,0
  4943  009E  28E6               	goto	l4503
  4944                           
  4945                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  4946  009F  1283               	bcf	3,5	;RP0=0, select bank0
  4947  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  4948  00A1  01B8               	clrf	sprintf@width
  4949  00A2  01B9               	clrf	sprintf@width+1
  4950  00A3                     l4493:
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  4953  00A3  300A               	movlw	10
  4954  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  4955  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  4956  00A6  00A7               	movwf	___wmul@multiplier
  4957  00A7  3000               	movlw	0
  4958  00A8  00A8               	movwf	___wmul@multiplier+1
  4959  00A9  0839               	movf	sprintf@width+1,w
  4960  00AA  00AA               	movwf	___wmul@multiplicand+1
  4961  00AB  0838               	movf	sprintf@width,w
  4962  00AC  00A9               	movwf	___wmul@multiplicand
  4963  00AD  160A  118A  21C3  120A  118A  	fcall	___wmul
  4964  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  4965  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  4966  00B4  0828               	movf	?___wmul+1,w
  4967  00B5  00B9               	movwf	sprintf@width+1
  4968  00B6  0827               	movf	?___wmul,w
  4969  00B7  00B8               	movwf	sprintf@width
  4970                           
  4971                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  4972  00B8  082C               	movf	sprintf@f+1,w
  4973  00B9  00FF               	movwf	127
  4974  00BA  082B               	movf	sprintf@f,w
  4975  00BB  0084               	movwf	4
  4976  00BC  120A  118A  2500  120A  118A  	fcall	stringtab
  4977  00C1  3ED0               	addlw	208
  4978  00C2  00AF               	movwf	??_sprintf
  4979  00C3  30FF               	movlw	255
  4980  00C4  1803               	skipnc
  4981  00C5  3000               	movlw	0
  4982  00C6  00B0               	movwf	??_sprintf+1
  4983  00C7  082F               	movf	??_sprintf,w
  4984  00C8  07B8               	addwf	sprintf@width,f
  4985  00C9  1803               	skipnc
  4986  00CA  0AB9               	incf	sprintf@width+1,f
  4987  00CB  0830               	movf	??_sprintf+1,w
  4988  00CC  07B9               	addwf	sprintf@width+1,f
  4989  00CD  3001               	movlw	1
  4990  00CE  07AB               	addwf	sprintf@f,f
  4991  00CF  1803               	skipnc
  4992  00D0  0AAC               	incf	sprintf@f+1,f
  4993  00D1  3000               	movlw	0
  4994  00D2  07AC               	addwf	sprintf@f+1,f
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  4997  00D3  082C               	movf	sprintf@f+1,w
  4998  00D4  00FF               	movwf	127
  4999  00D5  082B               	movf	sprintf@f,w
  5000  00D6  0084               	movwf	4
  5001  00D7  120A  118A  2500  120A  118A  	fcall	stringtab
  5002  00DC  160A  118A  2114  120A  118A  	fcall	_isdigit
  5003  00E1  1C03               	btfss	3,0
  5004  00E2  28E6               	goto	l4503
  5005  00E3  28A3               	goto	l4493
  5006  00E4                     l765:	
  5007                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  5008                           
  5009                           
  5010                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  5011  00E4  1737               	bsf	sprintf@flag,6
  5012                           
  5013                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 845:    break;
  5014  00E5  290E               	goto	l763
  5015  00E6                     l4503:
  5016  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5017  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  5018  00E8  082C               	movf	sprintf@f+1,w
  5019  00E9  00B0               	movwf	??_sprintf+1
  5020  00EA  082B               	movf	sprintf@f,w
  5021  00EB  00AF               	movwf	??_sprintf
  5022  00EC  0AAB               	incf	sprintf@f,f
  5023  00ED  1903               	skipnz
  5024  00EE  0AAC               	incf	sprintf@f+1,f
  5025  00EF  0830               	movf	??_sprintf+1,w
  5026  00F0  00FF               	movwf	127
  5027  00F1  082F               	movf	??_sprintf,w
  5028  00F2  0084               	movwf	4
  5029  00F3  120A  118A  2500  120A  118A  	fcall	stringtab
  5030  00F8  00BA               	movwf	sprintf@c
  5031  00F9  00B1               	movwf	??_sprintf+2
  5032  00FA  01B2               	clrf	??_sprintf+3
  5033                           
  5034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5035                           ; Switch size 1, requested type "simple"
  5036                           ; Number of cases is 1, Range of values is 0 to 0
  5037                           ; switch strategies available:
  5038                           ; Name         Instructions Cycles
  5039                           ; simple_byte            4     3 (average)
  5040                           ; direct_byte           11     8 (fixed)
  5041                           ; jumptable            260     6 (fixed)
  5042                           ;	Chosen strategy is simple_byte
  5043  00FB  0832               	movf	??_sprintf+3,w
  5044  00FC  3A00               	xorlw	0	; case 0
  5045  00FD  1903               	skipnz
  5046  00FE  2900               	goto	l5193
  5047  00FF  2849               	goto	l4583
  5048  0100                     l5193:
  5049                           
  5050                           ; Switch size 1, requested type "simple"
  5051                           ; Number of cases is 4, Range of values is 0 to 117
  5052                           ; switch strategies available:
  5053                           ; Name         Instructions Cycles
  5054                           ; simple_byte           13     7 (average)
  5055                           ; jumptable            260     6 (fixed)
  5056                           ;	Chosen strategy is simple_byte
  5057  0100  0831               	movf	??_sprintf+2,w
  5058  0101  3A00               	xorlw	0	; case 0
  5059  0102  1903               	skipnz
  5060  0103  2A1C               	goto	l4585
  5061  0104  3A64               	xorlw	100	; case 100
  5062  0105  1903               	skipnz
  5063  0106  290E               	goto	l763
  5064  0107  3A0D               	xorlw	13	; case 105
  5065  0108  1903               	skipnz
  5066  0109  290E               	goto	l763
  5067  010A  3A1C               	xorlw	28	; case 117
  5068  010B  1903               	skipnz
  5069  010C  28E4               	goto	l765
  5070  010D  2849               	goto	l4583
  5071  010E                     l763:
  5072                           
  5073                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  5074  010E  1B37               	btfsc	sprintf@flag,6
  5075  010F  2928               	goto	l4515
  5076                           
  5077                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5078  0110  0834               	movf	sprintf@ap,w
  5079  0111  0084               	movwf	4
  5080  0112  1383               	bcf	3,7	;select IRP bank0
  5081  0113  0800               	movf	0,w
  5082  0114  00B5               	movwf	sprintf@val
  5083  0115  0A84               	incf	4,f
  5084  0116  0800               	movf	0,w
  5085  0117  00B6               	movwf	sprintf@val+1
  5086  0118  3002               	movlw	2
  5087  0119  00FF               	movwf	127
  5088  011A  087F               	movf	127,w
  5089  011B  07B4               	addwf	sprintf@ap,f
  5090                           
  5091                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  5092  011C  1FB6               	btfss	sprintf@val+1,7
  5093  011D  2934               	goto	l4519
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  5096  011E  3003               	movlw	3
  5097  011F  00FF               	movwf	127
  5098  0120  087F               	movf	127,w
  5099  0121  04B7               	iorwf	sprintf@flag,f
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  5102  0122  09B5               	comf	sprintf@val,f
  5103  0123  09B6               	comf	sprintf@val+1,f
  5104  0124  0AB5               	incf	sprintf@val,f
  5105  0125  1903               	skipnz
  5106  0126  0AB6               	incf	sprintf@val+1,f
  5107  0127  2934               	goto	l4519
  5108  0128                     l4515:
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5111  0128  0834               	movf	sprintf@ap,w
  5112  0129  0084               	movwf	4
  5113  012A  1383               	bcf	3,7	;select IRP bank0
  5114  012B  0800               	movf	0,w
  5115  012C  00B5               	movwf	sprintf@val
  5116  012D  0A84               	incf	4,f
  5117  012E  0800               	movf	0,w
  5118  012F  00B6               	movwf	sprintf@val+1
  5119  0130  3002               	movlw	2
  5120  0131  00FF               	movwf	127
  5121  0132  087F               	movf	127,w
  5122  0133  07B4               	addwf	sprintf@ap,f
  5123  0134                     l4519:
  5124                           
  5125                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5126  0134  01BA               	clrf	sprintf@c
  5127  0135  0ABA               	incf	sprintf@c,f
  5128  0136                     l4525:
  5129                           
  5130                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  5131  0136  083A               	movf	sprintf@c,w
  5132  0137  00AF               	movwf	??_sprintf
  5133  0138  072F               	addwf	??_sprintf,w
  5134  0139  3E12               	addlw	low (_dpowers| (0+32768))
  5135  013A  0084               	movwf	4
  5136  013B  3085               	movlw	high (_dpowers| (0+32768))
  5137  013C  1803               	skipnc
  5138  013D  3E01               	addlw	1
  5139  013E  00FF               	movwf	127
  5140  013F  120A  118A  2500  120A  118A  	fcall	stringtab
  5141  0144  00B0               	movwf	??_sprintf+1
  5142  0145  120A  118A  2500  120A  118A  	fcall	stringtab
  5143  014A  00B1               	movwf	??_sprintf+2
  5144  014B  0831               	movf	??_sprintf+2,w
  5145  014C  0236               	subwf	sprintf@val+1,w
  5146  014D  1D03               	skipz
  5147  014E  2951               	goto	u4635
  5148  014F  0830               	movf	??_sprintf+1,w
  5149  0150  0235               	subwf	sprintf@val,w
  5150  0151                     u4635:
  5151  0151  1C03               	btfss	3,0
  5152  0152  295B               	goto	l4533
  5153  0153  3001               	movlw	1
  5154  0154  00FF               	movwf	127
  5155  0155  087F               	movf	127,w
  5156  0156  07BA               	addwf	sprintf@c,f
  5157  0157  3005               	movlw	5
  5158  0158  063A               	xorwf	sprintf@c,w
  5159  0159  1D03               	btfss	3,2
  5160  015A  2936               	goto	l4525
  5161  015B                     l4533:
  5162                           
  5163                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  5164  015B  0838               	movf	sprintf@width,w
  5165  015C  0439               	iorwf	sprintf@width+1,w
  5166  015D  1903               	btfsc	3,2
  5167  015E  2969               	goto	l772
  5168  015F  0837               	movf	sprintf@flag,w
  5169  0160  3903               	andlw	3
  5170  0161  1903               	btfsc	3,2
  5171  0162  2969               	goto	l772
  5172                           
  5173                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1372:    width--;
  5174  0163  30FF               	movlw	255
  5175  0164  07B8               	addwf	sprintf@width,f
  5176  0165  1803               	skipnc
  5177  0166  0AB9               	incf	sprintf@width+1,f
  5178  0167  30FF               	movlw	255
  5179  0168  07B9               	addwf	sprintf@width+1,f
  5180  0169                     l772:
  5181                           
  5182                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  5183  0169  0839               	movf	sprintf@width+1,w
  5184  016A  3A80               	xorlw	128
  5185  016B  3C80               	sublw	128
  5186  016C  1D03               	skipz
  5187  016D  2970               	goto	u4675
  5188  016E  0838               	movf	sprintf@width,w
  5189  016F  023A               	subwf	sprintf@c,w
  5190  0170                     u4675:
  5191  0170  1803               	skipnc
  5192  0171  297E               	goto	l4541
  5193                           
  5194                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  5195  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0173  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0174  083A               	movf	sprintf@c,w
  5198  0175  00AF               	movwf	??_sprintf
  5199  0176  01B0               	clrf	??_sprintf+1
  5200  0177  082F               	movf	??_sprintf,w
  5201  0178  02B8               	subwf	sprintf@width,f
  5202  0179  0830               	movf	??_sprintf+1,w
  5203  017A  1C03               	skipc
  5204  017B  03B9               	decf	sprintf@width+1,f
  5205  017C  02B9               	subwf	sprintf@width+1,f
  5206  017D  2982               	goto	l4543
  5207  017E                     l4541:
  5208                           
  5209                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  5210  017E  1283               	bcf	3,5	;RP0=0, select bank0
  5211  017F  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0180  01B8               	clrf	sprintf@width
  5213  0181  01B9               	clrf	sprintf@width+1
  5214  0182                     l4543:
  5215                           
  5216                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  5217  0182  1D37               	btfss	sprintf@flag,2
  5218  0183  29A9               	goto	l4559
  5219                           
  5220                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  5221  0184  0837               	movf	sprintf@flag,w
  5222  0185  3903               	andlw	3
  5223  0186  1903               	btfsc	3,2
  5224  0187  2993               	goto	l4551
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  5227  0188  302D               	movlw	45
  5228  0189  00FF               	movwf	127
  5229  018A  083B               	movf	sprintf@sp,w
  5230  018B  0084               	movwf	4
  5231  018C  087F               	movf	127,w
  5232  018D  1383               	bcf	3,7	;select IRP bank0
  5233  018E  0080               	movwf	0
  5234  018F  3001               	movlw	1
  5235  0190  00FF               	movwf	127
  5236  0191  087F               	movf	127,w
  5237  0192  07BB               	addwf	sprintf@sp,f
  5238  0193                     l4551:
  5239                           
  5240                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  5241  0193  0838               	movf	sprintf@width,w
  5242  0194  0439               	iorwf	sprintf@width+1,w
  5243  0195  1903               	btfsc	3,2
  5244  0196  29D1               	goto	l4573
  5245                           
  5246                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  5247  0197  3030               	movlw	48
  5248  0198  00FF               	movwf	127
  5249  0199  083B               	movf	sprintf@sp,w
  5250  019A  0084               	movwf	4
  5251  019B  087F               	movf	127,w
  5252  019C  1383               	bcf	3,7	;select IRP bank0
  5253  019D  0080               	movwf	0
  5254  019E  3001               	movlw	1
  5255  019F  00FF               	movwf	127
  5256  01A0  087F               	movf	127,w
  5257  01A1  07BB               	addwf	sprintf@sp,f
  5258  01A2  30FF               	movlw	255
  5259  01A3  07B8               	addwf	sprintf@width,f
  5260  01A4  1803               	skipnc
  5261  01A5  0AB9               	incf	sprintf@width+1,f
  5262  01A6  30FF               	movlw	255
  5263  01A7  07B9               	addwf	sprintf@width+1,f
  5264  01A8  2993               	goto	l4551
  5265  01A9                     l4559:
  5266                           
  5267                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1450:    if(width
  5268  01A9  0838               	movf	sprintf@width,w
  5269  01AA  0439               	iorwf	sprintf@width+1,w
  5270  01AB  1903               	btfsc	3,2
  5271  01AC  29C2               	goto	l4567
  5272  01AD                     l4561:
  5273                           
  5274                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  5275  01AD  3020               	movlw	32
  5276  01AE  00FF               	movwf	127
  5277  01AF  083B               	movf	sprintf@sp,w
  5278  01B0  0084               	movwf	4
  5279  01B1  087F               	movf	127,w
  5280  01B2  1383               	bcf	3,7	;select IRP bank0
  5281  01B3  0080               	movwf	0
  5282  01B4  3001               	movlw	1
  5283  01B5  00FF               	movwf	127
  5284  01B6  087F               	movf	127,w
  5285  01B7  07BB               	addwf	sprintf@sp,f
  5286  01B8  30FF               	movlw	255
  5287  01B9  07B8               	addwf	sprintf@width,f
  5288  01BA  1803               	skipnc
  5289  01BB  0AB9               	incf	sprintf@width+1,f
  5290  01BC  30FF               	movlw	255
  5291  01BD  07B9               	addwf	sprintf@width+1,f
  5292  01BE  0838               	movf	sprintf@width,w
  5293  01BF  0439               	iorwf	sprintf@width+1,w
  5294  01C0  1D03               	btfss	3,2
  5295  01C1  29AD               	goto	l4561
  5296  01C2                     l4567:
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  5299  01C2  0837               	movf	sprintf@flag,w
  5300  01C3  3903               	andlw	3
  5301  01C4  1903               	btfsc	3,2
  5302  01C5  29D1               	goto	l4573
  5303                           
  5304                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  5305  01C6  302D               	movlw	45
  5306  01C7  00FF               	movwf	127
  5307  01C8  083B               	movf	sprintf@sp,w
  5308  01C9  0084               	movwf	4
  5309  01CA  087F               	movf	127,w
  5310  01CB  1383               	bcf	3,7	;select IRP bank0
  5311  01CC  0080               	movwf	0
  5312  01CD  3001               	movlw	1
  5313  01CE  00FF               	movwf	127
  5314  01CF  087F               	movf	127,w
  5315  01D0  07BB               	addwf	sprintf@sp,f
  5316  01D1                     l4573:
  5317                           
  5318                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  5319  01D1  083A               	movf	sprintf@c,w
  5320  01D2  00FF               	movwf	127
  5321  01D3  087F               	movf	127,w
  5322  01D4  00B3               	movwf	sprintf@prec
  5323  01D5                     l4581:	
  5324                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  5325                           
  5326                           
  5327                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  5328  01D5  30FF               	movlw	255
  5329  01D6  00FF               	movwf	127
  5330  01D7  087F               	movf	127,w
  5331  01D8  07B3               	addwf	sprintf@prec,f
  5332  01D9  0A33               	incf	sprintf@prec,w
  5333  01DA  1903               	btfsc	3,2
  5334  01DB  2849               	goto	l4583
  5335                           
  5336                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  5337  01DC  300A               	movlw	10
  5338  01DD  00A7               	movwf	___lwmod@divisor
  5339  01DE  3000               	movlw	0
  5340  01DF  00A8               	movwf	___lwmod@divisor+1
  5341  01E0  0833               	movf	sprintf@prec,w
  5342  01E1  00AF               	movwf	??_sprintf
  5343  01E2  072F               	addwf	??_sprintf,w
  5344  01E3  3E12               	addlw	low (_dpowers| (0+32768))
  5345  01E4  0084               	movwf	4
  5346  01E5  3085               	movlw	high (_dpowers| (0+32768))
  5347  01E6  1803               	skipnc
  5348  01E7  3E01               	addlw	1
  5349  01E8  00FF               	movwf	127
  5350  01E9  120A  118A  2500  120A  118A  	fcall	stringtab
  5351  01EE  00A0               	movwf	___lwdiv@divisor
  5352  01EF  120A  118A  2500  120A  118A  	fcall	stringtab
  5353  01F4  00A1               	movwf	___lwdiv@divisor+1
  5354  01F5  0836               	movf	sprintf@val+1,w
  5355  01F6  00A3               	movwf	___lwdiv@dividend+1
  5356  01F7  0835               	movf	sprintf@val,w
  5357  01F8  00A2               	movwf	___lwdiv@dividend
  5358  01F9  160A  118A  2430  120A  118A  	fcall	___lwdiv
  5359  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  5360  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0200  0821               	movf	?___lwdiv+1,w
  5362  0201  00AA               	movwf	___lwmod@dividend+1
  5363  0202  0820               	movf	?___lwdiv,w
  5364  0203  00A9               	movwf	___lwmod@dividend
  5365  0204  120A  118A  24CA  120A  118A  	fcall	___lwmod
  5366  0209  1283               	bcf	3,5	;RP0=0, select bank0
  5367  020A  1303               	bcf	3,6	;RP1=0, select bank0
  5368  020B  0827               	movf	?___lwmod,w
  5369  020C  3E30               	addlw	48
  5370  020D  00FF               	movwf	127
  5371  020E  087F               	movf	127,w
  5372  020F  00BA               	movwf	sprintf@c
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  5375  0210  083A               	movf	sprintf@c,w
  5376  0211  00FF               	movwf	127
  5377  0212  083B               	movf	sprintf@sp,w
  5378  0213  0084               	movwf	4
  5379  0214  087F               	movf	127,w
  5380  0215  1383               	bcf	3,7	;select IRP bank0
  5381  0216  0080               	movwf	0
  5382  0217  3001               	movlw	1
  5383  0218  00FF               	movwf	127
  5384  0219  087F               	movf	127,w
  5385  021A  07BB               	addwf	sprintf@sp,f
  5386  021B  29D5               	goto	l4581
  5387  021C                     l4585:
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  5390  021C  083B               	movf	sprintf@sp,w
  5391  021D  0084               	movwf	4
  5392  021E  1383               	bcf	3,7	;select IRP bank0
  5393  021F  0180               	clrf	0
  5394  0220  0008               	return
  5395  0221                     __end_of_sprintf:
  5396                           
  5397                           	psect	text21
  5398  1114                     __ptext21:	
  5399 ;; *************** function _isdigit *****************
  5400 ;; Defined at:
  5401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\isdigit.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  c               1    wreg     unsigned char 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  c               1    5[COMMON] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;		None               void
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         0       0       0       0       0
  5416 ;;      Locals:         2       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0
  5418 ;;      Totals:         2       0       0       0       0
  5419 ;;Total ram usage:        2 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    2
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_sprintf
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function _isdigit
  5431  1114                     _isdigit:
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5435                           ;isdigit@c stored from wreg
  5436  1114  00F5               	movwf	isdigit@c
  5437  1115  01F4               	clrf	_isdigit$1337
  5438  1116  303A               	movlw	58
  5439  1117  0275               	subwf	isdigit@c,w
  5440  1118  1803               	skipnc
  5441  1119  2920               	goto	l2815
  5442  111A  3030               	movlw	48
  5443  111B  0275               	subwf	isdigit@c,w
  5444  111C  1C03               	skipc
  5445  111D  2920               	goto	l2815
  5446  111E  01F4               	clrf	_isdigit$1337
  5447  111F  0AF4               	incf	_isdigit$1337,f
  5448  1120                     l2815:
  5449  1120  0C74               	rrf	_isdigit$1337,w
  5450  1121  0008               	return
  5451  1122                     __end_of_isdigit:
  5452                           
  5453                           	psect	text22
  5454  04CA                     __ptext22:	
  5455 ;; *************** function ___lwmod *****************
  5456 ;; Defined at:
  5457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwmod.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  divisor         2    7[BANK0 ] unsigned int 
  5460 ;;  dividend        2    9[BANK0 ] unsigned int 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  counter         1    4[COMMON] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  2    7[BANK0 ] unsigned int 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, btemp+1
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       4       0       0       0
  5473 ;;      Locals:         1       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0
  5475 ;;      Totals:         1       4       0       0       0
  5476 ;;Total ram usage:        5 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_sprintf
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function ___lwmod
  5488  04CA                     ___lwmod:
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5492  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  5493  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  5494  04CC  0827               	movf	___lwmod@divisor,w
  5495  04CD  0428               	iorwf	___lwmod@divisor+1,w
  5496  04CE  1903               	btfsc	3,2
  5497  04CF  2CF9               	goto	l3029
  5498  04D0  01F4               	clrf	___lwmod@counter
  5499  04D1  0AF4               	incf	___lwmod@counter,f
  5500  04D2                     l3019:
  5501  04D2  1BA8               	btfsc	___lwmod@divisor+1,7
  5502  04D3  2CE0               	goto	l3021
  5503  04D4  3001               	movlw	1
  5504  04D5                     u2625:
  5505  04D5  1003               	clrc
  5506  04D6  0DA7               	rlf	___lwmod@divisor,f
  5507  04D7  0DA8               	rlf	___lwmod@divisor+1,f
  5508  04D8  3EFF               	addlw	-1
  5509  04D9  1D03               	skipz
  5510  04DA  2CD5               	goto	u2625
  5511  04DB  3001               	movlw	1
  5512  04DC  00FF               	movwf	127
  5513  04DD  087F               	movf	127,w
  5514  04DE  07F4               	addwf	___lwmod@counter,f
  5515  04DF  2CD2               	goto	l3019
  5516  04E0                     l3021:
  5517  04E0  0828               	movf	___lwmod@divisor+1,w
  5518  04E1  022A               	subwf	___lwmod@dividend+1,w
  5519  04E2  1D03               	skipz
  5520  04E3  2CE6               	goto	u2645
  5521  04E4  0827               	movf	___lwmod@divisor,w
  5522  04E5  0229               	subwf	___lwmod@dividend,w
  5523  04E6                     u2645:
  5524  04E6  1C03               	skipc
  5525  04E7  2CEE               	goto	l3025
  5526  04E8  0827               	movf	___lwmod@divisor,w
  5527  04E9  02A9               	subwf	___lwmod@dividend,f
  5528  04EA  0828               	movf	___lwmod@divisor+1,w
  5529  04EB  1C03               	skipc
  5530  04EC  03AA               	decf	___lwmod@dividend+1,f
  5531  04ED  02AA               	subwf	___lwmod@dividend+1,f
  5532  04EE                     l3025:
  5533  04EE  3001               	movlw	1
  5534  04EF                     u2655:
  5535  04EF  1003               	clrc
  5536  04F0  0CA8               	rrf	___lwmod@divisor+1,f
  5537  04F1  0CA7               	rrf	___lwmod@divisor,f
  5538  04F2  3EFF               	addlw	-1
  5539  04F3  1D03               	skipz
  5540  04F4  2CEF               	goto	u2655
  5541  04F5  3001               	movlw	1
  5542  04F6  02F4               	subwf	___lwmod@counter,f
  5543  04F7  1D03               	btfss	3,2
  5544  04F8  2CE0               	goto	l3021
  5545  04F9                     l3029:
  5546  04F9  082A               	movf	___lwmod@dividend+1,w
  5547  04FA  00A8               	movwf	?___lwmod+1
  5548  04FB  0829               	movf	___lwmod@dividend,w
  5549  04FC  00A7               	movwf	?___lwmod
  5550  04FD  0008               	return
  5551  04FE                     __end_of___lwmod:
  5552                           
  5553                           	psect	text23
  5554  13B7                     __ptext23:	
  5555 ;; *************** function _Pant_Pulverizacion *****************
  5556 ;; Defined at:
  5557 ;;		line 114 in file "Display_Lcd.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5571 ;;      Params:         0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0
  5573 ;;      Temps:          0       3       0       0       0
  5574 ;;      Totals:         0       3       0       0       0
  5575 ;;Total ram usage:        3 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    4
  5578 ;; This function calls:
  5579 ;;		_LCD_array
  5580 ;;		_LCD_command
  5581 ;; This function is called by:
  5582 ;;		_MEF_Subest_Actualizacion
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _Pant_Pulverizacion
  5588  13B7                     _Pant_Pulverizacion:
  5589                           
  5590                           ;Display_Lcd.c: 116:     LCD_command(0x01);
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _Pant_Pulverizacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5594  13B7  3001               	movlw	1
  5595  13B8  120A  158A  2680  160A  118A  	fcall	_LCD_command
  5596                           
  5597                           ;Display_Lcd.c: 117:     LCD_array(2,1,"    Modo Prueba:");
  5598  13BD  3002               	movlw	2
  5599  13BE  1283               	bcf	3,5	;RP0=0, select bank0
  5600  13BF  1303               	bcf	3,6	;RP1=0, select bank0
  5601  13C0  00A1               	movwf	LCD_array@x
  5602  13C1  3000               	movlw	0
  5603  13C2  00A2               	movwf	LCD_array@x+1
  5604  13C3  3001               	movlw	1
  5605  13C4  00A3               	movwf	LCD_array@y
  5606  13C5  3000               	movlw	0
  5607  13C6  00A4               	movwf	LCD_array@y+1
  5608  13C7  30A8               	movlw	low (STR_32| (0+32768))
  5609  13C8  00A5               	movwf	LCD_array@date
  5610  13C9  3085               	movlw	high (STR_32| (0+32768))
  5611  13CA  00A6               	movwf	LCD_array@date+1
  5612  13CB  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5613                           
  5614                           ;Display_Lcd.c: 118:     LCD_array(3,1,"    PULVERIZACION");
  5615  13D0  3003               	movlw	3
  5616  13D1  1283               	bcf	3,5	;RP0=0, select bank0
  5617  13D2  1303               	bcf	3,6	;RP1=0, select bank0
  5618  13D3  00A1               	movwf	LCD_array@x
  5619  13D4  3000               	movlw	0
  5620  13D5  00A2               	movwf	LCD_array@x+1
  5621  13D6  3001               	movlw	1
  5622  13D7  00A3               	movwf	LCD_array@y
  5623  13D8  3000               	movlw	0
  5624  13D9  00A4               	movwf	LCD_array@y+1
  5625  13DA  3084               	movlw	low (STR_33| (0+32768))
  5626  13DB  00A5               	movwf	LCD_array@date
  5627  13DC  3085               	movlw	high (STR_33| (0+32768))
  5628  13DD  00A6               	movwf	LCD_array@date+1
  5629  13DE  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5630                           
  5631                           ;Display_Lcd.c: 119:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  5632  13E3  3027               	movlw	39
  5633  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  5634  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  5635  13E6  00AB               	movwf	??_Pant_Pulverizacion+2
  5636  13E7  300D               	movlw	13
  5637  13E8  00AA               	movwf	??_Pant_Pulverizacion+1
  5638  13E9  3025               	movlw	37
  5639  13EA  00A9               	movwf	??_Pant_Pulverizacion
  5640  13EB                     u5337:
  5641  13EB  0BA9               	decfsz	??_Pant_Pulverizacion,f
  5642  13EC  2BEB               	goto	u5337
  5643  13ED  0BAA               	decfsz	??_Pant_Pulverizacion+1,f
  5644  13EE  2BEB               	goto	u5337
  5645  13EF  0BAB               	decfsz	??_Pant_Pulverizacion+2,f
  5646  13F0  2BEB               	goto	u5337
  5647  13F1  2BF2               	nop2
  5648  13F2  0008               	return
  5649  13F3                     __end_of_Pant_Pulverizacion:
  5650                           
  5651                           	psect	text24
  5652  0AA3                     __ptext24:	
  5653 ;; *************** function _Pant_Modos *****************
  5654 ;; Defined at:
  5655 ;;		line 64 in file "Display_Lcd.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5669 ;;      Params:         0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    4
  5676 ;; This function calls:
  5677 ;;		_LCD_array
  5678 ;;		_LCD_command
  5679 ;;		_LCD_date
  5680 ;;		_LCD_xy
  5681 ;; This function is called by:
  5682 ;;		_MEF_Subest_Actualizacion
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function _Pant_Modos
  5688  0AA3                     _Pant_Modos:
  5689                           
  5690                           ;Display_Lcd.c: 66:     LCD_command(0x01);
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in _Pant_Modos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5694  0AA3  3001               	movlw	1
  5695  0AA4  120A  158A  2680  120A  158A  	fcall	_LCD_command
  5696                           
  5697                           ;Display_Lcd.c: 67:     LCD_array(1,1,"RPM:");
  5698  0AA9  3001               	movlw	1
  5699  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  5700  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  5701  0AAC  00A1               	movwf	LCD_array@x
  5702  0AAD  3000               	movlw	0
  5703  0AAE  00A2               	movwf	LCD_array@x+1
  5704  0AAF  3001               	movlw	1
  5705  0AB0  00A3               	movwf	LCD_array@y
  5706  0AB1  3000               	movlw	0
  5707  0AB2  00A4               	movwf	LCD_array@y+1
  5708  0AB3  30F2               	movlw	low (STR_18| (0+32768))
  5709  0AB4  00A5               	movwf	LCD_array@date
  5710  0AB5  3085               	movlw	high (STR_18| (0+32768))
  5711  0AB6  00A6               	movwf	LCD_array@date+1
  5712  0AB7  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5713                           
  5714                           ;Display_Lcd.c: 68:     LCD_array(2,1,"PWM:");
  5715  0ABC  3002               	movlw	2
  5716  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  5717  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  5718  0ABF  00A1               	movwf	LCD_array@x
  5719  0AC0  3000               	movlw	0
  5720  0AC1  00A2               	movwf	LCD_array@x+1
  5721  0AC2  3001               	movlw	1
  5722  0AC3  00A3               	movwf	LCD_array@y
  5723  0AC4  3000               	movlw	0
  5724  0AC5  00A4               	movwf	LCD_array@y+1
  5725  0AC6  30F7               	movlw	low (STR_19| (0+32768))
  5726  0AC7  00A5               	movwf	LCD_array@date
  5727  0AC8  3085               	movlw	high (STR_19| (0+32768))
  5728  0AC9  00A6               	movwf	LCD_array@date+1
  5729  0ACA  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5730                           
  5731                           ;Display_Lcd.c: 69:     LCD_array(3,1,"TIEMPO:"),LCD_array(3,10,":");
  5732  0ACF  3003               	movlw	3
  5733  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  5735  0AD2  00A1               	movwf	LCD_array@x
  5736  0AD3  3000               	movlw	0
  5737  0AD4  00A2               	movwf	LCD_array@x+1
  5738  0AD5  3001               	movlw	1
  5739  0AD6  00A3               	movwf	LCD_array@y
  5740  0AD7  3000               	movlw	0
  5741  0AD8  00A4               	movwf	LCD_array@y+1
  5742  0AD9  30EA               	movlw	low (STR_20| (0+32768))
  5743  0ADA  00A5               	movwf	LCD_array@date
  5744  0ADB  3085               	movlw	high (STR_20| (0+32768))
  5745  0ADC  00A6               	movwf	LCD_array@date+1
  5746  0ADD  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5747  0AE2  3003               	movlw	3
  5748  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  5750  0AE5  00A1               	movwf	LCD_array@x
  5751  0AE6  3000               	movlw	0
  5752  0AE7  00A2               	movwf	LCD_array@x+1
  5753  0AE8  300A               	movlw	10
  5754  0AE9  00A3               	movwf	LCD_array@y
  5755  0AEA  3000               	movlw	0
  5756  0AEB  00A4               	movwf	LCD_array@y+1
  5757  0AEC  30D5               	movlw	low ((STR_22+11)| (0+32768))
  5758  0AED  00A5               	movwf	LCD_array@date
  5759  0AEE  3085               	movlw	high ((STR_22+11)| (0+32768))
  5760  0AEF  00A6               	movwf	LCD_array@date+1
  5761  0AF0  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5762                           
  5763                           ;Display_Lcd.c: 70:     LCD_array(4,1,"TEMPERATURA:"),LCD_xy(4,16),LCD_date(0x01);
  5764  0AF5  3004               	movlw	4
  5765  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0AF8  00A1               	movwf	LCD_array@x
  5768  0AF9  3000               	movlw	0
  5769  0AFA  00A2               	movwf	LCD_array@x+1
  5770  0AFB  3001               	movlw	1
  5771  0AFC  00A3               	movwf	LCD_array@y
  5772  0AFD  3000               	movlw	0
  5773  0AFE  00A4               	movwf	LCD_array@y+1
  5774  0AFF  30CA               	movlw	low (STR_22| (0+32768))
  5775  0B00  00A5               	movwf	LCD_array@date
  5776  0B01  3085               	movlw	high (STR_22| (0+32768))
  5777  0B02  00A6               	movwf	LCD_array@date+1
  5778  0B03  160A  118A  2728  120A  158A  	fcall	_LCD_array
  5779  0B08  3004               	movlw	4
  5780  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  5781  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  5782  0B0B  00A1               	movwf	LCD_xy@x
  5783  0B0C  3000               	movlw	0
  5784  0B0D  00A2               	movwf	LCD_xy@x+1
  5785  0B0E  3010               	movlw	16
  5786  0B0F  00A3               	movwf	LCD_xy@y
  5787  0B10  3000               	movlw	0
  5788  0B11  00A4               	movwf	LCD_xy@y+1
  5789  0B12  160A  118A  230C  120A  158A  	fcall	_LCD_xy
  5790  0B17  3001               	movlw	1
  5791  0B18  120A  158A  2510  120A  158A  	fcall	_LCD_date
  5792                           
  5793                           ;Display_Lcd.c: 71:     LCD_array(4,17,"C");
  5794  0B1D  3004               	movlw	4
  5795  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  5796  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  5797  0B20  00A1               	movwf	LCD_array@x
  5798  0B21  3000               	movlw	0
  5799  0B22  00A2               	movwf	LCD_array@x+1
  5800  0B23  3011               	movlw	17
  5801  0B24  00A3               	movwf	LCD_array@y
  5802  0B25  3000               	movlw	0
  5803  0B26  00A4               	movwf	LCD_array@y+1
  5804  0B27  3008               	movlw	low (STR_23| (0+32768))
  5805  0B28  00A5               	movwf	LCD_array@date
  5806  0B29  3086               	movlw	high (STR_23| (0+32768))
  5807  0B2A  00A6               	movwf	LCD_array@date+1
  5808  0B2B  160A  118A  2728   	fcall	_LCD_array
  5809  0B2E  0008               	return
  5810  0B2F                     __end_of_Pant_Modos:
  5811                           
  5812                           	psect	text25
  5813  130C                     __ptext25:	
  5814 ;; *************** function _LCD_xy *****************
  5815 ;; Defined at:
  5816 ;;		line 163 in file "Lcd.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  x               2    1[BANK0 ] int 
  5819 ;;  y               2    3[BANK0 ] int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       4       0       0       0
  5832 ;;      Locals:         0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         0       4       0       0       0
  5835 ;;Total ram usage:        4 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    3
  5838 ;; This function calls:
  5839 ;;		_LCD_command
  5840 ;; This function is called by:
  5841 ;;		_Pant_Modos
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _LCD_xy
  5847  130C                     _LCD_xy:
  5848                           
  5849                           ;Lcd.c: 163: void LCD_xy(int x,int y);Lcd.c: 164: {;Lcd.c: 165:     switch(x)
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _LCD_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5853  130C  2B29               	goto	l4467
  5854  130D                     l4457:
  5855  130D  0823               	movf	LCD_xy@y,w
  5856  130E  3EFF               	addlw	255
  5857  130F  3880               	iorlw	128
  5858  1310  120A  158A  2680   	fcall	_LCD_command
  5859                           
  5860                           ;Lcd.c: 168:         break;
  5861  1313  0008               	return
  5862  1314                     l4459:
  5863  1314  0823               	movf	LCD_xy@y,w
  5864  1315  3E3F               	addlw	63
  5865  1316  3880               	iorlw	128
  5866  1317  120A  158A  2680   	fcall	_LCD_command
  5867                           
  5868                           ;Lcd.c: 170:         break;
  5869  131A  0008               	return
  5870  131B                     l4461:
  5871  131B  0823               	movf	LCD_xy@y,w
  5872  131C  3E13               	addlw	19
  5873  131D  3880               	iorlw	128
  5874  131E  120A  158A  2680   	fcall	_LCD_command
  5875                           
  5876                           ;Lcd.c: 172:         break;
  5877  1321  0008               	return
  5878  1322                     l4463:
  5879  1322  0823               	movf	LCD_xy@y,w
  5880  1323  3E53               	addlw	83
  5881  1324  3880               	iorlw	128
  5882  1325  120A  158A  2680   	fcall	_LCD_command
  5883                           
  5884                           ;Lcd.c: 174:         break;
  5885  1328  0008               	return
  5886  1329                     l4467:
  5887                           
  5888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5889                           ; Switch size 1, requested type "simple"
  5890                           ; Number of cases is 1, Range of values is 0 to 0
  5891                           ; switch strategies available:
  5892                           ; Name         Instructions Cycles
  5893                           ; simple_byte            4     3 (average)
  5894                           ; direct_byte           11     8 (fixed)
  5895                           ; jumptable            260     6 (fixed)
  5896                           ;	Chosen strategy is simple_byte
  5897  1329  1283               	bcf	3,5	;RP0=0, select bank0
  5898  132A  1303               	bcf	3,6	;RP1=0, select bank0
  5899  132B  0822               	movf	LCD_xy@x+1,w
  5900  132C  3A00               	xorlw	0	; case 0
  5901  132D  1903               	skipnz
  5902  132E  2B30               	goto	l5195
  5903  132F  2B3E               	goto	l529
  5904  1330                     l5195:
  5905                           
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 4, Range of values is 1 to 4
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte           13     7 (average)
  5911                           ; direct_byte           23    11 (fixed)
  5912                           ; jumptable            263     9 (fixed)
  5913                           ;	Chosen strategy is simple_byte
  5914  1330  0821               	movf	LCD_xy@x,w
  5915  1331  3A01               	xorlw	1	; case 1
  5916  1332  1903               	skipnz
  5917  1333  2B0D               	goto	l4457
  5918  1334  3A03               	xorlw	3	; case 2
  5919  1335  1903               	skipnz
  5920  1336  2B14               	goto	l4459
  5921  1337  3A01               	xorlw	1	; case 3
  5922  1338  1903               	skipnz
  5923  1339  2B1B               	goto	l4461
  5924  133A  3A07               	xorlw	7	; case 4
  5925  133B  1903               	skipnz
  5926  133C  2B22               	goto	l4463
  5927  133D  2B3E               	goto	l529
  5928  133E                     l529:
  5929  133E  0008               	return
  5930  133F                     __end_of_LCD_xy:
  5931                           
  5932                           	psect	text26
  5933  137B                     __ptext26:	
  5934 ;; *************** function _Pant_Fuga *****************
  5935 ;; Defined at:
  5936 ;;		line 124 in file "Display_Lcd.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5950 ;;      Params:         0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0
  5952 ;;      Temps:          0       3       0       0       0
  5953 ;;      Totals:         0       3       0       0       0
  5954 ;;Total ram usage:        3 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    4
  5957 ;; This function calls:
  5958 ;;		_LCD_array
  5959 ;;		_LCD_command
  5960 ;; This function is called by:
  5961 ;;		_MEF_Subest_Actualizacion
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           
  5966                           ;psect for function _Pant_Fuga
  5967  137B                     _Pant_Fuga:
  5968                           
  5969                           ;Display_Lcd.c: 126:     LCD_command(0x01);
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _Pant_Fuga: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5973  137B  3001               	movlw	1
  5974  137C  120A  158A  2680  160A  118A  	fcall	_LCD_command
  5975                           
  5976                           ;Display_Lcd.c: 127:     LCD_array(2,1,"    Modo Prueba:");
  5977  1381  3002               	movlw	2
  5978  1382  1283               	bcf	3,5	;RP0=0, select bank0
  5979  1383  1303               	bcf	3,6	;RP1=0, select bank0
  5980  1384  00A1               	movwf	LCD_array@x
  5981  1385  3000               	movlw	0
  5982  1386  00A2               	movwf	LCD_array@x+1
  5983  1387  3001               	movlw	1
  5984  1388  00A3               	movwf	LCD_array@y
  5985  1389  3000               	movlw	0
  5986  138A  00A4               	movwf	LCD_array@y+1
  5987  138B  30A8               	movlw	low (STR_32| (0+32768))
  5988  138C  00A5               	movwf	LCD_array@date
  5989  138D  3085               	movlw	high (STR_32| (0+32768))
  5990  138E  00A6               	movwf	LCD_array@date+1
  5991  138F  160A  118A  2728  160A  118A  	fcall	_LCD_array
  5992                           
  5993                           ;Display_Lcd.c: 128:     LCD_array(3,1,"    FUGA");
  5994  1394  3003               	movlw	3
  5995  1395  1283               	bcf	3,5	;RP0=0, select bank0
  5996  1396  1303               	bcf	3,6	;RP1=0, select bank0
  5997  1397  00A1               	movwf	LCD_array@x
  5998  1398  3000               	movlw	0
  5999  1399  00A2               	movwf	LCD_array@x+1
  6000  139A  3001               	movlw	1
  6001  139B  00A3               	movwf	LCD_array@y
  6002  139C  3000               	movlw	0
  6003  139D  00A4               	movwf	LCD_array@y+1
  6004  139E  30E1               	movlw	low (STR_35| (0+32768))
  6005  139F  00A5               	movwf	LCD_array@date
  6006  13A0  3085               	movlw	high (STR_35| (0+32768))
  6007  13A1  00A6               	movwf	LCD_array@date+1
  6008  13A2  160A  118A  2728  160A  118A  	fcall	_LCD_array
  6009                           
  6010                           ;Display_Lcd.c: 129:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  6011  13A7  3027               	movlw	39
  6012  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  6013  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  6014  13AA  00AB               	movwf	??_Pant_Fuga+2
  6015  13AB  300D               	movlw	13
  6016  13AC  00AA               	movwf	??_Pant_Fuga+1
  6017  13AD  3025               	movlw	37
  6018  13AE  00A9               	movwf	??_Pant_Fuga
  6019  13AF                     u5347:
  6020  13AF  0BA9               	decfsz	??_Pant_Fuga,f
  6021  13B0  2BAF               	goto	u5347
  6022  13B1  0BAA               	decfsz	??_Pant_Fuga+1,f
  6023  13B2  2BAF               	goto	u5347
  6024  13B3  0BAB               	decfsz	??_Pant_Fuga+2,f
  6025  13B4  2BAF               	goto	u5347
  6026  13B5  2BB6               	nop2
  6027  13B6  0008               	return
  6028  13B7                     __end_of_Pant_Fuga:
  6029                           
  6030                           	psect	text27
  6031  133F                     __ptext27:	
  6032 ;; *************** function _Pant_Flujo *****************
  6033 ;; Defined at:
  6034 ;;		line 134 in file "Display_Lcd.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6048 ;;      Params:         0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0
  6050 ;;      Temps:          0       3       0       0       0
  6051 ;;      Totals:         0       3       0       0       0
  6052 ;;Total ram usage:        3 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    4
  6055 ;; This function calls:
  6056 ;;		_LCD_array
  6057 ;;		_LCD_command
  6058 ;; This function is called by:
  6059 ;;		_MEF_Subest_Actualizacion
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _Pant_Flujo
  6065  133F                     _Pant_Flujo:
  6066                           
  6067                           ;Display_Lcd.c: 136:     LCD_command(0x01);
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in _Pant_Flujo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6071  133F  3001               	movlw	1
  6072  1340  120A  158A  2680  160A  118A  	fcall	_LCD_command
  6073                           
  6074                           ;Display_Lcd.c: 138:     LCD_array(2,1,"    Modo Prueba:");
  6075  1345  3002               	movlw	2
  6076  1346  1283               	bcf	3,5	;RP0=0, select bank0
  6077  1347  1303               	bcf	3,6	;RP1=0, select bank0
  6078  1348  00A1               	movwf	LCD_array@x
  6079  1349  3000               	movlw	0
  6080  134A  00A2               	movwf	LCD_array@x+1
  6081  134B  3001               	movlw	1
  6082  134C  00A3               	movwf	LCD_array@y
  6083  134D  3000               	movlw	0
  6084  134E  00A4               	movwf	LCD_array@y+1
  6085  134F  30A8               	movlw	low (STR_32| (0+32768))
  6086  1350  00A5               	movwf	LCD_array@date
  6087  1351  3085               	movlw	high (STR_32| (0+32768))
  6088  1352  00A6               	movwf	LCD_array@date+1
  6089  1353  160A  118A  2728  160A  118A  	fcall	_LCD_array
  6090                           
  6091                           ;Display_Lcd.c: 139:     LCD_array(3,1,"    FLUJO");
  6092  1358  3003               	movlw	3
  6093  1359  1283               	bcf	3,5	;RP0=0, select bank0
  6094  135A  1303               	bcf	3,6	;RP1=0, select bank0
  6095  135B  00A1               	movwf	LCD_array@x
  6096  135C  3000               	movlw	0
  6097  135D  00A2               	movwf	LCD_array@x+1
  6098  135E  3001               	movlw	1
  6099  135F  00A3               	movwf	LCD_array@y
  6100  1360  3000               	movlw	0
  6101  1361  00A4               	movwf	LCD_array@y+1
  6102  1362  30D7               	movlw	low (STR_37| (0+32768))
  6103  1363  00A5               	movwf	LCD_array@date
  6104  1364  3085               	movlw	high (STR_37| (0+32768))
  6105  1365  00A6               	movwf	LCD_array@date+1
  6106  1366  160A  118A  2728  160A  118A  	fcall	_LCD_array
  6107                           
  6108                           ;Display_Lcd.c: 140:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  6109  136B  3027               	movlw	39
  6110  136C  1283               	bcf	3,5	;RP0=0, select bank0
  6111  136D  1303               	bcf	3,6	;RP1=0, select bank0
  6112  136E  00AB               	movwf	??_Pant_Flujo+2
  6113  136F  300D               	movlw	13
  6114  1370  00AA               	movwf	??_Pant_Flujo+1
  6115  1371  3025               	movlw	37
  6116  1372  00A9               	movwf	??_Pant_Flujo
  6117  1373                     u5357:
  6118  1373  0BA9               	decfsz	??_Pant_Flujo,f
  6119  1374  2B73               	goto	u5357
  6120  1375  0BAA               	decfsz	??_Pant_Flujo+1,f
  6121  1376  2B73               	goto	u5357
  6122  1377  0BAB               	decfsz	??_Pant_Flujo+2,f
  6123  1378  2B73               	goto	u5357
  6124  1379  2B7A               	nop2
  6125  137A  0008               	return
  6126  137B                     __end_of_Pant_Flujo:
  6127                           
  6128                           	psect	text28
  6129  0800                     __ptext28:	
  6130 ;; *************** function _Lec_Adc_Modo_Pulv *****************
  6131 ;; Defined at:
  6132 ;;		line 4 in file "Modo_Pulverizacion.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6146 ;;      Params:         0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0
  6149 ;;      Totals:         0       0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    5
  6153 ;; This function calls:
  6154 ;;		_Adc_Min_Read
  6155 ;;		_Adc_Pwm_Read
  6156 ;;		_Adc_Rpm_Read
  6157 ;;		_Adc_Temp_Read
  6158 ;; This function is called by:
  6159 ;;		_MEF_Subest_Actualizacion
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _Lec_Adc_Modo_Pulv
  6165  0800                     _Lec_Adc_Modo_Pulv:
  6166                           
  6167                           ;Modo_Pulverizacion.c: 7:     Adc_Rpm_Read();
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _Lec_Adc_Modo_Pulv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6171  0800  120A  118A  2221  120A  158A  	fcall	_Adc_Rpm_Read
  6172                           
  6173                           ;Modo_Pulverizacion.c: 10:     Adc_Pwm_Read();
  6174  0805  120A  158A  218F  120A  158A  	fcall	_Adc_Pwm_Read
  6175                           
  6176                           ;Modo_Pulverizacion.c: 13:     Adc_Min_Read();
  6177  080A  120A  118A  260A  120A  158A  	fcall	_Adc_Min_Read
  6178                           
  6179                           ;Modo_Pulverizacion.c: 16:     Adc_Temp_Read();
  6180  080F  160A  118A  26C4   	fcall	_Adc_Temp_Read
  6181  0812  0008               	return
  6182  0813                     __end_of_Lec_Adc_Modo_Pulv:
  6183                           
  6184                           	psect	text29
  6185  0221                     __ptext29:	
  6186 ;; *************** function _Adc_Rpm_Read *****************
  6187 ;; Defined at:
  6188 ;;		line 9 in file "Adc_Read.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  valor           2    9[BANK1 ] unsigned int 
  6193 ;;  dec_m           2    7[BANK1 ] unsigned int 
  6194 ;;  uni_m           2    5[BANK1 ] unsigned int 
  6195 ;;  cent            2    3[BANK1 ] unsigned int 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         0       0       0       0       0
  6206 ;;      Locals:         0       0      11       0       0
  6207 ;;      Temps:          0       4       0       0       0
  6208 ;;      Totals:         0       4      11       0       0
  6209 ;;Total ram usage:       15 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    4
  6212 ;; This function calls:
  6213 ;;		_Adc
  6214 ;;		___awtoft
  6215 ;;		___ftdiv
  6216 ;;		___ftmul
  6217 ;;		___fttol
  6218 ;;		___lwdiv
  6219 ;;		___wmul
  6220 ;; This function is called by:
  6221 ;;		_Lec_Adc_Modo_Pulv
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _Adc_Rpm_Read
  6227  0221                     _Adc_Rpm_Read:
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _Adc_Rpm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6231  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6232  0222  1303               	bcf	3,6	;RP1=0, select bank1
  6233  0223  01C4               	clrf	Adc_Rpm_Read@dec_m^(0+128)
  6234  0224  01C5               	clrf	(Adc_Rpm_Read@dec_m+1)^(0+128)
  6235  0225  01C2               	clrf	Adc_Rpm_Read@uni_m^(0+128)
  6236  0226  01C3               	clrf	(Adc_Rpm_Read@uni_m+1)^(0+128)
  6237  0227  3000               	movlw	0
  6238  0228  160A  118A  2504  120A  118A  	fcall	_Adc
  6239  022D  0875               	movf	?_Adc+1,w
  6240  022E  1283               	bcf	3,5	;RP0=0, select bank0
  6241  022F  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0230  00A9               	movwf	___awtoft@c+1
  6243  0231  0874               	movf	?_Adc,w
  6244  0232  00A8               	movwf	___awtoft@c
  6245  0233  120A  118A  27D8  120A  118A  	fcall	___awtoft
  6246  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6248  023A  0828               	movf	?___awtoft,w
  6249  023B  00AF               	movwf	___ftmul@f2
  6250  023C  0829               	movf	?___awtoft+1,w
  6251  023D  00B0               	movwf	___ftmul@f2+1
  6252  023E  082A               	movf	?___awtoft+2,w
  6253  023F  00B1               	movwf	___ftmul@f2+2
  6254  0240  3000               	movlw	0
  6255  0241  00AC               	movwf	___ftmul@f1
  6256  0242  30A0               	movlw	160
  6257  0243  00AD               	movwf	___ftmul@f1+1
  6258  0244  3040               	movlw	64
  6259  0245  00AE               	movwf	___ftmul@f1+2
  6260  0246  120A  118A  2705  120A  118A  	fcall	___ftmul
  6261  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6262  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6263  024D  082C               	movf	?___ftmul,w
  6264  024E  00BE               	movwf	___ftdiv@f1
  6265  024F  082D               	movf	?___ftmul+1,w
  6266  0250  00BF               	movwf	___ftdiv@f1+1
  6267  0251  082E               	movf	?___ftmul+2,w
  6268  0252  00C0               	movwf	___ftdiv@f1+2
  6269  0253  30C0               	movlw	192
  6270  0254  00BB               	movwf	___ftdiv@f2
  6271  0255  307F               	movlw	127
  6272  0256  00BC               	movwf	___ftdiv@f2+1
  6273  0257  3044               	movlw	68
  6274  0258  00BD               	movwf	___ftdiv@f2+2
  6275  0259  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  6276  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6277  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6278  0260  083B               	movf	?___ftdiv,w
  6279  0261  1683               	bsf	3,5	;RP0=1, select bank1
  6280  0262  1303               	bcf	3,6	;RP1=0, select bank1
  6281  0263  00BD               	movwf	_Adc_Rpm_Read$1523^(0+128)
  6282  0264  1283               	bcf	3,5	;RP0=0, select bank0
  6283  0265  1303               	bcf	3,6	;RP1=0, select bank0
  6284  0266  083C               	movf	?___ftdiv+1,w
  6285  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6286  0268  1303               	bcf	3,6	;RP1=0, select bank1
  6287  0269  00BE               	movwf	(_Adc_Rpm_Read$1523+1)^(0+128)
  6288  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6289  026B  1303               	bcf	3,6	;RP1=0, select bank0
  6290  026C  083D               	movf	?___ftdiv+2,w
  6291  026D  1683               	bsf	3,5	;RP0=1, select bank1
  6292  026E  1303               	bcf	3,6	;RP1=0, select bank1
  6293  026F  00BF               	movwf	(_Adc_Rpm_Read$1523+2)^(0+128)
  6294  0270  083D               	movf	_Adc_Rpm_Read$1523^(0+128),w
  6295  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6296  0272  1303               	bcf	3,6	;RP1=0, select bank0
  6297  0273  00AF               	movwf	___ftmul@f2
  6298  0274  1683               	bsf	3,5	;RP0=1, select bank1
  6299  0275  1303               	bcf	3,6	;RP1=0, select bank1
  6300  0276  083E               	movf	(_Adc_Rpm_Read$1523+1)^(0+128),w
  6301  0277  1283               	bcf	3,5	;RP0=0, select bank0
  6302  0278  1303               	bcf	3,6	;RP1=0, select bank0
  6303  0279  00B0               	movwf	___ftmul@f2+1
  6304  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6305  027B  1303               	bcf	3,6	;RP1=0, select bank1
  6306  027C  083F               	movf	(_Adc_Rpm_Read$1523+2)^(0+128),w
  6307  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6308  027E  1303               	bcf	3,6	;RP1=0, select bank0
  6309  027F  00B1               	movwf	___ftmul@f2+2
  6310  0280  3040               	movlw	64
  6311  0281  00AC               	movwf	___ftmul@f1
  6312  0282  301C               	movlw	28
  6313  0283  00AD               	movwf	___ftmul@f1+1
  6314  0284  3046               	movlw	70
  6315  0285  00AE               	movwf	___ftmul@f1+2
  6316  0286  120A  118A  2705  120A  118A  	fcall	___ftmul
  6317  028B  1283               	bcf	3,5	;RP0=0, select bank0
  6318  028C  1303               	bcf	3,6	;RP1=0, select bank0
  6319  028D  082C               	movf	?___ftmul,w
  6320  028E  00BE               	movwf	___ftdiv@f1
  6321  028F  082D               	movf	?___ftmul+1,w
  6322  0290  00BF               	movwf	___ftdiv@f1+1
  6323  0291  082E               	movf	?___ftmul+2,w
  6324  0292  00C0               	movwf	___ftdiv@f1+2
  6325  0293  3000               	movlw	0
  6326  0294  00BB               	movwf	___ftdiv@f2
  6327  0295  30A0               	movlw	160
  6328  0296  00BC               	movwf	___ftdiv@f2+1
  6329  0297  3040               	movlw	64
  6330  0298  00BD               	movwf	___ftdiv@f2+2
  6331  0299  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  6332  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6333  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6334  02A0  083B               	movf	?___ftdiv,w
  6335  02A1  00CA               	movwf	___fttol@f1
  6336  02A2  083C               	movf	?___ftdiv+1,w
  6337  02A3  00CB               	movwf	___fttol@f1+1
  6338  02A4  083D               	movf	?___ftdiv+2,w
  6339  02A5  00CC               	movwf	___fttol@f1+2
  6340  02A6  120A  158A  2013  120A  118A  	fcall	___fttol
  6341  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  6342  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  6343  02AD  084B               	movf	?___fttol+1,w
  6344  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  6345  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  6346  02B0  00C7               	movwf	(Adc_Rpm_Read@valor+1)^(0+128)
  6347  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6348  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6349  02B3  084A               	movf	?___fttol,w
  6350  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6351  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  6352  02B6  00C6               	movwf	Adc_Rpm_Read@valor^(0+128)
  6353  02B7  3010               	movlw	16
  6354  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  6355  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  6356  02BA  00A0               	movwf	___lwdiv@divisor
  6357  02BB  3027               	movlw	39
  6358  02BC  00A1               	movwf	___lwdiv@divisor+1
  6359  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  6360  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  6361  02BF  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6362  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  6363  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  6364  02C2  00A3               	movwf	___lwdiv@dividend+1
  6365  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6366  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  6367  02C5  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6368  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  6369  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  6370  02C8  00A2               	movwf	___lwdiv@dividend
  6371  02C9  160A  118A  2430  120A  118A  	fcall	___lwdiv
  6372  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  6373  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  6374  02D0  0821               	movf	?___lwdiv+1,w
  6375  02D1  00A8               	movwf	___wmul@multiplier+1
  6376  02D2  0820               	movf	?___lwdiv,w
  6377  02D3  00A7               	movwf	___wmul@multiplier
  6378  02D4  3010               	movlw	16
  6379  02D5  00A9               	movwf	___wmul@multiplicand
  6380  02D6  3027               	movlw	39
  6381  02D7  00AA               	movwf	___wmul@multiplicand+1
  6382  02D8  160A  118A  21C3  120A  118A  	fcall	___wmul
  6383  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  6384  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  6385  02DF  0828               	movf	?___wmul+1,w
  6386  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6387  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  6388  02E2  00C5               	movwf	(Adc_Rpm_Read@dec_m+1)^(0+128)
  6389  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6390  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6391  02E5  0827               	movf	?___wmul,w
  6392  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  6393  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  6394  02E8  00C4               	movwf	Adc_Rpm_Read@dec_m^(0+128)
  6395  02E9  30E8               	movlw	232
  6396  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6397  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6398  02EC  00A0               	movwf	___lwdiv@divisor
  6399  02ED  3003               	movlw	3
  6400  02EE  00A1               	movwf	___lwdiv@divisor+1
  6401  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  6402  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  6403  02F1  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6404  02F2  0246               	subwf	Adc_Rpm_Read@valor^(0+128),w
  6405  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  6406  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  6407  02F5  00A2               	movwf	___lwdiv@dividend
  6408  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  6409  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  6410  02F8  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6411  02F9  1C03               	skipc
  6412  02FA  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6413  02FB  0247               	subwf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6414  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6415  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6416  02FE  00A3               	movwf	___lwdiv@dividend+1
  6417  02FF  160A  118A  2430  120A  118A  	fcall	___lwdiv
  6418  0304  1283               	bcf	3,5	;RP0=0, select bank0
  6419  0305  1303               	bcf	3,6	;RP1=0, select bank0
  6420  0306  0821               	movf	?___lwdiv+1,w
  6421  0307  00A8               	movwf	___wmul@multiplier+1
  6422  0308  0820               	movf	?___lwdiv,w
  6423  0309  00A7               	movwf	___wmul@multiplier
  6424  030A  30E8               	movlw	232
  6425  030B  00A9               	movwf	___wmul@multiplicand
  6426  030C  3003               	movlw	3
  6427  030D  00AA               	movwf	___wmul@multiplicand+1
  6428  030E  160A  118A  21C3  120A  118A  	fcall	___wmul
  6429  0313  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0314  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0315  0828               	movf	?___wmul+1,w
  6432  0316  1683               	bsf	3,5	;RP0=1, select bank1
  6433  0317  1303               	bcf	3,6	;RP1=0, select bank1
  6434  0318  00C3               	movwf	(Adc_Rpm_Read@uni_m+1)^(0+128)
  6435  0319  1283               	bcf	3,5	;RP0=0, select bank0
  6436  031A  1303               	bcf	3,6	;RP1=0, select bank0
  6437  031B  0827               	movf	?___wmul,w
  6438  031C  1683               	bsf	3,5	;RP0=1, select bank1
  6439  031D  1303               	bcf	3,6	;RP1=0, select bank1
  6440  031E  00C2               	movwf	Adc_Rpm_Read@uni_m^(0+128)
  6441  031F  3064               	movlw	100
  6442  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6443  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6444  0322  00A0               	movwf	___lwdiv@divisor
  6445  0323  3000               	movlw	0
  6446  0324  00A1               	movwf	___lwdiv@divisor+1
  6447  0325  1683               	bsf	3,5	;RP0=1, select bank1
  6448  0326  1303               	bcf	3,6	;RP1=0, select bank1
  6449  0327  0942               	comf	Adc_Rpm_Read@uni_m^(0+128),w
  6450  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6452  032A  00D7               	movwf	??_Adc_Rpm_Read
  6453  032B  1683               	bsf	3,5	;RP0=1, select bank1
  6454  032C  1303               	bcf	3,6	;RP1=0, select bank1
  6455  032D  0943               	comf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6456  032E  1283               	bcf	3,5	;RP0=0, select bank0
  6457  032F  1303               	bcf	3,6	;RP1=0, select bank0
  6458  0330  00D8               	movwf	??_Adc_Rpm_Read+1
  6459  0331  0AD7               	incf	??_Adc_Rpm_Read,f
  6460  0332  1903               	skipnz
  6461  0333  0AD8               	incf	??_Adc_Rpm_Read+1,f
  6462  0334  1683               	bsf	3,5	;RP0=1, select bank1
  6463  0335  1303               	bcf	3,6	;RP1=0, select bank1
  6464  0336  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6465  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0339  0257               	subwf	??_Adc_Rpm_Read,w
  6468  033A  00D9               	movwf	??_Adc_Rpm_Read+2
  6469  033B  1683               	bsf	3,5	;RP0=1, select bank1
  6470  033C  1303               	bcf	3,6	;RP1=0, select bank1
  6471  033D  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6472  033E  1C03               	skipc
  6473  033F  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6474  0340  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0341  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0342  0258               	subwf	??_Adc_Rpm_Read+1,w
  6477  0343  00DA               	movwf	??_Adc_Rpm_Read+3
  6478  0344  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0345  1303               	bcf	3,6	;RP1=0, select bank1
  6480  0346  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6481  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6483  0349  0759               	addwf	??_Adc_Rpm_Read+2,w
  6484  034A  00A2               	movwf	___lwdiv@dividend
  6485  034B  1683               	bsf	3,5	;RP0=1, select bank1
  6486  034C  1303               	bcf	3,6	;RP1=0, select bank1
  6487  034D  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6488  034E  1803               	skipnc
  6489  034F  0A47               	incf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6490  0350  1283               	bcf	3,5	;RP0=0, select bank0
  6491  0351  1303               	bcf	3,6	;RP1=0, select bank0
  6492  0352  075A               	addwf	??_Adc_Rpm_Read+3,w
  6493  0353  00A3               	movwf	___lwdiv@dividend+1
  6494  0354  160A  118A  2430  120A  118A  	fcall	___lwdiv
  6495  0359  1283               	bcf	3,5	;RP0=0, select bank0
  6496  035A  1303               	bcf	3,6	;RP1=0, select bank0
  6497  035B  0821               	movf	?___lwdiv+1,w
  6498  035C  00A8               	movwf	___wmul@multiplier+1
  6499  035D  0820               	movf	?___lwdiv,w
  6500  035E  00A7               	movwf	___wmul@multiplier
  6501  035F  3064               	movlw	100
  6502  0360  00A9               	movwf	___wmul@multiplicand
  6503  0361  3000               	movlw	0
  6504  0362  00AA               	movwf	___wmul@multiplicand+1
  6505  0363  160A  118A  21C3  120A  118A  	fcall	___wmul
  6506  0368  1283               	bcf	3,5	;RP0=0, select bank0
  6507  0369  1303               	bcf	3,6	;RP1=0, select bank0
  6508  036A  0828               	movf	?___wmul+1,w
  6509  036B  1683               	bsf	3,5	;RP0=1, select bank1
  6510  036C  1303               	bcf	3,6	;RP1=0, select bank1
  6511  036D  00C1               	movwf	(Adc_Rpm_Read@cent+1)^(0+128)
  6512  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6513  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0370  0827               	movf	?___wmul,w
  6515  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0372  1303               	bcf	3,6	;RP1=0, select bank1
  6517  0373  00C0               	movwf	Adc_Rpm_Read@cent^(0+128)
  6518  0374  0842               	movf	Adc_Rpm_Read@uni_m^(0+128),w
  6519  0375  0740               	addwf	Adc_Rpm_Read@cent^(0+128),w
  6520  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6521  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6522  0378  00D7               	movwf	??_Adc_Rpm_Read
  6523  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6524  037A  1303               	bcf	3,6	;RP1=0, select bank1
  6525  037B  0843               	movf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6526  037C  1803               	skipnc
  6527  037D  0A43               	incf	(Adc_Rpm_Read@uni_m+1)^(0+128),w
  6528  037E  0741               	addwf	(Adc_Rpm_Read@cent+1)^(0+128),w
  6529  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0380  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0381  00D8               	movwf	??_Adc_Rpm_Read+1
  6532  0382  1683               	bsf	3,5	;RP0=1, select bank1
  6533  0383  1303               	bcf	3,6	;RP1=0, select bank1
  6534  0384  0844               	movf	Adc_Rpm_Read@dec_m^(0+128),w
  6535  0385  1283               	bcf	3,5	;RP0=0, select bank0
  6536  0386  1303               	bcf	3,6	;RP1=0, select bank0
  6537  0387  0757               	addwf	??_Adc_Rpm_Read,w
  6538  0388  1683               	bsf	3,5	;RP0=1, select bank1
  6539  0389  1303               	bcf	3,6	;RP1=0, select bank1
  6540  038A  00C6               	movwf	Adc_Rpm_Read@valor^(0+128)
  6541  038B  0845               	movf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6542  038C  1803               	skipnc
  6543  038D  0A45               	incf	(Adc_Rpm_Read@dec_m+1)^(0+128),w
  6544  038E  1283               	bcf	3,5	;RP0=0, select bank0
  6545  038F  1303               	bcf	3,6	;RP1=0, select bank0
  6546  0390  0758               	addwf	??_Adc_Rpm_Read+1,w
  6547  0391  1683               	bsf	3,5	;RP0=1, select bank1
  6548  0392  1303               	bcf	3,6	;RP1=0, select bank1
  6549  0393  00C7               	movwf	(Adc_Rpm_Read@valor+1)^(0+128)
  6550  0394  0847               	movf	(Adc_Rpm_Read@valor+1)^(0+128),w
  6551  0395  00AF               	movwf	(_Rpm+1)^(0+128)
  6552  0396  0846               	movf	Adc_Rpm_Read@valor^(0+128),w
  6553  0397  00AE               	movwf	_Rpm^(0+128)
  6554  0398  082E               	movf	_Rpm^(0+128),w
  6555  0399  042F               	iorwf	(_Rpm+1)^(0+128),w
  6556  039A  1D03               	btfss	3,2
  6557  039B  2BA1               	goto	l4401
  6558  039C  303C               	movlw	60
  6559  039D  00AE               	movwf	_Rpm^(0+128)
  6560  039E  3000               	movlw	0
  6561  039F  00AF               	movwf	(_Rpm^(0+128)+1)
  6562  03A0  0008               	return
  6563  03A1                     l4401:
  6564  03A1  3027               	movlw	39
  6565  03A2  022F               	subwf	(_Rpm+1)^(0+128),w
  6566  03A3  3011               	movlw	17
  6567  03A4  1903               	skipnz
  6568  03A5  022E               	subwf	_Rpm^(0+128),w
  6569  03A6  1C03               	skipc
  6570  03A7  0008               	return
  6571  03A8  3010               	movlw	16
  6572  03A9  00AE               	movwf	_Rpm^(0+128)
  6573  03AA  3027               	movlw	39
  6574  03AB  00AF               	movwf	(_Rpm^(0+128)+1)
  6575  03AC  0008               	return
  6576  03AD                     __end_of_Adc_Rpm_Read:
  6577                           
  6578                           	psect	text30
  6579  11C3                     __ptext30:	
  6580 ;; *************** function ___wmul *****************
  6581 ;; Defined at:
  6582 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\Umul16.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  multiplier      2    7[BANK0 ] unsigned int 
  6585 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  product         2    4[COMMON] unsigned int 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  2    7[BANK0 ] unsigned int 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6597 ;;      Params:         0       4       0       0       0
  6598 ;;      Locals:         2       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0
  6600 ;;      Totals:         2       4       0       0       0
  6601 ;;Total ram usage:        6 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    2
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_Adc_Rpm_Read
  6608 ;;		_sprintf
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function ___wmul
  6614  11C3                     ___wmul:
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6618  11C3  01F4               	clrf	___wmul@product
  6619  11C4  01F5               	clrf	___wmul@product+1
  6620  11C5                     l4147:
  6621  11C5  1283               	bcf	3,5	;RP0=0, select bank0
  6622  11C6  1303               	bcf	3,6	;RP1=0, select bank0
  6623  11C7  1C27               	btfss	___wmul@multiplier,0
  6624  11C8  29CF               	goto	l793
  6625  11C9  0829               	movf	___wmul@multiplicand,w
  6626  11CA  07F4               	addwf	___wmul@product,f
  6627  11CB  1803               	skipnc
  6628  11CC  0AF5               	incf	___wmul@product+1,f
  6629  11CD  082A               	movf	___wmul@multiplicand+1,w
  6630  11CE  07F5               	addwf	___wmul@product+1,f
  6631  11CF                     l793:
  6632  11CF  3001               	movlw	1
  6633  11D0                     u4035:
  6634  11D0  1003               	clrc
  6635  11D1  0DA9               	rlf	___wmul@multiplicand,f
  6636  11D2  0DAA               	rlf	___wmul@multiplicand+1,f
  6637  11D3  3EFF               	addlw	-1
  6638  11D4  1D03               	skipz
  6639  11D5  29D0               	goto	u4035
  6640  11D6  3001               	movlw	1
  6641  11D7                     u4045:
  6642  11D7  1003               	clrc
  6643  11D8  0CA8               	rrf	___wmul@multiplier+1,f
  6644  11D9  0CA7               	rrf	___wmul@multiplier,f
  6645  11DA  3EFF               	addlw	-1
  6646  11DB  1D03               	skipz
  6647  11DC  29D7               	goto	u4045
  6648  11DD  0827               	movf	___wmul@multiplier,w
  6649  11DE  0428               	iorwf	___wmul@multiplier+1,w
  6650  11DF  1D03               	btfss	3,2
  6651  11E0  29C5               	goto	l4147
  6652  11E1  0875               	movf	___wmul@product+1,w
  6653  11E2  00A8               	movwf	?___wmul+1
  6654  11E3  0874               	movf	___wmul@product,w
  6655  11E4  00A7               	movwf	?___wmul
  6656  11E5  0008               	return
  6657  11E6                     __end_of___wmul:
  6658                           
  6659                           	psect	text31
  6660  1430                     __ptext31:	
  6661 ;; *************** function ___lwdiv *****************
  6662 ;; Defined at:
  6663 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwdiv.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  divisor         2    0[BANK0 ] unsigned int 
  6666 ;;  dividend        2    2[BANK0 ] unsigned int 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  quotient        2    5[BANK0 ] unsigned int 
  6669 ;;  counter         1    4[BANK0 ] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  2    0[BANK0 ] unsigned int 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, btemp+1
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         0       4       0       0       0
  6680 ;;      Locals:         0       3       0       0       0
  6681 ;;      Temps:          0       0       0       0       0
  6682 ;;      Totals:         0       7       0       0       0
  6683 ;;Total ram usage:        7 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    2
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_Adc_Rpm_Read
  6690 ;;		_sprintf
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           
  6695                           ;psect for function ___lwdiv
  6696  1430                     ___lwdiv:
  6697                           
  6698                           ;incstack = 0
  6699                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  6700  1430  1283               	bcf	3,5	;RP0=0, select bank0
  6701  1431  1303               	bcf	3,6	;RP1=0, select bank0
  6702  1432  01A5               	clrf	___lwdiv@quotient
  6703  1433  01A6               	clrf	___lwdiv@quotient+1
  6704  1434  0820               	movf	___lwdiv@divisor,w
  6705  1435  0421               	iorwf	___lwdiv@divisor+1,w
  6706  1436  1903               	btfsc	3,2
  6707  1437  2C69               	goto	l4333
  6708  1438  01A4               	clrf	___lwdiv@counter
  6709  1439  0AA4               	incf	___lwdiv@counter,f
  6710  143A                     l4321:
  6711  143A  1BA1               	btfsc	___lwdiv@divisor+1,7
  6712  143B  2C48               	goto	l4323
  6713  143C  3001               	movlw	1
  6714  143D                     u4405:
  6715  143D  1003               	clrc
  6716  143E  0DA0               	rlf	___lwdiv@divisor,f
  6717  143F  0DA1               	rlf	___lwdiv@divisor+1,f
  6718  1440  3EFF               	addlw	-1
  6719  1441  1D03               	skipz
  6720  1442  2C3D               	goto	u4405
  6721  1443  3001               	movlw	1
  6722  1444  00FF               	movwf	127
  6723  1445  087F               	movf	127,w
  6724  1446  07A4               	addwf	___lwdiv@counter,f
  6725  1447  2C3A               	goto	l4321
  6726  1448                     l4323:
  6727  1448  3001               	movlw	1
  6728  1449                     u4425:
  6729  1449  1003               	clrc
  6730  144A  0DA5               	rlf	___lwdiv@quotient,f
  6731  144B  0DA6               	rlf	___lwdiv@quotient+1,f
  6732  144C  3EFF               	addlw	-1
  6733  144D  1D03               	skipz
  6734  144E  2C49               	goto	u4425
  6735  144F  0821               	movf	___lwdiv@divisor+1,w
  6736  1450  0223               	subwf	___lwdiv@dividend+1,w
  6737  1451  1D03               	skipz
  6738  1452  2C55               	goto	u4435
  6739  1453  0820               	movf	___lwdiv@divisor,w
  6740  1454  0222               	subwf	___lwdiv@dividend,w
  6741  1455                     u4435:
  6742  1455  1C03               	skipc
  6743  1456  2C5E               	goto	l4329
  6744  1457  0820               	movf	___lwdiv@divisor,w
  6745  1458  02A2               	subwf	___lwdiv@dividend,f
  6746  1459  0821               	movf	___lwdiv@divisor+1,w
  6747  145A  1C03               	skipc
  6748  145B  03A3               	decf	___lwdiv@dividend+1,f
  6749  145C  02A3               	subwf	___lwdiv@dividend+1,f
  6750  145D  1425               	bsf	___lwdiv@quotient,0
  6751  145E                     l4329:
  6752  145E  3001               	movlw	1
  6753  145F                     u4445:
  6754  145F  1003               	clrc
  6755  1460  0CA1               	rrf	___lwdiv@divisor+1,f
  6756  1461  0CA0               	rrf	___lwdiv@divisor,f
  6757  1462  3EFF               	addlw	-1
  6758  1463  1D03               	skipz
  6759  1464  2C5F               	goto	u4445
  6760  1465  3001               	movlw	1
  6761  1466  02A4               	subwf	___lwdiv@counter,f
  6762  1467  1D03               	btfss	3,2
  6763  1468  2C48               	goto	l4323
  6764  1469                     l4333:
  6765  1469  0826               	movf	___lwdiv@quotient+1,w
  6766  146A  00A1               	movwf	?___lwdiv+1
  6767  146B  0825               	movf	___lwdiv@quotient,w
  6768  146C  00A0               	movwf	?___lwdiv
  6769  146D  0008               	return
  6770  146E                     __end_of___lwdiv:
  6771                           
  6772                           	psect	text32
  6773  098F                     __ptext32:	
  6774 ;; *************** function _Adc_Pwm_Read *****************
  6775 ;; Defined at:
  6776 ;;		line 28 in file "Adc_Read.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6790 ;;      Params:         0       0       0       0       0
  6791 ;;      Locals:         0       3       0       0       0
  6792 ;;      Temps:          0       0       0       0       0
  6793 ;;      Totals:         0       3       0       0       0
  6794 ;;Total ram usage:        3 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    4
  6797 ;; This function calls:
  6798 ;;		_Adc
  6799 ;;		___awtoft
  6800 ;;		___ftdiv
  6801 ;;		___ftmul
  6802 ;;		___fttol
  6803 ;; This function is called by:
  6804 ;;		_Lec_Adc_Modo_Pulv
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _Adc_Pwm_Read
  6810  098F                     _Adc_Pwm_Read:
  6811                           
  6812                           ;incstack = 0
  6813                           ; Regs used in _Adc_Pwm_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6814  098F  3001               	movlw	1
  6815  0990  160A  118A  2504  120A  158A  	fcall	_Adc
  6816  0995  0875               	movf	?_Adc+1,w
  6817  0996  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0997  1303               	bcf	3,6	;RP1=0, select bank0
  6819  0998  00A9               	movwf	___awtoft@c+1
  6820  0999  0874               	movf	?_Adc,w
  6821  099A  00A8               	movwf	___awtoft@c
  6822  099B  120A  118A  27D8  120A  158A  	fcall	___awtoft
  6823  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  6824  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  6825  09A2  0828               	movf	?___awtoft,w
  6826  09A3  00AF               	movwf	___ftmul@f2
  6827  09A4  0829               	movf	?___awtoft+1,w
  6828  09A5  00B0               	movwf	___ftmul@f2+1
  6829  09A6  082A               	movf	?___awtoft+2,w
  6830  09A7  00B1               	movwf	___ftmul@f2+2
  6831  09A8  3000               	movlw	0
  6832  09A9  00AC               	movwf	___ftmul@f1
  6833  09AA  30A0               	movlw	160
  6834  09AB  00AD               	movwf	___ftmul@f1+1
  6835  09AC  3040               	movlw	64
  6836  09AD  00AE               	movwf	___ftmul@f1+2
  6837  09AE  120A  118A  2705  120A  158A  	fcall	___ftmul
  6838  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  6839  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  6840  09B5  082C               	movf	?___ftmul,w
  6841  09B6  00BE               	movwf	___ftdiv@f1
  6842  09B7  082D               	movf	?___ftmul+1,w
  6843  09B8  00BF               	movwf	___ftdiv@f1+1
  6844  09B9  082E               	movf	?___ftmul+2,w
  6845  09BA  00C0               	movwf	___ftdiv@f1+2
  6846  09BB  30C0               	movlw	192
  6847  09BC  00BB               	movwf	___ftdiv@f2
  6848  09BD  307F               	movlw	127
  6849  09BE  00BC               	movwf	___ftdiv@f2+1
  6850  09BF  3044               	movlw	68
  6851  09C0  00BD               	movwf	___ftdiv@f2+2
  6852  09C1  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  6853  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  6854  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  6855  09C8  083B               	movf	?___ftdiv,w
  6856  09C9  00D7               	movwf	_Adc_Pwm_Read$1524
  6857  09CA  083C               	movf	?___ftdiv+1,w
  6858  09CB  00D8               	movwf	_Adc_Pwm_Read$1524+1
  6859  09CC  083D               	movf	?___ftdiv+2,w
  6860  09CD  00D9               	movwf	_Adc_Pwm_Read$1524+2
  6861  09CE  0857               	movf	_Adc_Pwm_Read$1524,w
  6862  09CF  00AF               	movwf	___ftmul@f2
  6863  09D0  0858               	movf	_Adc_Pwm_Read$1524+1,w
  6864  09D1  00B0               	movwf	___ftmul@f2+1
  6865  09D2  0859               	movf	_Adc_Pwm_Read$1524+2,w
  6866  09D3  00B1               	movwf	___ftmul@f2+2
  6867  09D4  3000               	movlw	0
  6868  09D5  00AC               	movwf	___ftmul@f1
  6869  09D6  30C8               	movlw	200
  6870  09D7  00AD               	movwf	___ftmul@f1+1
  6871  09D8  3042               	movlw	66
  6872  09D9  00AE               	movwf	___ftmul@f1+2
  6873  09DA  120A  118A  2705  120A  158A  	fcall	___ftmul
  6874  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  6875  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  6876  09E1  082C               	movf	?___ftmul,w
  6877  09E2  00BE               	movwf	___ftdiv@f1
  6878  09E3  082D               	movf	?___ftmul+1,w
  6879  09E4  00BF               	movwf	___ftdiv@f1+1
  6880  09E5  082E               	movf	?___ftmul+2,w
  6881  09E6  00C0               	movwf	___ftdiv@f1+2
  6882  09E7  3000               	movlw	0
  6883  09E8  00BB               	movwf	___ftdiv@f2
  6884  09E9  30A0               	movlw	160
  6885  09EA  00BC               	movwf	___ftdiv@f2+1
  6886  09EB  3040               	movlw	64
  6887  09EC  00BD               	movwf	___ftdiv@f2+2
  6888  09ED  120A  158A  25C8  120A  158A  	fcall	___ftdiv
  6889  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  6890  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  6891  09F4  083B               	movf	?___ftdiv,w
  6892  09F5  00CA               	movwf	___fttol@f1
  6893  09F6  083C               	movf	?___ftdiv+1,w
  6894  09F7  00CB               	movwf	___fttol@f1+1
  6895  09F8  083D               	movf	?___ftdiv+2,w
  6896  09F9  00CC               	movwf	___fttol@f1+2
  6897  09FA  120A  158A  2013  120A  158A  	fcall	___fttol
  6898  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  6900  0A01  084A               	movf	?___fttol,w
  6901  0A02  00FF               	movwf	127
  6902  0A03  087F               	movf	127,w
  6903  0A04  00E4               	movwf	_Pwm
  6904  0A05  3060               	movlw	96
  6905  0A06  0264               	subwf	_Pwm,w
  6906  0A07  1C03               	skipc
  6907  0A08  2A0E               	goto	l4413
  6908  0A09  305F               	movlw	95
  6909  0A0A  00FF               	movwf	127
  6910  0A0B  087F               	movf	127,w
  6911  0A0C  00E4               	movwf	_Pwm
  6912  0A0D  0008               	return
  6913  0A0E                     l4413:
  6914  0A0E  3005               	movlw	5
  6915  0A0F  0264               	subwf	_Pwm,w
  6916  0A10  1803               	skipnc
  6917  0A11  0008               	return
  6918  0A12  3005               	movlw	5
  6919  0A13  00FF               	movwf	127
  6920  0A14  087F               	movf	127,w
  6921  0A15  00E4               	movwf	_Pwm
  6922  0A16  0008               	return
  6923  0A17                     __end_of_Adc_Pwm_Read:
  6924                           
  6925                           	psect	text33
  6926  110B                     __ptext33:	
  6927 ;; *************** function _Lec_Adc_Modo_Fuga *****************
  6928 ;; Defined at:
  6929 ;;		line 4 in file "Modo_Fuga.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6943 ;;      Params:         0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    5
  6950 ;; This function calls:
  6951 ;;		_Adc_Min_Read
  6952 ;;		_Adc_Temp_Read
  6953 ;; This function is called by:
  6954 ;;		_MEF_Subest_Actualizacion
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function _Lec_Adc_Modo_Fuga
  6960  110B                     _Lec_Adc_Modo_Fuga:
  6961                           
  6962                           ;Modo_Fuga.c: 7:     Adc_Min_Read();
  6963                           
  6964                           ;incstack = 0
  6965                           ; Regs used in _Lec_Adc_Modo_Fuga: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6966  110B  120A  118A  260A  160A  118A  	fcall	_Adc_Min_Read
  6967                           
  6968                           ;Modo_Fuga.c: 10:     Adc_Temp_Read();
  6969  1110  160A  118A  26C4   	fcall	_Adc_Temp_Read
  6970  1113  0008               	return
  6971  1114                     __end_of_Lec_Adc_Modo_Fuga:
  6972                           
  6973                           	psect	text34
  6974  1102                     __ptext34:	
  6975 ;; *************** function _Lec_Adc_Modo_Flujo *****************
  6976 ;; Defined at:
  6977 ;;		line 4 in file "Modo_Flujo.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6991 ;;      Params:         0       0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    5
  6998 ;; This function calls:
  6999 ;;		_Adc_Min_Read
  7000 ;;		_Adc_Temp_Read
  7001 ;; This function is called by:
  7002 ;;		_MEF_Subest_Actualizacion
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           
  7007                           ;psect for function _Lec_Adc_Modo_Flujo
  7008  1102                     _Lec_Adc_Modo_Flujo:
  7009                           
  7010                           ;Modo_Flujo.c: 7:     Adc_Min_Read();
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _Lec_Adc_Modo_Flujo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7014  1102  120A  118A  260A  160A  118A  	fcall	_Adc_Min_Read
  7015                           
  7016                           ;Modo_Flujo.c: 10:     Adc_Temp_Read();
  7017  1107  160A  118A  26C4   	fcall	_Adc_Temp_Read
  7018  110A  0008               	return
  7019  110B                     __end_of_Lec_Adc_Modo_Flujo:
  7020                           
  7021                           	psect	text35
  7022  16C4                     __ptext35:	
  7023 ;; *************** function _Adc_Temp_Read *****************
  7024 ;; Defined at:
  7025 ;;		line 47 in file "Adc_Read.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;		None
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;		None
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  1    wreg      void 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7039 ;;      Params:         0       0       0       0       0
  7040 ;;      Locals:         0       3       0       0       0
  7041 ;;      Temps:          0       0       0       0       0
  7042 ;;      Totals:         0       3       0       0       0
  7043 ;;Total ram usage:        3 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    4
  7046 ;; This function calls:
  7047 ;;		_Adc
  7048 ;;		___awtoft
  7049 ;;		___ftdiv
  7050 ;;		___ftmul
  7051 ;;		___fttol
  7052 ;; This function is called by:
  7053 ;;		_Lec_Adc_Modo_Pulv
  7054 ;;		_Lec_Adc_Modo_Fuga
  7055 ;;		_Lec_Adc_Modo_Flujo
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function _Adc_Temp_Read
  7061  16C4                     _Adc_Temp_Read:
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in _Adc_Temp_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7065  16C4  3003               	movlw	3
  7066  16C5  160A  118A  2504  160A  118A  	fcall	_Adc
  7067  16CA  0875               	movf	?_Adc+1,w
  7068  16CB  1283               	bcf	3,5	;RP0=0, select bank0
  7069  16CC  1303               	bcf	3,6	;RP1=0, select bank0
  7070  16CD  00A9               	movwf	___awtoft@c+1
  7071  16CE  0874               	movf	?_Adc,w
  7072  16CF  00A8               	movwf	___awtoft@c
  7073  16D0  120A  118A  27D8  160A  118A  	fcall	___awtoft
  7074  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  7075  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  7076  16D7  0828               	movf	?___awtoft,w
  7077  16D8  00AF               	movwf	___ftmul@f2
  7078  16D9  0829               	movf	?___awtoft+1,w
  7079  16DA  00B0               	movwf	___ftmul@f2+1
  7080  16DB  082A               	movf	?___awtoft+2,w
  7081  16DC  00B1               	movwf	___ftmul@f2+2
  7082  16DD  3000               	movlw	0
  7083  16DE  00AC               	movwf	___ftmul@f1
  7084  16DF  30A0               	movlw	160
  7085  16E0  00AD               	movwf	___ftmul@f1+1
  7086  16E1  3040               	movlw	64
  7087  16E2  00AE               	movwf	___ftmul@f1+2
  7088  16E3  120A  118A  2705  160A  118A  	fcall	___ftmul
  7089  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  7090  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  7091  16EA  082C               	movf	?___ftmul,w
  7092  16EB  00BE               	movwf	___ftdiv@f1
  7093  16EC  082D               	movf	?___ftmul+1,w
  7094  16ED  00BF               	movwf	___ftdiv@f1+1
  7095  16EE  082E               	movf	?___ftmul+2,w
  7096  16EF  00C0               	movwf	___ftdiv@f1+2
  7097  16F0  30C0               	movlw	192
  7098  16F1  00BB               	movwf	___ftdiv@f2
  7099  16F2  307F               	movlw	127
  7100  16F3  00BC               	movwf	___ftdiv@f2+1
  7101  16F4  3044               	movlw	68
  7102  16F5  00BD               	movwf	___ftdiv@f2+2
  7103  16F6  120A  158A  25C8  160A  118A  	fcall	___ftdiv
  7104  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  7105  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  7106  16FD  083B               	movf	?___ftdiv,w
  7107  16FE  00D7               	movwf	_Adc_Temp_Read$1526
  7108  16FF  083C               	movf	?___ftdiv+1,w
  7109  1700  00D8               	movwf	_Adc_Temp_Read$1526+1
  7110  1701  083D               	movf	?___ftdiv+2,w
  7111  1702  00D9               	movwf	_Adc_Temp_Read$1526+2
  7112  1703  0857               	movf	_Adc_Temp_Read$1526,w
  7113  1704  00AF               	movwf	___ftmul@f2
  7114  1705  0858               	movf	_Adc_Temp_Read$1526+1,w
  7115  1706  00B0               	movwf	___ftmul@f2+1
  7116  1707  0859               	movf	_Adc_Temp_Read$1526+2,w
  7117  1708  00B1               	movwf	___ftmul@f2+2
  7118  1709  3000               	movlw	0
  7119  170A  00AC               	movwf	___ftmul@f1
  7120  170B  30C8               	movlw	200
  7121  170C  00AD               	movwf	___ftmul@f1+1
  7122  170D  3042               	movlw	66
  7123  170E  00AE               	movwf	___ftmul@f1+2
  7124  170F  120A  118A  2705  160A  118A  	fcall	___ftmul
  7125  1714  1283               	bcf	3,5	;RP0=0, select bank0
  7126  1715  1303               	bcf	3,6	;RP1=0, select bank0
  7127  1716  082C               	movf	?___ftmul,w
  7128  1717  00CA               	movwf	___fttol@f1
  7129  1718  082D               	movf	?___ftmul+1,w
  7130  1719  00CB               	movwf	___fttol@f1+1
  7131  171A  082E               	movf	?___ftmul+2,w
  7132  171B  00CC               	movwf	___fttol@f1+2
  7133  171C  120A  158A  2013   	fcall	___fttol
  7134  171F  1283               	bcf	3,5	;RP0=0, select bank0
  7135  1720  1303               	bcf	3,6	;RP1=0, select bank0
  7136  1721  084A               	movf	?___fttol,w
  7137  1722  00FF               	movwf	127
  7138  1723  087F               	movf	127,w
  7139  1724  1683               	bsf	3,5	;RP0=1, select bank1
  7140  1725  1303               	bcf	3,6	;RP1=0, select bank1
  7141  1726  00BB               	movwf	_Temp^(0+128)
  7142  1727  0008               	return
  7143  1728                     __end_of_Adc_Temp_Read:
  7144                           
  7145                           	psect	text36
  7146  060A                     __ptext36:	
  7147 ;; *************** function _Adc_Min_Read *****************
  7148 ;; Defined at:
  7149 ;;		line 37 in file "Adc_Read.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7163 ;;      Params:         0       0       0       0       0
  7164 ;;      Locals:         0       3       0       0       0
  7165 ;;      Temps:          0       0       0       0       0
  7166 ;;      Totals:         0       3       0       0       0
  7167 ;;Total ram usage:        3 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    4
  7170 ;; This function calls:
  7171 ;;		_Adc
  7172 ;;		___awtoft
  7173 ;;		___ftdiv
  7174 ;;		___ftmul
  7175 ;;		___fttol
  7176 ;; This function is called by:
  7177 ;;		_Lec_Adc_Modo_Pulv
  7178 ;;		_Lec_Adc_Modo_Fuga
  7179 ;;		_Lec_Adc_Modo_Flujo
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function _Adc_Min_Read
  7185  060A                     _Adc_Min_Read:
  7186                           
  7187                           ;incstack = 0
  7188                           ; Regs used in _Adc_Min_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7189  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7190  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7191  060C  0863               	movf	_mod_tiempo,w
  7192  060D  1903               	btfsc	3,2
  7193  060E  2E86               	goto	l4423
  7194  060F  3002               	movlw	2
  7195  0610  160A  118A  2504  120A  118A  	fcall	_Adc
  7196  0615  0875               	movf	?_Adc+1,w
  7197  0616  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0617  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0618  00A9               	movwf	___awtoft@c+1
  7200  0619  0874               	movf	?_Adc,w
  7201  061A  00A8               	movwf	___awtoft@c
  7202  061B  120A  118A  27D8  120A  118A  	fcall	___awtoft
  7203  0620  1283               	bcf	3,5	;RP0=0, select bank0
  7204  0621  1303               	bcf	3,6	;RP1=0, select bank0
  7205  0622  0828               	movf	?___awtoft,w
  7206  0623  00AF               	movwf	___ftmul@f2
  7207  0624  0829               	movf	?___awtoft+1,w
  7208  0625  00B0               	movwf	___ftmul@f2+1
  7209  0626  082A               	movf	?___awtoft+2,w
  7210  0627  00B1               	movwf	___ftmul@f2+2
  7211  0628  3000               	movlw	0
  7212  0629  00AC               	movwf	___ftmul@f1
  7213  062A  30A0               	movlw	160
  7214  062B  00AD               	movwf	___ftmul@f1+1
  7215  062C  3040               	movlw	64
  7216  062D  00AE               	movwf	___ftmul@f1+2
  7217  062E  120A  118A  2705  120A  118A  	fcall	___ftmul
  7218  0633  1283               	bcf	3,5	;RP0=0, select bank0
  7219  0634  1303               	bcf	3,6	;RP1=0, select bank0
  7220  0635  082C               	movf	?___ftmul,w
  7221  0636  00BE               	movwf	___ftdiv@f1
  7222  0637  082D               	movf	?___ftmul+1,w
  7223  0638  00BF               	movwf	___ftdiv@f1+1
  7224  0639  082E               	movf	?___ftmul+2,w
  7225  063A  00C0               	movwf	___ftdiv@f1+2
  7226  063B  30C0               	movlw	192
  7227  063C  00BB               	movwf	___ftdiv@f2
  7228  063D  307F               	movlw	127
  7229  063E  00BC               	movwf	___ftdiv@f2+1
  7230  063F  3044               	movlw	68
  7231  0640  00BD               	movwf	___ftdiv@f2+2
  7232  0641  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7233  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7234  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7235  0648  083B               	movf	?___ftdiv,w
  7236  0649  00D7               	movwf	_Adc_Min_Read$1525
  7237  064A  083C               	movf	?___ftdiv+1,w
  7238  064B  00D8               	movwf	_Adc_Min_Read$1525+1
  7239  064C  083D               	movf	?___ftdiv+2,w
  7240  064D  00D9               	movwf	_Adc_Min_Read$1525+2
  7241  064E  0857               	movf	_Adc_Min_Read$1525,w
  7242  064F  00AF               	movwf	___ftmul@f2
  7243  0650  0858               	movf	_Adc_Min_Read$1525+1,w
  7244  0651  00B0               	movwf	___ftmul@f2+1
  7245  0652  0859               	movf	_Adc_Min_Read$1525+2,w
  7246  0653  00B1               	movwf	___ftmul@f2+2
  7247  0654  3000               	movlw	0
  7248  0655  00AC               	movwf	___ftmul@f1
  7249  0656  306C               	movlw	108
  7250  0657  00AD               	movwf	___ftmul@f1+1
  7251  0658  3042               	movlw	66
  7252  0659  00AE               	movwf	___ftmul@f1+2
  7253  065A  120A  118A  2705  120A  118A  	fcall	___ftmul
  7254  065F  1283               	bcf	3,5	;RP0=0, select bank0
  7255  0660  1303               	bcf	3,6	;RP1=0, select bank0
  7256  0661  082C               	movf	?___ftmul,w
  7257  0662  00BE               	movwf	___ftdiv@f1
  7258  0663  082D               	movf	?___ftmul+1,w
  7259  0664  00BF               	movwf	___ftdiv@f1+1
  7260  0665  082E               	movf	?___ftmul+2,w
  7261  0666  00C0               	movwf	___ftdiv@f1+2
  7262  0667  3000               	movlw	0
  7263  0668  00BB               	movwf	___ftdiv@f2
  7264  0669  30A0               	movlw	160
  7265  066A  00BC               	movwf	___ftdiv@f2+1
  7266  066B  3040               	movlw	64
  7267  066C  00BD               	movwf	___ftdiv@f2+2
  7268  066D  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7269  0672  1283               	bcf	3,5	;RP0=0, select bank0
  7270  0673  1303               	bcf	3,6	;RP1=0, select bank0
  7271  0674  083B               	movf	?___ftdiv,w
  7272  0675  00CA               	movwf	___fttol@f1
  7273  0676  083C               	movf	?___ftdiv+1,w
  7274  0677  00CB               	movwf	___fttol@f1+1
  7275  0678  083D               	movf	?___ftdiv+2,w
  7276  0679  00CC               	movwf	___fttol@f1+2
  7277  067A  120A  158A  2013  120A  118A  	fcall	___fttol
  7278  067F  1283               	bcf	3,5	;RP0=0, select bank0
  7279  0680  1303               	bcf	3,6	;RP1=0, select bank0
  7280  0681  084A               	movf	?___fttol,w
  7281  0682  00FF               	movwf	127
  7282  0683  087F               	movf	127,w
  7283  0684  00F9               	movwf	_Min
  7284  0685  2EFF               	goto	l4427
  7285  0686                     l4423:
  7286  0686  0863               	movf	_mod_tiempo,w
  7287  0687  1D03               	btfss	3,2
  7288  0688  2EFF               	goto	l4427
  7289  0689  3002               	movlw	2
  7290  068A  160A  118A  2504  120A  118A  	fcall	_Adc
  7291  068F  0875               	movf	?_Adc+1,w
  7292  0690  1283               	bcf	3,5	;RP0=0, select bank0
  7293  0691  1303               	bcf	3,6	;RP1=0, select bank0
  7294  0692  00A9               	movwf	___awtoft@c+1
  7295  0693  0874               	movf	?_Adc,w
  7296  0694  00A8               	movwf	___awtoft@c
  7297  0695  120A  118A  27D8  120A  118A  	fcall	___awtoft
  7298  069A  1283               	bcf	3,5	;RP0=0, select bank0
  7299  069B  1303               	bcf	3,6	;RP1=0, select bank0
  7300  069C  0828               	movf	?___awtoft,w
  7301  069D  00AF               	movwf	___ftmul@f2
  7302  069E  0829               	movf	?___awtoft+1,w
  7303  069F  00B0               	movwf	___ftmul@f2+1
  7304  06A0  082A               	movf	?___awtoft+2,w
  7305  06A1  00B1               	movwf	___ftmul@f2+2
  7306  06A2  3000               	movlw	0
  7307  06A3  00AC               	movwf	___ftmul@f1
  7308  06A4  30A0               	movlw	160
  7309  06A5  00AD               	movwf	___ftmul@f1+1
  7310  06A6  3040               	movlw	64
  7311  06A7  00AE               	movwf	___ftmul@f1+2
  7312  06A8  120A  118A  2705  120A  118A  	fcall	___ftmul
  7313  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  7314  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  7315  06AF  082C               	movf	?___ftmul,w
  7316  06B0  00BE               	movwf	___ftdiv@f1
  7317  06B1  082D               	movf	?___ftmul+1,w
  7318  06B2  00BF               	movwf	___ftdiv@f1+1
  7319  06B3  082E               	movf	?___ftmul+2,w
  7320  06B4  00C0               	movwf	___ftdiv@f1+2
  7321  06B5  30C0               	movlw	192
  7322  06B6  00BB               	movwf	___ftdiv@f2
  7323  06B7  307F               	movlw	127
  7324  06B8  00BC               	movwf	___ftdiv@f2+1
  7325  06B9  3044               	movlw	68
  7326  06BA  00BD               	movwf	___ftdiv@f2+2
  7327  06BB  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7328  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  7329  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  7330  06C2  083B               	movf	?___ftdiv,w
  7331  06C3  00D7               	movwf	_Adc_Min_Read$1525
  7332  06C4  083C               	movf	?___ftdiv+1,w
  7333  06C5  00D8               	movwf	_Adc_Min_Read$1525+1
  7334  06C6  083D               	movf	?___ftdiv+2,w
  7335  06C7  00D9               	movwf	_Adc_Min_Read$1525+2
  7336  06C8  0857               	movf	_Adc_Min_Read$1525,w
  7337  06C9  00AF               	movwf	___ftmul@f2
  7338  06CA  0858               	movf	_Adc_Min_Read$1525+1,w
  7339  06CB  00B0               	movwf	___ftmul@f2+1
  7340  06CC  0859               	movf	_Adc_Min_Read$1525+2,w
  7341  06CD  00B1               	movwf	___ftmul@f2+2
  7342  06CE  3000               	movlw	0
  7343  06CF  00AC               	movwf	___ftmul@f1
  7344  06D0  306C               	movlw	108
  7345  06D1  00AD               	movwf	___ftmul@f1+1
  7346  06D2  3042               	movlw	66
  7347  06D3  00AE               	movwf	___ftmul@f1+2
  7348  06D4  120A  118A  2705  120A  118A  	fcall	___ftmul
  7349  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7350  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7351  06DB  082C               	movf	?___ftmul,w
  7352  06DC  00BE               	movwf	___ftdiv@f1
  7353  06DD  082D               	movf	?___ftmul+1,w
  7354  06DE  00BF               	movwf	___ftdiv@f1+1
  7355  06DF  082E               	movf	?___ftmul+2,w
  7356  06E0  00C0               	movwf	___ftdiv@f1+2
  7357  06E1  3000               	movlw	0
  7358  06E2  00BB               	movwf	___ftdiv@f2
  7359  06E3  30A0               	movlw	160
  7360  06E4  00BC               	movwf	___ftdiv@f2+1
  7361  06E5  3040               	movlw	64
  7362  06E6  00BD               	movwf	___ftdiv@f2+2
  7363  06E7  120A  158A  25C8  120A  118A  	fcall	___ftdiv
  7364  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  7365  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  7366  06EE  083B               	movf	?___ftdiv,w
  7367  06EF  00CA               	movwf	___fttol@f1
  7368  06F0  083C               	movf	?___ftdiv+1,w
  7369  06F1  00CB               	movwf	___fttol@f1+1
  7370  06F2  083D               	movf	?___ftdiv+2,w
  7371  06F3  00CC               	movwf	___fttol@f1+2
  7372  06F4  120A  158A  2013  120A  118A  	fcall	___fttol
  7373  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  7374  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  7375  06FB  084A               	movf	?___fttol,w
  7376  06FC  00FF               	movwf	127
  7377  06FD  087F               	movf	127,w
  7378  06FE  00F8               	movwf	_Seg
  7379  06FF                     l4427:
  7380  06FF  0878               	movf	_Seg,w
  7381  0700  1D03               	btfss	3,2
  7382  0701  0008               	return
  7383  0702  01F8               	clrf	_Seg
  7384  0703  0AF8               	incf	_Seg,f
  7385  0704  0008               	return
  7386  0705                     __end_of_Adc_Min_Read:
  7387                           
  7388                           	psect	text37
  7389  0813                     __ptext37:	
  7390 ;; *************** function ___fttol *****************
  7391 ;; Defined at:
  7392 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\fttol.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  f1              3   42[BANK0 ] float 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  lval            4   50[BANK0 ] unsigned long 
  7397 ;;  exp1            1   54[BANK0 ] unsigned char 
  7398 ;;  sign1           1   49[BANK0 ] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  4   42[BANK0 ] long 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, btemp+1
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7408 ;;      Params:         0       4       0       0       0
  7409 ;;      Locals:         0       6       0       0       0
  7410 ;;      Temps:          0       3       0       0       0
  7411 ;;      Totals:         0      13       0       0       0
  7412 ;;Total ram usage:       13 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    2
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_Salida_Modo_Pulv
  7419 ;;		_Pwm1_init
  7420 ;;		_Pwm1
  7421 ;;		_Adc_Rpm_Read
  7422 ;;		_Adc_Pwm_Read
  7423 ;;		_Adc_Min_Read
  7424 ;;		_Adc_Temp_Read
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function ___fttol
  7430  0813                     ___fttol:
  7431                           
  7432                           ;incstack = 0
  7433                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  7434  0813  1283               	bcf	3,5	;RP0=0, select bank0
  7435  0814  1303               	bcf	3,6	;RP1=0, select bank0
  7436  0815  084A               	movf	___fttol@f1,w
  7437  0816  00CE               	movwf	??___fttol
  7438  0817  084B               	movf	___fttol@f1+1,w
  7439  0818  00CF               	movwf	??___fttol+1
  7440  0819  084C               	movf	___fttol@f1+2,w
  7441  081A  00D0               	movwf	??___fttol+2
  7442  081B  1003               	clrc
  7443  081C  0D4F               	rlf	??___fttol+1,w
  7444  081D  0D50               	rlf	??___fttol+2,w
  7445  081E  00FF               	movwf	127
  7446  081F  087F               	movf	127,w
  7447  0820  00D6               	movwf	___fttol@exp1
  7448  0821  0856               	movf	___fttol@exp1,w
  7449  0822  1D03               	btfss	3,2
  7450  0823  282D               	goto	l4273
  7451  0824                     l4269:
  7452  0824  3000               	movlw	0
  7453  0825  00CD               	movwf	?___fttol+3
  7454  0826  3000               	movlw	0
  7455  0827  00CC               	movwf	?___fttol+2
  7456  0828  3000               	movlw	0
  7457  0829  00CB               	movwf	?___fttol+1
  7458  082A  3000               	movlw	0
  7459  082B  00CA               	movwf	?___fttol
  7460  082C  0008               	return
  7461  082D                     l4273:
  7462  082D  084A               	movf	___fttol@f1,w
  7463  082E  00CE               	movwf	??___fttol
  7464  082F  084B               	movf	___fttol@f1+1,w
  7465  0830  00CF               	movwf	??___fttol+1
  7466  0831  084C               	movf	___fttol@f1+2,w
  7467  0832  00D0               	movwf	??___fttol+2
  7468  0833  3017               	movlw	23
  7469  0834                     u4305:
  7470  0834  1003               	clrc
  7471  0835  0CD0               	rrf	??___fttol+2,f
  7472  0836  0CCF               	rrf	??___fttol+1,f
  7473  0837  0CCE               	rrf	??___fttol,f
  7474  0838  3EFF               	addlw	-1
  7475  0839  1D03               	skipz
  7476  083A  2834               	goto	u4305
  7477  083B  084E               	movf	??___fttol,w
  7478  083C  00FF               	movwf	127
  7479  083D  087F               	movf	127,w
  7480  083E  00D1               	movwf	___fttol@sign1
  7481  083F  17CB               	bsf	___fttol@f1+1,7
  7482  0840  30FF               	movlw	255
  7483  0841  05CA               	andwf	___fttol@f1,f
  7484  0842  30FF               	movlw	255
  7485  0843  05CB               	andwf	___fttol@f1+1,f
  7486  0844  3000               	movlw	0
  7487  0845  05CC               	andwf	___fttol@f1+2,f
  7488  0846  084A               	movf	___fttol@f1,w
  7489  0847  00D2               	movwf	___fttol@lval
  7490  0848  084B               	movf	___fttol@f1+1,w
  7491  0849  00D3               	movwf	___fttol@lval+1
  7492  084A  084C               	movf	___fttol@f1+2,w
  7493  084B  00D4               	movwf	___fttol@lval+2
  7494  084C  01D5               	clrf	___fttol@lval+3
  7495  084D  308E               	movlw	142
  7496  084E  02D6               	subwf	___fttol@exp1,f
  7497  084F  1FD6               	btfss	___fttol@exp1,7
  7498  0850  2866               	goto	l4295
  7499  0851  0856               	movf	___fttol@exp1,w
  7500  0852  3A80               	xorlw	128
  7501  0853  3E8F               	addlw	143
  7502  0854  1C03               	btfss	3,0
  7503  0855  2824               	goto	l4269
  7504  0856                     l4291:
  7505  0856  3001               	movlw	1
  7506  0857                     u4335:
  7507  0857  1003               	clrc
  7508  0858  0CD5               	rrf	___fttol@lval+3,f
  7509  0859  0CD4               	rrf	___fttol@lval+2,f
  7510  085A  0CD3               	rrf	___fttol@lval+1,f
  7511  085B  0CD2               	rrf	___fttol@lval,f
  7512  085C  3EFF               	addlw	-1
  7513  085D  1D03               	skipz
  7514  085E  2857               	goto	u4335
  7515  085F  3001               	movlw	1
  7516  0860  00FF               	movwf	127
  7517  0861  087F               	movf	127,w
  7518  0862  07D6               	addwf	___fttol@exp1,f
  7519  0863  1903               	btfsc	3,2
  7520  0864  2879               	goto	l4303
  7521  0865  2856               	goto	l4291
  7522  0866                     l4295:
  7523  0866  3018               	movlw	24
  7524  0867  0256               	subwf	___fttol@exp1,w
  7525  0868  1803               	btfsc	3,0
  7526  0869  2824               	goto	l4269
  7527  086A                     l1096:
  7528  086A  0856               	movf	___fttol@exp1,w
  7529  086B  1903               	btfsc	3,2
  7530  086C  2879               	goto	l4303
  7531  086D  3001               	movlw	1
  7532  086E  00CE               	movwf	??___fttol
  7533  086F                     u4365:
  7534  086F  1003               	clrc
  7535  0870  0DD2               	rlf	___fttol@lval,f
  7536  0871  0DD3               	rlf	___fttol@lval+1,f
  7537  0872  0DD4               	rlf	___fttol@lval+2,f
  7538  0873  0DD5               	rlf	___fttol@lval+3,f
  7539  0874  0BCE               	decfsz	??___fttol,f
  7540  0875  286F               	goto	u4365
  7541  0876  3001               	movlw	1
  7542  0877  02D6               	subwf	___fttol@exp1,f
  7543  0878  286A               	goto	l1096
  7544  0879                     l4303:
  7545  0879  0851               	movf	___fttol@sign1,w
  7546  087A  1903               	btfsc	3,2
  7547  087B  2887               	goto	l4307
  7548  087C  09D2               	comf	___fttol@lval,f
  7549  087D  09D3               	comf	___fttol@lval+1,f
  7550  087E  09D4               	comf	___fttol@lval+2,f
  7551  087F  09D5               	comf	___fttol@lval+3,f
  7552  0880  0AD2               	incf	___fttol@lval,f
  7553  0881  1903               	skipnz
  7554  0882  0AD3               	incf	___fttol@lval+1,f
  7555  0883  1903               	skipnz
  7556  0884  0AD4               	incf	___fttol@lval+2,f
  7557  0885  1903               	skipnz
  7558  0886  0AD5               	incf	___fttol@lval+3,f
  7559  0887                     l4307:
  7560  0887  0855               	movf	___fttol@lval+3,w
  7561  0888  00CD               	movwf	?___fttol+3
  7562  0889  0854               	movf	___fttol@lval+2,w
  7563  088A  00CC               	movwf	?___fttol+2
  7564  088B  0853               	movf	___fttol@lval+1,w
  7565  088C  00CB               	movwf	?___fttol+1
  7566  088D  0852               	movf	___fttol@lval,w
  7567  088E  00CA               	movwf	?___fttol
  7568  088F  0008               	return
  7569  0890                     __end_of___fttol:
  7570                           
  7571                           	psect	text38
  7572  0705                     __ptext38:	
  7573 ;; *************** function ___ftmul *****************
  7574 ;; Defined at:
  7575 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftmul.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  f1              3   12[BANK0 ] float 
  7578 ;;  f2              3   15[BANK0 ] float 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  7581 ;;  sign            1   26[BANK0 ] unsigned char 
  7582 ;;  cntr            1   25[BANK0 ] unsigned char 
  7583 ;;  exp             1   21[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  3   12[BANK0 ] float 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7593 ;;      Params:         0       6       0       0       0
  7594 ;;      Locals:         0       6       0       0       0
  7595 ;;      Temps:          0       3       0       0       0
  7596 ;;      Totals:         0      15       0       0       0
  7597 ;;Total ram usage:       15 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    3
  7600 ;; This function calls:
  7601 ;;		___ftpack
  7602 ;; This function is called by:
  7603 ;;		_Pwm1
  7604 ;;		_Adc_Rpm_Read
  7605 ;;		_Adc_Pwm_Read
  7606 ;;		_Adc_Min_Read
  7607 ;;		_Adc_Temp_Read
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           
  7612                           ;psect for function ___ftmul
  7613  0705                     ___ftmul:
  7614                           
  7615                           ;incstack = 0
  7616                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7617  0705  1283               	bcf	3,5	;RP0=0, select bank0
  7618  0706  1303               	bcf	3,6	;RP1=0, select bank0
  7619  0707  082C               	movf	___ftmul@f1,w
  7620  0708  00B2               	movwf	??___ftmul
  7621  0709  082D               	movf	___ftmul@f1+1,w
  7622  070A  00B3               	movwf	??___ftmul+1
  7623  070B  082E               	movf	___ftmul@f1+2,w
  7624  070C  00B4               	movwf	??___ftmul+2
  7625  070D  1003               	clrc
  7626  070E  0D33               	rlf	??___ftmul+1,w
  7627  070F  0D34               	rlf	??___ftmul+2,w
  7628  0710  00FF               	movwf	127
  7629  0711  087F               	movf	127,w
  7630  0712  00B5               	movwf	___ftmul@exp
  7631  0713  0835               	movf	___ftmul@exp,w
  7632  0714  1D03               	btfss	3,2
  7633  0715  2F1D               	goto	l4223
  7634  0716  3000               	movlw	0
  7635  0717  00AC               	movwf	?___ftmul
  7636  0718  3000               	movlw	0
  7637  0719  00AD               	movwf	?___ftmul+1
  7638  071A  3000               	movlw	0
  7639  071B  00AE               	movwf	?___ftmul+2
  7640  071C  0008               	return
  7641  071D                     l4223:
  7642  071D  082F               	movf	___ftmul@f2,w
  7643  071E  00B2               	movwf	??___ftmul
  7644  071F  0830               	movf	___ftmul@f2+1,w
  7645  0720  00B3               	movwf	??___ftmul+1
  7646  0721  0831               	movf	___ftmul@f2+2,w
  7647  0722  00B4               	movwf	??___ftmul+2
  7648  0723  1003               	clrc
  7649  0724  0D33               	rlf	??___ftmul+1,w
  7650  0725  0D34               	rlf	??___ftmul+2,w
  7651  0726  00FF               	movwf	127
  7652  0727  087F               	movf	127,w
  7653  0728  00BA               	movwf	___ftmul@sign
  7654  0729  083A               	movf	___ftmul@sign,w
  7655  072A  1D03               	btfss	3,2
  7656  072B  2F33               	goto	l4229
  7657  072C  3000               	movlw	0
  7658  072D  00AC               	movwf	?___ftmul
  7659  072E  3000               	movlw	0
  7660  072F  00AD               	movwf	?___ftmul+1
  7661  0730  3000               	movlw	0
  7662  0731  00AE               	movwf	?___ftmul+2
  7663  0732  0008               	return
  7664  0733                     l4229:
  7665  0733  083A               	movf	___ftmul@sign,w
  7666  0734  3E7B               	addlw	123
  7667  0735  00FF               	movwf	127
  7668  0736  087F               	movf	127,w
  7669  0737  07B5               	addwf	___ftmul@exp,f
  7670  0738  082C               	movf	___ftmul@f1,w
  7671  0739  00B2               	movwf	??___ftmul
  7672  073A  082D               	movf	___ftmul@f1+1,w
  7673  073B  00B3               	movwf	??___ftmul+1
  7674  073C  082E               	movf	___ftmul@f1+2,w
  7675  073D  00B4               	movwf	??___ftmul+2
  7676  073E  3010               	movlw	16
  7677  073F                     u4175:
  7678  073F  1003               	clrc
  7679  0740  0CB4               	rrf	??___ftmul+2,f
  7680  0741  0CB3               	rrf	??___ftmul+1,f
  7681  0742  0CB2               	rrf	??___ftmul,f
  7682  0743  3EFF               	addlw	-1
  7683  0744  1D03               	skipz
  7684  0745  2F3F               	goto	u4175
  7685  0746  0832               	movf	??___ftmul,w
  7686  0747  00FF               	movwf	127
  7687  0748  087F               	movf	127,w
  7688  0749  00BA               	movwf	___ftmul@sign
  7689  074A  082F               	movf	___ftmul@f2,w
  7690  074B  00B2               	movwf	??___ftmul
  7691  074C  0830               	movf	___ftmul@f2+1,w
  7692  074D  00B3               	movwf	??___ftmul+1
  7693  074E  0831               	movf	___ftmul@f2+2,w
  7694  074F  00B4               	movwf	??___ftmul+2
  7695  0750  3010               	movlw	16
  7696  0751                     u4185:
  7697  0751  1003               	clrc
  7698  0752  0CB4               	rrf	??___ftmul+2,f
  7699  0753  0CB3               	rrf	??___ftmul+1,f
  7700  0754  0CB2               	rrf	??___ftmul,f
  7701  0755  3EFF               	addlw	-1
  7702  0756  1D03               	skipz
  7703  0757  2F51               	goto	u4185
  7704  0758  0832               	movf	??___ftmul,w
  7705  0759  00FF               	movwf	127
  7706  075A  087F               	movf	127,w
  7707  075B  06BA               	xorwf	___ftmul@sign,f
  7708  075C  3080               	movlw	128
  7709  075D  00FF               	movwf	127
  7710  075E  087F               	movf	127,w
  7711  075F  05BA               	andwf	___ftmul@sign,f
  7712  0760  17AD               	bsf	___ftmul@f1+1,7
  7713  0761  17B0               	bsf	___ftmul@f2+1,7
  7714  0762  30FF               	movlw	255
  7715  0763  05AF               	andwf	___ftmul@f2,f
  7716  0764  30FF               	movlw	255
  7717  0765  05B0               	andwf	___ftmul@f2+1,f
  7718  0766  3000               	movlw	0
  7719  0767  05B1               	andwf	___ftmul@f2+2,f
  7720  0768  3000               	movlw	0
  7721  0769  00B6               	movwf	___ftmul@f3_as_product
  7722  076A  3000               	movlw	0
  7723  076B  00B7               	movwf	___ftmul@f3_as_product+1
  7724  076C  3000               	movlw	0
  7725  076D  00B8               	movwf	___ftmul@f3_as_product+2
  7726  076E  3007               	movlw	7
  7727  076F  00FF               	movwf	127
  7728  0770  087F               	movf	127,w
  7729  0771  00B9               	movwf	___ftmul@cntr
  7730  0772                     l4241:
  7731  0772  1C2C               	btfss	___ftmul@f1,0
  7732  0773  2F82               	goto	l4245
  7733  0774  082F               	movf	___ftmul@f2,w
  7734  0775  07B6               	addwf	___ftmul@f3_as_product,f
  7735  0776  0830               	movf	___ftmul@f2+1,w
  7736  0777  1103               	clrz
  7737  0778  1803               	skipnc
  7738  0779  0A30               	incf	___ftmul@f2+1,w
  7739  077A  1D03               	btfss	3,2
  7740  077B  07B7               	addwf	___ftmul@f3_as_product+1,f
  7741  077C  0831               	movf	___ftmul@f2+2,w
  7742  077D  1103               	clrz
  7743  077E  1803               	skipnc
  7744  077F  0A31               	incf	___ftmul@f2+2,w
  7745  0780  1D03               	btfss	3,2
  7746  0781  07B8               	addwf	___ftmul@f3_as_product+2,f
  7747  0782                     l4245:
  7748  0782  3001               	movlw	1
  7749  0783                     u4215:
  7750  0783  1003               	clrc
  7751  0784  0CAE               	rrf	___ftmul@f1+2,f
  7752  0785  0CAD               	rrf	___ftmul@f1+1,f
  7753  0786  0CAC               	rrf	___ftmul@f1,f
  7754  0787  3EFF               	addlw	-1
  7755  0788  1D03               	skipz
  7756  0789  2F83               	goto	u4215
  7757  078A  3001               	movlw	1
  7758  078B                     u4225:
  7759  078B  1003               	clrc
  7760  078C  0DAF               	rlf	___ftmul@f2,f
  7761  078D  0DB0               	rlf	___ftmul@f2+1,f
  7762  078E  0DB1               	rlf	___ftmul@f2+2,f
  7763  078F  3EFF               	addlw	-1
  7764  0790  1D03               	skipz
  7765  0791  2F8B               	goto	u4225
  7766  0792  3001               	movlw	1
  7767  0793  02B9               	subwf	___ftmul@cntr,f
  7768  0794  1D03               	btfss	3,2
  7769  0795  2F72               	goto	l4241
  7770  0796  3009               	movlw	9
  7771  0797  00FF               	movwf	127
  7772  0798  087F               	movf	127,w
  7773  0799  00B9               	movwf	___ftmul@cntr
  7774  079A                     l4253:
  7775  079A  1C2C               	btfss	___ftmul@f1,0
  7776  079B  2FAA               	goto	l4257
  7777  079C  082F               	movf	___ftmul@f2,w
  7778  079D  07B6               	addwf	___ftmul@f3_as_product,f
  7779  079E  0830               	movf	___ftmul@f2+1,w
  7780  079F  1103               	clrz
  7781  07A0  1803               	skipnc
  7782  07A1  0A30               	incf	___ftmul@f2+1,w
  7783  07A2  1D03               	btfss	3,2
  7784  07A3  07B7               	addwf	___ftmul@f3_as_product+1,f
  7785  07A4  0831               	movf	___ftmul@f2+2,w
  7786  07A5  1103               	clrz
  7787  07A6  1803               	skipnc
  7788  07A7  0A31               	incf	___ftmul@f2+2,w
  7789  07A8  1D03               	btfss	3,2
  7790  07A9  07B8               	addwf	___ftmul@f3_as_product+2,f
  7791  07AA                     l4257:
  7792  07AA  3001               	movlw	1
  7793  07AB                     u4265:
  7794  07AB  1003               	clrc
  7795  07AC  0CAE               	rrf	___ftmul@f1+2,f
  7796  07AD  0CAD               	rrf	___ftmul@f1+1,f
  7797  07AE  0CAC               	rrf	___ftmul@f1,f
  7798  07AF  3EFF               	addlw	-1
  7799  07B0  1D03               	skipz
  7800  07B1  2FAB               	goto	u4265
  7801  07B2  3001               	movlw	1
  7802  07B3                     u4275:
  7803  07B3  1003               	clrc
  7804  07B4  0CB8               	rrf	___ftmul@f3_as_product+2,f
  7805  07B5  0CB7               	rrf	___ftmul@f3_as_product+1,f
  7806  07B6  0CB6               	rrf	___ftmul@f3_as_product,f
  7807  07B7  3EFF               	addlw	-1
  7808  07B8  1D03               	skipz
  7809  07B9  2FB3               	goto	u4275
  7810  07BA  3001               	movlw	1
  7811  07BB  02B9               	subwf	___ftmul@cntr,f
  7812  07BC  1D03               	btfss	3,2
  7813  07BD  2F9A               	goto	l4253
  7814  07BE  0836               	movf	___ftmul@f3_as_product,w
  7815  07BF  00A0               	movwf	___ftpack@arg
  7816  07C0  0837               	movf	___ftmul@f3_as_product+1,w
  7817  07C1  00A1               	movwf	___ftpack@arg+1
  7818  07C2  0838               	movf	___ftmul@f3_as_product+2,w
  7819  07C3  00A2               	movwf	___ftpack@arg+2
  7820  07C4  0835               	movf	___ftmul@exp,w
  7821  07C5  00FF               	movwf	127
  7822  07C6  087F               	movf	127,w
  7823  07C7  00A3               	movwf	___ftpack@exp
  7824  07C8  083A               	movf	___ftmul@sign,w
  7825  07C9  00FF               	movwf	127
  7826  07CA  087F               	movf	127,w
  7827  07CB  00A4               	movwf	___ftpack@sign
  7828  07CC  160A  118A  2792   	fcall	___ftpack
  7829  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  7830  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  7831  07D1  0820               	movf	?___ftpack,w
  7832  07D2  00AC               	movwf	?___ftmul
  7833  07D3  0821               	movf	?___ftpack+1,w
  7834  07D4  00AD               	movwf	?___ftmul+1
  7835  07D5  0822               	movf	?___ftpack+2,w
  7836  07D6  00AE               	movwf	?___ftmul+2
  7837  07D7  0008               	return
  7838  07D8                     __end_of___ftmul:
  7839                           
  7840                           	psect	text39
  7841  0DC8                     __ptext39:	
  7842 ;; *************** function ___ftdiv *****************
  7843 ;; Defined at:
  7844 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftdiv.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  f2              3   27[BANK0 ] float 
  7847 ;;  f1              3   30[BANK0 ] float 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  f3              3   37[BANK0 ] float 
  7850 ;;  sign            1   41[BANK0 ] unsigned char 
  7851 ;;  exp             1   40[BANK0 ] unsigned char 
  7852 ;;  cntr            1   36[BANK0 ] unsigned char 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  3   27[BANK0 ] float 
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7862 ;;      Params:         0       6       0       0       0
  7863 ;;      Locals:         0       6       0       0       0
  7864 ;;      Temps:          0       3       0       0       0
  7865 ;;      Totals:         0      15       0       0       0
  7866 ;;Total ram usage:       15 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    3
  7869 ;; This function calls:
  7870 ;;		___ftpack
  7871 ;; This function is called by:
  7872 ;;		_Salida_Modo_Pulv
  7873 ;;		_Pwm1_init
  7874 ;;		_Pwm1
  7875 ;;		_Adc_Rpm_Read
  7876 ;;		_Adc_Pwm_Read
  7877 ;;		_Adc_Min_Read
  7878 ;;		_Adc_Temp_Read
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function ___ftdiv
  7884  0DC8                     ___ftdiv:
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7888  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7889  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7890  0DCA  083E               	movf	___ftdiv@f1,w
  7891  0DCB  00C1               	movwf	??___ftdiv
  7892  0DCC  083F               	movf	___ftdiv@f1+1,w
  7893  0DCD  00C2               	movwf	??___ftdiv+1
  7894  0DCE  0840               	movf	___ftdiv@f1+2,w
  7895  0DCF  00C3               	movwf	??___ftdiv+2
  7896  0DD0  1003               	clrc
  7897  0DD1  0D42               	rlf	??___ftdiv+1,w
  7898  0DD2  0D43               	rlf	??___ftdiv+2,w
  7899  0DD3  00FF               	movwf	127
  7900  0DD4  087F               	movf	127,w
  7901  0DD5  00C8               	movwf	___ftdiv@exp
  7902  0DD6  0848               	movf	___ftdiv@exp,w
  7903  0DD7  1D03               	btfss	3,2
  7904  0DD8  2DE0               	goto	l4177
  7905  0DD9  3000               	movlw	0
  7906  0DDA  00BB               	movwf	?___ftdiv
  7907  0DDB  3000               	movlw	0
  7908  0DDC  00BC               	movwf	?___ftdiv+1
  7909  0DDD  3000               	movlw	0
  7910  0DDE  00BD               	movwf	?___ftdiv+2
  7911  0DDF  0008               	return
  7912  0DE0                     l4177:
  7913  0DE0  083B               	movf	___ftdiv@f2,w
  7914  0DE1  00C1               	movwf	??___ftdiv
  7915  0DE2  083C               	movf	___ftdiv@f2+1,w
  7916  0DE3  00C2               	movwf	??___ftdiv+1
  7917  0DE4  083D               	movf	___ftdiv@f2+2,w
  7918  0DE5  00C3               	movwf	??___ftdiv+2
  7919  0DE6  1003               	clrc
  7920  0DE7  0D42               	rlf	??___ftdiv+1,w
  7921  0DE8  0D43               	rlf	??___ftdiv+2,w
  7922  0DE9  00FF               	movwf	127
  7923  0DEA  087F               	movf	127,w
  7924  0DEB  00C9               	movwf	___ftdiv@sign
  7925  0DEC  0849               	movf	___ftdiv@sign,w
  7926  0DED  1D03               	btfss	3,2
  7927  0DEE  2DF6               	goto	l4183
  7928  0DEF  3000               	movlw	0
  7929  0DF0  00BB               	movwf	?___ftdiv
  7930  0DF1  3000               	movlw	0
  7931  0DF2  00BC               	movwf	?___ftdiv+1
  7932  0DF3  3000               	movlw	0
  7933  0DF4  00BD               	movwf	?___ftdiv+2
  7934  0DF5  0008               	return
  7935  0DF6                     l4183:
  7936  0DF6  3000               	movlw	0
  7937  0DF7  00C5               	movwf	___ftdiv@f3
  7938  0DF8  3000               	movlw	0
  7939  0DF9  00C6               	movwf	___ftdiv@f3+1
  7940  0DFA  3000               	movlw	0
  7941  0DFB  00C7               	movwf	___ftdiv@f3+2
  7942  0DFC  3089               	movlw	137
  7943  0DFD  0749               	addwf	___ftdiv@sign,w
  7944  0DFE  00C1               	movwf	??___ftdiv
  7945  0DFF  0841               	movf	??___ftdiv,w
  7946  0E00  02C8               	subwf	___ftdiv@exp,f
  7947  0E01  083E               	movf	___ftdiv@f1,w
  7948  0E02  00C1               	movwf	??___ftdiv
  7949  0E03  083F               	movf	___ftdiv@f1+1,w
  7950  0E04  00C2               	movwf	??___ftdiv+1
  7951  0E05  0840               	movf	___ftdiv@f1+2,w
  7952  0E06  00C3               	movwf	??___ftdiv+2
  7953  0E07  3010               	movlw	16
  7954  0E08                     u4095:
  7955  0E08  1003               	clrc
  7956  0E09  0CC3               	rrf	??___ftdiv+2,f
  7957  0E0A  0CC2               	rrf	??___ftdiv+1,f
  7958  0E0B  0CC1               	rrf	??___ftdiv,f
  7959  0E0C  3EFF               	addlw	-1
  7960  0E0D  1D03               	skipz
  7961  0E0E  2E08               	goto	u4095
  7962  0E0F  0841               	movf	??___ftdiv,w
  7963  0E10  00FF               	movwf	127
  7964  0E11  087F               	movf	127,w
  7965  0E12  00C9               	movwf	___ftdiv@sign
  7966  0E13  083B               	movf	___ftdiv@f2,w
  7967  0E14  00C1               	movwf	??___ftdiv
  7968  0E15  083C               	movf	___ftdiv@f2+1,w
  7969  0E16  00C2               	movwf	??___ftdiv+1
  7970  0E17  083D               	movf	___ftdiv@f2+2,w
  7971  0E18  00C3               	movwf	??___ftdiv+2
  7972  0E19  3010               	movlw	16
  7973  0E1A                     u4105:
  7974  0E1A  1003               	clrc
  7975  0E1B  0CC3               	rrf	??___ftdiv+2,f
  7976  0E1C  0CC2               	rrf	??___ftdiv+1,f
  7977  0E1D  0CC1               	rrf	??___ftdiv,f
  7978  0E1E  3EFF               	addlw	-1
  7979  0E1F  1D03               	skipz
  7980  0E20  2E1A               	goto	u4105
  7981  0E21  0841               	movf	??___ftdiv,w
  7982  0E22  00FF               	movwf	127
  7983  0E23  087F               	movf	127,w
  7984  0E24  06C9               	xorwf	___ftdiv@sign,f
  7985  0E25  3080               	movlw	128
  7986  0E26  00FF               	movwf	127
  7987  0E27  087F               	movf	127,w
  7988  0E28  05C9               	andwf	___ftdiv@sign,f
  7989  0E29  17BF               	bsf	___ftdiv@f1+1,7
  7990  0E2A  30FF               	movlw	255
  7991  0E2B  05BE               	andwf	___ftdiv@f1,f
  7992  0E2C  30FF               	movlw	255
  7993  0E2D  05BF               	andwf	___ftdiv@f1+1,f
  7994  0E2E  3000               	movlw	0
  7995  0E2F  05C0               	andwf	___ftdiv@f1+2,f
  7996  0E30  17BC               	bsf	___ftdiv@f2+1,7
  7997  0E31  30FF               	movlw	255
  7998  0E32  05BB               	andwf	___ftdiv@f2,f
  7999  0E33  30FF               	movlw	255
  8000  0E34  05BC               	andwf	___ftdiv@f2+1,f
  8001  0E35  3000               	movlw	0
  8002  0E36  05BD               	andwf	___ftdiv@f2+2,f
  8003  0E37  3018               	movlw	24
  8004  0E38  00FF               	movwf	127
  8005  0E39  087F               	movf	127,w
  8006  0E3A  00C4               	movwf	___ftdiv@cntr
  8007  0E3B                     l4201:
  8008  0E3B  3001               	movlw	1
  8009  0E3C                     u4115:
  8010  0E3C  1003               	clrc
  8011  0E3D  0DC5               	rlf	___ftdiv@f3,f
  8012  0E3E  0DC6               	rlf	___ftdiv@f3+1,f
  8013  0E3F  0DC7               	rlf	___ftdiv@f3+2,f
  8014  0E40  3EFF               	addlw	-1
  8015  0E41  1D03               	skipz
  8016  0E42  2E3C               	goto	u4115
  8017  0E43  083D               	movf	___ftdiv@f2+2,w
  8018  0E44  0240               	subwf	___ftdiv@f1+2,w
  8019  0E45  1D03               	skipz
  8020  0E46  2E4D               	goto	u4125
  8021  0E47  083C               	movf	___ftdiv@f2+1,w
  8022  0E48  023F               	subwf	___ftdiv@f1+1,w
  8023  0E49  1D03               	skipz
  8024  0E4A  2E4D               	goto	u4125
  8025  0E4B  083B               	movf	___ftdiv@f2,w
  8026  0E4C  023E               	subwf	___ftdiv@f1,w
  8027  0E4D                     u4125:
  8028  0E4D  1C03               	skipc
  8029  0E4E  2E5A               	goto	l4209
  8030  0E4F  083B               	movf	___ftdiv@f2,w
  8031  0E50  02BE               	subwf	___ftdiv@f1,f
  8032  0E51  083C               	movf	___ftdiv@f2+1,w
  8033  0E52  1C03               	skipc
  8034  0E53  0F3C               	incfsz	___ftdiv@f2+1,w
  8035  0E54  02BF               	subwf	___ftdiv@f1+1,f
  8036  0E55  083D               	movf	___ftdiv@f2+2,w
  8037  0E56  1C03               	skipc
  8038  0E57  0A3D               	incf	___ftdiv@f2+2,w
  8039  0E58  02C0               	subwf	___ftdiv@f1+2,f
  8040  0E59  1445               	bsf	___ftdiv@f3,0
  8041  0E5A                     l4209:
  8042  0E5A  3001               	movlw	1
  8043  0E5B                     u4135:
  8044  0E5B  1003               	clrc
  8045  0E5C  0DBE               	rlf	___ftdiv@f1,f
  8046  0E5D  0DBF               	rlf	___ftdiv@f1+1,f
  8047  0E5E  0DC0               	rlf	___ftdiv@f1+2,f
  8048  0E5F  3EFF               	addlw	-1
  8049  0E60  1D03               	skipz
  8050  0E61  2E5B               	goto	u4135
  8051  0E62  3001               	movlw	1
  8052  0E63  02C4               	subwf	___ftdiv@cntr,f
  8053  0E64  1D03               	btfss	3,2
  8054  0E65  2E3B               	goto	l4201
  8055  0E66  0845               	movf	___ftdiv@f3,w
  8056  0E67  00A0               	movwf	___ftpack@arg
  8057  0E68  0846               	movf	___ftdiv@f3+1,w
  8058  0E69  00A1               	movwf	___ftpack@arg+1
  8059  0E6A  0847               	movf	___ftdiv@f3+2,w
  8060  0E6B  00A2               	movwf	___ftpack@arg+2
  8061  0E6C  0848               	movf	___ftdiv@exp,w
  8062  0E6D  00FF               	movwf	127
  8063  0E6E  087F               	movf	127,w
  8064  0E6F  00A3               	movwf	___ftpack@exp
  8065  0E70  0849               	movf	___ftdiv@sign,w
  8066  0E71  00FF               	movwf	127
  8067  0E72  087F               	movf	127,w
  8068  0E73  00A4               	movwf	___ftpack@sign
  8069  0E74  160A  118A  2792   	fcall	___ftpack
  8070  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  8071  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  8072  0E79  0820               	movf	?___ftpack,w
  8073  0E7A  00BB               	movwf	?___ftdiv
  8074  0E7B  0821               	movf	?___ftpack+1,w
  8075  0E7C  00BC               	movwf	?___ftdiv+1
  8076  0E7D  0822               	movf	?___ftpack+2,w
  8077  0E7E  00BD               	movwf	?___ftdiv+2
  8078  0E7F  0008               	return
  8079  0E80                     __end_of___ftdiv:
  8080                           
  8081                           	psect	text40
  8082  07D8                     __ptext40:	
  8083 ;; *************** function ___awtoft *****************
  8084 ;; Defined at:
  8085 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\awtoft.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  c               2    8[BANK0 ] int 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  sign            1   11[BANK0 ] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  3    8[BANK0 ] float 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8099 ;;      Params:         0       3       0       0       0
  8100 ;;      Locals:         0       1       0       0       0
  8101 ;;      Temps:          0       0       0       0       0
  8102 ;;      Totals:         0       4       0       0       0
  8103 ;;Total ram usage:        4 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    3
  8106 ;; This function calls:
  8107 ;;		___ftpack
  8108 ;; This function is called by:
  8109 ;;		_Adc_Rpm_Read
  8110 ;;		_Adc_Pwm_Read
  8111 ;;		_Adc_Min_Read
  8112 ;;		_Adc_Temp_Read
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function ___awtoft
  8118  07D8                     ___awtoft:
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8122  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  8123  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  8124  07DA  01AB               	clrf	___awtoft@sign
  8125  07DB  1FA9               	btfss	___awtoft@c+1,7
  8126  07DC  2FE4               	goto	l4167
  8127  07DD  09A8               	comf	___awtoft@c,f
  8128  07DE  09A9               	comf	___awtoft@c+1,f
  8129  07DF  0AA8               	incf	___awtoft@c,f
  8130  07E0  1903               	skipnz
  8131  07E1  0AA9               	incf	___awtoft@c+1,f
  8132  07E2  01AB               	clrf	___awtoft@sign
  8133  07E3  0AAB               	incf	___awtoft@sign,f
  8134  07E4                     l4167:
  8135  07E4  0828               	movf	___awtoft@c,w
  8136  07E5  00A0               	movwf	___ftpack@arg
  8137  07E6  0829               	movf	___awtoft@c+1,w
  8138  07E7  00A1               	movwf	___ftpack@arg+1
  8139  07E8  01A2               	clrf	___ftpack@arg+2
  8140  07E9  308E               	movlw	142
  8141  07EA  00FF               	movwf	127
  8142  07EB  087F               	movf	127,w
  8143  07EC  00A3               	movwf	___ftpack@exp
  8144  07ED  082B               	movf	___awtoft@sign,w
  8145  07EE  00FF               	movwf	127
  8146  07EF  087F               	movf	127,w
  8147  07F0  00A4               	movwf	___ftpack@sign
  8148  07F1  160A  118A  2792   	fcall	___ftpack
  8149  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  8150  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  8151  07F6  0820               	movf	?___ftpack,w
  8152  07F7  00A8               	movwf	?___awtoft
  8153  07F8  0821               	movf	?___ftpack+1,w
  8154  07F9  00A9               	movwf	?___awtoft+1
  8155  07FA  0822               	movf	?___ftpack+2,w
  8156  07FB  00AA               	movwf	?___awtoft+2
  8157  07FC  0008               	return
  8158  07FD                     __end_of___awtoft:
  8159                           
  8160                           	psect	text41
  8161  1792                     __ptext41:	
  8162 ;; *************** function ___ftpack *****************
  8163 ;; Defined at:
  8164 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\float.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  arg             3    0[BANK0 ] unsigned um
  8167 ;;  exp             1    3[BANK0 ] unsigned char 
  8168 ;;  sign            1    4[BANK0 ] unsigned char 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  3    0[BANK0 ] float 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0, btemp+1
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8180 ;;      Params:         0       5       0       0       0
  8181 ;;      Locals:         0       0       0       0       0
  8182 ;;      Temps:          0       3       0       0       0
  8183 ;;      Totals:         0       8       0       0       0
  8184 ;;Total ram usage:        8 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    2
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		___awtoft
  8191 ;;		___ftdiv
  8192 ;;		___ftmul
  8193 ;;		___lbtoft
  8194 ;;		___lwtoft
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           
  8199                           ;psect for function ___ftpack
  8200  1792                     ___ftpack:
  8201                           
  8202                           ;incstack = 0
  8203                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  8204  1792  1283               	bcf	3,5	;RP0=0, select bank0
  8205  1793  1303               	bcf	3,6	;RP1=0, select bank0
  8206  1794  0823               	movf	___ftpack@exp,w
  8207  1795  1903               	btfsc	3,2
  8208  1796  2F9C               	goto	l4061
  8209  1797  0822               	movf	___ftpack@arg+2,w
  8210  1798  0421               	iorwf	___ftpack@arg+1,w
  8211  1799  0420               	iorwf	___ftpack@arg,w
  8212  179A  1D03               	skipz
  8213  179B  2FAF               	goto	l4069
  8214  179C                     l4061:
  8215  179C  3000               	movlw	0
  8216  179D  00A0               	movwf	?___ftpack
  8217  179E  3000               	movlw	0
  8218  179F  00A1               	movwf	?___ftpack+1
  8219  17A0  3000               	movlw	0
  8220  17A1  00A2               	movwf	?___ftpack+2
  8221  17A2  0008               	return
  8222  17A3                     l4065:
  8223  17A3  3001               	movlw	1
  8224  17A4  00FF               	movwf	127
  8225  17A5  087F               	movf	127,w
  8226  17A6  07A3               	addwf	___ftpack@exp,f
  8227  17A7  3001               	movlw	1
  8228  17A8                     u3895:
  8229  17A8  1003               	clrc
  8230  17A9  0CA2               	rrf	___ftpack@arg+2,f
  8231  17AA  0CA1               	rrf	___ftpack@arg+1,f
  8232  17AB  0CA0               	rrf	___ftpack@arg,f
  8233  17AC  3EFF               	addlw	-1
  8234  17AD  1D03               	skipz
  8235  17AE  2FA8               	goto	u3895
  8236  17AF                     l4069:
  8237  17AF  30FE               	movlw	254
  8238  17B0  0522               	andwf	___ftpack@arg+2,w
  8239  17B1  1903               	btfsc	3,2
  8240  17B2  2FCA               	goto	l4077
  8241  17B3  2FA3               	goto	l4065
  8242  17B4                     l4071:
  8243  17B4  3001               	movlw	1
  8244  17B5  00FF               	movwf	127
  8245  17B6  087F               	movf	127,w
  8246  17B7  07A3               	addwf	___ftpack@exp,f
  8247  17B8  3001               	movlw	1
  8248  17B9  07A0               	addwf	___ftpack@arg,f
  8249  17BA  3000               	movlw	0
  8250  17BB  1803               	skipnc
  8251  17BC  3001               	movlw	1
  8252  17BD  07A1               	addwf	___ftpack@arg+1,f
  8253  17BE  3000               	movlw	0
  8254  17BF  1803               	skipnc
  8255  17C0  3001               	movlw	1
  8256  17C1  07A2               	addwf	___ftpack@arg+2,f
  8257  17C2  3001               	movlw	1
  8258  17C3                     u3915:
  8259  17C3  1003               	clrc
  8260  17C4  0CA2               	rrf	___ftpack@arg+2,f
  8261  17C5  0CA1               	rrf	___ftpack@arg+1,f
  8262  17C6  0CA0               	rrf	___ftpack@arg,f
  8263  17C7  3EFF               	addlw	-1
  8264  17C8  1D03               	skipz
  8265  17C9  2FC3               	goto	u3915
  8266  17CA                     l4077:
  8267  17CA  30FF               	movlw	255
  8268  17CB  0522               	andwf	___ftpack@arg+2,w
  8269  17CC  1903               	btfsc	3,2
  8270  17CD  2FDD               	goto	l4081
  8271  17CE  2FB4               	goto	l4071
  8272  17CF                     l4083:
  8273  17CF  3002               	movlw	2
  8274  17D0  0223               	subwf	___ftpack@exp,w
  8275  17D1  1C03               	btfss	3,0
  8276  17D2  2FDF               	goto	l1012
  8277  17D3  3001               	movlw	1
  8278  17D4  02A3               	subwf	___ftpack@exp,f
  8279  17D5  3001               	movlw	1
  8280  17D6                     u3935:
  8281  17D6  1003               	clrc
  8282  17D7  0DA0               	rlf	___ftpack@arg,f
  8283  17D8  0DA1               	rlf	___ftpack@arg+1,f
  8284  17D9  0DA2               	rlf	___ftpack@arg+2,f
  8285  17DA  3EFF               	addlw	-1
  8286  17DB  1D03               	skipz
  8287  17DC  2FD6               	goto	u3935
  8288  17DD                     l4081:
  8289  17DD  1FA1               	btfss	___ftpack@arg+1,7
  8290  17DE  2FCF               	goto	l4083
  8291  17DF                     l1012:
  8292  17DF  1823               	btfsc	___ftpack@exp,0
  8293  17E0  2FE7               	goto	l1013
  8294  17E1  30FF               	movlw	255
  8295  17E2  05A0               	andwf	___ftpack@arg,f
  8296  17E3  307F               	movlw	127
  8297  17E4  05A1               	andwf	___ftpack@arg+1,f
  8298  17E5  30FF               	movlw	255
  8299  17E6  05A2               	andwf	___ftpack@arg+2,f
  8300  17E7                     l1013:
  8301  17E7  1003               	clrc
  8302  17E8  0CA3               	rrf	___ftpack@exp,f
  8303  17E9  0823               	movf	___ftpack@exp,w
  8304  17EA  00A5               	movwf	??___ftpack
  8305  17EB  01A6               	clrf	??___ftpack+1
  8306  17EC  01A7               	clrf	??___ftpack+2
  8307  17ED  3010               	movlw	16
  8308  17EE                     u3975:
  8309  17EE  1003               	clrc
  8310  17EF  0DA5               	rlf	??___ftpack,f
  8311  17F0  0DA6               	rlf	??___ftpack+1,f
  8312  17F1  0DA7               	rlf	??___ftpack+2,f
  8313  17F2  3EFF               	addlw	-1
  8314  17F3  1D03               	skipz
  8315  17F4  2FEE               	goto	u3975
  8316  17F5  0825               	movf	??___ftpack,w
  8317  17F6  04A0               	iorwf	___ftpack@arg,f
  8318  17F7  0826               	movf	??___ftpack+1,w
  8319  17F8  04A1               	iorwf	___ftpack@arg+1,f
  8320  17F9  0827               	movf	??___ftpack+2,w
  8321  17FA  04A2               	iorwf	___ftpack@arg+2,f
  8322  17FB  0824               	movf	___ftpack@sign,w
  8323  17FC  1903               	btfsc	3,2
  8324  17FD  0008               	return
  8325  17FE  17A2               	bsf	___ftpack@arg+2,7
  8326  17FF  0008               	return
  8327  1800                     __end_of___ftpack:
  8328                           
  8329                           	psect	text42
  8330  1504                     __ptext42:	
  8331 ;; *************** function _Adc *****************
  8332 ;; Defined at:
  8333 ;;		line 25 in file "ADC.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  channel         1    wreg     unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  channel         1    2[BANK0 ] unsigned char 
  8338 ;;  convertion      2    3[BANK0 ] int 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2    4[COMMON] int 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0, btemp+1
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8348 ;;      Params:         2       0       0       0       0
  8349 ;;      Locals:         0       3       0       0       0
  8350 ;;      Temps:          0       2       0       0       0
  8351 ;;      Totals:         2       5       0       0       0
  8352 ;;Total ram usage:        7 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    2
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_Adc_Rpm_Read
  8359 ;;		_Adc_Pwm_Read
  8360 ;;		_Adc_Min_Read
  8361 ;;		_Adc_Temp_Read
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function _Adc
  8367  1504                     _Adc:
  8368                           
  8369                           ;incstack = 0
  8370                           ; Regs used in _Adc: [wreg+status,2+status,0+btemp+1]
  8371                           ;Adc@channel stored from wreg
  8372  1504  1283               	bcf	3,5	;RP0=0, select bank0
  8373  1505  1303               	bcf	3,6	;RP1=0, select bank0
  8374  1506  00A2               	movwf	Adc@channel
  8375                           
  8376                           ;ADC.c: 32:     ADCON0 &= 0xC3;
  8377  1507  30C3               	movlw	195
  8378  1508  00FF               	movwf	127
  8379  1509  087F               	movf	127,w
  8380  150A  059F               	andwf	31,f	;volatile
  8381                           
  8382                           ;ADC.c: 33:     ADCON0 |= channel<<2;
  8383  150B  0822               	movf	Adc@channel,w	;volatile
  8384  150C  00A0               	movwf	??_Adc
  8385  150D  3001               	movlw	1
  8386  150E                     u4005:
  8387  150E  1003               	clrc
  8388  150F  0DA0               	rlf	??_Adc,f
  8389  1510  3EFF               	addlw	-1
  8390  1511  1D03               	skipz
  8391  1512  2D0E               	goto	u4005
  8392  1513  1003               	clrc
  8393  1514  0D20               	rlf	??_Adc,w
  8394  1515  00FF               	movwf	127
  8395  1516  087F               	movf	127,w
  8396  1517  049F               	iorwf	31,f	;volatile
  8397                           
  8398                           ;ADC.c: 36:     ADCON0bits.ADON = 1;
  8399  1518  141F               	bsf	31,0	;volatile
  8400                           
  8401                           ;ADC.c: 37:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  8402  1519  3073               	movlw	115
  8403  151A  1283               	bcf	3,5	;RP0=0, select bank0
  8404  151B  1303               	bcf	3,6	;RP1=0, select bank0
  8405  151C  00A0               	movwf	??_Adc
  8406  151D                     u5367:
  8407  151D  0BA0               	decfsz	??_Adc,f
  8408  151E  2D1D               	goto	u5367
  8409  151F  2D20               	nop2
  8410                           
  8411                           ;ADC.c: 41:     ADCON0bits.GO_nDONE = 1;
  8412  1520  1283               	bcf	3,5	;RP0=0, select bank0
  8413  1521  1303               	bcf	3,6	;RP1=0, select bank0
  8414  1522  149F               	bsf	31,1	;volatile
  8415  1523                     l614:	
  8416                           ;ADC.c: 42:     while(ADCON0bits.GO_nDONE == 1);
  8417                           
  8418  1523  189F               	btfsc	31,1	;volatile
  8419  1524  2D23               	goto	l614
  8420                           
  8421                           ;ADC.c: 43:     convertion = ADRESH, convertion = convertion<<8;
  8422  1525  081E               	movf	30,w	;volatile
  8423  1526  00A0               	movwf	??_Adc
  8424  1527  01A1               	clrf	??_Adc+1
  8425  1528  0820               	movf	??_Adc,w
  8426  1529  00A3               	movwf	Adc@convertion
  8427  152A  0821               	movf	??_Adc+1,w
  8428  152B  00A4               	movwf	Adc@convertion+1
  8429  152C  0824               	movf	Adc@convertion+1,w
  8430  152D  00A1               	movwf	??_Adc+1
  8431  152E  0823               	movf	Adc@convertion,w
  8432  152F  00A0               	movwf	??_Adc
  8433  1530  0820               	movf	??_Adc,w
  8434  1531  00A1               	movwf	??_Adc+1
  8435  1532  01A0               	clrf	??_Adc
  8436  1533  0820               	movf	??_Adc,w
  8437  1534  00A3               	movwf	Adc@convertion
  8438  1535  0821               	movf	??_Adc+1,w
  8439  1536  00A4               	movwf	Adc@convertion+1
  8440                           
  8441                           ;ADC.c: 44:     convertion |= ADRESL;
  8442  1537  1683               	bsf	3,5	;RP0=1, select bank1
  8443  1538  1303               	bcf	3,6	;RP1=0, select bank1
  8444  1539  081E               	movf	30,w	;volatile
  8445  153A  1283               	bcf	3,5	;RP0=0, select bank0
  8446  153B  1303               	bcf	3,6	;RP1=0, select bank0
  8447  153C  00A0               	movwf	??_Adc
  8448  153D  01A1               	clrf	??_Adc+1
  8449  153E  0820               	movf	??_Adc,w
  8450  153F  04A3               	iorwf	Adc@convertion,f
  8451  1540  0821               	movf	??_Adc+1,w
  8452  1541  04A4               	iorwf	Adc@convertion+1,f
  8453                           
  8454                           ;ADC.c: 48:     ADCON0bits.ADON = 0;
  8455  1542  101F               	bcf	31,0	;volatile
  8456                           
  8457                           ;ADC.c: 49:     _delay((unsigned long)((70)*(20000000/4000000.0)));
  8458  1543  3073               	movlw	115
  8459  1544  1283               	bcf	3,5	;RP0=0, select bank0
  8460  1545  1303               	bcf	3,6	;RP1=0, select bank0
  8461  1546  00A0               	movwf	??_Adc
  8462  1547                     u5377:
  8463  1547  0BA0               	decfsz	??_Adc,f
  8464  1548  2D47               	goto	u5377
  8465  1549  2D4A               	nop2
  8466                           
  8467                           ;ADC.c: 51:     return convertion;
  8468  154A  1283               	bcf	3,5	;RP0=0, select bank0
  8469  154B  1303               	bcf	3,6	;RP1=0, select bank0
  8470  154C  0824               	movf	Adc@convertion+1,w
  8471  154D  00F5               	movwf	?_Adc+1
  8472  154E  0823               	movf	Adc@convertion,w
  8473  154F  00F4               	movwf	?_Adc
  8474  1550  0008               	return
  8475  1551                     __end_of_Adc:
  8476                           
  8477                           	psect	text43
  8478  1607                     __ptext43:	
  8479 ;; *************** function _Fin_Proceso *****************
  8480 ;; Defined at:
  8481 ;;		line 52 in file "Menu_Modo.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  i               1   12[BANK0 ] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         0       0       0       0       0
  8496 ;;      Locals:         0       1       0       0       0
  8497 ;;      Temps:          0       3       0       0       0
  8498 ;;      Totals:         0       4       0       0       0
  8499 ;;Total ram usage:        4 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    5
  8502 ;; This function calls:
  8503 ;;		_Proceso_Fin
  8504 ;;		_Pwm1_stop
  8505 ;; This function is called by:
  8506 ;;		_MEF_Subest_Actualizacion
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function _Fin_Proceso
  8512  1607                     _Fin_Proceso:
  8513                           
  8514                           ;Menu_Modo.c: 54:     if(!Min && !Seg)
  8515                           
  8516                           ;incstack = 0
  8517                           ; Regs used in _Fin_Proceso: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8518  1607  0879               	movf	_Min,w
  8519  1608  1D03               	btfss	3,2
  8520  1609  0008               	return
  8521  160A  0878               	movf	_Seg,w
  8522  160B  1D03               	btfss	3,2
  8523  160C  0008               	return
  8524                           
  8525                           ;Menu_Modo.c: 55:     {;Menu_Modo.c: 56:         Proceso_Fin();
  8526  160D  160A  118A  2258  160A  118A  	fcall	_Proceso_Fin
  8527                           
  8528                           ;Menu_Modo.c: 57:         Output = !Output;
  8529  1612  0877               	movf	_Output,w
  8530  1613  1D03               	btfss	3,2
  8531  1614  2E17               	goto	u4830
  8532  1615  3001               	movlw	1
  8533  1616  2E18               	goto	u4840
  8534  1617                     u4830:
  8535  1617  3000               	movlw	0
  8536  1618                     u4840:
  8537  1618  00FF               	movwf	127
  8538  1619  087F               	movf	127,w
  8539  161A  00F7               	movwf	_Output
  8540                           
  8541                           ;Menu_Modo.c: 58:         PORTBbits.RB4=0;
  8542  161B  1283               	bcf	3,5	;RP0=0, select bank0
  8543  161C  1303               	bcf	3,6	;RP1=0, select bank0
  8544  161D  1206               	bcf	6,4	;volatile
  8545                           
  8546                           ;Menu_Modo.c: 59:         Pwm_Seteado=0;
  8547  161E  1683               	bsf	3,5	;RP0=1, select bank1
  8548  161F  1303               	bcf	3,6	;RP1=0, select bank1
  8549  1620  01B7               	clrf	_Pwm_Seteado^(0+128)
  8550                           
  8551                           ;Menu_Modo.c: 60:         Pwm1_stop();
  8552  1621  160A  118A  2122  160A  118A  	fcall	_Pwm1_stop
  8553                           
  8554                           ;Menu_Modo.c: 61:         for(char i=0;i<3;i++)
  8555  1626  1283               	bcf	3,5	;RP0=0, select bank0
  8556  1627  1303               	bcf	3,6	;RP1=0, select bank0
  8557  1628  01AC               	clrf	Fin_Proceso@i
  8558  1629                     l340:
  8559                           
  8560                           ;Menu_Modo.c: 62:         {;Menu_Modo.c: 63:             PORTAbits.RA5 = 1;
  8561  1629  1685               	bsf	5,5	;volatile
  8562                           
  8563                           ;Menu_Modo.c: 64:             _delay((unsigned long)((100)*(20000000/4000.0)));
  8564  162A  3003               	movlw	3
  8565  162B  1283               	bcf	3,5	;RP0=0, select bank0
  8566  162C  1303               	bcf	3,6	;RP1=0, select bank0
  8567  162D  00AB               	movwf	??_Fin_Proceso+2
  8568  162E  308A               	movlw	138
  8569  162F  00AA               	movwf	??_Fin_Proceso+1
  8570  1630  3055               	movlw	85
  8571  1631  00A9               	movwf	??_Fin_Proceso
  8572  1632                     u5387:
  8573  1632  0BA9               	decfsz	??_Fin_Proceso,f
  8574  1633  2E32               	goto	u5387
  8575  1634  0BAA               	decfsz	??_Fin_Proceso+1,f
  8576  1635  2E32               	goto	u5387
  8577  1636  0BAB               	decfsz	??_Fin_Proceso+2,f
  8578  1637  2E32               	goto	u5387
  8579                           
  8580                           ;Menu_Modo.c: 65:             PORTAbits.RA5 = 0;
  8581  1638  1283               	bcf	3,5	;RP0=0, select bank0
  8582  1639  1303               	bcf	3,6	;RP1=0, select bank0
  8583  163A  1285               	bcf	5,5	;volatile
  8584                           
  8585                           ;Menu_Modo.c: 66:             _delay((unsigned long)((100)*(20000000/4000.0)));
  8586  163B  3003               	movlw	3
  8587  163C  1283               	bcf	3,5	;RP0=0, select bank0
  8588  163D  1303               	bcf	3,6	;RP1=0, select bank0
  8589  163E  00AB               	movwf	??_Fin_Proceso+2
  8590  163F  308A               	movlw	138
  8591  1640  00AA               	movwf	??_Fin_Proceso+1
  8592  1641  3055               	movlw	85
  8593  1642  00A9               	movwf	??_Fin_Proceso
  8594  1643                     u5397:
  8595  1643  0BA9               	decfsz	??_Fin_Proceso,f
  8596  1644  2E43               	goto	u5397
  8597  1645  0BAA               	decfsz	??_Fin_Proceso+1,f
  8598  1646  2E43               	goto	u5397
  8599  1647  0BAB               	decfsz	??_Fin_Proceso+2,f
  8600  1648  2E43               	goto	u5397
  8601                           
  8602                           ;Menu_Modo.c: 67:         }
  8603  1649  3001               	movlw	1
  8604  164A  00FF               	movwf	127
  8605  164B  087F               	movf	127,w
  8606  164C  1283               	bcf	3,5	;RP0=0, select bank0
  8607  164D  1303               	bcf	3,6	;RP1=0, select bank0
  8608  164E  07AC               	addwf	Fin_Proceso@i,f
  8609  164F  3003               	movlw	3
  8610  1650  022C               	subwf	Fin_Proceso@i,w
  8611  1651  1C03               	skipc
  8612  1652  2E29               	goto	l340
  8613                           
  8614                           ;Menu_Modo.c: 68:         _delay((unsigned long)((1200)*(20000000/4000.0)));
  8615  1653  301F               	movlw	31
  8616  1654  1283               	bcf	3,5	;RP0=0, select bank0
  8617  1655  1303               	bcf	3,6	;RP1=0, select bank0
  8618  1656  00AB               	movwf	??_Fin_Proceso+2
  8619  1657  3071               	movlw	113
  8620  1658  00AA               	movwf	??_Fin_Proceso+1
  8621  1659  301D               	movlw	29
  8622  165A  00A9               	movwf	??_Fin_Proceso
  8623  165B                     u5407:
  8624  165B  0BA9               	decfsz	??_Fin_Proceso,f
  8625  165C  2E5B               	goto	u5407
  8626  165D  0BAA               	decfsz	??_Fin_Proceso+1,f
  8627  165E  2E5B               	goto	u5407
  8628  165F  0BAB               	decfsz	??_Fin_Proceso+2,f
  8629  1660  2E5B               	goto	u5407
  8630  1661  2E62               	nop2
  8631  1662  0008               	return
  8632  1663                     __end_of_Fin_Proceso:
  8633                           
  8634                           	psect	text44
  8635  1258                     __ptext44:	
  8636 ;; *************** function _Proceso_Fin *****************
  8637 ;; Defined at:
  8638 ;;		line 145 in file "Display_Lcd.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8652 ;;      Params:         0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0
  8655 ;;      Totals:         0       0       0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    4
  8659 ;; This function calls:
  8660 ;;		_LCD_array
  8661 ;;		_LCD_command
  8662 ;; This function is called by:
  8663 ;;		_Fin_Proceso
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _Proceso_Fin
  8669  1258                     _Proceso_Fin:
  8670                           
  8671                           ;Display_Lcd.c: 147:     LCD_command(0x01);
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _Proceso_Fin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8675  1258  3001               	movlw	1
  8676  1259  120A  158A  2680  160A  118A  	fcall	_LCD_command
  8677                           
  8678                           ;Display_Lcd.c: 148:     LCD_array(1,1,"                    ");
  8679  125E  3001               	movlw	1
  8680  125F  1283               	bcf	3,5	;RP0=0, select bank0
  8681  1260  1303               	bcf	3,6	;RP1=0, select bank0
  8682  1261  00A1               	movwf	LCD_array@x
  8683  1262  3000               	movlw	0
  8684  1263  00A2               	movwf	LCD_array@x+1
  8685  1264  3001               	movlw	1
  8686  1265  00A3               	movwf	LCD_array@y
  8687  1266  3000               	movlw	0
  8688  1267  00A4               	movwf	LCD_array@y+1
  8689  1268  301C               	movlw	low (STR_38| (0+32768))
  8690  1269  00A5               	movwf	LCD_array@date
  8691  126A  3085               	movlw	high (STR_38| (0+32768))
  8692  126B  00A6               	movwf	LCD_array@date+1
  8693  126C  160A  118A  2728  160A  118A  	fcall	_LCD_array
  8694                           
  8695                           ;Display_Lcd.c: 149:     LCD_array(2,1," Proceso Finalizado");
  8696  1271  3002               	movlw	2
  8697  1272  1283               	bcf	3,5	;RP0=0, select bank0
  8698  1273  1303               	bcf	3,6	;RP1=0, select bank0
  8699  1274  00A1               	movwf	LCD_array@x
  8700  1275  3000               	movlw	0
  8701  1276  00A2               	movwf	LCD_array@x+1
  8702  1277  3001               	movlw	1
  8703  1278  00A3               	movwf	LCD_array@y
  8704  1279  3000               	movlw	0
  8705  127A  00A4               	movwf	LCD_array@y+1
  8706  127B  3070               	movlw	low (STR_39| (0+32768))
  8707  127C  00A5               	movwf	LCD_array@date
  8708  127D  3085               	movlw	high (STR_39| (0+32768))
  8709  127E  00A6               	movwf	LCD_array@date+1
  8710  127F  160A  118A  2728   	fcall	_LCD_array
  8711  1282  0008               	return
  8712  1283                     __end_of_Proceso_Fin:
  8713                           
  8714                           	psect	text45
  8715  1551                     __ptext45:	
  8716 ;; *************** function _Detener *****************
  8717 ;; Defined at:
  8718 ;;		line 30 in file "Menu_Modo.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  i               1   12[BANK0 ] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         0       1       0       0       0
  8734 ;;      Temps:          0       3       0       0       0
  8735 ;;      Totals:         0       4       0       0       0
  8736 ;;Total ram usage:        4 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    5
  8739 ;; This function calls:
  8740 ;;		_Antirrebote
  8741 ;;		_Pant_Detener
  8742 ;;		_Pwm1_stop
  8743 ;; This function is called by:
  8744 ;;		_MEF_Subest_Actualizacion
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           
  8749                           ;psect for function _Detener
  8750  1551                     _Detener:
  8751                           
  8752                           ;Menu_Modo.c: 32:     Antirrebote();
  8753                           
  8754                           ;incstack = 0
  8755                           ; Regs used in _Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8756  1551  160A  118A  222E  160A  118A  	fcall	_Antirrebote
  8757                           
  8758                           ;Menu_Modo.c: 33:     Output = !Output;
  8759  1556  0877               	movf	_Output,w
  8760  1557  1D03               	btfss	3,2
  8761  1558  2D5B               	goto	u4770
  8762  1559  3001               	movlw	1
  8763  155A  2D5C               	goto	u4780
  8764  155B                     u4770:
  8765  155B  3000               	movlw	0
  8766  155C                     u4780:
  8767  155C  00FF               	movwf	127
  8768  155D  087F               	movf	127,w
  8769  155E  00F7               	movwf	_Output
  8770                           
  8771                           ;Menu_Modo.c: 34:     PORTBbits.RB4=0;
  8772  155F  1283               	bcf	3,5	;RP0=0, select bank0
  8773  1560  1303               	bcf	3,6	;RP1=0, select bank0
  8774  1561  1206               	bcf	6,4	;volatile
  8775                           
  8776                           ;Menu_Modo.c: 35:     Pwm_Seteado=0;
  8777  1562  1683               	bsf	3,5	;RP0=1, select bank1
  8778  1563  1303               	bcf	3,6	;RP1=0, select bank1
  8779  1564  01B7               	clrf	_Pwm_Seteado^(0+128)
  8780                           
  8781                           ;Menu_Modo.c: 36:     Pwm1_stop();
  8782  1565  160A  118A  2122  160A  118A  	fcall	_Pwm1_stop
  8783                           
  8784                           ;Menu_Modo.c: 38:     Pant_Detener();
  8785  156A  160A  118A  2142  160A  118A  	fcall	_Pant_Detener
  8786                           
  8787                           ;Menu_Modo.c: 40:     for(char i=0;i<3;i++)
  8788  156F  1283               	bcf	3,5	;RP0=0, select bank0
  8789  1570  1303               	bcf	3,6	;RP1=0, select bank0
  8790  1571  01AC               	clrf	Detener@i
  8791  1572                     l334:
  8792                           
  8793                           ;Menu_Modo.c: 41:     {;Menu_Modo.c: 42:         PORTAbits.RA5 = 1;
  8794  1572  1685               	bsf	5,5	;volatile
  8795                           
  8796                           ;Menu_Modo.c: 43:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8797  1573  3003               	movlw	3
  8798  1574  1283               	bcf	3,5	;RP0=0, select bank0
  8799  1575  1303               	bcf	3,6	;RP1=0, select bank0
  8800  1576  00AB               	movwf	??_Detener+2
  8801  1577  308A               	movlw	138
  8802  1578  00AA               	movwf	??_Detener+1
  8803  1579  3055               	movlw	85
  8804  157A  00A9               	movwf	??_Detener
  8805  157B                     u5417:
  8806  157B  0BA9               	decfsz	??_Detener,f
  8807  157C  2D7B               	goto	u5417
  8808  157D  0BAA               	decfsz	??_Detener+1,f
  8809  157E  2D7B               	goto	u5417
  8810  157F  0BAB               	decfsz	??_Detener+2,f
  8811  1580  2D7B               	goto	u5417
  8812                           
  8813                           ;Menu_Modo.c: 44:         PORTAbits.RA5 = 0;
  8814  1581  1283               	bcf	3,5	;RP0=0, select bank0
  8815  1582  1303               	bcf	3,6	;RP1=0, select bank0
  8816  1583  1285               	bcf	5,5	;volatile
  8817                           
  8818                           ;Menu_Modo.c: 45:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8819  1584  3003               	movlw	3
  8820  1585  1283               	bcf	3,5	;RP0=0, select bank0
  8821  1586  1303               	bcf	3,6	;RP1=0, select bank0
  8822  1587  00AB               	movwf	??_Detener+2
  8823  1588  308A               	movlw	138
  8824  1589  00AA               	movwf	??_Detener+1
  8825  158A  3055               	movlw	85
  8826  158B  00A9               	movwf	??_Detener
  8827  158C                     u5427:
  8828  158C  0BA9               	decfsz	??_Detener,f
  8829  158D  2D8C               	goto	u5427
  8830  158E  0BAA               	decfsz	??_Detener+1,f
  8831  158F  2D8C               	goto	u5427
  8832  1590  0BAB               	decfsz	??_Detener+2,f
  8833  1591  2D8C               	goto	u5427
  8834                           
  8835                           ;Menu_Modo.c: 46:     }
  8836  1592  3001               	movlw	1
  8837  1593  00FF               	movwf	127
  8838  1594  087F               	movf	127,w
  8839  1595  1283               	bcf	3,5	;RP0=0, select bank0
  8840  1596  1303               	bcf	3,6	;RP1=0, select bank0
  8841  1597  07AC               	addwf	Detener@i,f
  8842  1598  3003               	movlw	3
  8843  1599  022C               	subwf	Detener@i,w
  8844  159A  1C03               	skipc
  8845  159B  2D72               	goto	l334
  8846                           
  8847                           ;Menu_Modo.c: 47:     _delay((unsigned long)((1200)*(20000000/4000.0)));
  8848  159C  301F               	movlw	31
  8849  159D  1283               	bcf	3,5	;RP0=0, select bank0
  8850  159E  1303               	bcf	3,6	;RP1=0, select bank0
  8851  159F  00AB               	movwf	??_Detener+2
  8852  15A0  3071               	movlw	113
  8853  15A1  00AA               	movwf	??_Detener+1
  8854  15A2  301D               	movlw	29
  8855  15A3  00A9               	movwf	??_Detener
  8856  15A4                     u5437:
  8857  15A4  0BA9               	decfsz	??_Detener,f
  8858  15A5  2DA4               	goto	u5437
  8859  15A6  0BAA               	decfsz	??_Detener+1,f
  8860  15A7  2DA4               	goto	u5437
  8861  15A8  0BAB               	decfsz	??_Detener+2,f
  8862  15A9  2DA4               	goto	u5437
  8863  15AA  2DAB               	nop2
  8864  15AB  0008               	return
  8865  15AC                     __end_of_Detener:
  8866                           
  8867                           	psect	text46
  8868  1122                     __ptext46:	
  8869 ;; *************** function _Pwm1_stop *****************
  8870 ;; Defined at:
  8871 ;;		line 71 in file "Pwm_Soft.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8885 ;;      Params:         0       0       0       0       0
  8886 ;;      Locals:         0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0
  8888 ;;      Totals:         0       0       0       0       0
  8889 ;;Total ram usage:        0 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    2
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_main
  8896 ;;		_Detener
  8897 ;;		_Fin_Proceso
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           
  8902                           ;psect for function _Pwm1_stop
  8903  1122                     _Pwm1_stop:
  8904                           
  8905                           ;Pwm_Soft.c: 74:     Act_PwmS1 = 0;
  8906                           
  8907                           ;incstack = 0
  8908                           ; Regs used in _Pwm1_stop: [wreg+status,2]
  8909  1122  1683               	bsf	3,5	;RP0=1, select bank1
  8910  1123  1303               	bcf	3,6	;RP1=0, select bank1
  8911  1124  01BC               	clrf	_Act_PwmS1^(0+128)
  8912                           
  8913                           ;Pwm_Soft.c: 76:     Pw_PwmS1 = 0;
  8914  1125  3000               	movlw	0
  8915  1126  00A8               	movwf	_Pw_PwmS1^(0+128)
  8916  1127  3000               	movlw	0
  8917  1128  00A9               	movwf	(_Pw_PwmS1+1)^(0+128)
  8918  1129  3000               	movlw	0
  8919  112A  00AA               	movwf	(_Pw_PwmS1+2)^(0+128)
  8920                           
  8921                           ;Pwm_Soft.c: 77:     PwmS1 = 0;
  8922  112B  1283               	bcf	3,5	;RP0=0, select bank0
  8923  112C  1303               	bcf	3,6	;RP1=0, select bank0
  8924  112D  01E0               	clrf	_PwmS1
  8925  112E  01E1               	clrf	_PwmS1+1
  8926                           
  8927                           ;Pwm_Soft.c: 79:     RB4=0;
  8928  112F  1206               	bcf	6,4	;volatile
  8929  1130  0008               	return
  8930  1131                     __end_of_Pwm1_stop:
  8931                           
  8932                           	psect	text47
  8933  1142                     __ptext47:	
  8934 ;; *************** function _Pant_Detener *****************
  8935 ;; Defined at:
  8936 ;;		line 106 in file "Display_Lcd.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8950 ;;      Params:         0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0
  8953 ;;      Totals:         0       0       0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:    4
  8957 ;; This function calls:
  8958 ;;		_LCD_array
  8959 ;;		_LCD_command
  8960 ;; This function is called by:
  8961 ;;		_Detener
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function _Pant_Detener
  8967  1142                     _Pant_Detener:
  8968                           
  8969                           ;Display_Lcd.c: 108:     LCD_command(0x01);
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _Pant_Detener: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8973  1142  3001               	movlw	1
  8974  1143  120A  158A  2680  160A  118A  	fcall	_LCD_command
  8975                           
  8976                           ;Display_Lcd.c: 109:     LCD_array(2,3,"Proceso Detenido");
  8977  1148  3002               	movlw	2
  8978  1149  1283               	bcf	3,5	;RP0=0, select bank0
  8979  114A  1303               	bcf	3,6	;RP1=0, select bank0
  8980  114B  00A1               	movwf	LCD_array@x
  8981  114C  3000               	movlw	0
  8982  114D  00A2               	movwf	LCD_array@x+1
  8983  114E  3003               	movlw	3
  8984  114F  00A3               	movwf	LCD_array@y
  8985  1150  3000               	movlw	0
  8986  1151  00A4               	movwf	LCD_array@y+1
  8987  1152  30B9               	movlw	low (STR_31| (0+32768))
  8988  1153  00A5               	movwf	LCD_array@date
  8989  1154  3085               	movlw	high (STR_31| (0+32768))
  8990  1155  00A6               	movwf	LCD_array@date+1
  8991  1156  160A  118A  2728   	fcall	_LCD_array
  8992  1159  0008               	return
  8993  115A                     __end_of_Pant_Detener:
  8994                           
  8995                           	psect	text48
  8996  1728                     __ptext48:	
  8997 ;; *************** function _LCD_array *****************
  8998 ;; Defined at:
  8999 ;;		line 137 in file "Lcd.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  x               2    1[BANK0 ] int 
  9002 ;;  y               2    3[BANK0 ] int 
  9003 ;;  date            2    5[BANK0 ] PTR unsigned char 
  9004 ;;		 -> STR_39(20), STR_38(21), STR_37(10), STR_36(17), 
  9005 ;;		 -> STR_35(9), STR_34(17), STR_33(18), STR_32(17), 
  9006 ;;		 -> STR_31(17), Pant_Temporizador@buffer(20), Pant_Val_Act@buffer(20), STR_23(2), 
  9007 ;;		 -> STR_22(13), STR_21(2), STR_20(8), STR_19(5), 
  9008 ;;		 -> STR_18(5), STR_17(18), STR_16(6), STR_15(5), 
  9009 ;;		 -> STR_14(14), STR_13(2), STR_12(2), STR_11(2), 
  9010 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  9011 ;;		 -> STR_6(2), STR_5(2), STR_4(21), STR_3(21), 
  9012 ;;		 -> STR_2(21), STR_1(21), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9024 ;;      Params:         0       6       0       0       0
  9025 ;;      Locals:         0       0       0       0       0
  9026 ;;      Temps:          0       2       0       0       0
  9027 ;;      Totals:         0       8       0       0       0
  9028 ;;Total ram usage:        8 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:    3
  9031 ;; This function calls:
  9032 ;;		_LCD_command
  9033 ;;		_LCD_date
  9034 ;; This function is called by:
  9035 ;;		_Pant_Inicio
  9036 ;;		_Pant_Selector
  9037 ;;		_Pant_Menu
  9038 ;;		_Pant_Modos
  9039 ;;		_Pant_Val_Act
  9040 ;;		_Pant_Temporizador
  9041 ;;		_Pant_Detener
  9042 ;;		_Pant_Pulverizacion
  9043 ;;		_Pant_Fuga
  9044 ;;		_Pant_Flujo
  9045 ;;		_Proceso_Fin
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           
  9050                           ;psect for function _LCD_array
  9051  1728                     _LCD_array:
  9052                           
  9053                           ;Lcd.c: 137: void LCD_array(int x,int y,char *date);Lcd.c: 138: {;Lcd.c: 140:     switch
      +                          (x)
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9057  1728  2F4D               	goto	l4105
  9058  1729                     l4095:
  9059  1729  0823               	movf	LCD_array@y,w
  9060  172A  3EFF               	addlw	255
  9061  172B  3880               	iorlw	128
  9062  172C  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9063                           
  9064                           ;Lcd.c: 143:         break;
  9065  1731  2F83               	goto	l4113
  9066  1732                     l4097:
  9067  1732  0823               	movf	LCD_array@y,w
  9068  1733  3E3F               	addlw	63
  9069  1734  3880               	iorlw	128
  9070  1735  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9071                           
  9072                           ;Lcd.c: 145:         break;
  9073  173A  2F83               	goto	l4113
  9074  173B                     l4099:
  9075  173B  0823               	movf	LCD_array@y,w
  9076  173C  3E13               	addlw	19
  9077  173D  3880               	iorlw	128
  9078  173E  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9079                           
  9080                           ;Lcd.c: 147:         break;
  9081  1743  2F83               	goto	l4113
  9082  1744                     l4101:
  9083  1744  0823               	movf	LCD_array@y,w
  9084  1745  3E53               	addlw	83
  9085  1746  3880               	iorlw	128
  9086  1747  120A  158A  2680  160A  118A  	fcall	_LCD_command
  9087                           
  9088                           ;Lcd.c: 149:         break;
  9089  174C  2F83               	goto	l4113
  9090  174D                     l4105:
  9091                           
  9092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9093                           ; Switch size 1, requested type "simple"
  9094                           ; Number of cases is 1, Range of values is 0 to 0
  9095                           ; switch strategies available:
  9096                           ; Name         Instructions Cycles
  9097                           ; simple_byte            4     3 (average)
  9098                           ; direct_byte           11     8 (fixed)
  9099                           ; jumptable            260     6 (fixed)
  9100                           ;	Chosen strategy is simple_byte
  9101  174D  1283               	bcf	3,5	;RP0=0, select bank0
  9102  174E  1303               	bcf	3,6	;RP1=0, select bank0
  9103  174F  0822               	movf	LCD_array@x+1,w
  9104  1750  3A00               	xorlw	0	; case 0
  9105  1751  1903               	skipnz
  9106  1752  2F54               	goto	l5197
  9107  1753  2F83               	goto	l4113
  9108  1754                     l5197:
  9109                           
  9110                           ; Switch size 1, requested type "simple"
  9111                           ; Number of cases is 4, Range of values is 1 to 4
  9112                           ; switch strategies available:
  9113                           ; Name         Instructions Cycles
  9114                           ; simple_byte           13     7 (average)
  9115                           ; direct_byte           23    11 (fixed)
  9116                           ; jumptable            263     9 (fixed)
  9117                           ;	Chosen strategy is simple_byte
  9118  1754  0821               	movf	LCD_array@x,w
  9119  1755  3A01               	xorlw	1	; case 1
  9120  1756  1903               	skipnz
  9121  1757  2F29               	goto	l4095
  9122  1758  3A03               	xorlw	3	; case 2
  9123  1759  1903               	skipnz
  9124  175A  2F32               	goto	l4097
  9125  175B  3A01               	xorlw	1	; case 3
  9126  175C  1903               	skipnz
  9127  175D  2F3B               	goto	l4099
  9128  175E  3A07               	xorlw	7	; case 4
  9129  175F  1903               	skipnz
  9130  1760  2F44               	goto	l4101
  9131  1761  2F83               	goto	l4113
  9132  1762                     l4107:
  9133                           
  9134                           ;Lcd.c: 154:     {;Lcd.c: 155:         LCD_date(*date);
  9135  1762  0826               	movf	LCD_array@date+1,w
  9136  1763  00FF               	movwf	127
  9137  1764  0825               	movf	LCD_array@date,w
  9138  1765  0084               	movwf	4
  9139  1766  120A  118A  2500  160A  118A  	fcall	stringtab
  9140  176B  120A  158A  2510  160A  118A  	fcall	_LCD_date
  9141                           
  9142                           ;Lcd.c: 156:         _delay((unsigned long)((1)*(20000000/4000.0)));
  9143  1770  3007               	movlw	7
  9144  1771  1283               	bcf	3,5	;RP0=0, select bank0
  9145  1772  1303               	bcf	3,6	;RP1=0, select bank0
  9146  1773  00A8               	movwf	??_LCD_array+1
  9147  1774  307C               	movlw	124
  9148  1775  00A7               	movwf	??_LCD_array
  9149  1776                     u5447:
  9150  1776  0BA7               	decfsz	??_LCD_array,f
  9151  1777  2F76               	goto	u5447
  9152  1778  0BA8               	decfsz	??_LCD_array+1,f
  9153  1779  2F76               	goto	u5447
  9154  177A  0000               	nop
  9155                           
  9156                           ;Lcd.c: 157:         date++;
  9157  177B  3001               	movlw	1
  9158  177C  1283               	bcf	3,5	;RP0=0, select bank0
  9159  177D  1303               	bcf	3,6	;RP1=0, select bank0
  9160  177E  07A5               	addwf	LCD_array@date,f
  9161  177F  1803               	skipnc
  9162  1780  0AA6               	incf	LCD_array@date+1,f
  9163  1781  3000               	movlw	0
  9164  1782  07A6               	addwf	LCD_array@date+1,f
  9165  1783                     l4113:
  9166                           
  9167                           ;Lcd.c: 153:     while(*date)
  9168  1783  1283               	bcf	3,5	;RP0=0, select bank0
  9169  1784  1303               	bcf	3,6	;RP1=0, select bank0
  9170  1785  0826               	movf	LCD_array@date+1,w
  9171  1786  00FF               	movwf	127
  9172  1787  0825               	movf	LCD_array@date,w
  9173  1788  0084               	movwf	4
  9174  1789  120A  118A  2500  160A  118A  	fcall	stringtab
  9175  178E  3A00               	xorlw	0
  9176  178F  1903               	btfsc	3,2
  9177  1790  0008               	return
  9178  1791  2F62               	goto	l4107
  9179  1792                     __end_of_LCD_array:
  9180                           
  9181                           	psect	text49
  9182  0D10                     __ptext49:	
  9183 ;; *************** function _LCD_date *****************
  9184 ;; Defined at:
  9185 ;;		line 88 in file "Lcd.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  date            1    wreg     unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  date            1    0[BANK0 ] unsigned char 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9199 ;;      Params:         0       0       0       0       0
  9200 ;;      Locals:         0       1       0       0       0
  9201 ;;      Temps:          2       0       0       0       0
  9202 ;;      Totals:         2       1       0       0       0
  9203 ;;Total ram usage:        3 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    2
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_Pant_Modos
  9210 ;;		_LCD_array
  9211 ;;		_LCD_character
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           
  9216                           ;psect for function _LCD_date
  9217  0D10                     _LCD_date:
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _LCD_date: [wreg+status,2+status,0]
  9221                           ;LCD_date@date stored from wreg
  9222  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  9224  0D12  00A0               	movwf	LCD_date@date
  9225                           
  9226                           ;Lcd.c: 88: void LCD_date(char date);Lcd.c: 89: {;Lcd.c: 91:     PORTCbits.RC4=0,PORTCbi
      +                          ts.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9227  0D13  1207               	bcf	7,4	;volatile
  9228  0D14  1287               	bcf	7,5	;volatile
  9229  0D15  1307               	bcf	7,6	;volatile
  9230  0D16  1387               	bcf	7,7	;volatile
  9231                           
  9232                           ;Lcd.c: 94:     PORTCbits.RC4 = ((date >> 4) & 0x01);
  9233  0D17  0820               	movf	LCD_date@date,w
  9234  0D18  00F4               	movwf	??_LCD_date
  9235  0D19  3004               	movlw	4
  9236  0D1A                     u3815:
  9237  0D1A  1003               	clrc
  9238  0D1B  0CF4               	rrf	??_LCD_date,f
  9239  0D1C  3EFF               	addlw	-1
  9240  0D1D  1D03               	skipz
  9241  0D1E  2D1A               	goto	u3815
  9242  0D1F  0874               	movf	??_LCD_date,w
  9243  0D20  3901               	andlw	1
  9244  0D21  00F5               	movwf	??_LCD_date+1
  9245  0D22  0EF5               	swapf	??_LCD_date+1,f
  9246  0D23  0807               	movf	7,w	;volatile
  9247  0D24  0675               	xorwf	??_LCD_date+1,w
  9248  0D25  39EF               	andlw	-17
  9249  0D26  0675               	xorwf	??_LCD_date+1,w
  9250  0D27  0087               	movwf	7	;volatile
  9251                           
  9252                           ;Lcd.c: 95:     PORTCbits.RC5 = ((date >> 5) & 0x01);
  9253  0D28  0820               	movf	LCD_date@date,w
  9254  0D29  00F4               	movwf	??_LCD_date
  9255  0D2A  3005               	movlw	5
  9256  0D2B                     u3825:
  9257  0D2B  1003               	clrc
  9258  0D2C  0CF4               	rrf	??_LCD_date,f
  9259  0D2D  3EFF               	addlw	-1
  9260  0D2E  1D03               	skipz
  9261  0D2F  2D2B               	goto	u3825
  9262  0D30  0874               	movf	??_LCD_date,w
  9263  0D31  3901               	andlw	1
  9264  0D32  00F5               	movwf	??_LCD_date+1
  9265  0D33  0EF5               	swapf	??_LCD_date+1,f
  9266  0D34  0DF5               	rlf	??_LCD_date+1,f
  9267  0D35  0807               	movf	7,w	;volatile
  9268  0D36  0675               	xorwf	??_LCD_date+1,w
  9269  0D37  39DF               	andlw	-33
  9270  0D38  0675               	xorwf	??_LCD_date+1,w
  9271  0D39  0087               	movwf	7	;volatile
  9272                           
  9273                           ;Lcd.c: 96:     PORTCbits.RC6 = ((date >> 6) & 0x01);
  9274  0D3A  0820               	movf	LCD_date@date,w
  9275  0D3B  00F4               	movwf	??_LCD_date
  9276  0D3C  3006               	movlw	6
  9277  0D3D                     u3835:
  9278  0D3D  1003               	clrc
  9279  0D3E  0CF4               	rrf	??_LCD_date,f
  9280  0D3F  3EFF               	addlw	-1
  9281  0D40  1D03               	skipz
  9282  0D41  2D3D               	goto	u3835
  9283  0D42  0874               	movf	??_LCD_date,w
  9284  0D43  3901               	andlw	1
  9285  0D44  00F5               	movwf	??_LCD_date+1
  9286  0D45  0EF5               	swapf	??_LCD_date+1,f
  9287  0D46  0DF5               	rlf	??_LCD_date+1,f
  9288  0D47  0DF5               	rlf	??_LCD_date+1,f
  9289  0D48  0807               	movf	7,w	;volatile
  9290  0D49  0675               	xorwf	??_LCD_date+1,w
  9291  0D4A  39BF               	andlw	-65
  9292  0D4B  0675               	xorwf	??_LCD_date+1,w
  9293  0D4C  0087               	movwf	7	;volatile
  9294                           
  9295                           ;Lcd.c: 97:     PORTCbits.RC7 = ((date >> 7) & 0x01);
  9296  0D4D  0820               	movf	LCD_date@date,w
  9297  0D4E  00F4               	movwf	??_LCD_date
  9298  0D4F  3007               	movlw	7
  9299  0D50                     u3845:
  9300  0D50  1003               	clrc
  9301  0D51  0CF4               	rrf	??_LCD_date,f
  9302  0D52  3EFF               	addlw	-1
  9303  0D53  1D03               	skipz
  9304  0D54  2D50               	goto	u3845
  9305  0D55  0874               	movf	??_LCD_date,w
  9306  0D56  3901               	andlw	1
  9307  0D57  00F5               	movwf	??_LCD_date+1
  9308  0D58  0CF5               	rrf	??_LCD_date+1,f
  9309  0D59  0CF5               	rrf	??_LCD_date+1,f
  9310  0D5A  0807               	movf	7,w	;volatile
  9311  0D5B  0675               	xorwf	??_LCD_date+1,w
  9312  0D5C  397F               	andlw	-129
  9313  0D5D  0675               	xorwf	??_LCD_date+1,w
  9314  0D5E  0087               	movwf	7	;volatile
  9315                           
  9316                           ;Lcd.c: 100:     PORTCbits.RC1 = 1;
  9317  0D5F  1487               	bsf	7,1	;volatile
  9318                           
  9319                           ;Lcd.c: 101:     PORTCbits.RC3 = 0;
  9320  0D60  1187               	bcf	7,3	;volatile
  9321                           
  9322                           ;Lcd.c: 104:     PORTCbits.RC3 = 1;
  9323  0D61  1587               	bsf	7,3	;volatile
  9324                           
  9325                           ;Lcd.c: 105:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9326  0D62  3018               	movlw	24
  9327  0D63  00F4               	movwf	??_LCD_date
  9328  0D64                     u5457:
  9329  0D64  0BF4               	decfsz	??_LCD_date,f
  9330  0D65  2D64               	goto	u5457
  9331  0D66  2D67               	nop2
  9332                           
  9333                           ;Lcd.c: 106:     PORTCbits.RC3 = 0;
  9334  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  9335  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  9336  0D69  1187               	bcf	7,3	;volatile
  9337                           
  9338                           ;Lcd.c: 107:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9339  0D6A  3018               	movlw	24
  9340  0D6B  00F4               	movwf	??_LCD_date
  9341  0D6C                     u5467:
  9342  0D6C  0BF4               	decfsz	??_LCD_date,f
  9343  0D6D  2D6C               	goto	u5467
  9344  0D6E  2D6F               	nop2
  9345                           
  9346                           ;Lcd.c: 111:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9347  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  9348  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  9349  0D71  1207               	bcf	7,4	;volatile
  9350  0D72  1287               	bcf	7,5	;volatile
  9351  0D73  1307               	bcf	7,6	;volatile
  9352  0D74  1387               	bcf	7,7	;volatile
  9353                           
  9354                           ;Lcd.c: 114:     PORTCbits.RC4 = (date & 0x01);
  9355  0D75  0820               	movf	LCD_date@date,w
  9356  0D76  3901               	andlw	1
  9357  0D77  00F4               	movwf	??_LCD_date
  9358  0D78  0EF4               	swapf	??_LCD_date,f
  9359  0D79  0807               	movf	7,w	;volatile
  9360  0D7A  0674               	xorwf	??_LCD_date,w
  9361  0D7B  39EF               	andlw	-17
  9362  0D7C  0674               	xorwf	??_LCD_date,w
  9363  0D7D  0087               	movwf	7	;volatile
  9364                           
  9365                           ;Lcd.c: 115:     PORTCbits.RC5 = ((date >> 1) & 0x01);
  9366  0D7E  0820               	movf	LCD_date@date,w
  9367  0D7F  00F4               	movwf	??_LCD_date
  9368  0D80  1003               	clrc
  9369  0D81  0C74               	rrf	??_LCD_date,w
  9370  0D82  3901               	andlw	1
  9371  0D83  00F5               	movwf	??_LCD_date+1
  9372  0D84  0EF5               	swapf	??_LCD_date+1,f
  9373  0D85  0DF5               	rlf	??_LCD_date+1,f
  9374  0D86  0807               	movf	7,w	;volatile
  9375  0D87  0675               	xorwf	??_LCD_date+1,w
  9376  0D88  39DF               	andlw	-33
  9377  0D89  0675               	xorwf	??_LCD_date+1,w
  9378  0D8A  0087               	movwf	7	;volatile
  9379                           
  9380                           ;Lcd.c: 116:     PORTCbits.RC6 = ((date >> 2) & 0x01);
  9381  0D8B  0820               	movf	LCD_date@date,w
  9382  0D8C  00F4               	movwf	??_LCD_date
  9383  0D8D  3002               	movlw	2
  9384  0D8E                     u3855:
  9385  0D8E  1003               	clrc
  9386  0D8F  0CF4               	rrf	??_LCD_date,f
  9387  0D90  3EFF               	addlw	-1
  9388  0D91  1D03               	skipz
  9389  0D92  2D8E               	goto	u3855
  9390  0D93  0874               	movf	??_LCD_date,w
  9391  0D94  3901               	andlw	1
  9392  0D95  00F5               	movwf	??_LCD_date+1
  9393  0D96  0EF5               	swapf	??_LCD_date+1,f
  9394  0D97  0DF5               	rlf	??_LCD_date+1,f
  9395  0D98  0DF5               	rlf	??_LCD_date+1,f
  9396  0D99  0807               	movf	7,w	;volatile
  9397  0D9A  0675               	xorwf	??_LCD_date+1,w
  9398  0D9B  39BF               	andlw	-65
  9399  0D9C  0675               	xorwf	??_LCD_date+1,w
  9400  0D9D  0087               	movwf	7	;volatile
  9401                           
  9402                           ;Lcd.c: 117:     PORTCbits.RC7 = ((date >> 3) & 0x01);
  9403  0D9E  0820               	movf	LCD_date@date,w
  9404  0D9F  00F4               	movwf	??_LCD_date
  9405  0DA0  3003               	movlw	3
  9406  0DA1                     u3865:
  9407  0DA1  1003               	clrc
  9408  0DA2  0CF4               	rrf	??_LCD_date,f
  9409  0DA3  3EFF               	addlw	-1
  9410  0DA4  1D03               	skipz
  9411  0DA5  2DA1               	goto	u3865
  9412  0DA6  0874               	movf	??_LCD_date,w
  9413  0DA7  3901               	andlw	1
  9414  0DA8  00F5               	movwf	??_LCD_date+1
  9415  0DA9  0CF5               	rrf	??_LCD_date+1,f
  9416  0DAA  0CF5               	rrf	??_LCD_date+1,f
  9417  0DAB  0807               	movf	7,w	;volatile
  9418  0DAC  0675               	xorwf	??_LCD_date+1,w
  9419  0DAD  397F               	andlw	-129
  9420  0DAE  0675               	xorwf	??_LCD_date+1,w
  9421  0DAF  0087               	movwf	7	;volatile
  9422                           
  9423                           ;Lcd.c: 120:     PORTCbits.RC1 = 1;
  9424  0DB0  1487               	bsf	7,1	;volatile
  9425                           
  9426                           ;Lcd.c: 121:     PORTCbits.RC3 = 0;
  9427  0DB1  1187               	bcf	7,3	;volatile
  9428                           
  9429                           ;Lcd.c: 124:     PORTCbits.RC3 = 1;
  9430  0DB2  1587               	bsf	7,3	;volatile
  9431                           
  9432                           ;Lcd.c: 125:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  9433  0DB3  3053               	movlw	83
  9434  0DB4  00F4               	movwf	??_LCD_date
  9435  0DB5                     u5477:
  9436  0DB5  0BF4               	decfsz	??_LCD_date,f
  9437  0DB6  2DB5               	goto	u5477
  9438                           
  9439                           ;Lcd.c: 126:     PORTCbits.RC3 = 0;
  9440  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  9441  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  9442  0DB9  1187               	bcf	7,3	;volatile
  9443                           
  9444                           ;Lcd.c: 127:     _delay((unsigned long)((50)*(20000000/4000000.0)));
  9445  0DBA  3053               	movlw	83
  9446  0DBB  00F4               	movwf	??_LCD_date
  9447  0DBC                     u5487:
  9448  0DBC  0BF4               	decfsz	??_LCD_date,f
  9449  0DBD  2DBC               	goto	u5487
  9450                           
  9451                           ;Lcd.c: 130:     _delay((unsigned long)((3)*(20000000/4000.0)));
  9452  0DBE  3014               	movlw	20
  9453  0DBF  00F5               	movwf	??_LCD_date+1
  9454  0DC0  3079               	movlw	121
  9455  0DC1  00F4               	movwf	??_LCD_date
  9456  0DC2                     u5497:
  9457  0DC2  0BF4               	decfsz	??_LCD_date,f
  9458  0DC3  2DC2               	goto	u5497
  9459  0DC4  0BF5               	decfsz	??_LCD_date+1,f
  9460  0DC5  2DC2               	goto	u5497
  9461  0DC6  2DC7               	nop2
  9462  0DC7  0008               	return
  9463  0DC8                     __end_of_LCD_date:
  9464                           
  9465                           	psect	text50
  9466  122E                     __ptext50:	
  9467 ;; *************** function _Antirrebote *****************
  9468 ;; Defined at:
  9469 ;;		line 77 in file "Main.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;		None
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      void 
  9476 ;; Registers used:
  9477 ;;		wreg
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9483 ;;      Params:         0       0       0       0       0
  9484 ;;      Locals:         0       0       0       0       0
  9485 ;;      Temps:          0       3       0       0       0
  9486 ;;      Totals:         0       3       0       0       0
  9487 ;;Total ram usage:        3 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:    2
  9490 ;; This function calls:
  9491 ;;		Nothing
  9492 ;; This function is called by:
  9493 ;;		_MEF_Actualizacion
  9494 ;;		_MEF_Subest_Actualizacion
  9495 ;;		_Select_Modo
  9496 ;;		_Detener
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _Antirrebote
  9502  122E                     _Antirrebote:
  9503                           
  9504                           ;Main.c: 79:     PORTAbits.RA5 = 1;
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in _Antirrebote: [wreg]
  9508  122E  1283               	bcf	3,5	;RP0=0, select bank0
  9509  122F  1303               	bcf	3,6	;RP1=0, select bank0
  9510  1230  1685               	bsf	5,5	;volatile
  9511                           
  9512                           ;Main.c: 80:     _delay((unsigned long)((50)*(20000000/4000.0)));
  9513  1231  3002               	movlw	2
  9514  1232  1283               	bcf	3,5	;RP0=0, select bank0
  9515  1233  1303               	bcf	3,6	;RP1=0, select bank0
  9516  1234  00A2               	movwf	??_Antirrebote+2
  9517  1235  3045               	movlw	69
  9518  1236  00A1               	movwf	??_Antirrebote+1
  9519  1237  30A9               	movlw	169
  9520  1238  00A0               	movwf	??_Antirrebote
  9521  1239                     u5507:
  9522  1239  0BA0               	decfsz	??_Antirrebote,f
  9523  123A  2A39               	goto	u5507
  9524  123B  0BA1               	decfsz	??_Antirrebote+1,f
  9525  123C  2A39               	goto	u5507
  9526  123D  0BA2               	decfsz	??_Antirrebote+2,f
  9527  123E  2A39               	goto	u5507
  9528                           
  9529                           ;Main.c: 81:     PORTAbits.RA5 = 0;
  9530  123F  1283               	bcf	3,5	;RP0=0, select bank0
  9531  1240  1303               	bcf	3,6	;RP1=0, select bank0
  9532  1241  1285               	bcf	5,5	;volatile
  9533  1242                     l4359:	
  9534                           ;Main.c: 82:     while(PORTBbits.RB0 || PORTBbits.RB1 || PORTBbits.RB2 || PORTBbits.RB3)
      +                           _delay((unsigned long)((10)*(20000000/4000.0)));
  9535                           
  9536  1242  1283               	bcf	3,5	;RP0=0, select bank0
  9537  1243  1303               	bcf	3,6	;RP1=0, select bank0
  9538  1244  1C06               	btfss	6,0	;volatile
  9539  1245  2A52               	goto	l4361
  9540  1246                     l4357:
  9541  1246  3041               	movlw	65
  9542  1247  1283               	bcf	3,5	;RP0=0, select bank0
  9543  1248  1303               	bcf	3,6	;RP1=0, select bank0
  9544  1249  00A1               	movwf	??_Antirrebote+1
  9545  124A  30ED               	movlw	237
  9546  124B  00A0               	movwf	??_Antirrebote
  9547  124C                     u5517:
  9548  124C  0BA0               	decfsz	??_Antirrebote,f
  9549  124D  2A4C               	goto	u5517
  9550  124E  0BA1               	decfsz	??_Antirrebote+1,f
  9551  124F  2A4C               	goto	u5517
  9552  1250  2A51               	nop2
  9553  1251  2A42               	goto	l4359
  9554  1252                     l4361:
  9555  1252  1C86               	btfss	6,1	;volatile
  9556  1253  1906               	btfsc	6,2	;volatile
  9557  1254  2A46               	goto	l4357
  9558  1255  1D86               	btfss	6,3	;volatile
  9559  1256  0008               	return
  9560  1257  2A46               	goto	l4357
  9561  1258                     __end_of_Antirrebote:
  9562                           
  9563                           	psect	text51
  9564  0A17                     __ptext51:	
  9565 ;; *************** function _LCD_init *****************
  9566 ;; Defined at:
  9567 ;;		line 4 in file "Lcd.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  i               1    3[BANK0 ] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9581 ;;      Params:         0       0       0       0       0
  9582 ;;      Locals:         0       1       0       0       0
  9583 ;;      Temps:          0       2       0       0       0
  9584 ;;      Totals:         0       3       0       0       0
  9585 ;;Total ram usage:        3 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    3
  9588 ;; This function calls:
  9589 ;;		_LCD_command
  9590 ;; This function is called by:
  9591 ;;		_main
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function _LCD_init
  9597  0A17                     _LCD_init:
  9598                           
  9599                           ;Lcd.c: 7:     TRISCbits.TRISC4=0,TRISCbits.TRISC5=0,TRISCbits.TRISC6=0,TRISCbits.TRISC7
      +                          =0;
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9603  0A17  1683               	bsf	3,5	;RP0=1, select bank1
  9604  0A18  1303               	bcf	3,6	;RP1=0, select bank1
  9605  0A19  1207               	bcf	7,4	;volatile
  9606  0A1A  1287               	bcf	7,5	;volatile
  9607  0A1B  1307               	bcf	7,6	;volatile
  9608  0A1C  1387               	bcf	7,7	;volatile
  9609                           
  9610                           ;Lcd.c: 8:     TRISCbits.TRISC1=0,TRISCbits.TRISC3=0;
  9611  0A1D  1087               	bcf	7,1	;volatile
  9612  0A1E  1187               	bcf	7,3	;volatile
  9613                           
  9614                           ;Lcd.c: 9:     TRISCbits.TRISC2=0,PORTCbits.RC2=0;
  9615  0A1F  1107               	bcf	7,2	;volatile
  9616  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  9617  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  9618  0A22  1107               	bcf	7,2	;volatile
  9619                           
  9620                           ;Lcd.c: 12:     _delay((unsigned long)((30)*(20000000/4000.0)));
  9621  0A23  30C3               	movlw	195
  9622  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  9623  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  9624  0A26  00A2               	movwf	??_LCD_init+1
  9625  0A27  30CC               	movlw	204
  9626  0A28  00A1               	movwf	??_LCD_init
  9627  0A29                     u5527:
  9628  0A29  0BA1               	decfsz	??_LCD_init,f
  9629  0A2A  2A29               	goto	u5527
  9630  0A2B  0BA2               	decfsz	??_LCD_init+1,f
  9631  0A2C  2A29               	goto	u5527
  9632  0A2D  0000               	nop
  9633                           
  9634                           ;Lcd.c: 14:     for(char i=0;i<3;i++)
  9635  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  9636  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  9637  0A30  01A3               	clrf	LCD_init@i
  9638  0A31                     l4945:
  9639                           
  9640                           ;Lcd.c: 15:     {;Lcd.c: 16:         LCD_command(0x03);
  9641  0A31  3003               	movlw	3
  9642  0A32  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9643                           
  9644                           ;Lcd.c: 17:         _delay((unsigned long)((7)*(20000000/4000.0)));
  9645  0A37  302E               	movlw	46
  9646  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  9647  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  9648  0A3A  00A2               	movwf	??_LCD_init+1
  9649  0A3B  3072               	movlw	114
  9650  0A3C  00A1               	movwf	??_LCD_init
  9651  0A3D                     u5537:
  9652  0A3D  0BA1               	decfsz	??_LCD_init,f
  9653  0A3E  2A3D               	goto	u5537
  9654  0A3F  0BA2               	decfsz	??_LCD_init+1,f
  9655  0A40  2A3D               	goto	u5537
  9656  0A41  0000               	nop
  9657                           
  9658                           ;Lcd.c: 18:     }
  9659  0A42  3001               	movlw	1
  9660  0A43  00FF               	movwf	127
  9661  0A44  087F               	movf	127,w
  9662  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  9663  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  9664  0A47  07A3               	addwf	LCD_init@i,f
  9665  0A48  3003               	movlw	3
  9666  0A49  0223               	subwf	LCD_init@i,w
  9667  0A4A  1C03               	skipc
  9668  0A4B  2A31               	goto	l4945
  9669                           
  9670                           ;Lcd.c: 21:  LCD_command(0x33);
  9671  0A4C  3033               	movlw	51
  9672  0A4D  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9673                           
  9674                           ;Lcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9675  0A52  30A5               	movlw	165
  9676  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  9677  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  9678  0A55  00A1               	movwf	??_LCD_init
  9679  0A56                     u5547:
  9680  0A56  0BA1               	decfsz	??_LCD_init,f
  9681  0A57  2A56               	goto	u5547
  9682  0A58  2A59               	nop2
  9683                           
  9684                           ;Lcd.c: 23:     LCD_command(0x32);
  9685  0A59  3032               	movlw	50
  9686  0A5A  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9687                           
  9688                           ;Lcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  9689  0A5F  3021               	movlw	33
  9690  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  9691  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  9692  0A62  00A2               	movwf	??_LCD_init+1
  9693  0A63  3075               	movlw	117
  9694  0A64  00A1               	movwf	??_LCD_init
  9695  0A65                     u5557:
  9696  0A65  0BA1               	decfsz	??_LCD_init,f
  9697  0A66  2A65               	goto	u5557
  9698  0A67  0BA2               	decfsz	??_LCD_init+1,f
  9699  0A68  2A65               	goto	u5557
  9700  0A69  2A6A               	nop2
  9701                           
  9702                           ;Lcd.c: 25:  LCD_command(0x28);
  9703  0A6A  3028               	movlw	40
  9704  0A6B  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9705                           
  9706                           ;Lcd.c: 26:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9707  0A70  30A5               	movlw	165
  9708  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  9709  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  9710  0A73  00A1               	movwf	??_LCD_init
  9711  0A74                     u5567:
  9712  0A74  0BA1               	decfsz	??_LCD_init,f
  9713  0A75  2A74               	goto	u5567
  9714  0A76  2A77               	nop2
  9715                           
  9716                           ;Lcd.c: 27:  LCD_command(0x0C);
  9717  0A77  300C               	movlw	12
  9718  0A78  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9719                           
  9720                           ;Lcd.c: 28:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9721  0A7D  30A5               	movlw	165
  9722  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  9723  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  9724  0A80  00A1               	movwf	??_LCD_init
  9725  0A81                     u5577:
  9726  0A81  0BA1               	decfsz	??_LCD_init,f
  9727  0A82  2A81               	goto	u5577
  9728  0A83  2A84               	nop2
  9729                           
  9730                           ;Lcd.c: 29:  LCD_command(0x06);
  9731  0A84  3006               	movlw	6
  9732  0A85  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9733                           
  9734                           ;Lcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  9735  0A8A  30A5               	movlw	165
  9736  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  9737  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  9738  0A8D  00A1               	movwf	??_LCD_init
  9739  0A8E                     u5587:
  9740  0A8E  0BA1               	decfsz	??_LCD_init,f
  9741  0A8F  2A8E               	goto	u5587
  9742  0A90  2A91               	nop2
  9743                           
  9744                           ;Lcd.c: 31:     LCD_command(0x01);
  9745  0A91  3001               	movlw	1
  9746  0A92  120A  158A  2680  120A  158A  	fcall	_LCD_command
  9747                           
  9748                           ;Lcd.c: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9749  0A97  3041               	movlw	65
  9750  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  9751  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  9752  0A9A  00A2               	movwf	??_LCD_init+1
  9753  0A9B  30ED               	movlw	237
  9754  0A9C  00A1               	movwf	??_LCD_init
  9755  0A9D                     u5597:
  9756  0A9D  0BA1               	decfsz	??_LCD_init,f
  9757  0A9E  2A9D               	goto	u5597
  9758  0A9F  0BA2               	decfsz	??_LCD_init+1,f
  9759  0AA0  2A9D               	goto	u5597
  9760  0AA1  2AA2               	nop2
  9761  0AA2  0008               	return
  9762  0AA3                     __end_of_LCD_init:
  9763                           
  9764                           	psect	text52
  9765  0E80                     __ptext52:	
  9766 ;; *************** function _LCD_command *****************
  9767 ;; Defined at:
  9768 ;;		line 39 in file "Lcd.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  cmd             1    wreg     unsigned char 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  cmd             1    0[BANK0 ] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9782 ;;      Params:         0       0       0       0       0
  9783 ;;      Locals:         0       1       0       0       0
  9784 ;;      Temps:          2       0       0       0       0
  9785 ;;      Totals:         2       1       0       0       0
  9786 ;;Total ram usage:        3 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    2
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_MEF_Subest_Actualizacion
  9793 ;;		_Pant_Inicio
  9794 ;;		_Pant_Modos
  9795 ;;		_Pant_Detener
  9796 ;;		_Pant_Pulverizacion
  9797 ;;		_Pant_Fuga
  9798 ;;		_Pant_Flujo
  9799 ;;		_Proceso_Fin
  9800 ;;		_LCD_init
  9801 ;;		_LCD_array
  9802 ;;		_LCD_xy
  9803 ;;		_LCD_character
  9804 ;;		_LCD_shift
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           
  9809                           ;psect for function _LCD_command
  9810  0E80                     _LCD_command:
  9811                           
  9812                           ;incstack = 0
  9813                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  9814                           ;LCD_command@cmd stored from wreg
  9815  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  9816  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  9817  0E82  00A0               	movwf	LCD_command@cmd
  9818                           
  9819                           ;Lcd.c: 39: void LCD_command(unsigned char cmd);Lcd.c: 40: {;Lcd.c: 42:     PORTCbits.RC
      +                          4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9820  0E83  1207               	bcf	7,4	;volatile
  9821  0E84  1287               	bcf	7,5	;volatile
  9822  0E85  1307               	bcf	7,6	;volatile
  9823  0E86  1387               	bcf	7,7	;volatile
  9824                           
  9825                           ;Lcd.c: 45:     PORTCbits.RC4 = ((cmd >> 4) & 0x01);
  9826  0E87  0820               	movf	LCD_command@cmd,w
  9827  0E88  00F4               	movwf	??_LCD_command
  9828  0E89  3004               	movlw	4
  9829  0E8A                     u3755:
  9830  0E8A  1003               	clrc
  9831  0E8B  0CF4               	rrf	??_LCD_command,f
  9832  0E8C  3EFF               	addlw	-1
  9833  0E8D  1D03               	skipz
  9834  0E8E  2E8A               	goto	u3755
  9835  0E8F  0874               	movf	??_LCD_command,w
  9836  0E90  3901               	andlw	1
  9837  0E91  00F5               	movwf	??_LCD_command+1
  9838  0E92  0EF5               	swapf	??_LCD_command+1,f
  9839  0E93  0807               	movf	7,w	;volatile
  9840  0E94  0675               	xorwf	??_LCD_command+1,w
  9841  0E95  39EF               	andlw	-17
  9842  0E96  0675               	xorwf	??_LCD_command+1,w
  9843  0E97  0087               	movwf	7	;volatile
  9844                           
  9845                           ;Lcd.c: 46:     PORTCbits.RC5 = ((cmd >> 5) & 0x01);
  9846  0E98  0820               	movf	LCD_command@cmd,w
  9847  0E99  00F4               	movwf	??_LCD_command
  9848  0E9A  3005               	movlw	5
  9849  0E9B                     u3765:
  9850  0E9B  1003               	clrc
  9851  0E9C  0CF4               	rrf	??_LCD_command,f
  9852  0E9D  3EFF               	addlw	-1
  9853  0E9E  1D03               	skipz
  9854  0E9F  2E9B               	goto	u3765
  9855  0EA0  0874               	movf	??_LCD_command,w
  9856  0EA1  3901               	andlw	1
  9857  0EA2  00F5               	movwf	??_LCD_command+1
  9858  0EA3  0EF5               	swapf	??_LCD_command+1,f
  9859  0EA4  0DF5               	rlf	??_LCD_command+1,f
  9860  0EA5  0807               	movf	7,w	;volatile
  9861  0EA6  0675               	xorwf	??_LCD_command+1,w
  9862  0EA7  39DF               	andlw	-33
  9863  0EA8  0675               	xorwf	??_LCD_command+1,w
  9864  0EA9  0087               	movwf	7	;volatile
  9865                           
  9866                           ;Lcd.c: 47:     PORTCbits.RC6 = ((cmd >> 6) & 0x01);
  9867  0EAA  0820               	movf	LCD_command@cmd,w
  9868  0EAB  00F4               	movwf	??_LCD_command
  9869  0EAC  3006               	movlw	6
  9870  0EAD                     u3775:
  9871  0EAD  1003               	clrc
  9872  0EAE  0CF4               	rrf	??_LCD_command,f
  9873  0EAF  3EFF               	addlw	-1
  9874  0EB0  1D03               	skipz
  9875  0EB1  2EAD               	goto	u3775
  9876  0EB2  0874               	movf	??_LCD_command,w
  9877  0EB3  3901               	andlw	1
  9878  0EB4  00F5               	movwf	??_LCD_command+1
  9879  0EB5  0EF5               	swapf	??_LCD_command+1,f
  9880  0EB6  0DF5               	rlf	??_LCD_command+1,f
  9881  0EB7  0DF5               	rlf	??_LCD_command+1,f
  9882  0EB8  0807               	movf	7,w	;volatile
  9883  0EB9  0675               	xorwf	??_LCD_command+1,w
  9884  0EBA  39BF               	andlw	-65
  9885  0EBB  0675               	xorwf	??_LCD_command+1,w
  9886  0EBC  0087               	movwf	7	;volatile
  9887                           
  9888                           ;Lcd.c: 48:     PORTCbits.RC7 = ((cmd >> 7) & 0x01);
  9889  0EBD  0820               	movf	LCD_command@cmd,w
  9890  0EBE  00F4               	movwf	??_LCD_command
  9891  0EBF  3007               	movlw	7
  9892  0EC0                     u3785:
  9893  0EC0  1003               	clrc
  9894  0EC1  0CF4               	rrf	??_LCD_command,f
  9895  0EC2  3EFF               	addlw	-1
  9896  0EC3  1D03               	skipz
  9897  0EC4  2EC0               	goto	u3785
  9898  0EC5  0874               	movf	??_LCD_command,w
  9899  0EC6  3901               	andlw	1
  9900  0EC7  00F5               	movwf	??_LCD_command+1
  9901  0EC8  0CF5               	rrf	??_LCD_command+1,f
  9902  0EC9  0CF5               	rrf	??_LCD_command+1,f
  9903  0ECA  0807               	movf	7,w	;volatile
  9904  0ECB  0675               	xorwf	??_LCD_command+1,w
  9905  0ECC  397F               	andlw	-129
  9906  0ECD  0675               	xorwf	??_LCD_command+1,w
  9907  0ECE  0087               	movwf	7	;volatile
  9908                           
  9909                           ;Lcd.c: 51:     PORTCbits.RC1 = 0;
  9910  0ECF  1087               	bcf	7,1	;volatile
  9911                           
  9912                           ;Lcd.c: 52:     PORTCbits.RC3 = 0;
  9913  0ED0  1187               	bcf	7,3	;volatile
  9914                           
  9915                           ;Lcd.c: 55:     PORTCbits.RC3 = 1;
  9916  0ED1  1587               	bsf	7,3	;volatile
  9917                           
  9918                           ;Lcd.c: 56:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9919  0ED2  3018               	movlw	24
  9920  0ED3  00F4               	movwf	??_LCD_command
  9921  0ED4                     u5607:
  9922  0ED4  0BF4               	decfsz	??_LCD_command,f
  9923  0ED5  2ED4               	goto	u5607
  9924  0ED6  2ED7               	nop2
  9925                           
  9926                           ;Lcd.c: 57:     PORTCbits.RC3 = 0;
  9927  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  9928  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  9929  0ED9  1187               	bcf	7,3	;volatile
  9930                           
  9931                           ;Lcd.c: 58:     _delay((unsigned long)((15)*(20000000/4000000.0)));
  9932  0EDA  3018               	movlw	24
  9933  0EDB  00F4               	movwf	??_LCD_command
  9934  0EDC                     u5617:
  9935  0EDC  0BF4               	decfsz	??_LCD_command,f
  9936  0EDD  2EDC               	goto	u5617
  9937  0EDE  2EDF               	nop2
  9938                           
  9939                           ;Lcd.c: 62:     PORTCbits.RC4=0,PORTCbits.RC5=0,PORTCbits.RC6=0,PORTCbits.RC7=0;
  9940  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  9941  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  9942  0EE1  1207               	bcf	7,4	;volatile
  9943  0EE2  1287               	bcf	7,5	;volatile
  9944  0EE3  1307               	bcf	7,6	;volatile
  9945  0EE4  1387               	bcf	7,7	;volatile
  9946                           
  9947                           ;Lcd.c: 65:     PORTCbits.RC4 = (cmd & 0x01);
  9948  0EE5  0820               	movf	LCD_command@cmd,w
  9949  0EE6  3901               	andlw	1
  9950  0EE7  00F4               	movwf	??_LCD_command
  9951  0EE8  0EF4               	swapf	??_LCD_command,f
  9952  0EE9  0807               	movf	7,w	;volatile
  9953  0EEA  0674               	xorwf	??_LCD_command,w
  9954  0EEB  39EF               	andlw	-17
  9955  0EEC  0674               	xorwf	??_LCD_command,w
  9956  0EED  0087               	movwf	7	;volatile
  9957                           
  9958                           ;Lcd.c: 66:     PORTCbits.RC5 = ((cmd >> 1) & 0x01);
  9959  0EEE  0820               	movf	LCD_command@cmd,w
  9960  0EEF  00F4               	movwf	??_LCD_command
  9961  0EF0  1003               	clrc
  9962  0EF1  0C74               	rrf	??_LCD_command,w
  9963  0EF2  3901               	andlw	1
  9964  0EF3  00F5               	movwf	??_LCD_command+1
  9965  0EF4  0EF5               	swapf	??_LCD_command+1,f
  9966  0EF5  0DF5               	rlf	??_LCD_command+1,f
  9967  0EF6  0807               	movf	7,w	;volatile
  9968  0EF7  0675               	xorwf	??_LCD_command+1,w
  9969  0EF8  39DF               	andlw	-33
  9970  0EF9  0675               	xorwf	??_LCD_command+1,w
  9971  0EFA  0087               	movwf	7	;volatile
  9972                           
  9973                           ;Lcd.c: 67:     PORTCbits.RC6 = ((cmd >> 2) & 0x01);
  9974  0EFB  0820               	movf	LCD_command@cmd,w
  9975  0EFC  00F4               	movwf	??_LCD_command
  9976  0EFD  3002               	movlw	2
  9977  0EFE                     u3795:
  9978  0EFE  1003               	clrc
  9979  0EFF  0CF4               	rrf	??_LCD_command,f
  9980  0F00  3EFF               	addlw	-1
  9981  0F01  1D03               	skipz
  9982  0F02  2EFE               	goto	u3795
  9983  0F03  0874               	movf	??_LCD_command,w
  9984  0F04  3901               	andlw	1
  9985  0F05  00F5               	movwf	??_LCD_command+1
  9986  0F06  0EF5               	swapf	??_LCD_command+1,f
  9987  0F07  0DF5               	rlf	??_LCD_command+1,f
  9988  0F08  0DF5               	rlf	??_LCD_command+1,f
  9989  0F09  0807               	movf	7,w	;volatile
  9990  0F0A  0675               	xorwf	??_LCD_command+1,w
  9991  0F0B  39BF               	andlw	-65
  9992  0F0C  0675               	xorwf	??_LCD_command+1,w
  9993  0F0D  0087               	movwf	7	;volatile
  9994                           
  9995                           ;Lcd.c: 68:     PORTCbits.RC7 = ((cmd >> 3) & 0x01);
  9996  0F0E  0820               	movf	LCD_command@cmd,w
  9997  0F0F  00F4               	movwf	??_LCD_command
  9998  0F10  3003               	movlw	3
  9999  0F11                     u3805:
 10000  0F11  1003               	clrc
 10001  0F12  0CF4               	rrf	??_LCD_command,f
 10002  0F13  3EFF               	addlw	-1
 10003  0F14  1D03               	skipz
 10004  0F15  2F11               	goto	u3805
 10005  0F16  0874               	movf	??_LCD_command,w
 10006  0F17  3901               	andlw	1
 10007  0F18  00F5               	movwf	??_LCD_command+1
 10008  0F19  0CF5               	rrf	??_LCD_command+1,f
 10009  0F1A  0CF5               	rrf	??_LCD_command+1,f
 10010  0F1B  0807               	movf	7,w	;volatile
 10011  0F1C  0675               	xorwf	??_LCD_command+1,w
 10012  0F1D  397F               	andlw	-129
 10013  0F1E  0675               	xorwf	??_LCD_command+1,w
 10014  0F1F  0087               	movwf	7	;volatile
 10015                           
 10016                           ;Lcd.c: 71:     PORTCbits.RC1 = 0;
 10017  0F20  1087               	bcf	7,1	;volatile
 10018                           
 10019                           ;Lcd.c: 72:     PORTCbits.RC3 = 0;
 10020  0F21  1187               	bcf	7,3	;volatile
 10021                           
 10022                           ;Lcd.c: 75:     PORTCbits.RC3 = 1;
 10023  0F22  1587               	bsf	7,3	;volatile
 10024                           
 10025                           ;Lcd.c: 76:     _delay((unsigned long)((15)*(20000000/4000000.0)));
 10026  0F23  3018               	movlw	24
 10027  0F24  00F4               	movwf	??_LCD_command
 10028  0F25                     u5627:
 10029  0F25  0BF4               	decfsz	??_LCD_command,f
 10030  0F26  2F25               	goto	u5627
 10031  0F27  2F28               	nop2
 10032                           
 10033                           ;Lcd.c: 77:     PORTCbits.RC3 = 0;
 10034  0F28  1283               	bcf	3,5	;RP0=0, select bank0
 10035  0F29  1303               	bcf	3,6	;RP1=0, select bank0
 10036  0F2A  1187               	bcf	7,3	;volatile
 10037                           
 10038                           ;Lcd.c: 78:     _delay((unsigned long)((15)*(20000000/4000000.0)));
 10039  0F2B  3018               	movlw	24
 10040  0F2C  00F4               	movwf	??_LCD_command
 10041  0F2D                     u5637:
 10042  0F2D  0BF4               	decfsz	??_LCD_command,f
 10043  0F2E  2F2D               	goto	u5637
 10044  0F2F  2F30               	nop2
 10045                           
 10046                           ;Lcd.c: 81:     _delay((unsigned long)((3)*(20000000/4000.0)));
 10047  0F30  3014               	movlw	20
 10048  0F31  00F5               	movwf	??_LCD_command+1
 10049  0F32  3079               	movlw	121
 10050  0F33  00F4               	movwf	??_LCD_command
 10051  0F34                     u5647:
 10052  0F34  0BF4               	decfsz	??_LCD_command,f
 10053  0F35  2F34               	goto	u5647
 10054  0F36  0BF5               	decfsz	??_LCD_command+1,f
 10055  0F37  2F34               	goto	u5647
 10056  0F38  2F39               	nop2
 10057  0F39  0008               	return
 10058  0F3A                     __end_of_LCD_command:
 10059                           
 10060                           	psect	text53
 10061  120A                     __ptext53:	
 10062 ;; *************** function _Adc_init *****************
 10063 ;; Defined at:
 10064 ;;		line 5 in file "ADC.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10078 ;;      Params:         0       0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    2
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_main
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           
 10093                           ;psect for function _Adc_init
 10094  120A                     _Adc_init:
 10095                           
 10096                           ;ADC.c: 8:     TRISAbits.TRISA0 = 1,ANSELbits.ANS0 = 1;
 10097                           
 10098                           ;incstack = 0
 10099                           ; Regs used in _Adc_init: [wreg+status,2+status,0]
 10100  120A  1683               	bsf	3,5	;RP0=1, select bank1
 10101  120B  1303               	bcf	3,6	;RP1=0, select bank1
 10102  120C  1405               	bsf	5,0	;volatile
 10103  120D  1683               	bsf	3,5	;RP0=1, select bank3
 10104  120E  1703               	bsf	3,6	;RP1=1, select bank3
 10105  120F  1408               	bsf	8,0	;volatile
 10106                           
 10107                           ;ADC.c: 9:     TRISAbits.TRISA1 = 1;ANSELbits.ANS1 = 1;
 10108  1210  1683               	bsf	3,5	;RP0=1, select bank1
 10109  1211  1303               	bcf	3,6	;RP1=0, select bank1
 10110  1212  1485               	bsf	5,1	;volatile
 10111  1213  1683               	bsf	3,5	;RP0=1, select bank3
 10112  1214  1703               	bsf	3,6	;RP1=1, select bank3
 10113  1215  1488               	bsf	8,1	;volatile
 10114                           
 10115                           ;ADC.c: 10:     TRISAbits.TRISA2 = 1,ANSELbits.ANS2 = 1;
 10116  1216  1683               	bsf	3,5	;RP0=1, select bank1
 10117  1217  1303               	bcf	3,6	;RP1=0, select bank1
 10118  1218  1505               	bsf	5,2	;volatile
 10119  1219  1683               	bsf	3,5	;RP0=1, select bank3
 10120  121A  1703               	bsf	3,6	;RP1=1, select bank3
 10121  121B  1508               	bsf	8,2	;volatile
 10122                           
 10123                           ;ADC.c: 11:     TRISAbits.TRISA3 = 1,ANSELbits.ANS3 = 1;
 10124  121C  1683               	bsf	3,5	;RP0=1, select bank1
 10125  121D  1303               	bcf	3,6	;RP1=0, select bank1
 10126  121E  1585               	bsf	5,3	;volatile
 10127  121F  1683               	bsf	3,5	;RP0=1, select bank3
 10128  1220  1703               	bsf	3,6	;RP1=1, select bank3
 10129  1221  1588               	bsf	8,3	;volatile
 10130                           
 10131                           ;ADC.c: 14:     ADCON0bits.ADCS = 0b10;
 10132  1222  1283               	bcf	3,5	;RP0=0, select bank0
 10133  1223  1303               	bcf	3,6	;RP1=0, select bank0
 10134  1224  081F               	movf	31,w	;volatile
 10135  1225  393F               	andlw	-193
 10136  1226  3880               	iorlw	128
 10137  1227  009F               	movwf	31	;volatile
 10138                           
 10139                           ;ADC.c: 17:     ADCON1bits.ADFM = 1;
 10140  1228  1683               	bsf	3,5	;RP0=1, select bank1
 10141  1229  1303               	bcf	3,6	;RP1=0, select bank1
 10142  122A  179F               	bsf	31,7	;volatile
 10143                           
 10144                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
 10145  122B  121F               	bcf	31,4	;volatile
 10146                           
 10147                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
 10148  122C  129F               	bcf	31,5	;volatile
 10149  122D  0008               	return
 10150  122E                     __end_of_Adc_init:
 10151                           
 10152                           	psect	text54
 10153  0B2F                     __ptext54:	
 10154 ;; *************** function _ISR *****************
 10155 ;; Defined at:
 10156 ;;		line 87 in file "Main.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  f_pwmS1         1    3[COMMON] _Bool 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10170 ;;      Params:         0       0       0       0       0
 10171 ;;      Locals:         1       0       0       0       0
 10172 ;;      Temps:          3       0       0       0       0
 10173 ;;      Totals:         4       0       0       0       0
 10174 ;;Total ram usage:        4 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    1
 10177 ;; This function calls:
 10178 ;;		_Pwm_Signal
 10179 ;;		_Task_Ready
 10180 ;; This function is called by:
 10181 ;;		Interrupt level 1
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function _ISR
 10187  0B2F                     _ISR:
 10188                           
 10189                           ;Main.c: 89:     _Bool f_pwmS1=0;
 10190  0B2F  01F3               	clrf	ISR@f_pwmS1
 10191                           
 10192                           ;Main.c: 92:     if(TMR1IF == 1)
 10193  0B30  1C0C               	btfss	12,0	;volatile
 10194  0B31  2B9C               	goto	i1l3827
 10195                           
 10196                           ;Main.c: 93:     {;Main.c: 94:         if(Delay100ms!=0 && !Mostrar) Delay100ms--;
 10197  0B32  086A               	movf	_Delay100ms,w	;volatile
 10198  0B33  046B               	iorwf	_Delay100ms+1,w	;volatile
 10199  0B34  1903               	btfsc	3,2
 10200  0B35  2B43               	goto	i1l3809
 10201  0B36  1683               	bsf	3,5	;RP0=1, select bank1
 10202  0B37  1303               	bcf	3,6	;RP1=0, select bank1
 10203  0B38  083A               	movf	_Mostrar^(0+128),w
 10204  0B39  1D03               	btfss	3,2
 10205  0B3A  2B43               	goto	i1l3809
 10206  0B3B  3001               	movlw	1
 10207  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
 10208  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
 10209  0B3E  02EA               	subwf	_Delay100ms,f	;volatile
 10210  0B3F  3000               	movlw	0
 10211  0B40  1C03               	skipc
 10212  0B41  03EB               	decf	_Delay100ms+1,f	;volatile
 10213  0B42  02EB               	subwf	_Delay100ms+1,f	;volatile
 10214  0B43                     i1l3809:
 10215                           
 10216                           ;Main.c: 95:         if(Delay200ms!=0) Delay200ms--;
 10217  0B43  1283               	bcf	3,5	;RP0=0, select bank0
 10218  0B44  0868               	movf	_Delay200ms,w	;volatile
 10219  0B45  0469               	iorwf	_Delay200ms+1,w	;volatile
 10220  0B46  1903               	btfsc	3,2
 10221  0B47  2B4E               	goto	i1l3813
 10222  0B48  3001               	movlw	1
 10223  0B49  02E8               	subwf	_Delay200ms,f	;volatile
 10224  0B4A  3000               	movlw	0
 10225  0B4B  1C03               	skipc
 10226  0B4C  03E9               	decf	_Delay200ms+1,f	;volatile
 10227  0B4D  02E9               	subwf	_Delay200ms+1,f	;volatile
 10228  0B4E                     i1l3813:
 10229                           
 10230                           ;Main.c: 96:         if(Delay1s!=0 && Output) Delay1s--;
 10231  0B4E  0866               	movf	_Delay1s,w	;volatile
 10232  0B4F  0467               	iorwf	_Delay1s+1,w	;volatile
 10233  0B50  1903               	btfsc	3,2
 10234  0B51  2B5B               	goto	i1l3819
 10235  0B52  0877               	movf	_Output,w
 10236  0B53  1903               	btfsc	3,2
 10237  0B54  2B5B               	goto	i1l3819
 10238  0B55  3001               	movlw	1
 10239  0B56  02E6               	subwf	_Delay1s,f	;volatile
 10240  0B57  3000               	movlw	0
 10241  0B58  1C03               	skipc
 10242  0B59  03E7               	decf	_Delay1s+1,f	;volatile
 10243  0B5A  02E7               	subwf	_Delay1s+1,f	;volatile
 10244  0B5B                     i1l3819:
 10245                           
 10246                           ;Main.c: 97:         if(Act_PwmS1 && PwmS1!=PER_T_S1) PwmS1++;
 10247  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
 10248  0B5C  1303               	bcf	3,6	;RP1=0, select bank1
 10249  0B5D  083C               	movf	_Act_PwmS1^(0+128),w
 10250  0B5E  1903               	btfsc	3,2
 10251  0B5F  2B74               	goto	i1l124
 10252  0B60  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10253  0B61  1283               	bcf	3,5	;RP0=0, select bank0
 10254  0B62  1303               	bcf	3,6	;RP1=0, select bank0
 10255  0B63  0661               	xorwf	_PwmS1+1,w
 10256  0B64  1D03               	skipz
 10257  0B65  2B6C               	goto	u366_25
 10258  0B66  1683               	bsf	3,5	;RP0=1, select bank1
 10259  0B67  1303               	bcf	3,6	;RP1=0, select bank1
 10260  0B68  0830               	movf	_PER_T_S1^(0+128),w
 10261  0B69  1283               	bcf	3,5	;RP0=0, select bank0
 10262  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
 10263  0B6B  0660               	xorwf	_PwmS1,w
 10264  0B6C                     u366_25:
 10265  0B6C  1903               	skipnz
 10266  0B6D  2B74               	goto	i1l124
 10267  0B6E  3001               	movlw	1
 10268  0B6F  07E0               	addwf	_PwmS1,f
 10269  0B70  1803               	skipnc
 10270  0B71  0AE1               	incf	_PwmS1+1,f
 10271  0B72  3000               	movlw	0
 10272  0B73  07E1               	addwf	_PwmS1+1,f
 10273  0B74                     i1l124:
 10274                           
 10275                           ;Main.c: 98:         if(PwmS1 == P_W_T_S1 || PwmS1 == PER_T_S1) f_pwmS1=1;
 10276  0B74  1683               	bsf	3,5	;RP0=1, select bank1
 10277  0B75  1303               	bcf	3,6	;RP1=0, select bank1
 10278  0B76  0833               	movf	(_P_W_T_S1+1)^(0+128),w
 10279  0B77  1283               	bcf	3,5	;RP0=0, select bank0
 10280  0B78  1303               	bcf	3,6	;RP1=0, select bank0
 10281  0B79  0661               	xorwf	_PwmS1+1,w
 10282  0B7A  1D03               	skipz
 10283  0B7B  2B82               	goto	u367_25
 10284  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
 10285  0B7D  1303               	bcf	3,6	;RP1=0, select bank1
 10286  0B7E  0832               	movf	_P_W_T_S1^(0+128),w
 10287  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
 10288  0B80  1303               	bcf	3,6	;RP1=0, select bank0
 10289  0B81  0660               	xorwf	_PwmS1,w
 10290  0B82                     u367_25:
 10291  0B82  1903               	skipnz
 10292  0B83  2B94               	goto	i1l127
 10293  0B84  1683               	bsf	3,5	;RP0=1, select bank1
 10294  0B85  1303               	bcf	3,6	;RP1=0, select bank1
 10295  0B86  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10296  0B87  1283               	bcf	3,5	;RP0=0, select bank0
 10297  0B88  1303               	bcf	3,6	;RP1=0, select bank0
 10298  0B89  0661               	xorwf	_PwmS1+1,w
 10299  0B8A  1D03               	skipz
 10300  0B8B  2B92               	goto	u368_25
 10301  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
 10302  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
 10303  0B8E  0830               	movf	_PER_T_S1^(0+128),w
 10304  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
 10305  0B90  1303               	bcf	3,6	;RP1=0, select bank0
 10306  0B91  0660               	xorwf	_PwmS1,w
 10307  0B92                     u368_25:
 10308  0B92  1D03               	skipz
 10309  0B93  2B96               	goto	i1l125
 10310  0B94                     i1l127:
 10311  0B94  01F3               	clrf	ISR@f_pwmS1
 10312  0B95  0AF3               	incf	ISR@f_pwmS1,f
 10313  0B96                     i1l125:
 10314                           
 10315                           ;Main.c: 100:         TMR1 = 65285;
 10316  0B96  30FF               	movlw	255
 10317  0B97  008F               	movwf	15	;volatile
 10318  0B98  3005               	movlw	5
 10319  0B99  008E               	movwf	14	;volatile
 10320                           
 10321                           ;Main.c: 101:         TMR1ON = 1;
 10322  0B9A  1410               	bsf	16,0	;volatile
 10323                           
 10324                           ;Main.c: 102:         TMR1IF = 0;
 10325  0B9B  100C               	bcf	12,0	;volatile
 10326  0B9C                     i1l3827:
 10327                           
 10328                           ;Main.c: 105:     if(!Delay100ms || !Delay200ms || !Delay1s) Task_Ready();
 10329  0B9C  086A               	movf	_Delay100ms,w	;volatile
 10330  0B9D  046B               	iorwf	_Delay100ms+1,w	;volatile
 10331  0B9E  1903               	btfsc	3,2
 10332  0B9F  2BA8               	goto	i1l3833
 10333  0BA0  0868               	movf	_Delay200ms,w	;volatile
 10334  0BA1  0469               	iorwf	_Delay200ms+1,w	;volatile
 10335  0BA2  1903               	btfsc	3,2
 10336  0BA3  2BA8               	goto	i1l3833
 10337  0BA4  0866               	movf	_Delay1s,w	;volatile
 10338  0BA5  0467               	iorwf	_Delay1s+1,w	;volatile
 10339  0BA6  1D03               	btfss	3,2
 10340  0BA7  2BAD               	goto	i1l3835
 10341  0BA8                     i1l3833:
 10342  0BA8  160A  118A  23F3  120A  158A  	fcall	_Task_Ready
 10343  0BAD                     i1l3835:
 10344                           
 10345                           ;Main.c: 106:     if(f_pwmS1 && Act_PwmS1) Pwm_Signal();
 10346  0BAD  0873               	movf	ISR@f_pwmS1,w
 10347  0BAE  1903               	btfsc	3,2
 10348  0BAF  2BBA               	goto	i1l132
 10349  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
 10350  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0BB2  083C               	movf	_Act_PwmS1^(0+128),w
 10352  0BB3  1903               	btfsc	3,2
 10353  0BB4  2BBA               	goto	i1l132
 10354  0BB5  160A  118A  21E6  120A  158A  	fcall	_Pwm_Signal
 10355  0BBA                     i1l132:
 10356  0BBA  0872               	movf	??_ISR+2,w
 10357  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
 10358  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
 10359  0BBD  00FF               	movwf	127
 10360  0BBE  0871               	movf	??_ISR+1,w
 10361  0BBF  008A               	movwf	10
 10362  0BC0  0E70               	swapf	??_ISR^(0+4294967168),w
 10363  0BC1  0083               	movwf	3
 10364  0BC2  0EFE               	swapf	126,f
 10365  0BC3  0E7E               	swapf	126,w
 10366  0BC4  0009               	retfie
 10367  0BC5                     __end_of_ISR:
 10368                           
 10369                           	psect	intentry
 10370  0004                     __pintentry:	
 10371                           ;incstack = 0
 10372                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10373                           
 10374  0004                     interrupt_function:
 10375  007E                     saved_w	set	btemp
 10376  0004  00FE               	movwf	btemp
 10377  0005  0E03               	swapf	3,w
 10378  0006  00F0               	movwf	??_ISR
 10379  0007  080A               	movf	10,w
 10380  0008  00F1               	movwf	??_ISR+1
 10381  0009  1283               	bcf	3,5	;RP0=0, select bank0
 10382  000A  1303               	bcf	3,6	;RP1=0, select bank0
 10383  000B  087F               	movf	btemp+1,w
 10384  000C  00F2               	movwf	??_ISR+2
 10385  000D  120A  158A  2B2F   	ljmp	_ISR
 10386                           
 10387                           	psect	text55
 10388  13F3                     __ptext55:	
 10389 ;; *************** function _Task_Ready *****************
 10390 ;; Defined at:
 10391 ;;		line 111 in file "Main.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2, status,0, btemp+1
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10405 ;;      Params:         0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; This function calls:
 10412 ;;		Nothing
 10413 ;; This function is called by:
 10414 ;;		_ISR
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function _Task_Ready
 10420  13F3                     _Task_Ready:
 10421                           
 10422                           ;Main.c: 113:     if(!Delay100ms)
 10423                           
 10424                           ;incstack = 0
 10425                           ; Regs used in _Task_Ready: [wreg+status,2+status,0+btemp+1]
 10426  13F3  1283               	bcf	3,5	;RP0=0, select bank0
 10427  13F4  1303               	bcf	3,6	;RP1=0, select bank0
 10428  13F5  086A               	movf	_Delay100ms,w	;volatile
 10429  13F6  046B               	iorwf	_Delay100ms+1,w	;volatile
 10430  13F7  1D03               	btfss	3,2
 10431  13F8  2C03               	goto	i1l3741
 10432                           
 10433                           ;Main.c: 114:     {;Main.c: 115:         Mostrar = 1;
 10434  13F9  1683               	bsf	3,5	;RP0=1, select bank1
 10435  13FA  1303               	bcf	3,6	;RP1=0, select bank1
 10436  13FB  01BA               	clrf	_Mostrar^(0+128)
 10437  13FC  0ABA               	incf	_Mostrar^(0+128),f
 10438                           
 10439                           ;Main.c: 116:         Delay100ms = 1000;
 10440  13FD  30E8               	movlw	232
 10441  13FE  1283               	bcf	3,5	;RP0=0, select bank0
 10442  13FF  1303               	bcf	3,6	;RP1=0, select bank0
 10443  1400  00EA               	movwf	_Delay100ms	;volatile
 10444  1401  3003               	movlw	3
 10445  1402  00EB               	movwf	_Delay100ms+1	;volatile
 10446  1403                     i1l3741:
 10447                           
 10448                           ;Main.c: 118:     if(!Delay200ms)
 10449  1403  0868               	movf	_Delay200ms,w	;volatile
 10450  1404  0469               	iorwf	_Delay200ms+1,w	;volatile
 10451  1405  1D03               	btfss	3,2
 10452  1406  2C12               	goto	i1l3747
 10453  1407  0064               	clrwdt	;# 
 10454                           
 10455                           ;Main.c: 121:         Act_Variables = 1;
 10456  1408  1683               	bsf	3,5	;RP0=1, select bank1
 10457  1409  1303               	bcf	3,6	;RP1=0, select bank1
 10458  140A  01B9               	clrf	_Act_Variables^(0+128)
 10459  140B  0AB9               	incf	_Act_Variables^(0+128),f
 10460                           
 10461                           ;Main.c: 122:         Delay200ms = 2000;
 10462  140C  30D0               	movlw	208
 10463  140D  1283               	bcf	3,5	;RP0=0, select bank0
 10464  140E  1303               	bcf	3,6	;RP1=0, select bank0
 10465  140F  00E8               	movwf	_Delay200ms	;volatile
 10466  1410  3007               	movlw	7
 10467  1411  00E9               	movwf	_Delay200ms+1	;volatile
 10468  1412                     i1l3747:
 10469                           
 10470                           ;Main.c: 124:     if(!Delay1s)
 10471  1412  0866               	movf	_Delay1s,w	;volatile
 10472  1413  0467               	iorwf	_Delay1s+1,w	;volatile
 10473  1414  1D03               	btfss	3,2
 10474  1415  0008               	return
 10475                           
 10476                           ;Main.c: 125:     {;Main.c: 126:         if(Seg == 0)
 10477  1416  0878               	movf	_Seg,w
 10478  1417  1D03               	btfss	3,2
 10479  1418  2C23               	goto	i1l3757
 10480                           
 10481                           ;Main.c: 127:         {;Main.c: 128:             if(Min != 0) Min--,Seg=59;
 10482  1419  0879               	movf	_Min,w
 10483  141A  1903               	btfsc	3,2
 10484  141B  2C25               	goto	i1l3759
 10485  141C  3001               	movlw	1
 10486  141D  02F9               	subwf	_Min,f
 10487  141E  303B               	movlw	59
 10488  141F  00FF               	movwf	127
 10489  1420  087F               	movf	127,w
 10490  1421  00F8               	movwf	_Seg
 10491  1422  2C25               	goto	i1l3759
 10492  1423                     i1l3757:
 10493  1423  3001               	movlw	1
 10494  1424  02F8               	subwf	_Seg,f
 10495  1425                     i1l3759:
 10496                           
 10497                           ;Main.c: 131:         Temporizador = 1;
 10498  1425  1683               	bsf	3,5	;RP0=1, select bank1
 10499  1426  1303               	bcf	3,6	;RP1=0, select bank1
 10500  1427  01B8               	clrf	_Temporizador^(0+128)
 10501  1428  0AB8               	incf	_Temporizador^(0+128),f
 10502                           
 10503                           ;Main.c: 132:         Delay1s = 10000;
 10504  1429  3010               	movlw	16
 10505  142A  1283               	bcf	3,5	;RP0=0, select bank0
 10506  142B  1303               	bcf	3,6	;RP1=0, select bank0
 10507  142C  00E6               	movwf	_Delay1s	;volatile
 10508  142D  3027               	movlw	39
 10509  142E  00E7               	movwf	_Delay1s+1	;volatile
 10510  142F  0008               	return
 10511  1430                     __end_of_Task_Ready:
 10512                           
 10513                           	psect	text56
 10514  11E6                     __ptext56:	
 10515 ;; *************** function _Pwm_Signal *****************
 10516 ;; Defined at:
 10517 ;;		line 86 in file "Pwm_Soft.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10531 ;;      Params:         0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_ISR
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           
 10545                           ;psect for function _Pwm_Signal
 10546  11E6                     _Pwm_Signal:
 10547                           
 10548                           ;Pwm_Soft.c: 88:     if(PwmS1==P_W_T_S1)
 10549                           
 10550                           ;incstack = 0
 10551                           ; Regs used in _Pwm_Signal: [wreg+status,2]
 10552  11E6  1683               	bsf	3,5	;RP0=1, select bank1
 10553  11E7  1303               	bcf	3,6	;RP1=0, select bank1
 10554  11E8  0833               	movf	(_P_W_T_S1+1)^(0+128),w
 10555  11E9  1283               	bcf	3,5	;RP0=0, select bank0
 10556  11EA  1303               	bcf	3,6	;RP1=0, select bank0
 10557  11EB  0661               	xorwf	_PwmS1+1,w
 10558  11EC  1D03               	skipz
 10559  11ED  29F4               	goto	u357_25
 10560  11EE  1683               	bsf	3,5	;RP0=1, select bank1
 10561  11EF  1303               	bcf	3,6	;RP1=0, select bank1
 10562  11F0  0832               	movf	_P_W_T_S1^(0+128),w
 10563  11F1  1283               	bcf	3,5	;RP0=0, select bank0
 10564  11F2  1303               	bcf	3,6	;RP1=0, select bank0
 10565  11F3  0660               	xorwf	_PwmS1,w
 10566  11F4                     u357_25:
 10567  11F4  1903               	btfsc	3,2
 10568                           
 10569                           ;Pwm_Soft.c: 89:     {;Pwm_Soft.c: 90:         RB4=0;
 10570  11F5  1206               	bcf	6,4	;volatile
 10571                           
 10572                           ;Pwm_Soft.c: 92:     if(PwmS1==PER_T_S1)
 10573  11F6  1683               	bsf	3,5	;RP0=1, select bank1
 10574  11F7  1303               	bcf	3,6	;RP1=0, select bank1
 10575  11F8  0831               	movf	(_PER_T_S1+1)^(0+128),w
 10576  11F9  1283               	bcf	3,5	;RP0=0, select bank0
 10577  11FA  1303               	bcf	3,6	;RP1=0, select bank0
 10578  11FB  0661               	xorwf	_PwmS1+1,w
 10579  11FC  1D03               	skipz
 10580  11FD  2A04               	goto	u358_25
 10581  11FE  1683               	bsf	3,5	;RP0=1, select bank1
 10582  11FF  1303               	bcf	3,6	;RP1=0, select bank1
 10583  1200  0830               	movf	_PER_T_S1^(0+128),w
 10584  1201  1283               	bcf	3,5	;RP0=0, select bank0
 10585  1202  1303               	bcf	3,6	;RP1=0, select bank0
 10586  1203  0660               	xorwf	_PwmS1,w
 10587  1204                     u358_25:
 10588  1204  1D03               	skipz
 10589  1205  0008               	return
 10590                           
 10591                           ;Pwm_Soft.c: 93:     {;Pwm_Soft.c: 94:         PwmS1 = 0;
 10592  1206  01E0               	clrf	_PwmS1
 10593  1207  01E1               	clrf	_PwmS1+1
 10594                           
 10595                           ;Pwm_Soft.c: 95:         RB4=1;
 10596  1208  1606               	bsf	6,4	;volatile
 10597  1209  0008               	return
 10598  120A                     __end_of_Pwm_Signal:
 10599  007E                     btemp	set	126	;btemp
 10600  007E                     wtemp0	set	126
 10601                           
 10602                           	psect	config
 10603                           
 10604                           ;Config register CONFIG1 @ 0x2007
 10605                           ;	Oscillator Selection bits
 10606                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10607                           ;	Watchdog Timer Enable bit
 10608                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10609                           ;	Power-up Timer Enable bit
 10610                           ;	PWRTE = ON, PWRT enabled
 10611                           ;	RE3/MCLR pin function select bit
 10612                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10613                           ;	Code Protection bit
 10614                           ;	CP = OFF, Program memory code protection is disabled
 10615                           ;	Data Code Protection bit
 10616                           ;	CPD = OFF, Data memory code protection is disabled
 10617                           ;	Brown Out Reset Selection bits
 10618                           ;	BOREN = OFF, BOR disabled
 10619                           ;	Internal External Switchover bit
 10620                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10621                           ;	Fail-Safe Clock Monitor Enabled bit
 10622                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10623                           ;	Low Voltage Programming Enable bit
 10624                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10625                           ;	In-Circuit Debugger Mode bit
 10626                           ;	DEBUG = 0x1, unprogrammed default
 10627  2007                     	org	8199
 10628  2007  2CE2               	dw	11490
 10629                           
 10630                           ;Config register CONFIG2 @ 0x2008
 10631                           ;	Brown-out Reset Selection bit
 10632                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10633                           ;	Flash Program Memory Self Write Enable bits
 10634                           ;	WRT = OFF, Write protection off
 10635  2008                     	org	8200
 10636  2008  3FFF               	dw	16383

Data Sizes:
    Strings     238
    Constant    10
    Data        14
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     64      76
    BANK1            80     11      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_character@caracter	PTR unsigned char  size(1) Largest target is 8
		 -> Pant_Inicio@caracter(BANK0[8]), Pant_Inicio@caracter1(BANK0[8]), 

    LCD_array@date	PTR unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[20]), STR_38(CODE[21]), STR_37(CODE[10]), STR_36(CODE[17]), 
		 -> STR_35(CODE[9]), STR_34(CODE[17]), STR_33(CODE[18]), STR_32(CODE[17]), 
		 -> STR_31(CODE[17]), Pant_Temporizador@buffer(BANK0[20]), Pant_Val_Act@buffer(BANK0[20]), STR_23(CODE[2]), 
		 -> STR_22(CODE[13]), STR_21(CODE[2]), STR_20(CODE[8]), STR_19(CODE[5]), 
		 -> STR_18(CODE[5]), STR_17(CODE[18]), STR_16(CODE[6]), STR_15(CODE[5]), 
		 -> STR_14(CODE[14]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _Pant_Inicio->_LCD_command
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _MEF_Subest_Actualizacion->_LCD_command
    _sprintf->___wmul
    _sprintf->_isdigit
    _Pant_Pulverizacion->_LCD_command
    _Pant_Modos->_LCD_command
    _Pant_Modos->_LCD_date
    _LCD_xy->_LCD_command
    _Pant_Fuga->_LCD_command
    _Pant_Flujo->_LCD_command
    _Adc_Rpm_Read->_Adc
    _Adc_Rpm_Read->___wmul
    _Adc_Pwm_Read->_Adc
    _Adc_Temp_Read->_Adc
    _Adc_Min_Read->_Adc
    ___fttol->_Adc
    ___ftmul->_Adc
    ___ftdiv->_Adc
    ___awtoft->_Adc
    _Proceso_Fin->_LCD_command
    _Pant_Detener->_LCD_command
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MEF_Actualizacion
    _MEF_Actualizacion->_MEF_Subest_Actualizacion
    _Pant_Selector->_LCD_array
    _Pant_Menu->_LCD_array
    _Pant_Inicio->_LCD_array
    _LCD_character->_LCD_command
    _LCD_character->_LCD_date
    _MEF_Subest_Actualizacion->_Salida_Modo_Pulv
    _Salida_Modo_Pulv->_Pwm1
    ___lbtoft->___ftpack
    _Pwm1_init->___fttol
    ___lwtoft->___ftpack
    _Pwm1->___fttol
    _Pant_Val_Act->_sprintf
    _Pant_Temporizador->_sprintf
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _Pant_Pulverizacion->_LCD_array
    _Pant_Modos->_LCD_array
    _LCD_xy->_LCD_command
    _Pant_Fuga->_LCD_array
    _Pant_Flujo->_LCD_array
    _Lec_Adc_Modo_Pulv->_Adc_Rpm_Read
    _Adc_Rpm_Read->___fttol
    ___wmul->___lwdiv
    _Adc_Pwm_Read->___fttol
    _Lec_Adc_Modo_Fuga->_Adc_Min_Read
    _Lec_Adc_Modo_Fuga->_Adc_Temp_Read
    _Lec_Adc_Modo_Flujo->_Adc_Min_Read
    _Lec_Adc_Modo_Flujo->_Adc_Temp_Read
    _Adc_Temp_Read->___fttol
    _Adc_Min_Read->___fttol
    ___fttol->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Proceso_Fin->_LCD_array
    _Pant_Detener->_LCD_array
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date
    _LCD_init->_LCD_command

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Lec_Adc_Modo_Pulv->_Adc_Rpm_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  275549
                           _Adc_init
                           _LCD_init
                  _MEF_Actualizacion
                           _MEF_Init
                         _Pines_Init
                          _Pwm1_stop
                           _Pwm_init
 ---------------------------------------------------------------------------------
 (1) _Pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pines_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MEF_Actualizacion                                    2     2      0  275233
                                             62 BANK0      2     2      0
                        _Antirrebote
           _MEF_Subest_Actualizacion
                        _Pant_Inicio
                        _Select_Modo
 ---------------------------------------------------------------------------------
 (2) _Select_Modo                                          0     0      0   19450
                        _Antirrebote
                          _Pant_Menu
                      _Pant_Selector
 ---------------------------------------------------------------------------------
 (3) _Pant_Selector                                        0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (3) _Pant_Menu                                            0     0      0    9725
                          _LCD_array
 ---------------------------------------------------------------------------------
 (2) _Pant_Inicio                                         20    20      0   10858
                                              9 BANK0     20    20      0
                          _LCD_array
                      _LCD_character
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_character                                        4     3      1     811
                                              1 BANK0      4     3      1
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (2) _MEF_Subest_Actualizacion                             2     2      0  244925
                                             60 BANK0      2     2      0
                        _Antirrebote
                            _Detener
                        _Fin_Proceso
                        _LCD_command
                 _Lec_Adc_Modo_Flujo
                  _Lec_Adc_Modo_Fuga
                  _Lec_Adc_Modo_Pulv
                         _Pant_Flujo
                          _Pant_Fuga
                         _Pant_Modos
                 _Pant_Pulverizacion
                  _Pant_Temporizador
                       _Pant_Val_Act
                  _Salida_Modo_Flujo
                   _Salida_Modo_Fuga
                   _Salida_Modo_Pulv
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Pulv                                     2     2      0   33615
                                             58 BANK0      2     2      0
                               _Pwm1
                          _Pwm1_init
                            ___ftdiv
                            ___fttol
                           ___lbtoft
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             7     4      3    2897
                                              4 COMMON     1     1      0
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _Pwm1_init                                            2     0      2    9619
                                             55 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             3     0      3    3051
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _Pwm1                                                 3     0      3   11585
                                             55 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Fuga                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Salida_Modo_Flujo                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Pant_Val_Act                                        22    22      0   14212
                                             28 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Pant_Temporizador                                   22    22      0   14026
                                             28 BANK0     22    22      0
                          _LCD_array
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             25    21      4    4129
                                             11 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              4 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Pant_Pulverizacion                                   3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Modos                                           0     0      0   10778
                          _LCD_array
                        _LCD_command
                           _LCD_date
                             _LCD_xy
 ---------------------------------------------------------------------------------
 (4) _LCD_xy                                               4     0      4     557
                                              1 BANK0      4     0      4
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Fuga                                            3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Pant_Flujo                                           3     3      0    9973
                                              9 BANK0      3     3      0
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Pulv                                    0     0      0   61977
                       _Adc_Min_Read
                       _Adc_Pwm_Read
                       _Adc_Rpm_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Rpm_Read                                        15    15      0   16943
                                             55 BANK0      4     4      0
                                              0 BANK1     11    11      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     752
                                              4 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     857
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _Adc_Pwm_Read                                         3     3      0   15000
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Fuga                                    0     0      0   30034
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (3) _Lec_Adc_Modo_Flujo                                   0     0      0   30034
                       _Adc_Min_Read
                      _Adc_Temp_Read
 ---------------------------------------------------------------------------------
 (4) _Adc_Temp_Read                                        3     3      0   15000
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _Adc_Min_Read                                         3     3      0   15034
                                             55 BANK0      3     3      0
                                _Adc
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             13     9      4     987
                                             42 BANK0     13     9      4
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    5048
                                             12 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    5442
                                             27 BANK0     15     9      6
                                _Adc (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3384
                                              8 BANK0      4     1      3
                                _Adc (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2866
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _Adc                                                  7     5      2     105
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _Fin_Proceso                                          4     4      0   10041
                                              9 BANK0      4     4      0
                        _Proceso_Fin
                          _Pwm1_stop
 ---------------------------------------------------------------------------------
 (4) _Proceso_Fin                                          0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _Detener                                              4     4      0   10041
                                              9 BANK0      4     4      0
                        _Antirrebote
                       _Pant_Detener
                          _Pwm1_stop
 ---------------------------------------------------------------------------------
 (1) _Pwm1_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Pant_Detener                                         0     0      0    9973
                          _LCD_array
                        _LCD_command
 ---------------------------------------------------------------------------------
 (4) _LCD_array                                            8     2      6    9725
                                              1 BANK0      8     2      6
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (5) _LCD_date                                             3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Antirrebote                                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     316
                                              1 BANK0      3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (5) _LCD_command                                          3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0      24
                                              0 COMMON     4     4      0
                         _Pwm_Signal
                         _Task_Ready
 ---------------------------------------------------------------------------------
 (8) _Task_Ready                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Pwm_Signal                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc_init
   _LCD_init
     _LCD_command
   _MEF_Actualizacion
     _Antirrebote
     _MEF_Subest_Actualizacion
       _Antirrebote
       _Detener
         _Antirrebote
         _Pant_Detener
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
         _Pwm1_stop
       _Fin_Proceso
         _Proceso_Fin
           _LCD_array
             _LCD_command
             _LCD_date
           _LCD_command
         _Pwm1_stop
       _LCD_command
       _Lec_Adc_Modo_Flujo
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Lec_Adc_Modo_Fuga
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Lec_Adc_Modo_Pulv
         _Adc_Min_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Pwm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         _Adc_Rpm_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwdiv
           ___wmul
             ___lwdiv (ARG)
         _Adc_Temp_Read
           _Adc
           ___awtoft
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       _Pant_Flujo
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Fuga
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Modos
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
         _LCD_date
         _LCD_xy
           _LCD_command
       _Pant_Pulverizacion
         _LCD_array
           _LCD_command
           _LCD_date
         _LCD_command
       _Pant_Temporizador
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Pant_Val_Act
         _LCD_array
           _LCD_command
           _LCD_date
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___lwdiv (ARG)
           _isdigit
       _Salida_Modo_Flujo
       _Salida_Modo_Fuga
       _Salida_Modo_Pulv
         _Pwm1
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         _Pwm1_init
           ___ftdiv
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___fttol
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 _Adc (ARG)
                 ___awtoft (ARG)
                   _Adc (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
         ___ftdiv
           _Adc (ARG)
           ___awtoft (ARG)
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           _Adc (ARG)
           ___awtoft (ARG)
             _Adc (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               _Adc (ARG)
               ___awtoft (ARG)
                 _Adc (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             _Adc (ARG)
             ___awtoft (ARG)
               _Adc (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
         ___lwtoft
           ___ftpack
     _Pant_Inicio
       _LCD_array
         _LCD_command
         _LCD_date
       _LCD_character
         _LCD_command
         _LCD_date
       _LCD_command
     _Select_Modo
       _Antirrebote
       _Pant_Menu
         _LCD_array
           _LCD_command
           _LCD_date
       _Pant_Selector
         _LCD_array
           _LCD_command
           _LCD_date
   _MEF_Init
   _Pines_Init
   _Pwm1_stop
   _Pwm_init

 _ISR (ROOT)
   _Pwm_Signal
   _Task_Ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      12        0.0%
ABS                  0      0      86       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Dec 21 03:08:50 2020

               ??_Salida_Modo_Fuga 0074                 ??_Salida_Modo_Pulv 0076  
                                pc 0002                ??_Salida_Modo_Flujo 0074  
                               fsr 0004                ___wmul@multiplicand 0029  
                 Adc_Rpm_Read@cent 00C0                                l231 1686  
                              l233 1688                                l330 12A3  
                              l243 16C3                                l340 1629  
                              l334 1572                                l249 03CB  
                              l277 04C9                                l614 1523  
                              l529 133E                                l751 0073  
                              l763 010E                                l772 0169  
                              l765 00E4                                l793 11CF  
                              _GIE 005F                                _RB4 0034  
                              _ISR 0B2F                                _Adc 1504  
                              _Min 0079                                _Seg 0078  
                              _Rpm 00AE                                _Pwm 0064  
                              fsr0 0004                                indf 0000  
                _MEF_Actualizacion 1663                         _Delay100ms 006A  
                Adc_Rpm_Read@dec_m 00C4                         _Delay200ms 0068  
                             ?_ISR 0070                __end_of_Fin_Proceso 1663  
                             ?_Adc 0074                 ?_MEF_Actualizacion 0070  
                     ___ftdiv@cntr 0044                  Adc_Rpm_Read@valor 00C6  
        __end_of_Salida_Modo_Flujo 10E1                       ___ftdiv@sign 0049  
                Adc_Rpm_Read@uni_m 00C2                               l1012 17DF  
                             l1013 17E7                               l3021 04E0  
                             l1096 086A                               l3025 04EE  
                             l3019 04D2                               l4101 1744  
                             l3029 04F9                               l4113 1783  
                             l4105 174D                               l4201 0E3B  
                             l5001 1690                               l4107 1762  
                             l4061 179C                               l5013 169F  
                             l4071 17B4                               l4223 071D  
                             l4303 0879                               l5007 169F  
                             l4081 17DD                               l4065 17A3  
                             l4209 0E5A                               l4241 0772  
                             l4321 143A                               l4401 03A1  
                             l5025 16A5                               l4083 17CF  
                             l4307 0887                               l4323 1448  
                             l4147 11C5                               l5019 16A0  
                             l5051 1306                               l4077 17CA  
                             l4069 17AF                               l4253 079A  
                             l4245 0782                               l4229 0733  
                             l4413 0A0E                               l4333 1469  
                             l4095 1729                               l4167 07E4  
                             l4183 0DF6                               l4423 0686  
                             l2815 1120                               l4503 00E6  
                             l4361 1252                               l4097 1732  
                             l4177 0DE0                               l4257 07AA  
                             l4273 082D                               l4329 145E  
                             l4099 173B                               l4291 0856  
                             l4427 06FF                               l4515 0128  
                             l4357 1246                               l4269 0824  
                             l4461 131B                               l4541 017E  
                             l4533 015B                               l4525 0136  
                             l4359 1242                               l4295 0866  
                             l4463 1322                               l4551 0193  
                             l4543 0182                               l4519 0134  
                             l5191 008A                               l4457 130D  
                             l4561 01AD                               l5193 0100  
                             l4481 006F                               l5195 1330  
                             l4459 1314                               l4467 1329  
                             l4811 1291                               l5187 16AF  
                             l5197 1754                               l4581 01D5  
                             l4573 01D1                               l4493 00A3  
                             l5189 04B5                               l4821 12A5  
                             l4567 01C2                               l4559 01A9  
                             l4487 007A                               l4583 0049  
                             l4903 0469                               l4815 1298  
                             l4585 021C                               l4489 008F  
                             l4833 03B8                               l4753 0C14  
                             l4915 0488                               l4851 03E7  
                             l4843 03D3                               l4771 12C4  
                             l4917 048F                               l4909 0474  
                             l4837 03C2                               l4829 03AE  
                             l4757 0C3B                               l4749 0BED  
                             l4871 0414                               l4855 03F1  
                             l4847 03DD                               l4945 0A31  
                             l4865 040C                               l4929 04A9  
                             l4891 044D                               l4859 03FA  
                             l4885 043F                               l4895 0457  
                             l4887 0443                               l4879 042C  
                             l4975 1664                               l4977 1667  
                             l4899 0460                               l4979 166C  
                             l4989 167A                               STR_1 055B  
                             STR_2 0546                               STR_3 0531  
                             STR_4 055B                               STR_5 0606  
                             STR_6 052F                               STR_7 0606  
                             STR_8 052F                               STR_9 0606  
                     ?_LCD_command 0070                               u4005 150E  
                             u4105 0E1A                               u4115 0E3C  
                             u4035 11D0                               u5100 0428  
                             u4125 0E4D                               u4045 11D7  
                             u5110 0429                               u4135 0E5B  
                             u4215 0783                               u4225 078B  
                             u4305 0834                               u2625 04D5  
                             u5130 043B                               u5140 043C  
                             u5060 0403                               u4405 143D  
                             u2645 04E6                               u5070 0404  
                             u4095 0E08                               u4175 073F  
                             u4335 0857                               u2655 04EF  
                             u4265 07AB                               u4185 0751  
                             u4425 1449                               u4275 07B3  
                             u4435 1455                               _PEIE 005E  
                             u3805 0F11                               u4365 086F  
                             u4445 145F                               u3815 0D1A  
                             u5407 165B                               u5327 0CF2  
                             u3825 0D2B                               u5417 157B  
                             u5337 13EB                               u3755 0E8A  
                             u5507 1239                               u3835 0D3D  
                             u5427 158C                               u3915 17C3  
                             u5347 13AF                               u4635 0151  
                             u3765 0E9B                               u5517 124C  
                             u3845 0D50                               u5437 15A4  
                             u5357 1373                               u4830 1617  
                             u5607 0ED4                               u3775 0EAD  
                             u5527 0A29                               u3855 0D8E  
                             u5447 1776                               u5367 151D  
                             u3935 17D6                               u4840 1618  
                             u4920 0C6C                               u5617 0EDC  
                             u3785 0EC0                               u5537 0A3D  
                             u3865 0DA1                               u5457 0D64  
                             u5377 1547                               u4905 12B4  
                             u4770 155B                               u4930 0C87  
                             u5627 0F25                               u3795 0EFE  
                             u5547 0A56                               u5467 0D6C  
                             u5387 1632                               u4675 0170  
                             u4780 155C                               u5637 0F2D  
                             u5557 0A65                               u5477 0DB5  
                             u5397 1643                               u5647 0F34  
                             u5567 0A74                               u5487 0DBC  
                             u3975 17EE                               u3895 17A8  
                             u5577 0A81                               u5497 0DC2  
                             u5587 0A8E                               u5597 0A9D  
                             _TMR1 000E                               _Modo 0065  
                             _Pwm1 090D                               _Temp 00BB  
                             _main 12DB                       ___ftpack@arg 0020  
                     ___ftpack@exp 0023                               btemp 007E  
              ??_MEF_Actualizacion 005E                               start 0010  
               __size_of_LCD_array 006A                      _Estado_Actual 0062  
                  __end_of_Detener 15AC                       ___ftmul@cntr 0039  
                     ___ftmul@sign 003A                 _Pant_Pulverizacion 13B7  
                            ??_ISR 0070                              ??_Adc 0020  
                     ___fttol@exp1 0056                       ___fttol@lval 0052  
              __end_of_Antirrebote 1258                   __end_of_LCD_date 0DC8  
                            ?_Pwm1 0057                   __end_of_LCD_init 0AA3  
                 __end_of_MEF_Init 10F2                              ?_main 0070  
                            STR_10 052F                              STR_11 0606  
                            STR_12 052F                              STR_20 05EA  
                            STR_21 05D5                              STR_13 0606  
                            STR_14 0588                              STR_30 05FC  
                            STR_22 05CA                              STR_15 05E5  
                            STR_23 0608                              STR_31 05B9  
                            STR_16 05DB                              STR_24 0601  
                            STR_32 05A8                              STR_25 05FC  
                            STR_17 0596                              STR_33 0584  
                            STR_34 05A8                              STR_26 05FC  
                            STR_18 05F2                              STR_27 05FC  
                            STR_19 05F7                              STR_35 05E1  
                            STR_36 05A8                              STR_28 05FC  
                            STR_29 05FC                              STR_37 05D7  
                            STR_38 051C                              STR_39 0570  
                  __end_of___ftdiv 0E80                    __end_of___ftmul 07D8  
              ?_Pant_Pulverizacion 0070                    __end_of___fttol 0890  
                    _LCD_character 12AE                    __end_of___lwdiv 146E  
                            i1l132 0BBA                              i1l124 0B74  
                            i1l125 0B96                              i1l127 0B94  
                  __end_of___lwmod 04FE          __end_of_MEF_Actualizacion 16C4  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISB 0086  
                            _TRISC 0087                      ??_Pant_Inicio 0029  
                            _PwmS1 0060                              _Reset 0076  
                    ___awtoft@sign 002B                    __end_of_dpowers 051C  
           __size_of_Pant_Selector 009D                    __end_of_isdigit 1122  
                    ___ftpack@sign 0024                   __end_of_Adc_init 122E  
                            pclath 000A                    ??_Adc_Temp_Read 0076  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0221                      ?_Pant_Detener 0070  
             ??_Pant_Pulverizacion 0029                      ?_Pant_Val_Act 0070  
                  __initialization 0013                       __end_of_Pwm1 098F  
                     __end_of_main 130C                         _Pant_Flujo 133F  
                           ??_Pwm1 0076                         _Pant_Modos 0AA3  
                   ?_LCD_character 0021                             ??_main 0076  
                    ___fttol@sign1 0051                        _Fin_Proceso 1607  
                    ??_Select_Modo 0076                  __end_of_LCD_array 1792  
                 __end_of_Pwm_init 11A5                             _ADCON0 001F  
                           _ADRESH 001E                             _ADRESL 009E  
       __size_of_Salida_Modo_Flujo 0004                   __end_of___awtoft 07FD  
                 __end_of___ftpack 1800                   __end_of___lbtoft 11C3  
                       _Pines_Init 1172                             i1l3741 1403  
                           i1l3813 0B4E                             i1l3833 0BA8  
                           i1l3809 0B43                             i1l3747 1412  
                           i1l3835 0BAD                             i1l3819 0B5B  
                           i1l3827 0B9C                             i1l3757 1423  
                           i1l3759 1425                __end_of_Pant_Inicio 0D10  
                           _LCD_xy 130C                   __end_of___lwtoft 1172  
                           u357_25 11F4                             u358_25 1204  
                           u366_25 0B6C                             u367_25 0B82  
                           u368_25 0B92                      _Act_Variables 00B9  
                   ??_Pant_Detener 0076                          ??_Detener 0029  
                           _TMR1IE 0460                             _TMR1IF 0060  
                       _Task_Ready 13F3                             _TMR1ON 0080  
                           _TRISB4 0434                 __size_of_Pant_Fuga 003C  
                 Pant_Inicio@F1334 00C8                   Pant_Inicio@F1336 00A0  
               __size_of_Pant_Menu 004B                     ??_Pant_Val_Act 003C  
                      _Antirrebote 122E         ??_MEF_Subest_Actualizacion 005C  
                           _Output 0077                   _Subestado_Actual 00B6  
                    _Pant_Selector 0BC5                             ___wmul 11C3  
                        ??___ftdiv 0041                 __size_of_Pwm1_init 007D  
               _Lec_Adc_Modo_Flujo 1102                          ??___ftmul 0032  
                        ??___fttol 004E                          ??___lwdiv 0074  
               __size_of_Pwm1_stop 000F                          ??___lwmod 0074  
                     LCD_date@date 0020                         _Pwm_Signal 11E6  
            ___ftmul@f3_as_product 0036                ?_Lec_Adc_Modo_Flujo 0070  
       __size_of_MEF_Actualizacion 0061                          ??_isdigit 0074  
                           saved_w 007E                      ??_Proceso_Fin 0076  
                        ??_sprintf 002F                __end_of_Select_Modo 12AE  
          __end_of__initialization 003E               __size_of_LCD_command 00BA  
                        ?_LCD_date 0070               ??_Lec_Adc_Modo_Flujo 0076  
                        ?_LCD_init 0070                          ?_MEF_Init 0070  
                       ___ftdiv@f1 003E                         ___ftdiv@f2 003B  
                       ___ftdiv@f3 0045                         ___awtoft@c 0028  
                       ___lbtoft@c 0074                         ___ftmul@f1 002C  
                       ___ftmul@f2 002F                         ___fttol@f1 004A  
                   ?_Pant_Selector 0070                     __pcstackCOMMON 0070  
                     __pidataBANK0 10E5                       __pidataBANK1 10FA  
                  ??_LCD_character 0022                  _Adc_Min_Read$1525 0057  
                      ?_Pant_Flujo 0070                          LCD_init@i 0023  
                      ?_Pant_Modos 0070                          ?_Adc_init 0070  
                       ___lwtoft@c 0028          __size_of_Salida_Modo_Fuga 0004  
        __size_of_Salida_Modo_Pulv 005B                  __end_of_Pant_Fuga 13B7  
                __end_of_Pant_Menu 1504                        _Pant_Inicio 0C62  
                     sprintf@width 0038                  __end_of_Pwm1_init 090D  
                __end_of_Pwm1_stop 1131                        ?_Pines_Init 0070  
                       __pbssBANK0 0060                         __pbssBANK1 00A0  
                          ?_LCD_xy 0021                        ?_Task_Ready 0070  
              __end_of_Proceso_Fin 1283                         ??_LCD_date 0074  
                          LCD_xy@x 0021                            LCD_xy@y 0023  
                       ??_LCD_init 0021                         ??_MEF_Init 0074  
                       __pmaintext 12DB                            ?___wmul 0027  
                        ?_Pwm_init 0070                         __pintentry 0004  
                        ?___awtoft 0028                          ?___ftpack 0020  
                        ?___lbtoft 0028                         ??_Adc_init 0074  
                      ?_Pwm_Signal 0070               __end_of_Pant_Detener 115A  
                        ?___lwtoft 0028                        _Select_Modo 1283  
             __end_of_Pant_Val_Act 1000                         __stringtab 0500  
                          _Delay1s 0066                    __size_of_LCD_xy 0033  
                          _Detener 1551                __size_of_Pant_Flujo 003C  
              __size_of_Pant_Modos 008C                    ??_Pant_Selector 0076  
                          _Mostrar 00BA                  _Pant_Temporizador 146E  
                          ___ftdiv 0DC8                         ??_Pwm_init 0074  
                  __size_of___wmul 0023                            ___ftmul 0705  
                          ___fttol 0813                            ___lwdiv 1430  
                          ___lwmod 04CA                 ?_Pant_Temporizador 0070  
                       ??___awtoft 0076                         ??___ftpack 0025  
                       ??___lbtoft 002B                          _ANSELbits 0188  
              __size_of_Pines_Init 0019                            __ptext1 118B  
                          __ptext2 1172                            __ptext3 10EB  
                          __ptext4 1663                            __ptext5 1283  
                          __ptext6 0BC5                            __ptext7 14B9  
                          __ptext8 0C62                            __ptext9 12AE  
                       ??___lwtoft 0074                __size_of_Task_Ready 003D  
             Pant_Inicio@caracter1 002D                       __size_of_ISR 0096  
                     ?_Fin_Proceso 0070                       __size_of_Adc 004D  
                        _T1CONbits 0010                            _dpowers 0512  
                          _isdigit 1114                         _mod_tiempo 0063  
              ??_Pant_Temporizador 003C                        _Proceso_Fin 1258  
                      _Pwm_Seteado 00B7            Pant_Temporizador@buffer 003E  
                          _sprintf 0042                            clrloop0 10F3  
             end_of_initialization 003E                          _LCD_array 1728  
            __end_of_Adc_Temp_Read 1728                 Pant_Val_Act@buffer 003E  
      __size_of_Pant_Pulverizacion 003C                __size_of_Pwm_Signal 0024  
                     ?_Antirrebote 0070          __end_of_Pant_Temporizador 14B9  
                     __pstringtext 0500                      ?_Adc_Min_Read 0070  
                        _PORTAbits 0005                          _PORTBbits 0006  
                        _PORTCbits 0007                   _Salida_Modo_Fuga 10E1  
                 _Salida_Modo_Pulv 15AC                      LCD_array@date 0025  
                    ?_Adc_Rpm_Read 0070                          _TRISAbits 0085  
                        _TRISBbits 0086                          _TRISCbits 0087  
                    ?_Adc_Pwm_Read 0070                          _Act_PwmS1 00BC  
                       ?_LCD_array 0021                        ___ftdiv@exp 0048  
                   __end_of_LCD_xy 133F                  __size_of_LCD_date 00B8  
                __size_of_LCD_init 008C                  __size_of_MEF_Init 0007  
                      ___ftmul@exp 0035              __size_of_Pant_Detener 0018  
                   ??_Adc_Min_Read 0076                     __end_of___wmul 11E6  
                     ??_Pant_Flujo 0029                       ??_Pant_Modos 0076  
            __size_of_Pant_Val_Act 00C6                 _Adc_Temp_Read$1526 0057  
                   ??_Adc_Rpm_Read 0057                  __size_of_Adc_init 0024  
                       LCD_array@x 0021                         LCD_array@y 0023  
                   ??_Adc_Pwm_Read 0076                start_initialization 0013  
                     ?_Pant_Inicio 0070  __size_of_MEF_Subest_Actualizacion 011D  
                      __end_of_ISR 0BC5                        __end_of_Adc 1551  
        ?_MEF_Subest_Actualizacion 0070                          _Pant_Fuga 137B  
                        _Pant_Menu 14B9                      ??_LCD_command 0074  
                        _Per_PwmS1 00AB                       ??_Pines_Init 0074  
                         ??_LCD_xy 0076                       ??_Task_Ready 0070  
                        _Pwm1_init 0890                       _Pant_Detener 1142  
               __end_of_Pant_Flujo 137B                          _Pwm1_stop 1122  
      __size_of_Lec_Adc_Modo_Flujo 0009                 __end_of_Pant_Modos 0B2F  
       __size_of_Pant_Temporizador 004B                       _Pant_Val_Act 0F3A  
                _Lec_Adc_Modo_Fuga 110B                  _Lec_Adc_Modo_Pulv 0800  
                         ??___wmul 0074                         init_fetch0 1131  
                      __pdataBANK0 0066                        __pdataBANK1 00C8  
               ?_Lec_Adc_Modo_Fuga 0070                 ?_Lec_Adc_Modo_Pulv 0070  
                __size_of_Pwm_init 001A                       ??_Pwm_Signal 0070  
            __end_of_LCD_character 12DB                 __end_of_Pines_Init 118B  
                __size_of___awtoft 0025                  __size_of___ftpack 006E  
                __size_of___lbtoft 001E                 __end_of_Task_Ready 1430  
              ??_Lec_Adc_Modo_Fuga 0076                       ?_Select_Modo 0070  
                      __pbssCOMMON 0076                ??_Lec_Adc_Modo_Pulv 0076  
                        ___latbits 0002                  __size_of___lwtoft 0018  
                    __pcstackBANK0 0020                      __pcstackBANK1 00BD  
             __size_of_Fin_Proceso 005C                         ISR@f_pwmS1 0073  
                     _isdigit$1337 0074                         ?_Pant_Fuga 0070  
                       ?_Pant_Menu 0070                        ??_LCD_array 0027  
                         ?_Detener 0070                        sprintf@flag 0037  
                      sprintf@prec 0033                         ?_Pwm1_init 0057  
                       ?_Pwm1_stop 0070                 __end_of_Pwm_Signal 120A  
              __end_of_LCD_command 0F3A          __end_of_Lec_Adc_Modo_Fuga 1114  
        __end_of_Lec_Adc_Modo_Pulv 0813                   ___lwdiv@dividend 0022  
             __size_of_Antirrebote 002A                           ?___ftdiv 003B  
                         ?___ftmul 002C                           ?___fttol 004A  
                         ?___lwdiv 0020                           ?___lwmod 0027  
                        _freqPwmS1 00B4                           ?_isdigit 0070  
                     ?_Proceso_Fin 0070                   ___lwdiv@quotient 0025  
                         ?_sprintf 002B               __end_of_Adc_Min_Read 0705  
              Pant_Inicio@caracter 0035                         Adc@channel 0022  
                interrupt_function 0004                LCD_character@adress 0023  
                   ___wmul@product 0074                           _LCD_date 0D10  
                         _LCD_init 0A17                           _MEF_Init 10EB  
                        clear_ram0 10F2           __end_of_Salida_Modo_Fuga 10E5  
         __end_of_Salida_Modo_Pulv 1607               __end_of_Adc_Rpm_Read 03AD  
             __end_of_Adc_Pwm_Read 0A17                           Detener@i 002C  
            __end_of_Pant_Selector 0C62                           _PER_T_S1 00B0  
                         _Adc_init 120A                         _ADCON0bits 001F  
                      __stringbase 0512                         _ADCON1bits 009F  
                ___wmul@multiplier 0027              _Salida_Modo_Pulv$1522 005A  
                     Fin_Proceso@i 002C                           _P_W_T_S1 00B2  
             __size_of_Pant_Inicio 00AE                        ??_Pant_Fuga 0029  
                      ??_Pant_Menu 0076                           Pwm1@duty 0057  
                      _LCD_command 0E80         __end_of_Pant_Pulverizacion 13F3  
                    Adc@convertion 0023                        ??_Pwm1_init 0076  
                 __size_of_Detener 005B                        ??_Pwm1_stop 0074  
       __size_of_Lec_Adc_Modo_Fuga 0009                           _Pw_PwmS1 00A8  
       __size_of_Lec_Adc_Modo_Pulv 0013   __end_of_MEF_Subest_Actualizacion 04CA  
                         _Pwm_init 118B                   __size_of___ftdiv 00B8  
                 __size_of___ftmul 00D3                   __size_of___fttol 007D  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
                         ___awtoft 07D8                           ___ftpack 1792  
                         ___lbtoft 11A5                 __end_of__stringtab 0512  
                         ___lwtoft 115A                         _ANSELHbits 0189  
           __size_of_Adc_Temp_Read 0064                         sprintf@val 0035  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0020  
                  ___lwdiv@counter 0024                           __ptext10 03AD  
                         __ptext11 15AC                           __ptext20 0042  
                         __ptext12 11A5                           __ptext21 1114  
                         __ptext13 0890                           __ptext30 11C3  
                         __ptext22 04CA                           __ptext14 115A  
                         __ptext31 1430                           __ptext23 13B7  
                         __ptext15 090D                           __ptext40 07D8  
                         __ptext32 098F                           __ptext24 0AA3  
                         __ptext16 10E1                           __ptext41 1792  
                         __ptext33 110B                           __ptext25 130C  
                         __ptext17 10DD                           __ptext50 122E  
                         __ptext42 1504                           __ptext34 1102  
                         __ptext26 137B                           __ptext18 0F3A  
                         __ptext51 0A17                           __ptext43 1607  
                         __ptext35 16C4                           __ptext27 133F  
                         __ptext19 146E                           __ptext52 0E80  
                         __ptext44 1258                           __ptext36 060A  
                         __ptext28 0800                           __ptext53 120A  
                         __ptext45 1551                           __ptext37 0813  
                         __ptext29 0221                           __ptext54 0B2F  
                         __ptext46 1122                           __ptext38 0705  
                         __ptext55 13F3                           __ptext47 1142  
                         __ptext39 0DC8                           __ptext56 11E6  
                         __ptext48 1728                           __ptext49 0D10  
                _Adc_Rpm_Read$1523 00BD               __size_of_Select_Modo 002B  
                 __size_of_sprintf 01DF                      __size_of_Pwm1 0082  
                     _Temporizador 00B8                      __size_of_main 0031  
            LCD_character@caracter 0021                     LCD_character@i 0024  
            __size_of_Adc_Min_Read 00FB                           init_ram0 1135  
                         isdigit@c 0075               __size_of_Proceso_Fin 002B  
                         intlevel1 0000                          sprintf@ap 0034  
                        sprintf@sp 003B         __end_of_Lec_Adc_Modo_Flujo 110B  
            __size_of_Adc_Rpm_Read 018C              __size_of_Adc_Pwm_Read 0088  
                 ___lwmod@dividend 0029                      _Adc_Temp_Read 16C4  
                        stringcode 050A                  _Adc_Pwm_Read$1524 0057  
                     _Adc_Min_Read 060A           _MEF_Subest_Actualizacion 03AD  
                    ??_Fin_Proceso 0029                           sprintf@c 003A  
                         sprintf@f 002B                    ___lwmod@divisor 0027  
                  ___lwmod@counter 0074                       _Adc_Rpm_Read 0221  
                         stringtab 0500                       _Adc_Pwm_Read 098F  
                       _WDTCONbits 0105                  _Salida_Modo_Flujo 10DD  
                   ?_Adc_Temp_Read 0070                Pwm1_init@frecuencia 0057  
           __size_of_LCD_character 002D                 ?_Salida_Modo_Flujo 0070  
                    ??_Antirrebote 0020                     LCD_command@cmd 0020  
                ?_Salida_Modo_Fuga 0070                  ?_Salida_Modo_Pulv 0070  
