

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Oct 28 16:09:41 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.20
    97                           ; Generated 09/04/2020 GMT
    98                           ; 
    99                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F4550 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataCOMRAM
   132  005158                     __pidataCOMRAM:
   133                           	callstack 0
   134                           
   135                           ;initializer for _LCD_H
   136  005158  0140               	dw	320
   137                           
   138                           ;initializer for _LCD_W
   139  00515A  00F0               	dw	240
   140                           
   141                           ;initializer for _Timer_Most_Pant_Temp
   142  00515C  00FA               	dw	250
   143                           
   144                           ;initializer for _Timer_Lect_Temp
   145  00515E  64                 	db	100
   146                           
   147                           	psect	mediumconst
   148  0065A8                     __pmediumconst:
   149                           	callstack 0
   150  0065A8  00                 	db	0
   151  0065A9                     _bigNumbers:
   152                           	callstack 0
   153  0065A9  00                 	db	0
   154  0065AA  00                 	db	0
   155  0065AB  C0                 	db	192
   156  0065AC  FF                 	db	255
   157  0065AD  FF                 	db	255
   158  0065AE  01                 	db	1
   159  0065AF  00                 	db	0
   160  0065B0  00                 	db	0
   161  0065B1  00                 	db	0
   162  0065B2  00                 	db	0
   163  0065B3  FE                 	db	254
   164  0065B4  FF                 	db	255
   165  0065B5  FF                 	db	255
   166  0065B6  3F                 	db	63
   167  0065B7  00                 	db	0
   168  0065B8  00                 	db	0
   169  0065B9  00                 	db	0
   170  0065BA  E0                 	db	224
   171  0065BB  FF                 	db	255
   172  0065BC  FF                 	db	255
   173  0065BD  FF                 	db	255
   174  0065BE  FF                 	db	255
   175  0065BF  03                 	db	3
   176  0065C0  00                 	db	0
   177  0065C1  00                 	db	0
   178  0065C2  F8                 	db	248
   179  0065C3  FF                 	db	255
   180  0065C4  FF                 	db	255
   181  0065C5  FF                 	db	255
   182  0065C6  FF                 	db	255
   183  0065C7  0F                 	db	15
   184  0065C8  00                 	db	0
   185  0065C9  00                 	db	0
   186  0065CA  FE                 	db	254
   187  0065CB  FF                 	db	255
   188  0065CC  FF                 	db	255
   189  0065CD  FF                 	db	255
   190  0065CE  FF                 	db	255
   191  0065CF  3F                 	db	63
   192  0065D0  00                 	db	0
   193  0065D1  00                 	db	0
   194  0065D2  FF                 	db	255
   195  0065D3  FF                 	db	255
   196  0065D4  FF                 	db	255
   197  0065D5  FF                 	db	255
   198  0065D6  FF                 	db	255
   199  0065D7  7F                 	db	127
   200  0065D8  00                 	db	0
   201  0065D9  C0                 	db	192
   202  0065DA  FF                 	db	255
   203  0065DB  3F                 	db	63
   204  0065DC  00                 	db	0
   205  0065DD  00                 	db	0
   206  0065DE  FE                 	db	254
   207  0065DF  FF                 	db	255
   208  0065E0  01                 	db	1
   209  0065E1  E0                 	db	224
   210  0065E2  FF                 	db	255
   211  0065E3  01                 	db	1
   212  0065E4  00                 	db	0
   213  0065E5  00                 	db	0
   214  0065E6  C0                 	db	192
   215  0065E7  FF                 	db	255
   216  0065E8  03                 	db	3
   217  0065E9  F0                 	db	240
   218  0065EA  3F                 	db	63
   219  0065EB  00                 	db	0
   220  0065EC  00                 	db	0
   221  0065ED  00                 	db	0
   222  0065EE  00                 	db	0
   223  0065EF  FE                 	db	254
   224  0065F0  07                 	db	7
   225  0065F1  F0                 	db	240
   226  0065F2  0F                 	db	15
   227  0065F3  00                 	db	0
   228  0065F4  00                 	db	0
   229  0065F5  00                 	db	0
   230  0065F6  00                 	db	0
   231  0065F7  F8                 	db	248
   232  0065F8  07                 	db	7
   233  0065F9  F8                 	db	248
   234  0065FA  03                 	db	3
   235  0065FB  00                 	db	0
   236  0065FC  00                 	db	0
   237  0065FD  00                 	db	0
   238  0065FE  00                 	db	0
   239  0065FF  E0                 	db	224
   240  006600  0F                 	db	15
   241  006601  FC                 	db	252
   242  006602  01                 	db	1
   243  006603  00                 	db	0
   244  006604  00                 	db	0
   245  006605  00                 	db	0
   246  006606  00                 	db	0
   247  006607  C0                 	db	192
   248  006608  1F                 	db	31
   249  006609  FC                 	db	252
   250  00660A  00                 	db	0
   251  00660B  00                 	db	0
   252  00660C  00                 	db	0
   253  00660D  00                 	db	0
   254  00660E  00                 	db	0
   255  00660F  80                 	db	128
   256  006610  1F                 	db	31
   257  006611  7E                 	db	126
   258  006612  00                 	db	0
   259  006613  00                 	db	0
   260  006614  00                 	db	0
   261  006615  00                 	db	0
   262  006616  00                 	db	0
   263  006617  00                 	db	0
   264  006618  3F                 	db	63
   265  006619  7E                 	db	126
   266  00661A  00                 	db	0
   267  00661B  00                 	db	0
   268  00661C  00                 	db	0
   269  00661D  00                 	db	0
   270  00661E  00                 	db	0
   271  00661F  00                 	db	0
   272  006620  3F                 	db	63
   273  006621  3E                 	db	62
   274  006622  00                 	db	0
   275  006623  00                 	db	0
   276  006624  00                 	db	0
   277  006625  00                 	db	0
   278  006626  00                 	db	0
   279  006627  00                 	db	0
   280  006628  3E                 	db	62
   281  006629  3F                 	db	63
   282  00662A  00                 	db	0
   283  00662B  00                 	db	0
   284  00662C  00                 	db	0
   285  00662D  00                 	db	0
   286  00662E  00                 	db	0
   287  00662F  00                 	db	0
   288  006630  7E                 	db	126
   289  006631  1F                 	db	31
   290  006632  00                 	db	0
   291  006633  00                 	db	0
   292  006634  00                 	db	0
   293  006635  00                 	db	0
   294  006636  00                 	db	0
   295  006637  00                 	db	0
   296  006638  7C                 	db	124
   297  006639  1F                 	db	31
   298  00663A  00                 	db	0
   299  00663B  00                 	db	0
   300  00663C  00                 	db	0
   301  00663D  00                 	db	0
   302  00663E  00                 	db	0
   303  00663F  00                 	db	0
   304  006640  7C                 	db	124
   305  006641  1F                 	db	31
   306  006642  00                 	db	0
   307  006643  00                 	db	0
   308  006644  00                 	db	0
   309  006645  00                 	db	0
   310  006646  00                 	db	0
   311  006647  00                 	db	0
   312  006648  7C                 	db	124
   313  006649  1F                 	db	31
   314  00664A  00                 	db	0
   315  00664B  00                 	db	0
   316  00664C  00                 	db	0
   317  00664D  00                 	db	0
   318  00664E  00                 	db	0
   319  00664F  00                 	db	0
   320  006650  7C                 	db	124
   321  006651  1F                 	db	31
   322  006652  00                 	db	0
   323  006653  00                 	db	0
   324  006654  00                 	db	0
   325  006655  00                 	db	0
   326  006656  00                 	db	0
   327  006657  00                 	db	0
   328  006658  7C                 	db	124
   329  006659  1F                 	db	31
   330  00665A  00                 	db	0
   331  00665B  00                 	db	0
   332  00665C  00                 	db	0
   333  00665D  00                 	db	0
   334  00665E  00                 	db	0
   335  00665F  00                 	db	0
   336  006660  7C                 	db	124
   337  006661  1F                 	db	31
   338  006662  00                 	db	0
   339  006663  00                 	db	0
   340  006664  00                 	db	0
   341  006665  00                 	db	0
   342  006666  00                 	db	0
   343  006667  00                 	db	0
   344  006668  7C                 	db	124
   345  006669  3F                 	db	63
   346  00666A  00                 	db	0
   347  00666B  00                 	db	0
   348  00666C  00                 	db	0
   349  00666D  00                 	db	0
   350  00666E  00                 	db	0
   351  00666F  00                 	db	0
   352  006670  3E                 	db	62
   353  006671  3E                 	db	62
   354  006672  00                 	db	0
   355  006673  00                 	db	0
   356  006674  00                 	db	0
   357  006675  00                 	db	0
   358  006676  00                 	db	0
   359  006677  00                 	db	0
   360  006678  3E                 	db	62
   361  006679  7E                 	db	126
   362  00667A  00                 	db	0
   363  00667B  00                 	db	0
   364  00667C  00                 	db	0
   365  00667D  00                 	db	0
   366  00667E  00                 	db	0
   367  00667F  00                 	db	0
   368  006680  3F                 	db	63
   369  006681  FC                 	db	252
   370  006682  00                 	db	0
   371  006683  00                 	db	0
   372  006684  00                 	db	0
   373  006685  00                 	db	0
   374  006686  00                 	db	0
   375  006687  80                 	db	128
   376  006688  1F                 	db	31
   377  006689  FC                 	db	252
   378  00668A  00                 	db	0
   379  00668B  00                 	db	0
   380  00668C  00                 	db	0
   381  00668D  00                 	db	0
   382  00668E  00                 	db	0
   383  00668F  80                 	db	128
   384  006690  1F                 	db	31
   385  006691  F8                 	db	248
   386  006692  03                 	db	3
   387  006693  00                 	db	0
   388  006694  00                 	db	0
   389  006695  00                 	db	0
   390  006696  00                 	db	0
   391  006697  C0                 	db	192
   392  006698  0F                 	db	15
   393  006699  F8                 	db	248
   394  00669A  07                 	db	7
   395  00669B  00                 	db	0
   396  00669C  00                 	db	0
   397  00669D  00                 	db	0
   398  00669E  00                 	db	0
   399  00669F  F0                 	db	240
   400  0066A0  0F                 	db	15
   401  0066A1  F0                 	db	240
   402  0066A2  1F                 	db	31
   403  0066A3  00                 	db	0
   404  0066A4  00                 	db	0
   405  0066A5  00                 	db	0
   406  0066A6  00                 	db	0
   407  0066A7  FC                 	db	252
   408  0066A8  07                 	db	7
   409  0066A9  E0                 	db	224
   410  0066AA  7F                 	db	127
   411  0066AB  00                 	db	0
   412  0066AC  00                 	db	0
   413  0066AD  00                 	db	0
   414  0066AE  00                 	db	0
   415  0066AF  FF                 	db	255
   416  0066B0  03                 	db	3
   417  0066B1  C0                 	db	192
   418  0066B2  FF                 	db	255
   419  0066B3  03                 	db	3
   420  0066B4  00                 	db	0
   421  0066B5  00                 	db	0
   422  0066B6  E0                 	db	224
   423  0066B7  FF                 	db	255
   424  0066B8  01                 	db	1
   425  0066B9  80                 	db	128
   426  0066BA  FF                 	db	255
   427  0066BB  7F                 	db	127
   428  0066BC  00                 	db	0
   429  0066BD  00                 	db	0
   430  0066BE  FF                 	db	255
   431  0066BF  FF                 	db	255
   432  0066C0  00                 	db	0
   433  0066C1  00                 	db	0
   434  0066C2  FF                 	db	255
   435  0066C3  FF                 	db	255
   436  0066C4  FF                 	db	255
   437  0066C5  FF                 	db	255
   438  0066C6  FF                 	db	255
   439  0066C7  7F                 	db	127
   440  0066C8  00                 	db	0
   441  0066C9  00                 	db	0
   442  0066CA  FC                 	db	252
   443  0066CB  FF                 	db	255
   444  0066CC  FF                 	db	255
   445  0066CD  FF                 	db	255
   446  0066CE  FF                 	db	255
   447  0066CF  1F                 	db	31
   448  0066D0  00                 	db	0
   449  0066D1  00                 	db	0
   450  0066D2  F0                 	db	240
   451  0066D3  FF                 	db	255
   452  0066D4  FF                 	db	255
   453  0066D5  FF                 	db	255
   454  0066D6  FF                 	db	255
   455  0066D7  07                 	db	7
   456  0066D8  00                 	db	0
   457  0066D9  00                 	db	0
   458  0066DA  C0                 	db	192
   459  0066DB  FF                 	db	255
   460  0066DC  FF                 	db	255
   461  0066DD  FF                 	db	255
   462  0066DE  FF                 	db	255
   463  0066DF  01                 	db	1
   464  0066E0  00                 	db	0
   465  0066E1  00                 	db	0
   466  0066E2  00                 	db	0
   467  0066E3  FE                 	db	254
   468  0066E4  FF                 	db	255
   469  0066E5  FF                 	db	255
   470  0066E6  3F                 	db	63
   471  0066E7  00                 	db	0
   472  0066E8  00                 	db	0
   473  0066E9  00                 	db	0
   474  0066EA  00                 	db	0
   475  0066EB  80                 	db	128
   476  0066EC  FF                 	db	255
   477  0066ED  FF                 	db	255
   478  0066EE  00                 	db	0
   479  0066EF  00                 	db	0
   480  0066F0  00                 	db	0
   481  0066F1  00                 	db	0
   482  0066F2  00                 	db	0
   483  0066F3  00                 	db	0
   484  0066F4  00                 	db	0
   485  0066F5  00                 	db	0
   486  0066F6  00                 	db	0
   487  0066F7  00                 	db	0
   488  0066F8  00                 	db	0
   489  0066F9  00                 	db	0
   490  0066FA  00                 	db	0
   491  0066FB  00                 	db	0
   492  0066FC  00                 	db	0
   493  0066FD  00                 	db	0
   494  0066FE  00                 	db	0
   495  0066FF  00                 	db	0
   496  006700  00                 	db	0
   497  006701  00                 	db	0
   498  006702  00                 	db	0
   499  006703  00                 	db	0
   500  006704  00                 	db	0
   501  006705  00                 	db	0
   502  006706  00                 	db	0
   503  006707  00                 	db	0
   504  006708  00                 	db	0
   505  006709  00                 	db	0
   506  00670A  00                 	db	0
   507  00670B  00                 	db	0
   508  00670C  00                 	db	0
   509  00670D  00                 	db	0
   510  00670E  00                 	db	0
   511  00670F  00                 	db	0
   512  006710  00                 	db	0
   513  006711  00                 	db	0
   514  006712  00                 	db	0
   515  006713  00                 	db	0
   516  006714  00                 	db	0
   517  006715  00                 	db	0
   518  006716  00                 	db	0
   519  006717  00                 	db	0
   520  006718  00                 	db	0
   521  006719  00                 	db	0
   522  00671A  00                 	db	0
   523  00671B  00                 	db	0
   524  00671C  00                 	db	0
   525  00671D  00                 	db	0
   526  00671E  00                 	db	0
   527  00671F  00                 	db	0
   528  006720  00                 	db	0
   529  006721  00                 	db	0
   530  006722  00                 	db	0
   531  006723  00                 	db	0
   532  006724  00                 	db	0
   533  006725  00                 	db	0
   534  006726  00                 	db	0
   535  006727  00                 	db	0
   536  006728  00                 	db	0
   537  006729  00                 	db	0
   538  00672A  00                 	db	0
   539  00672B  00                 	db	0
   540  00672C  00                 	db	0
   541  00672D  00                 	db	0
   542  00672E  00                 	db	0
   543  00672F  00                 	db	0
   544  006730  00                 	db	0
   545  006731  00                 	db	0
   546  006732  00                 	db	0
   547  006733  00                 	db	0
   548  006734  00                 	db	0
   549  006735  00                 	db	0
   550  006736  00                 	db	0
   551  006737  00                 	db	0
   552  006738  00                 	db	0
   553  006739  00                 	db	0
   554  00673A  00                 	db	0
   555  00673B  00                 	db	0
   556  00673C  00                 	db	0
   557  00673D  00                 	db	0
   558  00673E  00                 	db	0
   559  00673F  00                 	db	0
   560  006740  00                 	db	0
   561  006741  20                 	db	32
   562  006742  00                 	db	0
   563  006743  00                 	db	0
   564  006744  00                 	db	0
   565  006745  00                 	db	0
   566  006746  00                 	db	0
   567  006747  00                 	db	0
   568  006748  00                 	db	0
   569  006749  30                 	db	48
   570  00674A  00                 	db	0
   571  00674B  00                 	db	0
   572  00674C  00                 	db	0
   573  00674D  00                 	db	0
   574  00674E  00                 	db	0
   575  00674F  00                 	db	0
   576  006750  00                 	db	0
   577  006751  38                 	db	56
   578  006752  00                 	db	0
   579  006753  00                 	db	0
   580  006754  00                 	db	0
   581  006755  00                 	db	0
   582  006756  00                 	db	0
   583  006757  00                 	db	0
   584  006758  00                 	db	0
   585  006759  3E                 	db	62
   586  00675A  00                 	db	0
   587  00675B  00                 	db	0
   588  00675C  00                 	db	0
   589  00675D  00                 	db	0
   590  00675E  00                 	db	0
   591  00675F  00                 	db	0
   592  006760  00                 	db	0
   593  006761  3E                 	db	62
   594  006762  00                 	db	0
   595  006763  00                 	db	0
   596  006764  00                 	db	0
   597  006765  00                 	db	0
   598  006766  00                 	db	0
   599  006767  00                 	db	0
   600  006768  00                 	db	0
   601  006769  3E                 	db	62
   602  00676A  00                 	db	0
   603  00676B  00                 	db	0
   604  00676C  00                 	db	0
   605  00676D  00                 	db	0
   606  00676E  00                 	db	0
   607  00676F  00                 	db	0
   608  006770  00                 	db	0
   609  006771  3E                 	db	62
   610  006772  00                 	db	0
   611  006773  00                 	db	0
   612  006774  00                 	db	0
   613  006775  00                 	db	0
   614  006776  00                 	db	0
   615  006777  00                 	db	0
   616  006778  00                 	db	0
   617  006779  3E                 	db	62
   618  00677A  00                 	db	0
   619  00677B  00                 	db	0
   620  00677C  00                 	db	0
   621  00677D  00                 	db	0
   622  00677E  00                 	db	0
   623  00677F  00                 	db	0
   624  006780  00                 	db	0
   625  006781  3E                 	db	62
   626  006782  00                 	db	0
   627  006783  00                 	db	0
   628  006784  00                 	db	0
   629  006785  00                 	db	0
   630  006786  00                 	db	0
   631  006787  00                 	db	0
   632  006788  00                 	db	0
   633  006789  3E                 	db	62
   634  00678A  00                 	db	0
   635  00678B  00                 	db	0
   636  00678C  00                 	db	0
   637  00678D  00                 	db	0
   638  00678E  00                 	db	0
   639  00678F  00                 	db	0
   640  006790  00                 	db	0
   641  006791  FE                 	db	254
   642  006792  FF                 	db	255
   643  006793  FF                 	db	255
   644  006794  FF                 	db	255
   645  006795  FF                 	db	255
   646  006796  FF                 	db	255
   647  006797  FF                 	db	255
   648  006798  3F                 	db	63
   649  006799  FE                 	db	254
   650  00679A  FF                 	db	255
   651  00679B  FF                 	db	255
   652  00679C  FF                 	db	255
   653  00679D  FF                 	db	255
   654  00679E  FF                 	db	255
   655  00679F  FF                 	db	255
   656  0067A0  3F                 	db	63
   657  0067A1  FE                 	db	254
   658  0067A2  FF                 	db	255
   659  0067A3  FF                 	db	255
   660  0067A4  FF                 	db	255
   661  0067A5  FF                 	db	255
   662  0067A6  FF                 	db	255
   663  0067A7  FF                 	db	255
   664  0067A8  3F                 	db	63
   665  0067A9  FE                 	db	254
   666  0067AA  FF                 	db	255
   667  0067AB  FF                 	db	255
   668  0067AC  FF                 	db	255
   669  0067AD  FF                 	db	255
   670  0067AE  FF                 	db	255
   671  0067AF  FF                 	db	255
   672  0067B0  3F                 	db	63
   673  0067B1  FE                 	db	254
   674  0067B2  FF                 	db	255
   675  0067B3  FF                 	db	255
   676  0067B4  FF                 	db	255
   677  0067B5  FF                 	db	255
   678  0067B6  FF                 	db	255
   679  0067B7  FF                 	db	255
   680  0067B8  3F                 	db	63
   681  0067B9  FE                 	db	254
   682  0067BA  FF                 	db	255
   683  0067BB  FF                 	db	255
   684  0067BC  FF                 	db	255
   685  0067BD  FF                 	db	255
   686  0067BE  FF                 	db	255
   687  0067BF  FF                 	db	255
   688  0067C0  3F                 	db	63
   689  0067C1  00                 	db	0
   690  0067C2  00                 	db	0
   691  0067C3  00                 	db	0
   692  0067C4  00                 	db	0
   693  0067C5  00                 	db	0
   694  0067C6  00                 	db	0
   695  0067C7  00                 	db	0
   696  0067C8  00                 	db	0
   697  0067C9  00                 	db	0
   698  0067CA  00                 	db	0
   699  0067CB  00                 	db	0
   700  0067CC  00                 	db	0
   701  0067CD  00                 	db	0
   702  0067CE  00                 	db	0
   703  0067CF  00                 	db	0
   704  0067D0  00                 	db	0
   705  0067D1  00                 	db	0
   706  0067D2  00                 	db	0
   707  0067D3  00                 	db	0
   708  0067D4  00                 	db	0
   709  0067D5  00                 	db	0
   710  0067D6  00                 	db	0
   711  0067D7  00                 	db	0
   712  0067D8  00                 	db	0
   713  0067D9  00                 	db	0
   714  0067DA  00                 	db	0
   715  0067DB  00                 	db	0
   716  0067DC  00                 	db	0
   717  0067DD  00                 	db	0
   718  0067DE  00                 	db	0
   719  0067DF  00                 	db	0
   720  0067E0  00                 	db	0
   721  0067E1  00                 	db	0
   722  0067E2  00                 	db	0
   723  0067E3  00                 	db	0
   724  0067E4  00                 	db	0
   725  0067E5  00                 	db	0
   726  0067E6  00                 	db	0
   727  0067E7  00                 	db	0
   728  0067E8  00                 	db	0
   729  0067E9  00                 	db	0
   730  0067EA  00                 	db	0
   731  0067EB  00                 	db	0
   732  0067EC  00                 	db	0
   733  0067ED  00                 	db	0
   734  0067EE  00                 	db	0
   735  0067EF  00                 	db	0
   736  0067F0  00                 	db	0
   737  0067F1  00                 	db	0
   738  0067F2  00                 	db	0
   739  0067F3  00                 	db	0
   740  0067F4  00                 	db	0
   741  0067F5  00                 	db	0
   742  0067F6  00                 	db	0
   743  0067F7  00                 	db	0
   744  0067F8  00                 	db	0
   745  0067F9  00                 	db	0
   746  0067FA  00                 	db	0
   747  0067FB  00                 	db	0
   748  0067FC  00                 	db	0
   749  0067FD  00                 	db	0
   750  0067FE  00                 	db	0
   751  0067FF  00                 	db	0
   752  006800  00                 	db	0
   753  006801  00                 	db	0
   754  006802  00                 	db	0
   755  006803  00                 	db	0
   756  006804  00                 	db	0
   757  006805  00                 	db	0
   758  006806  00                 	db	0
   759  006807  00                 	db	0
   760  006808  00                 	db	0
   761  006809  00                 	db	0
   762  00680A  00                 	db	0
   763  00680B  00                 	db	0
   764  00680C  00                 	db	0
   765  00680D  00                 	db	0
   766  00680E  00                 	db	0
   767  00680F  00                 	db	0
   768  006810  00                 	db	0
   769  006811  00                 	db	0
   770  006812  00                 	db	0
   771  006813  00                 	db	0
   772  006814  00                 	db	0
   773  006815  00                 	db	0
   774  006816  00                 	db	0
   775  006817  00                 	db	0
   776  006818  00                 	db	0
   777  006819  00                 	db	0
   778  00681A  00                 	db	0
   779  00681B  00                 	db	0
   780  00681C  00                 	db	0
   781  00681D  00                 	db	0
   782  00681E  00                 	db	0
   783  00681F  00                 	db	0
   784  006820  00                 	db	0
   785  006821  00                 	db	0
   786  006822  00                 	db	0
   787  006823  00                 	db	0
   788  006824  00                 	db	0
   789  006825  00                 	db	0
   790  006826  00                 	db	0
   791  006827  00                 	db	0
   792  006828  00                 	db	0
   793  006829  00                 	db	0
   794  00682A  00                 	db	0
   795  00682B  00                 	db	0
   796  00682C  00                 	db	0
   797  00682D  00                 	db	0
   798  00682E  00                 	db	0
   799  00682F  00                 	db	0
   800  006830  00                 	db	0
   801  006831  00                 	db	0
   802  006832  00                 	db	0
   803  006833  00                 	db	0
   804  006834  00                 	db	0
   805  006835  00                 	db	0
   806  006836  00                 	db	0
   807  006837  00                 	db	0
   808  006838  00                 	db	0
   809  006839  00                 	db	0
   810  00683A  00                 	db	0
   811  00683B  00                 	db	0
   812  00683C  00                 	db	0
   813  00683D  00                 	db	0
   814  00683E  00                 	db	0
   815  00683F  00                 	db	0
   816  006840  00                 	db	0
   817  006841  00                 	db	0
   818  006842  00                 	db	0
   819  006843  00                 	db	0
   820  006844  00                 	db	0
   821  006845  00                 	db	0
   822  006846  00                 	db	0
   823  006847  00                 	db	0
   824  006848  00                 	db	0
   825  006849  00                 	db	0
   826  00684A  00                 	db	0
   827  00684B  00                 	db	0
   828  00684C  00                 	db	0
   829  00684D  00                 	db	0
   830  00684E  00                 	db	0
   831  00684F  00                 	db	0
   832  006850  20                 	db	32
   833  006851  00                 	db	0
   834  006852  00                 	db	0
   835  006853  00                 	db	0
   836  006854  00                 	db	0
   837  006855  00                 	db	0
   838  006856  00                 	db	0
   839  006857  00                 	db	0
   840  006858  30                 	db	48
   841  006859  00                 	db	0
   842  00685A  80                 	db	128
   843  00685B  07                 	db	7
   844  00685C  00                 	db	0
   845  00685D  00                 	db	0
   846  00685E  00                 	db	0
   847  00685F  00                 	db	0
   848  006860  38                 	db	56
   849  006861  00                 	db	0
   850  006862  F0                 	db	240
   851  006863  07                 	db	7
   852  006864  00                 	db	0
   853  006865  00                 	db	0
   854  006866  00                 	db	0
   855  006867  00                 	db	0
   856  006868  3C                 	db	60
   857  006869  00                 	db	0
   858  00686A  FC                 	db	252
   859  00686B  07                 	db	7
   860  00686C  00                 	db	0
   861  00686D  00                 	db	0
   862  00686E  00                 	db	0
   863  00686F  00                 	db	0
   864  006870  3E                 	db	62
   865  006871  00                 	db	0
   866  006872  FF                 	db	255
   867  006873  07                 	db	7
   868  006874  00                 	db	0
   869  006875  00                 	db	0
   870  006876  00                 	db	0
   871  006877  00                 	db	0
   872  006878  3F                 	db	63
   873  006879  80                 	db	128
   874  00687A  FF                 	db	255
   875  00687B  07                 	db	7
   876  00687C  00                 	db	0
   877  00687D  00                 	db	0
   878  00687E  00                 	db	0
   879  00687F  80                 	db	128
   880  006880  3F                 	db	63
   881  006881  C0                 	db	192
   882  006882  FF                 	db	255
   883  006883  07                 	db	7
   884  006884  00                 	db	0
   885  006885  00                 	db	0
   886  006886  00                 	db	0
   887  006887  C0                 	db	192
   888  006888  3F                 	db	63
   889  006889  E0                 	db	224
   890  00688A  FF                 	db	255
   891  00688B  00                 	db	0
   892  00688C  00                 	db	0
   893  00688D  00                 	db	0
   894  00688E  00                 	db	0
   895  00688F  E0                 	db	224
   896  006890  3F                 	db	63
   897  006891  F0                 	db	240
   898  006892  1F                 	db	31
   899  006893  00                 	db	0
   900  006894  00                 	db	0
   901  006895  00                 	db	0
   902  006896  00                 	db	0
   903  006897  F0                 	db	240
   904  006898  3F                 	db	63
   905  006899  F8                 	db	248
   906  00689A  07                 	db	7
   907  00689B  00                 	db	0
   908  00689C  00                 	db	0
   909  00689D  00                 	db	0
   910  00689E  00                 	db	0
   911  00689F  F8                 	db	248
   912  0068A0  3F                 	db	63
   913  0068A1  F8                 	db	248
   914  0068A2  01                 	db	1
   915  0068A3  00                 	db	0
   916  0068A4  00                 	db	0
   917  0068A5  00                 	db	0
   918  0068A6  00                 	db	0
   919  0068A7  FC                 	db	252
   920  0068A8  3F                 	db	63
   921  0068A9  FC                 	db	252
   922  0068AA  00                 	db	0
   923  0068AB  00                 	db	0
   924  0068AC  00                 	db	0
   925  0068AD  00                 	db	0
   926  0068AE  00                 	db	0
   927  0068AF  FF                 	db	255
   928  0068B0  3F                 	db	63
   929  0068B1  FC                 	db	252
   930  0068B2  00                 	db	0
   931  0068B3  00                 	db	0
   932  0068B4  00                 	db	0
   933  0068B5  00                 	db	0
   934  0068B6  80                 	db	128
   935  0068B7  FF                 	db	255
   936  0068B8  3E                 	db	62
   937  0068B9  7E                 	db	126
   938  0068BA  00                 	db	0
   939  0068BB  00                 	db	0
   940  0068BC  00                 	db	0
   941  0068BD  00                 	db	0
   942  0068BE  C0                 	db	192
   943  0068BF  7F                 	db	127
   944  0068C0  3E                 	db	62
   945  0068C1  3E                 	db	62
   946  0068C2  00                 	db	0
   947  0068C3  00                 	db	0
   948  0068C4  00                 	db	0
   949  0068C5  00                 	db	0
   950  0068C6  E0                 	db	224
   951  0068C7  3F                 	db	63
   952  0068C8  3E                 	db	62
   953  0068C9  3E                 	db	62
   954  0068CA  00                 	db	0
   955  0068CB  00                 	db	0
   956  0068CC  00                 	db	0
   957  0068CD  00                 	db	0
   958  0068CE  F0                 	db	240
   959  0068CF  1F                 	db	31
   960  0068D0  3E                 	db	62
   961  0068D1  3F                 	db	63
   962  0068D2  00                 	db	0
   963  0068D3  00                 	db	0
   964  0068D4  00                 	db	0
   965  0068D5  00                 	db	0
   966  0068D6  F8                 	db	248
   967  0068D7  07                 	db	7
   968  0068D8  3E                 	db	62
   969  0068D9  1F                 	db	31
   970  0068DA  00                 	db	0
   971  0068DB  00                 	db	0
   972  0068DC  00                 	db	0
   973  0068DD  00                 	db	0
   974  0068DE  FC                 	db	252
   975  0068DF  03                 	db	3
   976  0068E0  3E                 	db	62
   977  0068E1  1F                 	db	31
   978  0068E2  00                 	db	0
   979  0068E3  00                 	db	0
   980  0068E4  00                 	db	0
   981  0068E5  00                 	db	0
   982  0068E6  FE                 	db	254
   983  0068E7  01                 	db	1
   984  0068E8  3E                 	db	62
   985  0068E9  1F                 	db	31
   986  0068EA  00                 	db	0
   987  0068EB  00                 	db	0
   988  0068EC  00                 	db	0
   989  0068ED  00                 	db	0
   990  0068EE  FF                 	db	255
   991  0068EF  00                 	db	0
   992  0068F0  3E                 	db	62
   993  0068F1  1F                 	db	31
   994  0068F2  00                 	db	0
   995  0068F3  00                 	db	0
   996  0068F4  00                 	db	0
   997  0068F5  80                 	db	128
   998  0068F6  7F                 	db	127
   999  0068F7  00                 	db	0
  1000  0068F8  3E                 	db	62
  1001  0068F9  1F                 	db	31
  1002  0068FA  00                 	db	0
  1003  0068FB  00                 	db	0
  1004  0068FC  00                 	db	0
  1005  0068FD  C0                 	db	192
  1006  0068FE  3F                 	db	63
  1007  0068FF  00                 	db	0
  1008  006900  3E                 	db	62
  1009  006901  1F                 	db	31
  1010  006902  00                 	db	0
  1011  006903  00                 	db	0
  1012  006904  00                 	db	0
  1013  006905  E0                 	db	224
  1014  006906  1F                 	db	31
  1015  006907  00                 	db	0
  1016  006908  3E                 	db	62
  1017  006909  1F                 	db	31
  1018  00690A  00                 	db	0
  1019  00690B  00                 	db	0
  1020  00690C  00                 	db	0
  1021  00690D  F8                 	db	248
  1022  00690E  0F                 	db	15
  1023  00690F  00                 	db	0
  1024  006910  3E                 	db	62
  1025  006911  3F                 	db	63
  1026  006912  00                 	db	0
  1027  006913  00                 	db	0
  1028  006914  00                 	db	0
  1029  006915  FC                 	db	252
  1030  006916  07                 	db	7
  1031  006917  00                 	db	0
  1032  006918  3E                 	db	62
  1033  006919  3E                 	db	62
  1034  00691A  00                 	db	0
  1035  00691B  00                 	db	0
  1036  00691C  00                 	db	0
  1037  00691D  FE                 	db	254
  1038  00691E  03                 	db	3
  1039  00691F  00                 	db	0
  1040  006920  3E                 	db	62
  1041  006921  7E                 	db	126
  1042  006922  00                 	db	0
  1043  006923  00                 	db	0
  1044  006924  00                 	db	0
  1045  006925  FF                 	db	255
  1046  006926  01                 	db	1
  1047  006927  00                 	db	0
  1048  006928  3E                 	db	62
  1049  006929  7E                 	db	126
  1050  00692A  00                 	db	0
  1051  00692B  00                 	db	0
  1052  00692C  80                 	db	128
  1053  00692D  FF                 	db	255
  1054  00692E  00                 	db	0
  1055  00692F  00                 	db	0
  1056  006930  3E                 	db	62
  1057  006931  FC                 	db	252
  1058  006932  00                 	db	0
  1059  006933  00                 	db	0
  1060  006934  E0                 	db	224
  1061  006935  3F                 	db	63
  1062  006936  00                 	db	0
  1063  006937  00                 	db	0
  1064  006938  3E                 	db	62
  1065  006939  FC                 	db	252
  1066  00693A  01                 	db	1
  1067  00693B  00                 	db	0
  1068  00693C  F0                 	db	240
  1069  00693D  1F                 	db	31
  1070  00693E  00                 	db	0
  1071  00693F  00                 	db	0
  1072  006940  3E                 	db	62
  1073  006941  F8                 	db	248
  1074  006942  03                 	db	3
  1075  006943  00                 	db	0
  1076  006944  FC                 	db	252
  1077  006945  0F                 	db	15
  1078  006946  00                 	db	0
  1079  006947  00                 	db	0
  1080  006948  3E                 	db	62
  1081  006949  F8                 	db	248
  1082  00694A  0F                 	db	15
  1083  00694B  00                 	db	0
  1084  00694C  FE                 	db	254
  1085  00694D  07                 	db	7
  1086  00694E  00                 	db	0
  1087  00694F  00                 	db	0
  1088  006950  3E                 	db	62
  1089  006951  F0                 	db	240
  1090  006952  3F                 	db	63
  1091  006953  C0                 	db	192
  1092  006954  FF                 	db	255
  1093  006955  03                 	db	3
  1094  006956  00                 	db	0
  1095  006957  00                 	db	0
  1096  006958  3E                 	db	62
  1097  006959  E0                 	db	224
  1098  00695A  FF                 	db	255
  1099  00695B  FF                 	db	255
  1100  00695C  FF                 	db	255
  1101  00695D  00                 	db	0
  1102  00695E  00                 	db	0
  1103  00695F  00                 	db	0
  1104  006960  3E                 	db	62
  1105  006961  C0                 	db	192
  1106  006962  FF                 	db	255
  1107  006963  FF                 	db	255
  1108  006964  7F                 	db	127
  1109  006965  00                 	db	0
  1110  006966  00                 	db	0
  1111  006967  00                 	db	0
  1112  006968  3E                 	db	62
  1113  006969  80                 	db	128
  1114  00696A  FF                 	db	255
  1115  00696B  FF                 	db	255
  1116  00696C  3F                 	db	63
  1117  00696D  00                 	db	0
  1118  00696E  00                 	db	0
  1119  00696F  00                 	db	0
  1120  006970  3E                 	db	62
  1121  006971  00                 	db	0
  1122  006972  FE                 	db	254
  1123  006973  FF                 	db	255
  1124  006974  0F                 	db	15
  1125  006975  00                 	db	0
  1126  006976  00                 	db	0
  1127  006977  00                 	db	0
  1128  006978  3E                 	db	62
  1129  006979  00                 	db	0
  1130  00697A  F8                 	db	248
  1131  00697B  FF                 	db	255
  1132  00697C  03                 	db	3
  1133  00697D  00                 	db	0
  1134  00697E  00                 	db	0
  1135  00697F  00                 	db	0
  1136  006980  3E                 	db	62
  1137  006981  00                 	db	0
  1138  006982  C0                 	db	192
  1139  006983  7F                 	db	127
  1140  006984  00                 	db	0
  1141  006985  00                 	db	0
  1142  006986  00                 	db	0
  1143  006987  00                 	db	0
  1144  006988  3E                 	db	62
  1145  006989  00                 	db	0
  1146  00698A  00                 	db	0
  1147  00698B  00                 	db	0
  1148  00698C  00                 	db	0
  1149  00698D  00                 	db	0
  1150  00698E  00                 	db	0
  1151  00698F  00                 	db	0
  1152  006990  3E                 	db	62
  1153  006991  00                 	db	0
  1154  006992  00                 	db	0
  1155  006993  00                 	db	0
  1156  006994  00                 	db	0
  1157  006995  00                 	db	0
  1158  006996  00                 	db	0
  1159  006997  00                 	db	0
  1160  006998  00                 	db	0
  1161  006999  00                 	db	0
  1162  00699A  00                 	db	0
  1163  00699B  00                 	db	0
  1164  00699C  00                 	db	0
  1165  00699D  00                 	db	0
  1166  00699E  C0                 	db	192
  1167  00699F  00                 	db	0
  1168  0069A0  00                 	db	0
  1169  0069A1  00                 	db	0
  1170  0069A2  00                 	db	0
  1171  0069A3  00                 	db	0
  1172  0069A4  00                 	db	0
  1173  0069A5  00                 	db	0
  1174  0069A6  C0                 	db	192
  1175  0069A7  07                 	db	7
  1176  0069A8  00                 	db	0
  1177  0069A9  00                 	db	0
  1178  0069AA  60                 	db	96
  1179  0069AB  00                 	db	0
  1180  0069AC  00                 	db	0
  1181  0069AD  00                 	db	0
  1182  0069AE  C0                 	db	192
  1183  0069AF  1F                 	db	31
  1184  0069B0  00                 	db	0
  1185  0069B1  00                 	db	0
  1186  0069B2  78                 	db	120
  1187  0069B3  00                 	db	0
  1188  0069B4  00                 	db	0
  1189  0069B5  00                 	db	0
  1190  0069B6  C0                 	db	192
  1191  0069B7  7F                 	db	127
  1192  0069B8  00                 	db	0
  1193  0069B9  00                 	db	0
  1194  0069BA  7E                 	db	126
  1195  0069BB  00                 	db	0
  1196  0069BC  00                 	db	0
  1197  0069BD  00                 	db	0
  1198  0069BE  C0                 	db	192
  1199  0069BF  FF                 	db	255
  1200  0069C0  00                 	db	0
  1201  0069C1  80                 	db	128
  1202  0069C2  7F                 	db	127
  1203  0069C3  00                 	db	0
  1204  0069C4  00                 	db	0
  1205  0069C5  00                 	db	0
  1206  0069C6  C0                 	db	192
  1207  0069C7  FF                 	db	255
  1208  0069C8  01                 	db	1
  1209  0069C9  C0                 	db	192
  1210  0069CA  7F                 	db	127
  1211  0069CB  00                 	db	0
  1212  0069CC  00                 	db	0
  1213  0069CD  00                 	db	0
  1214  0069CE  00                 	db	0
  1215  0069CF  FF                 	db	255
  1216  0069D0  03                 	db	3
  1217  0069D1  E0                 	db	224
  1218  0069D2  7F                 	db	127
  1219  0069D3  00                 	db	0
  1220  0069D4  00                 	db	0
  1221  0069D5  00                 	db	0
  1222  0069D6  00                 	db	0
  1223  0069D7  FC                 	db	252
  1224  0069D8  07                 	db	7
  1225  0069D9  F0                 	db	240
  1226  0069DA  3F                 	db	63
  1227  0069DB  00                 	db	0
  1228  0069DC  00                 	db	0
  1229  0069DD  00                 	db	0
  1230  0069DE  00                 	db	0
  1231  0069DF  F0                 	db	240
  1232  0069E0  0F                 	db	15
  1233  0069E1  F8                 	db	248
  1234  0069E2  0F                 	db	15
  1235  0069E3  00                 	db	0
  1236  0069E4  00                 	db	0
  1237  0069E5  00                 	db	0
  1238  0069E6  00                 	db	0
  1239  0069E7  C0                 	db	192
  1240  0069E8  0F                 	db	15
  1241  0069E9  F8                 	db	248
  1242  0069EA  03                 	db	3
  1243  0069EB  00                 	db	0
  1244  0069EC  00                 	db	0
  1245  0069ED  00                 	db	0
  1246  0069EE  00                 	db	0
  1247  0069EF  80                 	db	128
  1248  0069F0  1F                 	db	31
  1249  0069F1  FC                 	db	252
  1250  0069F2  01                 	db	1
  1251  0069F3  00                 	db	0
  1252  0069F4  00                 	db	0
  1253  0069F5  00                 	db	0
  1254  0069F6  00                 	db	0
  1255  0069F7  80                 	db	128
  1256  0069F8  1F                 	db	31
  1257  0069F9  FC                 	db	252
  1258  0069FA  00                 	db	0
  1259  0069FB  00                 	db	0
  1260  0069FC  00                 	db	0
  1261  0069FD  00                 	db	0
  1262  0069FE  00                 	db	0
  1263  0069FF  00                 	db	0
  1264  006A00  3F                 	db	63
  1265  006A01  7E                 	db	126
  1266  006A02  00                 	db	0
  1267  006A03  00                 	db	0
  1268  006A04  00                 	db	0
  1269  006A05  00                 	db	0
  1270  006A06  00                 	db	0
  1271  006A07  00                 	db	0
  1272  006A08  3E                 	db	62
  1273  006A09  3E                 	db	62
  1274  006A0A  00                 	db	0
  1275  006A0B  00                 	db	0
  1276  006A0C  00                 	db	0
  1277  006A0D  00                 	db	0
  1278  006A0E  00                 	db	0
  1279  006A0F  00                 	db	0
  1280  006A10  3E                 	db	62
  1281  006A11  3E                 	db	62
  1282  006A12  00                 	db	0
  1283  006A13  00                 	db	0
  1284  006A14  00                 	db	0
  1285  006A15  00                 	db	0
  1286  006A16  00                 	db	0
  1287  006A17  00                 	db	0
  1288  006A18  7E                 	db	126
  1289  006A19  3F                 	db	63
  1290  006A1A  00                 	db	0
  1291  006A1B  00                 	db	0
  1292  006A1C  00                 	db	0
  1293  006A1D  00                 	db	0
  1294  006A1E  00                 	db	0
  1295  006A1F  00                 	db	0
  1296  006A20  7C                 	db	124
  1297  006A21  1F                 	db	31
  1298  006A22  00                 	db	0
  1299  006A23  00                 	db	0
  1300  006A24  3E                 	db	62
  1301  006A25  00                 	db	0
  1302  006A26  00                 	db	0
  1303  006A27  00                 	db	0
  1304  006A28  7C                 	db	124
  1305  006A29  1F                 	db	31
  1306  006A2A  00                 	db	0
  1307  006A2B  00                 	db	0
  1308  006A2C  3E                 	db	62
  1309  006A2D  00                 	db	0
  1310  006A2E  00                 	db	0
  1311  006A2F  00                 	db	0
  1312  006A30  7C                 	db	124
  1313  006A31  1F                 	db	31
  1314  006A32  00                 	db	0
  1315  006A33  00                 	db	0
  1316  006A34  3E                 	db	62
  1317  006A35  00                 	db	0
  1318  006A36  00                 	db	0
  1319  006A37  00                 	db	0
  1320  006A38  7C                 	db	124
  1321  006A39  1F                 	db	31
  1322  006A3A  00                 	db	0
  1323  006A3B  00                 	db	0
  1324  006A3C  3E                 	db	62
  1325  006A3D  00                 	db	0
  1326  006A3E  00                 	db	0
  1327  006A3F  00                 	db	0
  1328  006A40  7C                 	db	124
  1329  006A41  1F                 	db	31
  1330  006A42  00                 	db	0
  1331  006A43  00                 	db	0
  1332  006A44  3E                 	db	62
  1333  006A45  00                 	db	0
  1334  006A46  00                 	db	0
  1335  006A47  00                 	db	0
  1336  006A48  7C                 	db	124
  1337  006A49  1F                 	db	31
  1338  006A4A  00                 	db	0
  1339  006A4B  00                 	db	0
  1340  006A4C  7F                 	db	127
  1341  006A4D  00                 	db	0
  1342  006A4E  00                 	db	0
  1343  006A4F  00                 	db	0
  1344  006A50  7C                 	db	124
  1345  006A51  1F                 	db	31
  1346  006A52  00                 	db	0
  1347  006A53  00                 	db	0
  1348  006A54  7F                 	db	127
  1349  006A55  00                 	db	0
  1350  006A56  00                 	db	0
  1351  006A57  00                 	db	0
  1352  006A58  7C                 	db	124
  1353  006A59  3F                 	db	63
  1354  006A5A  00                 	db	0
  1355  006A5B  00                 	db	0
  1356  006A5C  7F                 	db	127
  1357  006A5D  00                 	db	0
  1358  006A5E  00                 	db	0
  1359  006A5F  00                 	db	0
  1360  006A60  7C                 	db	124
  1361  006A61  3E                 	db	62
  1362  006A62  00                 	db	0
  1363  006A63  80                 	db	128
  1364  006A64  7F                 	db	127
  1365  006A65  00                 	db	0
  1366  006A66  00                 	db	0
  1367  006A67  00                 	db	0
  1368  006A68  3E                 	db	62
  1369  006A69  3E                 	db	62
  1370  006A6A  00                 	db	0
  1371  006A6B  80                 	db	128
  1372  006A6C  FF                 	db	255
  1373  006A6D  00                 	db	0
  1374  006A6E  00                 	db	0
  1375  006A6F  00                 	db	0
  1376  006A70  3E                 	db	62
  1377  006A71  7E                 	db	126
  1378  006A72  00                 	db	0
  1379  006A73  C0                 	db	192
  1380  006A74  FF                 	db	255
  1381  006A75  00                 	db	0
  1382  006A76  00                 	db	0
  1383  006A77  00                 	db	0
  1384  006A78  3F                 	db	63
  1385  006A79  FC                 	db	252
  1386  006A7A  00                 	db	0
  1387  006A7B  C0                 	db	192
  1388  006A7C  FF                 	db	255
  1389  006A7D  01                 	db	1
  1390  006A7E  00                 	db	0
  1391  006A7F  00                 	db	0
  1392  006A80  1F                 	db	31
  1393  006A81  FC                 	db	252
  1394  006A82  01                 	db	1
  1395  006A83  E0                 	db	224
  1396  006A84  FF                 	db	255
  1397  006A85  01                 	db	1
  1398  006A86  00                 	db	0
  1399  006A87  80                 	db	128
  1400  006A88  1F                 	db	31
  1401  006A89  F8                 	db	248
  1402  006A8A  03                 	db	3
  1403  006A8B  F0                 	db	240
  1404  006A8C  FF                 	db	255
  1405  006A8D  03                 	db	3
  1406  006A8E  00                 	db	0
  1407  006A8F  C0                 	db	192
  1408  006A90  1F                 	db	31
  1409  006A91  F8                 	db	248
  1410  006A92  0F                 	db	15
  1411  006A93  FC                 	db	252
  1412  006A94  F3                 	db	243
  1413  006A95  07                 	db	7
  1414  006A96  00                 	db	0
  1415  006A97  E0                 	db	224
  1416  006A98  0F                 	db	15
  1417  006A99  F0                 	db	240
  1418  006A9A  FF                 	db	255
  1419  006A9B  FF                 	db	255
  1420  006A9C  F3                 	db	243
  1421  006A9D  0F                 	db	15
  1422  006A9E  00                 	db	0
  1423  006A9F  F0                 	db	240
  1424  006AA0  07                 	db	7
  1425  006AA1  E0                 	db	224
  1426  006AA2  FF                 	db	255
  1427  006AA3  FF                 	db	255
  1428  006AA4  E1                 	db	225
  1429  006AA5  3F                 	db	63
  1430  006AA6  00                 	db	0
  1431  006AA7  FC                 	db	252
  1432  006AA8  07                 	db	7
  1433  006AA9  C0                 	db	192
  1434  006AAA  FF                 	db	255
  1435  006AAB  FF                 	db	255
  1436  006AAC  C0                 	db	192
  1437  006AAD  FF                 	db	255
  1438  006AAE  00                 	db	0
  1439  006AAF  FF                 	db	255
  1440  006AB0  03                 	db	3
  1441  006AB1  80                 	db	128
  1442  006AB2  FF                 	db	255
  1443  006AB3  7F                 	db	127
  1444  006AB4  C0                 	db	192
  1445  006AB5  FF                 	db	255
  1446  006AB6  FF                 	db	255
  1447  006AB7  FF                 	db	255
  1448  006AB8  01                 	db	1
  1449  006AB9  00                 	db	0
  1450  006ABA  FE                 	db	254
  1451  006ABB  1F                 	db	31
  1452  006ABC  80                 	db	128
  1453  006ABD  FF                 	db	255
  1454  006ABE  FF                 	db	255
  1455  006ABF  FF                 	db	255
  1456  006AC0  00                 	db	0
  1457  006AC1  00                 	db	0
  1458  006AC2  F0                 	db	240
  1459  006AC3  07                 	db	7
  1460  006AC4  00                 	db	0
  1461  006AC5  FE                 	db	254
  1462  006AC6  FF                 	db	255
  1463  006AC7  3F                 	db	63
  1464  006AC8  00                 	db	0
  1465  006AC9  00                 	db	0
  1466  006ACA  00                 	db	0
  1467  006ACB  00                 	db	0
  1468  006ACC  00                 	db	0
  1469  006ACD  FC                 	db	252
  1470  006ACE  FF                 	db	255
  1471  006ACF  1F                 	db	31
  1472  006AD0  00                 	db	0
  1473  006AD1  00                 	db	0
  1474  006AD2  00                 	db	0
  1475  006AD3  00                 	db	0
  1476  006AD4  00                 	db	0
  1477  006AD5  F0                 	db	240
  1478  006AD6  FF                 	db	255
  1479  006AD7  07                 	db	7
  1480  006AD8  00                 	db	0
  1481  006AD9  00                 	db	0
  1482  006ADA  00                 	db	0
  1483  006ADB  00                 	db	0
  1484  006ADC  00                 	db	0
  1485  006ADD  80                 	db	128
  1486  006ADE  FF                 	db	255
  1487  006ADF  00                 	db	0
  1488  006AE0  00                 	db	0
  1489  006AE1  00                 	db	0
  1490  006AE2  00                 	db	0
  1491  006AE3  00                 	db	0
  1492  006AE4  00                 	db	0
  1493  006AE5  00                 	db	0
  1494  006AE6  00                 	db	0
  1495  006AE7  00                 	db	0
  1496  006AE8  00                 	db	0
  1497  006AE9  00                 	db	0
  1498  006AEA  00                 	db	0
  1499  006AEB  00                 	db	0
  1500  006AEC  00                 	db	0
  1501  006AED  00                 	db	0
  1502  006AEE  80                 	db	128
  1503  006AEF  00                 	db	0
  1504  006AF0  00                 	db	0
  1505  006AF1  00                 	db	0
  1506  006AF2  00                 	db	0
  1507  006AF3  00                 	db	0
  1508  006AF4  00                 	db	0
  1509  006AF5  00                 	db	0
  1510  006AF6  C0                 	db	192
  1511  006AF7  00                 	db	0
  1512  006AF8  00                 	db	0
  1513  006AF9  00                 	db	0
  1514  006AFA  00                 	db	0
  1515  006AFB  00                 	db	0
  1516  006AFC  00                 	db	0
  1517  006AFD  00                 	db	0
  1518  006AFE  F0                 	db	240
  1519  006AFF  00                 	db	0
  1520  006B00  00                 	db	0
  1521  006B01  00                 	db	0
  1522  006B02  00                 	db	0
  1523  006B03  00                 	db	0
  1524  006B04  00                 	db	0
  1525  006B05  00                 	db	0
  1526  006B06  F8                 	db	248
  1527  006B07  00                 	db	0
  1528  006B08  00                 	db	0
  1529  006B09  00                 	db	0
  1530  006B0A  00                 	db	0
  1531  006B0B  00                 	db	0
  1532  006B0C  00                 	db	0
  1533  006B0D  00                 	db	0
  1534  006B0E  FE                 	db	254
  1535  006B0F  00                 	db	0
  1536  006B10  00                 	db	0
  1537  006B11  00                 	db	0
  1538  006B12  00                 	db	0
  1539  006B13  00                 	db	0
  1540  006B14  00                 	db	0
  1541  006B15  00                 	db	0
  1542  006B16  FF                 	db	255
  1543  006B17  00                 	db	0
  1544  006B18  00                 	db	0
  1545  006B19  00                 	db	0
  1546  006B1A  00                 	db	0
  1547  006B1B  00                 	db	0
  1548  006B1C  00                 	db	0
  1549  006B1D  C0                 	db	192
  1550  006B1E  FF                 	db	255
  1551  006B1F  00                 	db	0
  1552  006B20  00                 	db	0
  1553  006B21  00                 	db	0
  1554  006B22  00                 	db	0
  1555  006B23  00                 	db	0
  1556  006B24  00                 	db	0
  1557  006B25  E0                 	db	224
  1558  006B26  FF                 	db	255
  1559  006B27  00                 	db	0
  1560  006B28  00                 	db	0
  1561  006B29  00                 	db	0
  1562  006B2A  00                 	db	0
  1563  006B2B  00                 	db	0
  1564  006B2C  00                 	db	0
  1565  006B2D  F0                 	db	240
  1566  006B2E  FF                 	db	255
  1567  006B2F  00                 	db	0
  1568  006B30  00                 	db	0
  1569  006B31  00                 	db	0
  1570  006B32  00                 	db	0
  1571  006B33  00                 	db	0
  1572  006B34  00                 	db	0
  1573  006B35  FC                 	db	252
  1574  006B36  FF                 	db	255
  1575  006B37  00                 	db	0
  1576  006B38  00                 	db	0
  1577  006B39  00                 	db	0
  1578  006B3A  00                 	db	0
  1579  006B3B  00                 	db	0
  1580  006B3C  00                 	db	0
  1581  006B3D  FE                 	db	254
  1582  006B3E  FF                 	db	255
  1583  006B3F  00                 	db	0
  1584  006B40  00                 	db	0
  1585  006B41  00                 	db	0
  1586  006B42  00                 	db	0
  1587  006B43  00                 	db	0
  1588  006B44  80                 	db	128
  1589  006B45  FF                 	db	255
  1590  006B46  F9                 	db	249
  1591  006B47  00                 	db	0
  1592  006B48  00                 	db	0
  1593  006B49  00                 	db	0
  1594  006B4A  00                 	db	0
  1595  006B4B  00                 	db	0
  1596  006B4C  C0                 	db	192
  1597  006B4D  FF                 	db	255
  1598  006B4E  F8                 	db	248
  1599  006B4F  00                 	db	0
  1600  006B50  00                 	db	0
  1601  006B51  00                 	db	0
  1602  006B52  00                 	db	0
  1603  006B53  00                 	db	0
  1604  006B54  F0                 	db	240
  1605  006B55  7F                 	db	127
  1606  006B56  F8                 	db	248
  1607  006B57  00                 	db	0
  1608  006B58  00                 	db	0
  1609  006B59  00                 	db	0
  1610  006B5A  00                 	db	0
  1611  006B5B  00                 	db	0
  1612  006B5C  F8                 	db	248
  1613  006B5D  1F                 	db	31
  1614  006B5E  F8                 	db	248
  1615  006B5F  00                 	db	0
  1616  006B60  00                 	db	0
  1617  006B61  00                 	db	0
  1618  006B62  00                 	db	0
  1619  006B63  00                 	db	0
  1620  006B64  FE                 	db	254
  1621  006B65  0F                 	db	15
  1622  006B66  F8                 	db	248
  1623  006B67  00                 	db	0
  1624  006B68  00                 	db	0
  1625  006B69  00                 	db	0
  1626  006B6A  00                 	db	0
  1627  006B6B  00                 	db	0
  1628  006B6C  FF                 	db	255
  1629  006B6D  03                 	db	3
  1630  006B6E  F8                 	db	248
  1631  006B6F  00                 	db	0
  1632  006B70  00                 	db	0
  1633  006B71  00                 	db	0
  1634  006B72  00                 	db	0
  1635  006B73  C0                 	db	192
  1636  006B74  FF                 	db	255
  1637  006B75  01                 	db	1
  1638  006B76  F8                 	db	248
  1639  006B77  00                 	db	0
  1640  006B78  00                 	db	0
  1641  006B79  00                 	db	0
  1642  006B7A  00                 	db	0
  1643  006B7B  E0                 	db	224
  1644  006B7C  7F                 	db	127
  1645  006B7D  00                 	db	0
  1646  006B7E  F8                 	db	248
  1647  006B7F  00                 	db	0
  1648  006B80  00                 	db	0
  1649  006B81  00                 	db	0
  1650  006B82  00                 	db	0
  1651  006B83  F8                 	db	248
  1652  006B84  3F                 	db	63
  1653  006B85  00                 	db	0
  1654  006B86  F8                 	db	248
  1655  006B87  00                 	db	0
  1656  006B88  00                 	db	0
  1657  006B89  00                 	db	0
  1658  006B8A  00                 	db	0
  1659  006B8B  FC                 	db	252
  1660  006B8C  0F                 	db	15
  1661  006B8D  00                 	db	0
  1662  006B8E  F8                 	db	248
  1663  006B8F  00                 	db	0
  1664  006B90  00                 	db	0
  1665  006B91  00                 	db	0
  1666  006B92  00                 	db	0
  1667  006B93  FE                 	db	254
  1668  006B94  07                 	db	7
  1669  006B95  00                 	db	0
  1670  006B96  F8                 	db	248
  1671  006B97  00                 	db	0
  1672  006B98  00                 	db	0
  1673  006B99  00                 	db	0
  1674  006B9A  80                 	db	128
  1675  006B9B  FF                 	db	255
  1676  006B9C  01                 	db	1
  1677  006B9D  00                 	db	0
  1678  006B9E  F8                 	db	248
  1679  006B9F  00                 	db	0
  1680  006BA0  00                 	db	0
  1681  006BA1  00                 	db	0
  1682  006BA2  C0                 	db	192
  1683  006BA3  FF                 	db	255
  1684  006BA4  00                 	db	0
  1685  006BA5  00                 	db	0
  1686  006BA6  F8                 	db	248
  1687  006BA7  00                 	db	0
  1688  006BA8  00                 	db	0
  1689  006BA9  00                 	db	0
  1690  006BAA  F0                 	db	240
  1691  006BAB  3F                 	db	63
  1692  006BAC  00                 	db	0
  1693  006BAD  00                 	db	0
  1694  006BAE  F8                 	db	248
  1695  006BAF  00                 	db	0
  1696  006BB0  00                 	db	0
  1697  006BB1  00                 	db	0
  1698  006BB2  F8                 	db	248
  1699  006BB3  1F                 	db	31
  1700  006BB4  00                 	db	0
  1701  006BB5  00                 	db	0
  1702  006BB6  F8                 	db	248
  1703  006BB7  00                 	db	0
  1704  006BB8  00                 	db	0
  1705  006BB9  00                 	db	0
  1706  006BBA  FE                 	db	254
  1707  006BBB  0F                 	db	15
  1708  006BBC  00                 	db	0
  1709  006BBD  00                 	db	0
  1710  006BBE  F8                 	db	248
  1711  006BBF  00                 	db	0
  1712  006BC0  00                 	db	0
  1713  006BC1  00                 	db	0
  1714  006BC2  FF                 	db	255
  1715  006BC3  03                 	db	3
  1716  006BC4  00                 	db	0
  1717  006BC5  00                 	db	0
  1718  006BC6  F8                 	db	248
  1719  006BC7  00                 	db	0
  1720  006BC8  00                 	db	0
  1721  006BC9  C0                 	db	192
  1722  006BCA  FF                 	db	255
  1723  006BCB  FF                 	db	255
  1724  006BCC  FF                 	db	255
  1725  006BCD  FF                 	db	255
  1726  006BCE  FF                 	db	255
  1727  006BCF  FF                 	db	255
  1728  006BD0  3F                 	db	63
  1729  006BD1  E0                 	db	224
  1730  006BD2  FF                 	db	255
  1731  006BD3  FF                 	db	255
  1732  006BD4  FF                 	db	255
  1733  006BD5  FF                 	db	255
  1734  006BD6  FF                 	db	255
  1735  006BD7  FF                 	db	255
  1736  006BD8  3F                 	db	63
  1737  006BD9  F8                 	db	248
  1738  006BDA  FF                 	db	255
  1739  006BDB  FF                 	db	255
  1740  006BDC  FF                 	db	255
  1741  006BDD  FF                 	db	255
  1742  006BDE  FF                 	db	255
  1743  006BDF  FF                 	db	255
  1744  006BE0  3F                 	db	63
  1745  006BE1  FC                 	db	252
  1746  006BE2  FF                 	db	255
  1747  006BE3  FF                 	db	255
  1748  006BE4  FF                 	db	255
  1749  006BE5  FF                 	db	255
  1750  006BE6  FF                 	db	255
  1751  006BE7  FF                 	db	255
  1752  006BE8  3F                 	db	63
  1753  006BE9  FF                 	db	255
  1754  006BEA  FF                 	db	255
  1755  006BEB  FF                 	db	255
  1756  006BEC  FF                 	db	255
  1757  006BED  FF                 	db	255
  1758  006BEE  FF                 	db	255
  1759  006BEF  FF                 	db	255
  1760  006BF0  3F                 	db	63
  1761  006BF1  FF                 	db	255
  1762  006BF2  FF                 	db	255
  1763  006BF3  FF                 	db	255
  1764  006BF4  FF                 	db	255
  1765  006BF5  FF                 	db	255
  1766  006BF6  FF                 	db	255
  1767  006BF7  FF                 	db	255
  1768  006BF8  3F                 	db	63
  1769  006BF9  00                 	db	0
  1770  006BFA  00                 	db	0
  1771  006BFB  00                 	db	0
  1772  006BFC  00                 	db	0
  1773  006BFD  00                 	db	0
  1774  006BFE  F8                 	db	248
  1775  006BFF  00                 	db	0
  1776  006C00  00                 	db	0
  1777  006C01  00                 	db	0
  1778  006C02  00                 	db	0
  1779  006C03  00                 	db	0
  1780  006C04  00                 	db	0
  1781  006C05  00                 	db	0
  1782  006C06  F8                 	db	248
  1783  006C07  00                 	db	0
  1784  006C08  00                 	db	0
  1785  006C09  00                 	db	0
  1786  006C0A  00                 	db	0
  1787  006C0B  00                 	db	0
  1788  006C0C  00                 	db	0
  1789  006C0D  00                 	db	0
  1790  006C0E  F8                 	db	248
  1791  006C0F  00                 	db	0
  1792  006C10  00                 	db	0
  1793  006C11  00                 	db	0
  1794  006C12  00                 	db	0
  1795  006C13  00                 	db	0
  1796  006C14  00                 	db	0
  1797  006C15  00                 	db	0
  1798  006C16  F8                 	db	248
  1799  006C17  00                 	db	0
  1800  006C18  00                 	db	0
  1801  006C19  00                 	db	0
  1802  006C1A  00                 	db	0
  1803  006C1B  00                 	db	0
  1804  006C1C  00                 	db	0
  1805  006C1D  00                 	db	0
  1806  006C1E  F8                 	db	248
  1807  006C1F  00                 	db	0
  1808  006C20  00                 	db	0
  1809  006C21  00                 	db	0
  1810  006C22  00                 	db	0
  1811  006C23  00                 	db	0
  1812  006C24  00                 	db	0
  1813  006C25  00                 	db	0
  1814  006C26  F8                 	db	248
  1815  006C27  00                 	db	0
  1816  006C28  00                 	db	0
  1817  006C29  00                 	db	0
  1818  006C2A  00                 	db	0
  1819  006C2B  00                 	db	0
  1820  006C2C  00                 	db	0
  1821  006C2D  00                 	db	0
  1822  006C2E  F8                 	db	248
  1823  006C2F  00                 	db	0
  1824  006C30  00                 	db	0
  1825  006C31  00                 	db	0
  1826  006C32  00                 	db	0
  1827  006C33  00                 	db	0
  1828  006C34  00                 	db	0
  1829  006C35  00                 	db	0
  1830  006C36  00                 	db	0
  1831  006C37  00                 	db	0
  1832  006C38  00                 	db	0
  1833  006C39  00                 	db	0
  1834  006C3A  00                 	db	0
  1835  006C3B  00                 	db	0
  1836  006C3C  00                 	db	0
  1837  006C3D  00                 	db	0
  1838  006C3E  80                 	db	128
  1839  006C3F  01                 	db	1
  1840  006C40  00                 	db	0
  1841  006C41  00                 	db	0
  1842  006C42  00                 	db	0
  1843  006C43  00                 	db	0
  1844  006C44  00                 	db	0
  1845  006C45  00                 	db	0
  1846  006C46  80                 	db	128
  1847  006C47  0F                 	db	15
  1848  006C48  00                 	db	0
  1849  006C49  00                 	db	0
  1850  006C4A  00                 	db	0
  1851  006C4B  00                 	db	0
  1852  006C4C  00                 	db	0
  1853  006C4D  00                 	db	0
  1854  006C4E  80                 	db	128
  1855  006C4F  3F                 	db	63
  1856  006C50  00                 	db	0
  1857  006C51  00                 	db	0
  1858  006C52  00                 	db	0
  1859  006C53  00                 	db	0
  1860  006C54  00                 	db	0
  1861  006C55  00                 	db	0
  1862  006C56  80                 	db	128
  1863  006C57  FF                 	db	255
  1864  006C58  00                 	db	0
  1865  006C59  00                 	db	0
  1866  006C5A  00                 	db	0
  1867  006C5B  00                 	db	0
  1868  006C5C  00                 	db	0
  1869  006C5D  00                 	db	0
  1870  006C5E  80                 	db	128
  1871  006C5F  FF                 	db	255
  1872  006C60  01                 	db	1
  1873  006C61  00                 	db	0
  1874  006C62  00                 	db	0
  1875  006C63  00                 	db	0
  1876  006C64  00                 	db	0
  1877  006C65  00                 	db	0
  1878  006C66  80                 	db	128
  1879  006C67  FF                 	db	255
  1880  006C68  03                 	db	3
  1881  006C69  00                 	db	0
  1882  006C6A  00                 	db	0
  1883  006C6B  00                 	db	0
  1884  006C6C  30                 	db	48
  1885  006C6D  00                 	db	0
  1886  006C6E  00                 	db	0
  1887  006C6F  FE                 	db	254
  1888  006C70  07                 	db	7
  1889  006C71  00                 	db	0
  1890  006C72  00                 	db	0
  1891  006C73  80                 	db	128
  1892  006C74  1F                 	db	31
  1893  006C75  00                 	db	0
  1894  006C76  00                 	db	0
  1895  006C77  F8                 	db	248
  1896  006C78  0F                 	db	15
  1897  006C79  00                 	db	0
  1898  006C7A  00                 	db	0
  1899  006C7B  FC                 	db	252
  1900  006C7C  1F                 	db	31
  1901  006C7D  00                 	db	0
  1902  006C7E  00                 	db	0
  1903  006C7F  E0                 	db	224
  1904  006C80  0F                 	db	15
  1905  006C81  00                 	db	0
  1906  006C82  E0                 	db	224
  1907  006C83  FF                 	db	255
  1908  006C84  1F                 	db	31
  1909  006C85  00                 	db	0
  1910  006C86  00                 	db	0
  1911  006C87  C0                 	db	192
  1912  006C88  1F                 	db	31
  1913  006C89  00                 	db	0
  1914  006C8A  FF                 	db	255
  1915  006C8B  FF                 	db	255
  1916  006C8C  0F                 	db	15
  1917  006C8D  00                 	db	0
  1918  006C8E  00                 	db	0
  1919  006C8F  80                 	db	128
  1920  006C90  1F                 	db	31
  1921  006C91  F8                 	db	248
  1922  006C92  FF                 	db	255
  1923  006C93  FF                 	db	255
  1924  006C94  0F                 	db	15
  1925  006C95  00                 	db	0
  1926  006C96  00                 	db	0
  1927  006C97  00                 	db	0
  1928  006C98  3F                 	db	63
  1929  006C99  FE                 	db	254
  1930  006C9A  FF                 	db	255
  1931  006C9B  FF                 	db	255
  1932  006C9C  0F                 	db	15
  1933  006C9D  00                 	db	0
  1934  006C9E  00                 	db	0
  1935  006C9F  00                 	db	0
  1936  006CA0  3F                 	db	63
  1937  006CA1  FE                 	db	254
  1938  006CA2  FF                 	db	255
  1939  006CA3  FF                 	db	255
  1940  006CA4  0F                 	db	15
  1941  006CA5  00                 	db	0
  1942  006CA6  00                 	db	0
  1943  006CA7  00                 	db	0
  1944  006CA8  3E                 	db	62
  1945  006CA9  FE                 	db	254
  1946  006CAA  FF                 	db	255
  1947  006CAB  83                 	db	131
  1948  006CAC  07                 	db	7
  1949  006CAD  00                 	db	0
  1950  006CAE  00                 	db	0
  1951  006CAF  00                 	db	0
  1952  006CB0  7E                 	db	126
  1953  006CB1  FE                 	db	254
  1954  006CB2  3F                 	db	63
  1955  006CB3  80                 	db	128
  1956  006CB4  07                 	db	7
  1957  006CB5  00                 	db	0
  1958  006CB6  00                 	db	0
  1959  006CB7  00                 	db	0
  1960  006CB8  7C                 	db	124
  1961  006CB9  FE                 	db	254
  1962  006CBA  01                 	db	1
  1963  006CBB  C0                 	db	192
  1964  006CBC  07                 	db	7
  1965  006CBD  00                 	db	0
  1966  006CBE  00                 	db	0
  1967  006CBF  00                 	db	0
  1968  006CC0  7C                 	db	124
  1969  006CC1  3E                 	db	62
  1970  006CC2  00                 	db	0
  1971  006CC3  C0                 	db	192
  1972  006CC4  07                 	db	7
  1973  006CC5  00                 	db	0
  1974  006CC6  00                 	db	0
  1975  006CC7  00                 	db	0
  1976  006CC8  7C                 	db	124
  1977  006CC9  3E                 	db	62
  1978  006CCA  00                 	db	0
  1979  006CCB  C0                 	db	192
  1980  006CCC  07                 	db	7
  1981  006CCD  00                 	db	0
  1982  006CCE  00                 	db	0
  1983  006CCF  00                 	db	0
  1984  006CD0  7C                 	db	124
  1985  006CD1  3E                 	db	62
  1986  006CD2  00                 	db	0
  1987  006CD3  C0                 	db	192
  1988  006CD4  07                 	db	7
  1989  006CD5  00                 	db	0
  1990  006CD6  00                 	db	0
  1991  006CD7  00                 	db	0
  1992  006CD8  7C                 	db	124
  1993  006CD9  3E                 	db	62
  1994  006CDA  00                 	db	0
  1995  006CDB  C0                 	db	192
  1996  006CDC  07                 	db	7
  1997  006CDD  00                 	db	0
  1998  006CDE  00                 	db	0
  1999  006CDF  00                 	db	0
  2000  006CE0  7C                 	db	124
  2001  006CE1  3E                 	db	62
  2002  006CE2  00                 	db	0
  2003  006CE3  C0                 	db	192
  2004  006CE4  07                 	db	7
  2005  006CE5  00                 	db	0
  2006  006CE6  00                 	db	0
  2007  006CE7  00                 	db	0
  2008  006CE8  7C                 	db	124
  2009  006CE9  3E                 	db	62
  2010  006CEA  00                 	db	0
  2011  006CEB  C0                 	db	192
  2012  006CEC  07                 	db	7
  2013  006CED  00                 	db	0
  2014  006CEE  00                 	db	0
  2015  006CEF  00                 	db	0
  2016  006CF0  7C                 	db	124
  2017  006CF1  3E                 	db	62
  2018  006CF2  00                 	db	0
  2019  006CF3  C0                 	db	192
  2020  006CF4  07                 	db	7
  2021  006CF5  00                 	db	0
  2022  006CF6  00                 	db	0
  2023  006CF7  00                 	db	0
  2024  006CF8  7E                 	db	126
  2025  006CF9  3E                 	db	62
  2026  006CFA  00                 	db	0
  2027  006CFB  C0                 	db	192
  2028  006CFC  0F                 	db	15
  2029  006CFD  00                 	db	0
  2030  006CFE  00                 	db	0
  2031  006CFF  00                 	db	0
  2032  006D00  3E                 	db	62
  2033  006D01  3E                 	db	62
  2034  006D02  00                 	db	0
  2035  006D03  80                 	db	128
  2036  006D04  0F                 	db	15
  2037  006D05  00                 	db	0
  2038  006D06  00                 	db	0
  2039  006D07  00                 	db	0
  2040  006D08  3F                 	db	63
  2041  006D09  3E                 	db	62
  2042  006D0A  00                 	db	0
  2043  006D0B  80                 	db	128
  2044  006D0C  0F                 	db	15
  2045  006D0D  00                 	db	0
  2046  006D0E  00                 	db	0
  2047  006D0F  00                 	db	0
  2048  006D10  3F                 	db	63
  2049  006D11  3E                 	db	62
  2050  006D12  00                 	db	0
  2051  006D13  80                 	db	128
  2052  006D14  1F                 	db	31
  2053  006D15  00                 	db	0
  2054  006D16  00                 	db	0
  2055  006D17  80                 	db	128
  2056  006D18  1F                 	db	31
  2057  006D19  3E                 	db	62
  2058  006D1A  00                 	db	0
  2059  006D1B  80                 	db	128
  2060  006D1C  3F                 	db	63
  2061  006D1D  00                 	db	0
  2062  006D1E  00                 	db	0
  2063  006D1F  C0                 	db	192
  2064  006D20  1F                 	db	31
  2065  006D21  3E                 	db	62
  2066  006D22  00                 	db	0
  2067  006D23  00                 	db	0
  2068  006D24  7F                 	db	127
  2069  006D25  00                 	db	0
  2070  006D26  00                 	db	0
  2071  006D27  E0                 	db	224
  2072  006D28  0F                 	db	15
  2073  006D29  3E                 	db	62
  2074  006D2A  00                 	db	0
  2075  006D2B  00                 	db	0
  2076  006D2C  FF                 	db	255
  2077  006D2D  00                 	db	0
  2078  006D2E  00                 	db	0
  2079  006D2F  F0                 	db	240
  2080  006D30  0F                 	db	15
  2081  006D31  3E                 	db	62
  2082  006D32  00                 	db	0
  2083  006D33  00                 	db	0
  2084  006D34  FE                 	db	254
  2085  006D35  01                 	db	1
  2086  006D36  00                 	db	0
  2087  006D37  F8                 	db	248
  2088  006D38  07                 	db	7
  2089  006D39  3E                 	db	62
  2090  006D3A  00                 	db	0
  2091  006D3B  00                 	db	0
  2092  006D3C  FC                 	db	252
  2093  006D3D  03                 	db	3
  2094  006D3E  00                 	db	0
  2095  006D3F  FE                 	db	254
  2096  006D40  03                 	db	3
  2097  006D41  3E                 	db	62
  2098  006D42  00                 	db	0
  2099  006D43  00                 	db	0
  2100  006D44  F8                 	db	248
  2101  006D45  1F                 	db	31
  2102  006D46  C0                 	db	192
  2103  006D47  FF                 	db	255
  2104  006D48  03                 	db	3
  2105  006D49  3E                 	db	62
  2106  006D4A  00                 	db	0
  2107  006D4B  00                 	db	0
  2108  006D4C  F8                 	db	248
  2109  006D4D  FF                 	db	255
  2110  006D4E  FF                 	db	255
  2111  006D4F  FF                 	db	255
  2112  006D50  01                 	db	1
  2113  006D51  3E                 	db	62
  2114  006D52  00                 	db	0
  2115  006D53  00                 	db	0
  2116  006D54  E0                 	db	224
  2117  006D55  FF                 	db	255
  2118  006D56  FF                 	db	255
  2119  006D57  7F                 	db	127
  2120  006D58  00                 	db	0
  2121  006D59  3E                 	db	62
  2122  006D5A  00                 	db	0
  2123  006D5B  00                 	db	0
  2124  006D5C  C0                 	db	192
  2125  006D5D  FF                 	db	255
  2126  006D5E  FF                 	db	255
  2127  006D5F  3F                 	db	63
  2128  006D60  00                 	db	0
  2129  006D61  3E                 	db	62
  2130  006D62  00                 	db	0
  2131  006D63  00                 	db	0
  2132  006D64  80                 	db	128
  2133  006D65  FF                 	db	255
  2134  006D66  FF                 	db	255
  2135  006D67  0F                 	db	15
  2136  006D68  00                 	db	0
  2137  006D69  00                 	db	0
  2138  006D6A  00                 	db	0
  2139  006D6B  00                 	db	0
  2140  006D6C  00                 	db	0
  2141  006D6D  FC                 	db	252
  2142  006D6E  FF                 	db	255
  2143  006D6F  03                 	db	3
  2144  006D70  00                 	db	0
  2145  006D71  00                 	db	0
  2146  006D72  00                 	db	0
  2147  006D73  00                 	db	0
  2148  006D74  00                 	db	0
  2149  006D75  E0                 	db	224
  2150  006D76  7F                 	db	127
  2151  006D77  00                 	db	0
  2152  006D78  00                 	db	0
  2153  006D79  00                 	db	0
  2154  006D7A  00                 	db	0
  2155  006D7B  00                 	db	0
  2156  006D7C  00                 	db	0
  2157  006D7D  00                 	db	0
  2158  006D7E  00                 	db	0
  2159  006D7F  00                 	db	0
  2160  006D80  00                 	db	0
  2161  006D81  00                 	db	0
  2162  006D82  00                 	db	0
  2163  006D83  00                 	db	0
  2164  006D84  00                 	db	0
  2165  006D85  00                 	db	0
  2166  006D86  00                 	db	0
  2167  006D87  00                 	db	0
  2168  006D88  00                 	db	0
  2169  006D89  00                 	db	0
  2170  006D8A  00                 	db	0
  2171  006D8B  00                 	db	0
  2172  006D8C  00                 	db	0
  2173  006D8D  00                 	db	0
  2174  006D8E  00                 	db	0
  2175  006D8F  00                 	db	0
  2176  006D90  00                 	db	0
  2177  006D91  00                 	db	0
  2178  006D92  00                 	db	0
  2179  006D93  00                 	db	0
  2180  006D94  00                 	db	0
  2181  006D95  00                 	db	0
  2182  006D96  00                 	db	0
  2183  006D97  00                 	db	0
  2184  006D98  00                 	db	0
  2185  006D99  00                 	db	0
  2186  006D9A  00                 	db	0
  2187  006D9B  00                 	db	0
  2188  006D9C  00                 	db	0
  2189  006D9D  00                 	db	0
  2190  006D9E  FF                 	db	255
  2191  006D9F  01                 	db	1
  2192  006DA0  00                 	db	0
  2193  006DA1  00                 	db	0
  2194  006DA2  00                 	db	0
  2195  006DA3  00                 	db	0
  2196  006DA4  00                 	db	0
  2197  006DA5  E0                 	db	224
  2198  006DA6  FF                 	db	255
  2199  006DA7  0F                 	db	15
  2200  006DA8  00                 	db	0
  2201  006DA9  00                 	db	0
  2202  006DAA  00                 	db	0
  2203  006DAB  00                 	db	0
  2204  006DAC  00                 	db	0
  2205  006DAD  F8                 	db	248
  2206  006DAE  FF                 	db	255
  2207  006DAF  3F                 	db	63
  2208  006DB0  00                 	db	0
  2209  006DB1  00                 	db	0
  2210  006DB2  00                 	db	0
  2211  006DB3  00                 	db	0
  2212  006DB4  00                 	db	0
  2213  006DB5  FE                 	db	254
  2214  006DB6  FF                 	db	255
  2215  006DB7  7F                 	db	127
  2216  006DB8  00                 	db	0
  2217  006DB9  00                 	db	0
  2218  006DBA  00                 	db	0
  2219  006DBB  00                 	db	0
  2220  006DBC  80                 	db	128
  2221  006DBD  FF                 	db	255
  2222  006DBE  FF                 	db	255
  2223  006DBF  FF                 	db	255
  2224  006DC0  01                 	db	1
  2225  006DC1  00                 	db	0
  2226  006DC2  00                 	db	0
  2227  006DC3  00                 	db	0
  2228  006DC4  E0                 	db	224
  2229  006DC5  FF                 	db	255
  2230  006DC6  FF                 	db	255
  2231  006DC7  FF                 	db	255
  2232  006DC8  03                 	db	3
  2233  006DC9  00                 	db	0
  2234  006DCA  00                 	db	0
  2235  006DCB  00                 	db	0
  2236  006DCC  F0                 	db	240
  2237  006DCD  FF                 	db	255
  2238  006DCE  01                 	db	1
  2239  006DCF  FE                 	db	254
  2240  006DD0  07                 	db	7
  2241  006DD1  00                 	db	0
  2242  006DD2  00                 	db	0
  2243  006DD3  00                 	db	0
  2244  006DD4  FC                 	db	252
  2245  006DD5  7F                 	db	127
  2246  006DD6  00                 	db	0
  2247  006DD7  F8                 	db	248
  2248  006DD8  07                 	db	7
  2249  006DD9  00                 	db	0
  2250  006DDA  00                 	db	0
  2251  006DDB  00                 	db	0
  2252  006DDC  FE                 	db	254
  2253  006DDD  1F                 	db	31
  2254  006DDE  00                 	db	0
  2255  006DDF  E0                 	db	224
  2256  006DE0  0F                 	db	15
  2257  006DE1  00                 	db	0
  2258  006DE2  00                 	db	0
  2259  006DE3  00                 	db	0
  2260  006DE4  FF                 	db	255
  2261  006DE5  0F                 	db	15
  2262  006DE6  00                 	db	0
  2263  006DE7  C0                 	db	192
  2264  006DE8  1F                 	db	31
  2265  006DE9  00                 	db	0
  2266  006DEA  00                 	db	0
  2267  006DEB  C0                 	db	192
  2268  006DEC  FF                 	db	255
  2269  006DED  07                 	db	7
  2270  006DEE  00                 	db	0
  2271  006DEF  80                 	db	128
  2272  006DF0  1F                 	db	31
  2273  006DF1  00                 	db	0
  2274  006DF2  00                 	db	0
  2275  006DF3  E0                 	db	224
  2276  006DF4  FF                 	db	255
  2277  006DF5  03                 	db	3
  2278  006DF6  00                 	db	0
  2279  006DF7  00                 	db	0
  2280  006DF8  3F                 	db	63
  2281  006DF9  00                 	db	0
  2282  006DFA  00                 	db	0
  2283  006DFB  F8                 	db	248
  2284  006DFC  FF                 	db	255
  2285  006DFD  03                 	db	3
  2286  006DFE  00                 	db	0
  2287  006DFF  00                 	db	0
  2288  006E00  3F                 	db	63
  2289  006E01  00                 	db	0
  2290  006E02  00                 	db	0
  2291  006E03  FC                 	db	252
  2292  006E04  FF                 	db	255
  2293  006E05  01                 	db	1
  2294  006E06  00                 	db	0
  2295  006E07  00                 	db	0
  2296  006E08  3E                 	db	62
  2297  006E09  00                 	db	0
  2298  006E0A  00                 	db	0
  2299  006E0B  FF                 	db	255
  2300  006E0C  F7                 	db	247
  2301  006E0D  01                 	db	1
  2302  006E0E  00                 	db	0
  2303  006E0F  00                 	db	0
  2304  006E10  7E                 	db	126
  2305  006E11  00                 	db	0
  2306  006E12  80                 	db	128
  2307  006E13  FF                 	db	255
  2308  006E14  F9                 	db	249
  2309  006E15  00                 	db	0
  2310  006E16  00                 	db	0
  2311  006E17  00                 	db	0
  2312  006E18  7C                 	db	124
  2313  006E19  00                 	db	0
  2314  006E1A  C0                 	db	192
  2315  006E1B  FF                 	db	255
  2316  006E1C  F8                 	db	248
  2317  006E1D  00                 	db	0
  2318  006E1E  00                 	db	0
  2319  006E1F  00                 	db	0
  2320  006E20  7C                 	db	124
  2321  006E21  00                 	db	0
  2322  006E22  F0                 	db	240
  2323  006E23  3F                 	db	63
  2324  006E24  F8                 	db	248
  2325  006E25  00                 	db	0
  2326  006E26  00                 	db	0
  2327  006E27  00                 	db	0
  2328  006E28  7C                 	db	124
  2329  006E29  00                 	db	0
  2330  006E2A  F8                 	db	248
  2331  006E2B  1F                 	db	31
  2332  006E2C  F8                 	db	248
  2333  006E2D  00                 	db	0
  2334  006E2E  00                 	db	0
  2335  006E2F  00                 	db	0
  2336  006E30  7C                 	db	124
  2337  006E31  00                 	db	0
  2338  006E32  FE                 	db	254
  2339  006E33  07                 	db	7
  2340  006E34  F8                 	db	248
  2341  006E35  00                 	db	0
  2342  006E36  00                 	db	0
  2343  006E37  00                 	db	0
  2344  006E38  7C                 	db	124
  2345  006E39  00                 	db	0
  2346  006E3A  FF                 	db	255
  2347  006E3B  03                 	db	3
  2348  006E3C  F8                 	db	248
  2349  006E3D  00                 	db	0
  2350  006E3E  00                 	db	0
  2351  006E3F  00                 	db	0
  2352  006E40  7C                 	db	124
  2353  006E41  C0                 	db	192
  2354  006E42  FF                 	db	255
  2355  006E43  01                 	db	1
  2356  006E44  F8                 	db	248
  2357  006E45  00                 	db	0
  2358  006E46  00                 	db	0
  2359  006E47  00                 	db	0
  2360  006E48  7C                 	db	124
  2361  006E49  E0                 	db	224
  2362  006E4A  7F                 	db	127
  2363  006E4B  00                 	db	0
  2364  006E4C  F8                 	db	248
  2365  006E4D  01                 	db	1
  2366  006E4E  00                 	db	0
  2367  006E4F  00                 	db	0
  2368  006E50  7C                 	db	124
  2369  006E51  F0                 	db	240
  2370  006E52  3F                 	db	63
  2371  006E53  00                 	db	0
  2372  006E54  F8                 	db	248
  2373  006E55  01                 	db	1
  2374  006E56  00                 	db	0
  2375  006E57  00                 	db	0
  2376  006E58  3E                 	db	62
  2377  006E59  FC                 	db	252
  2378  006E5A  0F                 	db	15
  2379  006E5B  00                 	db	0
  2380  006E5C  F8                 	db	248
  2381  006E5D  01                 	db	1
  2382  006E5E  00                 	db	0
  2383  006E5F  00                 	db	0
  2384  006E60  3E                 	db	62
  2385  006E61  FE                 	db	254
  2386  006E62  07                 	db	7
  2387  006E63  00                 	db	0
  2388  006E64  F0                 	db	240
  2389  006E65  03                 	db	3
  2390  006E66  00                 	db	0
  2391  006E67  00                 	db	0
  2392  006E68  3F                 	db	63
  2393  006E69  FF                 	db	255
  2394  006E6A  01                 	db	1
  2395  006E6B  00                 	db	0
  2396  006E6C  F0                 	db	240
  2397  006E6D  03                 	db	3
  2398  006E6E  00                 	db	0
  2399  006E6F  00                 	db	0
  2400  006E70  1F                 	db	31
  2401  006E71  FE                 	db	254
  2402  006E72  00                 	db	0
  2403  006E73  00                 	db	0
  2404  006E74  F0                 	db	240
  2405  006E75  07                 	db	7
  2406  006E76  00                 	db	0
  2407  006E77  80                 	db	128
  2408  006E78  1F                 	db	31
  2409  006E79  7E                 	db	126
  2410  006E7A  00                 	db	0
  2411  006E7B  00                 	db	0
  2412  006E7C  E0                 	db	224
  2413  006E7D  0F                 	db	15
  2414  006E7E  00                 	db	0
  2415  006E7F  C0                 	db	192
  2416  006E80  1F                 	db	31
  2417  006E81  1C                 	db	28
  2418  006E82  00                 	db	0
  2419  006E83  00                 	db	0
  2420  006E84  C0                 	db	192
  2421  006E85  1F                 	db	31
  2422  006E86  00                 	db	0
  2423  006E87  E0                 	db	224
  2424  006E88  0F                 	db	15
  2425  006E89  0C                 	db	12
  2426  006E8A  00                 	db	0
  2427  006E8B  00                 	db	0
  2428  006E8C  C0                 	db	192
  2429  006E8D  7F                 	db	127
  2430  006E8E  00                 	db	0
  2431  006E8F  F8                 	db	248
  2432  006E90  07                 	db	7
  2433  006E91  00                 	db	0
  2434  006E92  00                 	db	0
  2435  006E93  00                 	db	0
  2436  006E94  80                 	db	128
  2437  006E95  FF                 	db	255
  2438  006E96  01                 	db	1
  2439  006E97  FE                 	db	254
  2440  006E98  07                 	db	7
  2441  006E99  00                 	db	0
  2442  006E9A  00                 	db	0
  2443  006E9B  00                 	db	0
  2444  006E9C  00                 	db	0
  2445  006E9D  FF                 	db	255
  2446  006E9E  FF                 	db	255
  2447  006E9F  FF                 	db	255
  2448  006EA0  03                 	db	3
  2449  006EA1  00                 	db	0
  2450  006EA2  00                 	db	0
  2451  006EA3  00                 	db	0
  2452  006EA4  00                 	db	0
  2453  006EA5  FE                 	db	254
  2454  006EA6  FF                 	db	255
  2455  006EA7  FF                 	db	255
  2456  006EA8  01                 	db	1
  2457  006EA9  00                 	db	0
  2458  006EAA  00                 	db	0
  2459  006EAB  00                 	db	0
  2460  006EAC  00                 	db	0
  2461  006EAD  FC                 	db	252
  2462  006EAE  FF                 	db	255
  2463  006EAF  7F                 	db	127
  2464  006EB0  00                 	db	0
  2465  006EB1  00                 	db	0
  2466  006EB2  00                 	db	0
  2467  006EB3  00                 	db	0
  2468  006EB4  00                 	db	0
  2469  006EB5  F8                 	db	248
  2470  006EB6  FF                 	db	255
  2471  006EB7  3F                 	db	63
  2472  006EB8  00                 	db	0
  2473  006EB9  00                 	db	0
  2474  006EBA  00                 	db	0
  2475  006EBB  00                 	db	0
  2476  006EBC  00                 	db	0
  2477  006EBD  E0                 	db	224
  2478  006EBE  FF                 	db	255
  2479  006EBF  0F                 	db	15
  2480  006EC0  00                 	db	0
  2481  006EC1  00                 	db	0
  2482  006EC2  00                 	db	0
  2483  006EC3  00                 	db	0
  2484  006EC4  00                 	db	0
  2485  006EC5  00                 	db	0
  2486  006EC6  FF                 	db	255
  2487  006EC7  01                 	db	1
  2488  006EC8  00                 	db	0
  2489  006EC9  00                 	db	0
  2490  006ECA  00                 	db	0
  2491  006ECB  00                 	db	0
  2492  006ECC  00                 	db	0
  2493  006ECD  00                 	db	0
  2494  006ECE  00                 	db	0
  2495  006ECF  00                 	db	0
  2496  006ED0  00                 	db	0
  2497  006ED1  00                 	db	0
  2498  006ED2  00                 	db	0
  2499  006ED3  00                 	db	0
  2500  006ED4  00                 	db	0
  2501  006ED5  00                 	db	0
  2502  006ED6  00                 	db	0
  2503  006ED7  00                 	db	0
  2504  006ED8  00                 	db	0
  2505  006ED9  00                 	db	0
  2506  006EDA  00                 	db	0
  2507  006EDB  00                 	db	0
  2508  006EDC  00                 	db	0
  2509  006EDD  00                 	db	0
  2510  006EDE  00                 	db	0
  2511  006EDF  00                 	db	0
  2512  006EE0  00                 	db	0
  2513  006EE1  00                 	db	0
  2514  006EE2  00                 	db	0
  2515  006EE3  00                 	db	0
  2516  006EE4  00                 	db	0
  2517  006EE5  00                 	db	0
  2518  006EE6  00                 	db	0
  2519  006EE7  00                 	db	0
  2520  006EE8  00                 	db	0
  2521  006EE9  00                 	db	0
  2522  006EEA  00                 	db	0
  2523  006EEB  00                 	db	0
  2524  006EEC  00                 	db	0
  2525  006EED  00                 	db	0
  2526  006EEE  00                 	db	0
  2527  006EEF  00                 	db	0
  2528  006EF0  00                 	db	0
  2529  006EF1  3E                 	db	62
  2530  006EF2  00                 	db	0
  2531  006EF3  00                 	db	0
  2532  006EF4  00                 	db	0
  2533  006EF5  00                 	db	0
  2534  006EF6  00                 	db	0
  2535  006EF7  00                 	db	0
  2536  006EF8  00                 	db	0
  2537  006EF9  3E                 	db	62
  2538  006EFA  00                 	db	0
  2539  006EFB  00                 	db	0
  2540  006EFC  00                 	db	0
  2541  006EFD  00                 	db	0
  2542  006EFE  00                 	db	0
  2543  006EFF  00                 	db	0
  2544  006F00  18                 	db	24
  2545  006F01  3E                 	db	62
  2546  006F02  00                 	db	0
  2547  006F03  00                 	db	0
  2548  006F04  00                 	db	0
  2549  006F05  00                 	db	0
  2550  006F06  00                 	db	0
  2551  006F07  00                 	db	0
  2552  006F08  3E                 	db	62
  2553  006F09  3E                 	db	62
  2554  006F0A  00                 	db	0
  2555  006F0B  00                 	db	0
  2556  006F0C  00                 	db	0
  2557  006F0D  00                 	db	0
  2558  006F0E  00                 	db	0
  2559  006F0F  80                 	db	128
  2560  006F10  3F                 	db	63
  2561  006F11  3E                 	db	62
  2562  006F12  00                 	db	0
  2563  006F13  00                 	db	0
  2564  006F14  00                 	db	0
  2565  006F15  00                 	db	0
  2566  006F16  00                 	db	0
  2567  006F17  E0                 	db	224
  2568  006F18  3F                 	db	63
  2569  006F19  3E                 	db	62
  2570  006F1A  00                 	db	0
  2571  006F1B  00                 	db	0
  2572  006F1C  00                 	db	0
  2573  006F1D  00                 	db	0
  2574  006F1E  00                 	db	0
  2575  006F1F  F8                 	db	248
  2576  006F20  7F                 	db	127
  2577  006F21  3E                 	db	62
  2578  006F22  00                 	db	0
  2579  006F23  00                 	db	0
  2580  006F24  00                 	db	0
  2581  006F25  00                 	db	0
  2582  006F26  00                 	db	0
  2583  006F27  FE                 	db	254
  2584  006F28  3F                 	db	63
  2585  006F29  3E                 	db	62
  2586  006F2A  00                 	db	0
  2587  006F2B  00                 	db	0
  2588  006F2C  00                 	db	0
  2589  006F2D  00                 	db	0
  2590  006F2E  80                 	db	128
  2591  006F2F  FF                 	db	255
  2592  006F30  0F                 	db	15
  2593  006F31  3E                 	db	62
  2594  006F32  00                 	db	0
  2595  006F33  00                 	db	0
  2596  006F34  00                 	db	0
  2597  006F35  00                 	db	0
  2598  006F36  E0                 	db	224
  2599  006F37  FF                 	db	255
  2600  006F38  03                 	db	3
  2601  006F39  3E                 	db	62
  2602  006F3A  00                 	db	0
  2603  006F3B  00                 	db	0
  2604  006F3C  00                 	db	0
  2605  006F3D  00                 	db	0
  2606  006F3E  F8                 	db	248
  2607  006F3F  FF                 	db	255
  2608  006F40  00                 	db	0
  2609  006F41  3E                 	db	62
  2610  006F42  00                 	db	0
  2611  006F43  00                 	db	0
  2612  006F44  00                 	db	0
  2613  006F45  00                 	db	0
  2614  006F46  FE                 	db	254
  2615  006F47  3F                 	db	63
  2616  006F48  00                 	db	0
  2617  006F49  3E                 	db	62
  2618  006F4A  00                 	db	0
  2619  006F4B  00                 	db	0
  2620  006F4C  00                 	db	0
  2621  006F4D  00                 	db	0
  2622  006F4E  FF                 	db	255
  2623  006F4F  0F                 	db	15
  2624  006F50  00                 	db	0
  2625  006F51  3E                 	db	62
  2626  006F52  00                 	db	0
  2627  006F53  00                 	db	0
  2628  006F54  00                 	db	0
  2629  006F55  C0                 	db	192
  2630  006F56  FF                 	db	255
  2631  006F57  03                 	db	3
  2632  006F58  00                 	db	0
  2633  006F59  3E                 	db	62
  2634  006F5A  00                 	db	0
  2635  006F5B  00                 	db	0
  2636  006F5C  00                 	db	0
  2637  006F5D  F0                 	db	240
  2638  006F5E  FF                 	db	255
  2639  006F5F  00                 	db	0
  2640  006F60  00                 	db	0
  2641  006F61  3E                 	db	62
  2642  006F62  00                 	db	0
  2643  006F63  00                 	db	0
  2644  006F64  00                 	db	0
  2645  006F65  FC                 	db	252
  2646  006F66  7F                 	db	127
  2647  006F67  00                 	db	0
  2648  006F68  00                 	db	0
  2649  006F69  3E                 	db	62
  2650  006F6A  00                 	db	0
  2651  006F6B  00                 	db	0
  2652  006F6C  00                 	db	0
  2653  006F6D  FF                 	db	255
  2654  006F6E  1F                 	db	31
  2655  006F6F  00                 	db	0
  2656  006F70  00                 	db	0
  2657  006F71  3E                 	db	62
  2658  006F72  00                 	db	0
  2659  006F73  00                 	db	0
  2660  006F74  C0                 	db	192
  2661  006F75  FF                 	db	255
  2662  006F76  07                 	db	7
  2663  006F77  00                 	db	0
  2664  006F78  00                 	db	0
  2665  006F79  3E                 	db	62
  2666  006F7A  00                 	db	0
  2667  006F7B  00                 	db	0
  2668  006F7C  F0                 	db	240
  2669  006F7D  FF                 	db	255
  2670  006F7E  01                 	db	1
  2671  006F7F  00                 	db	0
  2672  006F80  00                 	db	0
  2673  006F81  3E                 	db	62
  2674  006F82  00                 	db	0
  2675  006F83  00                 	db	0
  2676  006F84  FC                 	db	252
  2677  006F85  7F                 	db	127
  2678  006F86  00                 	db	0
  2679  006F87  00                 	db	0
  2680  006F88  00                 	db	0
  2681  006F89  3E                 	db	62
  2682  006F8A  00                 	db	0
  2683  006F8B  00                 	db	0
  2684  006F8C  FF                 	db	255
  2685  006F8D  1F                 	db	31
  2686  006F8E  00                 	db	0
  2687  006F8F  00                 	db	0
  2688  006F90  00                 	db	0
  2689  006F91  3E                 	db	62
  2690  006F92  00                 	db	0
  2691  006F93  C0                 	db	192
  2692  006F94  FF                 	db	255
  2693  006F95  07                 	db	7
  2694  006F96  00                 	db	0
  2695  006F97  00                 	db	0
  2696  006F98  00                 	db	0
  2697  006F99  3E                 	db	62
  2698  006F9A  00                 	db	0
  2699  006F9B  F0                 	db	240
  2700  006F9C  FF                 	db	255
  2701  006F9D  01                 	db	1
  2702  006F9E  00                 	db	0
  2703  006F9F  00                 	db	0
  2704  006FA0  00                 	db	0
  2705  006FA1  3E                 	db	62
  2706  006FA2  00                 	db	0
  2707  006FA3  FC                 	db	252
  2708  006FA4  7F                 	db	127
  2709  006FA5  00                 	db	0
  2710  006FA6  00                 	db	0
  2711  006FA7  00                 	db	0
  2712  006FA8  00                 	db	0
  2713  006FA9  3E                 	db	62
  2714  006FAA  00                 	db	0
  2715  006FAB  FF                 	db	255
  2716  006FAC  1F                 	db	31
  2717  006FAD  00                 	db	0
  2718  006FAE  00                 	db	0
  2719  006FAF  00                 	db	0
  2720  006FB0  00                 	db	0
  2721  006FB1  3E                 	db	62
  2722  006FB2  C0                 	db	192
  2723  006FB3  FF                 	db	255
  2724  006FB4  07                 	db	7
  2725  006FB5  00                 	db	0
  2726  006FB6  00                 	db	0
  2727  006FB7  00                 	db	0
  2728  006FB8  00                 	db	0
  2729  006FB9  3E                 	db	62
  2730  006FBA  F0                 	db	240
  2731  006FBB  FF                 	db	255
  2732  006FBC  01                 	db	1
  2733  006FBD  00                 	db	0
  2734  006FBE  00                 	db	0
  2735  006FBF  00                 	db	0
  2736  006FC0  00                 	db	0
  2737  006FC1  3E                 	db	62
  2738  006FC2  FC                 	db	252
  2739  006FC3  7F                 	db	127
  2740  006FC4  00                 	db	0
  2741  006FC5  00                 	db	0
  2742  006FC6  00                 	db	0
  2743  006FC7  00                 	db	0
  2744  006FC8  00                 	db	0
  2745  006FC9  3E                 	db	62
  2746  006FCA  FE                 	db	254
  2747  006FCB  1F                 	db	31
  2748  006FCC  00                 	db	0
  2749  006FCD  00                 	db	0
  2750  006FCE  00                 	db	0
  2751  006FCF  00                 	db	0
  2752  006FD0  00                 	db	0
  2753  006FD1  BE                 	db	190
  2754  006FD2  FF                 	db	255
  2755  006FD3  07                 	db	7
  2756  006FD4  00                 	db	0
  2757  006FD5  00                 	db	0
  2758  006FD6  00                 	db	0
  2759  006FD7  00                 	db	0
  2760  006FD8  00                 	db	0
  2761  006FD9  FE                 	db	254
  2762  006FDA  FF                 	db	255
  2763  006FDB  01                 	db	1
  2764  006FDC  00                 	db	0
  2765  006FDD  00                 	db	0
  2766  006FDE  00                 	db	0
  2767  006FDF  00                 	db	0
  2768  006FE0  00                 	db	0
  2769  006FE1  FE                 	db	254
  2770  006FE2  FF                 	db	255
  2771  006FE3  00                 	db	0
  2772  006FE4  00                 	db	0
  2773  006FE5  00                 	db	0
  2774  006FE6  00                 	db	0
  2775  006FE7  00                 	db	0
  2776  006FE8  00                 	db	0
  2777  006FE9  FE                 	db	254
  2778  006FEA  3F                 	db	63
  2779  006FEB  00                 	db	0
  2780  006FEC  00                 	db	0
  2781  006FED  00                 	db	0
  2782  006FEE  00                 	db	0
  2783  006FEF  00                 	db	0
  2784  006FF0  00                 	db	0
  2785  006FF1  FE                 	db	254
  2786  006FF2  0F                 	db	15
  2787  006FF3  00                 	db	0
  2788  006FF4  00                 	db	0
  2789  006FF5  00                 	db	0
  2790  006FF6  00                 	db	0
  2791  006FF7  00                 	db	0
  2792  006FF8  00                 	db	0
  2793  006FF9  FE                 	db	254
  2794  006FFA  03                 	db	3
  2795  006FFB  00                 	db	0
  2796  006FFC  00                 	db	0
  2797  006FFD  00                 	db	0
  2798  006FFE  00                 	db	0
  2799  006FFF  00                 	db	0
  2800  007000  00                 	db	0
  2801  007001  FE                 	db	254
  2802  007002  00                 	db	0
  2803  007003  00                 	db	0
  2804  007004  00                 	db	0
  2805  007005  00                 	db	0
  2806  007006  00                 	db	0
  2807  007007  00                 	db	0
  2808  007008  00                 	db	0
  2809  007009  3E                 	db	62
  2810  00700A  00                 	db	0
  2811  00700B  00                 	db	0
  2812  00700C  00                 	db	0
  2813  00700D  00                 	db	0
  2814  00700E  00                 	db	0
  2815  00700F  00                 	db	0
  2816  007010  00                 	db	0
  2817  007011  0E                 	db	14
  2818  007012  00                 	db	0
  2819  007013  00                 	db	0
  2820  007014  00                 	db	0
  2821  007015  00                 	db	0
  2822  007016  00                 	db	0
  2823  007017  00                 	db	0
  2824  007018  00                 	db	0
  2825  007019  02                 	db	2
  2826  00701A  00                 	db	0
  2827  00701B  00                 	db	0
  2828  00701C  00                 	db	0
  2829  00701D  00                 	db	0
  2830  00701E  00                 	db	0
  2831  00701F  00                 	db	0
  2832  007020  00                 	db	0
  2833  007021  00                 	db	0
  2834  007022  00                 	db	0
  2835  007023  00                 	db	0
  2836  007024  00                 	db	0
  2837  007025  00                 	db	0
  2838  007026  00                 	db	0
  2839  007027  00                 	db	0
  2840  007028  00                 	db	0
  2841  007029  00                 	db	0
  2842  00702A  00                 	db	0
  2843  00702B  00                 	db	0
  2844  00702C  00                 	db	0
  2845  00702D  00                 	db	0
  2846  00702E  FE                 	db	254
  2847  00702F  01                 	db	1
  2848  007030  00                 	db	0
  2849  007031  00                 	db	0
  2850  007032  00                 	db	0
  2851  007033  00                 	db	0
  2852  007034  00                 	db	0
  2853  007035  C0                 	db	192
  2854  007036  FF                 	db	255
  2855  007037  0F                 	db	15
  2856  007038  00                 	db	0
  2857  007039  00                 	db	0
  2858  00703A  00                 	db	0
  2859  00703B  00                 	db	0
  2860  00703C  00                 	db	0
  2861  00703D  E0                 	db	224
  2862  00703E  FF                 	db	255
  2863  00703F  3F                 	db	63
  2864  007040  00                 	db	0
  2865  007041  00                 	db	0
  2866  007042  F0                 	db	240
  2867  007043  0F                 	db	15
  2868  007044  00                 	db	0
  2869  007045  F8                 	db	248
  2870  007046  FF                 	db	255
  2871  007047  7F                 	db	127
  2872  007048  00                 	db	0
  2873  007049  00                 	db	0
  2874  00704A  FC                 	db	252
  2875  00704B  3F                 	db	63
  2876  00704C  00                 	db	0
  2877  00704D  FC                 	db	252
  2878  00704E  FF                 	db	255
  2879  00704F  FF                 	db	255
  2880  007050  01                 	db	1
  2881  007051  00                 	db	0
  2882  007052  FF                 	db	255
  2883  007053  FF                 	db	255
  2884  007054  00                 	db	0
  2885  007055  FE                 	db	254
  2886  007056  FF                 	db	255
  2887  007057  FF                 	db	255
  2888  007058  03                 	db	3
  2889  007059  80                 	db	128
  2890  00705A  FF                 	db	255
  2891  00705B  FF                 	db	255
  2892  00705C  01                 	db	1
  2893  00705D  FF                 	db	255
  2894  00705E  03                 	db	3
  2895  00705F  FE                 	db	254
  2896  007060  07                 	db	7
  2897  007061  E0                 	db	224
  2898  007062  FF                 	db	255
  2899  007063  FF                 	db	255
  2900  007064  03                 	db	3
  2901  007065  FF                 	db	255
  2902  007066  00                 	db	0
  2903  007067  F8                 	db	248
  2904  007068  07                 	db	7
  2905  007069  F0                 	db	240
  2906  00706A  FF                 	db	255
  2907  00706B  FF                 	db	255
  2908  00706C  87                 	db	135
  2909  00706D  3F                 	db	63
  2910  00706E  00                 	db	0
  2911  00706F  E0                 	db	224
  2912  007070  0F                 	db	15
  2913  007071  F0                 	db	240
  2914  007072  0F                 	db	15
  2915  007073  F8                 	db	248
  2916  007074  8F                 	db	143
  2917  007075  1F                 	db	31
  2918  007076  00                 	db	0
  2919  007077  C0                 	db	192
  2920  007078  1F                 	db	31
  2921  007079  F8                 	db	248
  2922  00707A  03                 	db	3
  2923  00707B  E0                 	db	224
  2924  00707C  CF                 	db	207
  2925  00707D  0F                 	db	15
  2926  00707E  00                 	db	0
  2927  00707F  80                 	db	128
  2928  007080  1F                 	db	31
  2929  007081  FC                 	db	252
  2930  007082  01                 	db	1
  2931  007083  C0                 	db	192
  2932  007084  FF                 	db	255
  2933  007085  07                 	db	7
  2934  007086  00                 	db	0
  2935  007087  00                 	db	0
  2936  007088  3F                 	db	63
  2937  007089  FC                 	db	252
  2938  00708A  00                 	db	0
  2939  00708B  80                 	db	128
  2940  00708C  FF                 	db	255
  2941  00708D  03                 	db	3
  2942  00708E  00                 	db	0
  2943  00708F  00                 	db	0
  2944  007090  3F                 	db	63
  2945  007091  7E                 	db	126
  2946  007092  00                 	db	0
  2947  007093  00                 	db	0
  2948  007094  FF                 	db	255
  2949  007095  03                 	db	3
  2950  007096  00                 	db	0
  2951  007097  00                 	db	0
  2952  007098  3E                 	db	62
  2953  007099  3E                 	db	62
  2954  00709A  00                 	db	0
  2955  00709B  00                 	db	0
  2956  00709C  FE                 	db	254
  2957  00709D  01                 	db	1
  2958  00709E  00                 	db	0
  2959  00709F  00                 	db	0
  2960  0070A0  3E                 	db	62
  2961  0070A1  3E                 	db	62
  2962  0070A2  00                 	db	0
  2963  0070A3  00                 	db	0
  2964  0070A4  FC                 	db	252
  2965  0070A5  01                 	db	1
  2966  0070A6  00                 	db	0
  2967  0070A7  00                 	db	0
  2968  0070A8  7E                 	db	126
  2969  0070A9  3F                 	db	63
  2970  0070AA  00                 	db	0
  2971  0070AB  00                 	db	0
  2972  0070AC  FC                 	db	252
  2973  0070AD  01                 	db	1
  2974  0070AE  00                 	db	0
  2975  0070AF  00                 	db	0
  2976  0070B0  7C                 	db	124
  2977  0070B1  1F                 	db	31
  2978  0070B2  00                 	db	0
  2979  0070B3  00                 	db	0
  2980  0070B4  F8                 	db	248
  2981  0070B5  00                 	db	0
  2982  0070B6  00                 	db	0
  2983  0070B7  00                 	db	0
  2984  0070B8  7C                 	db	124
  2985  0070B9  1F                 	db	31
  2986  0070BA  00                 	db	0
  2987  0070BB  00                 	db	0
  2988  0070BC  F8                 	db	248
  2989  0070BD  00                 	db	0
  2990  0070BE  00                 	db	0
  2991  0070BF  00                 	db	0
  2992  0070C0  7C                 	db	124
  2993  0070C1  1F                 	db	31
  2994  0070C2  00                 	db	0
  2995  0070C3  00                 	db	0
  2996  0070C4  F8                 	db	248
  2997  0070C5  00                 	db	0
  2998  0070C6  00                 	db	0
  2999  0070C7  00                 	db	0
  3000  0070C8  7C                 	db	124
  3001  0070C9  1F                 	db	31
  3002  0070CA  00                 	db	0
  3003  0070CB  00                 	db	0
  3004  0070CC  F8                 	db	248
  3005  0070CD  00                 	db	0
  3006  0070CE  00                 	db	0
  3007  0070CF  00                 	db	0
  3008  0070D0  7C                 	db	124
  3009  0070D1  1F                 	db	31
  3010  0070D2  00                 	db	0
  3011  0070D3  00                 	db	0
  3012  0070D4  F8                 	db	248
  3013  0070D5  00                 	db	0
  3014  0070D6  00                 	db	0
  3015  0070D7  00                 	db	0
  3016  0070D8  7C                 	db	124
  3017  0070D9  1F                 	db	31
  3018  0070DA  00                 	db	0
  3019  0070DB  00                 	db	0
  3020  0070DC  F8                 	db	248
  3021  0070DD  00                 	db	0
  3022  0070DE  00                 	db	0
  3023  0070DF  00                 	db	0
  3024  0070E0  7C                 	db	124
  3025  0070E1  1F                 	db	31
  3026  0070E2  00                 	db	0
  3027  0070E3  00                 	db	0
  3028  0070E4  F8                 	db	248
  3029  0070E5  00                 	db	0
  3030  0070E6  00                 	db	0
  3031  0070E7  00                 	db	0
  3032  0070E8  7C                 	db	124
  3033  0070E9  3F                 	db	63
  3034  0070EA  00                 	db	0
  3035  0070EB  00                 	db	0
  3036  0070EC  FC                 	db	252
  3037  0070ED  00                 	db	0
  3038  0070EE  00                 	db	0
  3039  0070EF  00                 	db	0
  3040  0070F0  7C                 	db	124
  3041  0070F1  3E                 	db	62
  3042  0070F2  00                 	db	0
  3043  0070F3  00                 	db	0
  3044  0070F4  FC                 	db	252
  3045  0070F5  01                 	db	1
  3046  0070F6  00                 	db	0
  3047  0070F7  00                 	db	0
  3048  0070F8  7E                 	db	126
  3049  0070F9  3E                 	db	62
  3050  0070FA  00                 	db	0
  3051  0070FB  00                 	db	0
  3052  0070FC  FE                 	db	254
  3053  0070FD  01                 	db	1
  3054  0070FE  00                 	db	0
  3055  0070FF  00                 	db	0
  3056  007100  3E                 	db	62
  3057  007101  7E                 	db	126
  3058  007102  00                 	db	0
  3059  007103  00                 	db	0
  3060  007104  FE                 	db	254
  3061  007105  03                 	db	3
  3062  007106  00                 	db	0
  3063  007107  00                 	db	0
  3064  007108  3E                 	db	62
  3065  007109  FC                 	db	252
  3066  00710A  00                 	db	0
  3067  00710B  00                 	db	0
  3068  00710C  FF                 	db	255
  3069  00710D  03                 	db	3
  3070  00710E  00                 	db	0
  3071  00710F  00                 	db	0
  3072  007110  3F                 	db	63
  3073  007111  FC                 	db	252
  3074  007112  01                 	db	1
  3075  007113  80                 	db	128
  3076  007114  FF                 	db	255
  3077  007115  07                 	db	7
  3078  007116  00                 	db	0
  3079  007117  80                 	db	128
  3080  007118  1F                 	db	31
  3081  007119  F8                 	db	248
  3082  00711A  03                 	db	3
  3083  00711B  E0                 	db	224
  3084  00711C  DF                 	db	223
  3085  00711D  0F                 	db	15
  3086  00711E  00                 	db	0
  3087  00711F  80                 	db	128
  3088  007120  1F                 	db	31
  3089  007121  F0                 	db	240
  3090  007122  0F                 	db	15
  3091  007123  F8                 	db	248
  3092  007124  CF                 	db	207
  3093  007125  1F                 	db	31
  3094  007126  00                 	db	0
  3095  007127  C0                 	db	192
  3096  007128  1F                 	db	31
  3097  007129  F0                 	db	240
  3098  00712A  FF                 	db	255
  3099  00712B  FF                 	db	255
  3100  00712C  87                 	db	135
  3101  00712D  3F                 	db	63
  3102  00712E  00                 	db	0
  3103  00712F  F0                 	db	240
  3104  007130  0F                 	db	15
  3105  007131  E0                 	db	224
  3106  007132  FF                 	db	255
  3107  007133  FF                 	db	255
  3108  007134  03                 	db	3
  3109  007135  7F                 	db	127
  3110  007136  00                 	db	0
  3111  007137  F8                 	db	248
  3112  007138  07                 	db	7
  3113  007139  C0                 	db	192
  3114  00713A  FF                 	db	255
  3115  00713B  FF                 	db	255
  3116  00713C  01                 	db	1
  3117  00713D  FF                 	db	255
  3118  00713E  03                 	db	3
  3119  00713F  FE                 	db	254
  3120  007140  07                 	db	7
  3121  007141  00                 	db	0
  3122  007142  FF                 	db	255
  3123  007143  FF                 	db	255
  3124  007144  00                 	db	0
  3125  007145  FE                 	db	254
  3126  007146  FF                 	db	255
  3127  007147  FF                 	db	255
  3128  007148  03                 	db	3
  3129  007149  00                 	db	0
  3130  00714A  FC                 	db	252
  3131  00714B  3F                 	db	63
  3132  00714C  00                 	db	0
  3133  00714D  FC                 	db	252
  3134  00714E  FF                 	db	255
  3135  00714F  FF                 	db	255
  3136  007150  01                 	db	1
  3137  007151  00                 	db	0
  3138  007152  F0                 	db	240
  3139  007153  0F                 	db	15
  3140  007154  00                 	db	0
  3141  007155  F8                 	db	248
  3142  007156  FF                 	db	255
  3143  007157  7F                 	db	127
  3144  007158  00                 	db	0
  3145  007159  00                 	db	0
  3146  00715A  00                 	db	0
  3147  00715B  00                 	db	0
  3148  00715C  00                 	db	0
  3149  00715D  F0                 	db	240
  3150  00715E  FF                 	db	255
  3151  00715F  3F                 	db	63
  3152  007160  00                 	db	0
  3153  007161  00                 	db	0
  3154  007162  00                 	db	0
  3155  007163  00                 	db	0
  3156  007164  00                 	db	0
  3157  007165  C0                 	db	192
  3158  007166  FF                 	db	255
  3159  007167  0F                 	db	15
  3160  007168  00                 	db	0
  3161  007169  00                 	db	0
  3162  00716A  00                 	db	0
  3163  00716B  00                 	db	0
  3164  00716C  00                 	db	0
  3165  00716D  00                 	db	0
  3166  00716E  FE                 	db	254
  3167  00716F  01                 	db	1
  3168  007170  00                 	db	0
  3169  007171  00                 	db	0
  3170  007172  00                 	db	0
  3171  007173  00                 	db	0
  3172  007174  00                 	db	0
  3173  007175  00                 	db	0
  3174  007176  00                 	db	0
  3175  007177  00                 	db	0
  3176  007178  00                 	db	0
  3177  007179  00                 	db	0
  3178  00717A  C0                 	db	192
  3179  00717B  7F                 	db	127
  3180  00717C  00                 	db	0
  3181  00717D  00                 	db	0
  3182  00717E  00                 	db	0
  3183  00717F  00                 	db	0
  3184  007180  00                 	db	0
  3185  007181  00                 	db	0
  3186  007182  F8                 	db	248
  3187  007183  FF                 	db	255
  3188  007184  03                 	db	3
  3189  007185  00                 	db	0
  3190  007186  00                 	db	0
  3191  007187  00                 	db	0
  3192  007188  00                 	db	0
  3193  007189  00                 	db	0
  3194  00718A  FE                 	db	254
  3195  00718B  FF                 	db	255
  3196  00718C  0F                 	db	15
  3197  00718D  00                 	db	0
  3198  00718E  00                 	db	0
  3199  00718F  00                 	db	0
  3200  007190  00                 	db	0
  3201  007191  00                 	db	0
  3202  007192  FF                 	db	255
  3203  007193  FF                 	db	255
  3204  007194  1F                 	db	31
  3205  007195  00                 	db	0
  3206  007196  00                 	db	0
  3207  007197  00                 	db	0
  3208  007198  00                 	db	0
  3209  007199  C0                 	db	192
  3210  00719A  FF                 	db	255
  3211  00719B  FF                 	db	255
  3212  00719C  3F                 	db	63
  3213  00719D  00                 	db	0
  3214  00719E  00                 	db	0
  3215  00719F  00                 	db	0
  3216  0071A0  00                 	db	0
  3217  0071A1  E0                 	db	224
  3218  0071A2  FF                 	db	255
  3219  0071A3  FF                 	db	255
  3220  0071A4  7F                 	db	127
  3221  0071A5  00                 	db	0
  3222  0071A6  00                 	db	0
  3223  0071A7  00                 	db	0
  3224  0071A8  00                 	db	0
  3225  0071A9  F0                 	db	240
  3226  0071AA  3F                 	db	63
  3227  0071AB  C0                 	db	192
  3228  0071AC  FF                 	db	255
  3229  0071AD  00                 	db	0
  3230  0071AE  00                 	db	0
  3231  0071AF  00                 	db	0
  3232  0071B0  00                 	db	0
  3233  0071B1  F0                 	db	240
  3234  0071B2  0F                 	db	15
  3235  0071B3  00                 	db	0
  3236  0071B4  FF                 	db	255
  3237  0071B5  01                 	db	1
  3238  0071B6  00                 	db	0
  3239  0071B7  00                 	db	0
  3240  0071B8  18                 	db	24
  3241  0071B9  F8                 	db	248
  3242  0071BA  03                 	db	3
  3243  0071BB  00                 	db	0
  3244  0071BC  FC                 	db	252
  3245  0071BD  01                 	db	1
  3246  0071BE  00                 	db	0
  3247  0071BF  00                 	db	0
  3248  0071C0  1C                 	db	28
  3249  0071C1  FC                 	db	252
  3250  0071C2  01                 	db	1
  3251  0071C3  00                 	db	0
  3252  0071C4  F8                 	db	248
  3253  0071C5  03                 	db	3
  3254  0071C6  00                 	db	0
  3255  0071C7  00                 	db	0
  3256  0071C8  3F                 	db	63
  3257  0071C9  FC                 	db	252
  3258  0071CA  00                 	db	0
  3259  0071CB  00                 	db	0
  3260  0071CC  F0                 	db	240
  3261  0071CD  07                 	db	7
  3262  0071CE  00                 	db	0
  3263  0071CF  80                 	db	128
  3264  0071D0  3F                 	db	63
  3265  0071D1  7C                 	db	124
  3266  0071D2  00                 	db	0
  3267  0071D3  00                 	db	0
  3268  0071D4  E0                 	db	224
  3269  0071D5  07                 	db	7
  3270  0071D6  00                 	db	0
  3271  0071D7  C0                 	db	192
  3272  0071D8  7F                 	db	127
  3273  0071D9  7E                 	db	126
  3274  0071DA  00                 	db	0
  3275  0071DB  00                 	db	0
  3276  0071DC  E0                 	db	224
  3277  0071DD  07                 	db	7
  3278  0071DE  00                 	db	0
  3279  0071DF  F0                 	db	240
  3280  0071E0  3F                 	db	63
  3281  0071E1  3E                 	db	62
  3282  0071E2  00                 	db	0
  3283  0071E3  00                 	db	0
  3284  0071E4  C0                 	db	192
  3285  0071E5  0F                 	db	15
  3286  0071E6  00                 	db	0
  3287  0071E7  F8                 	db	248
  3288  0071E8  1F                 	db	31
  3289  0071E9  3E                 	db	62
  3290  0071EA  00                 	db	0
  3291  0071EB  00                 	db	0
  3292  0071EC  C0                 	db	192
  3293  0071ED  0F                 	db	15
  3294  0071EE  00                 	db	0
  3295  0071EF  FE                 	db	254
  3296  0071F0  07                 	db	7
  3297  0071F1  1F                 	db	31
  3298  0071F2  00                 	db	0
  3299  0071F3  00                 	db	0
  3300  0071F4  C0                 	db	192
  3301  0071F5  0F                 	db	15
  3302  0071F6  00                 	db	0
  3303  0071F7  FF                 	db	255
  3304  0071F8  03                 	db	3
  3305  0071F9  1F                 	db	31
  3306  0071FA  00                 	db	0
  3307  0071FB  00                 	db	0
  3308  0071FC  80                 	db	128
  3309  0071FD  0F                 	db	15
  3310  0071FE  C0                 	db	192
  3311  0071FF  FF                 	db	255
  3312  007200  01                 	db	1
  3313  007201  1F                 	db	31
  3314  007202  00                 	db	0
  3315  007203  00                 	db	0
  3316  007204  80                 	db	128
  3317  007205  0F                 	db	15
  3318  007206  E0                 	db	224
  3319  007207  7F                 	db	127
  3320  007208  00                 	db	0
  3321  007209  1F                 	db	31
  3322  00720A  00                 	db	0
  3323  00720B  00                 	db	0
  3324  00720C  80                 	db	128
  3325  00720D  0F                 	db	15
  3326  00720E  F0                 	db	240
  3327  00720F  3F                 	db	63
  3328  007210  00                 	db	0
  3329  007211  1F                 	db	31
  3330  007212  00                 	db	0
  3331  007213  00                 	db	0
  3332  007214  80                 	db	128
  3333  007215  0F                 	db	15
  3334  007216  FC                 	db	252
  3335  007217  0F                 	db	15
  3336  007218  00                 	db	0
  3337  007219  1F                 	db	31
  3338  00721A  00                 	db	0
  3339  00721B  00                 	db	0
  3340  00721C  80                 	db	128
  3341  00721D  0F                 	db	15
  3342  00721E  FE                 	db	254
  3343  00721F  07                 	db	7
  3344  007220  00                 	db	0
  3345  007221  1F                 	db	31
  3346  007222  00                 	db	0
  3347  007223  00                 	db	0
  3348  007224  80                 	db	128
  3349  007225  8F                 	db	143
  3350  007226  FF                 	db	255
  3351  007227  01                 	db	1
  3352  007228  00                 	db	0
  3353  007229  1F                 	db	31
  3354  00722A  00                 	db	0
  3355  00722B  00                 	db	0
  3356  00722C  80                 	db	128
  3357  00722D  CF                 	db	207
  3358  00722E  FF                 	db	255
  3359  00722F  00                 	db	0
  3360  007230  00                 	db	0
  3361  007231  3F                 	db	63
  3362  007232  00                 	db	0
  3363  007233  00                 	db	0
  3364  007234  C0                 	db	192
  3365  007235  F7                 	db	247
  3366  007236  7F                 	db	127
  3367  007237  00                 	db	0
  3368  007238  00                 	db	0
  3369  007239  3E                 	db	62
  3370  00723A  00                 	db	0
  3371  00723B  00                 	db	0
  3372  00723C  C0                 	db	192
  3373  00723D  FF                 	db	255
  3374  00723E  1F                 	db	31
  3375  00723F  00                 	db	0
  3376  007240  00                 	db	0
  3377  007241  7E                 	db	126
  3378  007242  00                 	db	0
  3379  007243  00                 	db	0
  3380  007244  E0                 	db	224
  3381  007245  FF                 	db	255
  3382  007246  0F                 	db	15
  3383  007247  00                 	db	0
  3384  007248  00                 	db	0
  3385  007249  7E                 	db	126
  3386  00724A  00                 	db	0
  3387  00724B  00                 	db	0
  3388  00724C  E0                 	db	224
  3389  00724D  FF                 	db	255
  3390  00724E  03                 	db	3
  3391  00724F  00                 	db	0
  3392  007250  00                 	db	0
  3393  007251  FC                 	db	252
  3394  007252  00                 	db	0
  3395  007253  00                 	db	0
  3396  007254  F0                 	db	240
  3397  007255  FF                 	db	255
  3398  007256  01                 	db	1
  3399  007257  00                 	db	0
  3400  007258  00                 	db	0
  3401  007259  FC                 	db	252
  3402  00725A  01                 	db	1
  3403  00725B  00                 	db	0
  3404  00725C  F8                 	db	248
  3405  00725D  7F                 	db	127
  3406  00725E  00                 	db	0
  3407  00725F  00                 	db	0
  3408  007260  00                 	db	0
  3409  007261  F8                 	db	248
  3410  007262  03                 	db	3
  3411  007263  00                 	db	0
  3412  007264  FC                 	db	252
  3413  007265  3F                 	db	63
  3414  007266  00                 	db	0
  3415  007267  00                 	db	0
  3416  007268  00                 	db	0
  3417  007269  F0                 	db	240
  3418  00726A  0F                 	db	15
  3419  00726B  00                 	db	0
  3420  00726C  FF                 	db	255
  3421  00726D  1F                 	db	31
  3422  00726E  00                 	db	0
  3423  00726F  00                 	db	0
  3424  007270  00                 	db	0
  3425  007271  F0                 	db	240
  3426  007272  3F                 	db	63
  3427  007273  C0                 	db	192
  3428  007274  FF                 	db	255
  3429  007275  07                 	db	7
  3430  007276  00                 	db	0
  3431  007277  00                 	db	0
  3432  007278  00                 	db	0
  3433  007279  E0                 	db	224
  3434  00727A  FF                 	db	255
  3435  00727B  FF                 	db	255
  3436  00727C  FF                 	db	255
  3437  00727D  03                 	db	3
  3438  00727E  00                 	db	0
  3439  00727F  00                 	db	0
  3440  007280  00                 	db	0
  3441  007281  C0                 	db	192
  3442  007282  FF                 	db	255
  3443  007283  FF                 	db	255
  3444  007284  FF                 	db	255
  3445  007285  00                 	db	0
  3446  007286  00                 	db	0
  3447  007287  00                 	db	0
  3448  007288  00                 	db	0
  3449  007289  00                 	db	0
  3450  00728A  FF                 	db	255
  3451  00728B  FF                 	db	255
  3452  00728C  3F                 	db	63
  3453  00728D  00                 	db	0
  3454  00728E  00                 	db	0
  3455  00728F  00                 	db	0
  3456  007290  00                 	db	0
  3457  007291  00                 	db	0
  3458  007292  FE                 	db	254
  3459  007293  FF                 	db	255
  3460  007294  0F                 	db	15
  3461  007295  00                 	db	0
  3462  007296  00                 	db	0
  3463  007297  00                 	db	0
  3464  007298  00                 	db	0
  3465  007299  00                 	db	0
  3466  00729A  F8                 	db	248
  3467  00729B  FF                 	db	255
  3468  00729C  03                 	db	3
  3469  00729D  00                 	db	0
  3470  00729E  00                 	db	0
  3471  00729F  00                 	db	0
  3472  0072A0  00                 	db	0
  3473  0072A1  00                 	db	0
  3474  0072A2  C0                 	db	192
  3475  0072A3  7F                 	db	127
  3476  0072A4  00                 	db	0
  3477  0072A5  00                 	db	0
  3478  0072A6  00                 	db	0
  3479  0072A7  00                 	db	0
  3480  0072A8  00                 	db	0
  3481  0072A9  00                 	db	0
  3482  0072AA  00                 	db	0
  3483  0072AB  00                 	db	0
  3484  0072AC  00                 	db	0
  3485  0072AD  00                 	db	0
  3486  0072AE  00                 	db	0
  3487  0072AF  00                 	db	0
  3488  0072B0  00                 	db	0
  3489  0072B1  00                 	db	0
  3490  0072B2  00                 	db	0
  3491  0072B3  00                 	db	0
  3492  0072B4  00                 	db	0
  3493  0072B5  00                 	db	0
  3494  0072B6  00                 	db	0
  3495  0072B7  00                 	db	0
  3496  0072B8  00                 	db	0
  3497  0072B9  00                 	db	0
  3498  0072BA  00                 	db	0
  3499  0072BB  00                 	db	0
  3500  0072BC  00                 	db	0
  3501  0072BD  00                 	db	0
  3502  0072BE  00                 	db	0
  3503  0072BF  00                 	db	0
  3504  0072C0  00                 	db	0
  3505  0072C1  00                 	db	0
  3506  0072C2  00                 	db	0
  3507  0072C3  00                 	db	0
  3508  0072C4  00                 	db	0
  3509  0072C5  00                 	db	0
  3510  0072C6  00                 	db	0
  3511  0072C7  00                 	db	0
  3512  0072C8  00                 	db	0
  3513  0072C9                     __end_of_bigNumbers:
  3514                           	callstack 0
  3515  0072C9                     _font:
  3516                           	callstack 0
  3517  0072C9  04                 	db	4
  3518  0072CA  00                 	db	0
  3519  0072CB  00                 	db	0
  3520  0072CC  00                 	db	0
  3521  0072CD  00                 	db	0
  3522  0072CE  00                 	db	0
  3523  0072CF  00                 	db	0
  3524  0072D0  00                 	db	0
  3525  0072D1  00                 	db	0
  3526  0072D2  03                 	db	3
  3527  0072D3  00                 	db	0
  3528  0072D4  00                 	db	0
  3529  0072D5  FE                 	db	254
  3530  0072D6  1B                 	db	27
  3531  0072D7  00                 	db	0
  3532  0072D8  00                 	db	0
  3533  0072D9  05                 	db	5
  3534  0072DA  1E                 	db	30
  3535  0072DB  00                 	db	0
  3536  0072DC  00                 	db	0
  3537  0072DD  00                 	db	0
  3538  0072DE  00                 	db	0
  3539  0072DF  00                 	db	0
  3540  0072E0  1E                 	db	30
  3541  0072E1  00                 	db	0
  3542  0072E2  00                 	db	0
  3543  0072E3  00                 	db	0
  3544  0072E4  0B                 	db	11
  3545  0072E5  00                 	db	0
  3546  0072E6  00                 	db	0
  3547  0072E7  10                 	db	16
  3548  0072E8  01                 	db	1
  3549  0072E9  10                 	db	16
  3550  0072EA  1D                 	db	29
  3551  0072EB  F0                 	db	240
  3552  0072EC  03                 	db	3
  3553  0072ED  1E                 	db	30
  3554  0072EE  01                 	db	1
  3555  0072EF  10                 	db	16
  3556  0072F0  01                 	db	1
  3557  0072F1  10                 	db	16
  3558  0072F2  1D                 	db	29
  3559  0072F3  F0                 	db	240
  3560  0072F4  03                 	db	3
  3561  0072F5  1E                 	db	30
  3562  0072F6  01                 	db	1
  3563  0072F7  10                 	db	16
  3564  0072F8  01                 	db	1
  3565  0072F9  00                 	db	0
  3566  0072FA  00                 	db	0
  3567  0072FB  09                 	db	9
  3568  0072FC  00                 	db	0
  3569  0072FD  04                 	db	4
  3570  0072FE  1C                 	db	28
  3571  0072FF  08                 	db	8
  3572  007300  22                 	db	34
  3573  007301  10                 	db	16
  3574  007302  42                 	db	66
  3575  007303  10                 	db	16
  3576  007304  FF                 	db	255
  3577  007305  7F                 	db	127
  3578  007306  42                 	db	66
  3579  007307  10                 	db	16
  3580  007308  84                 	db	132
  3581  007309  10                 	db	16
  3582  00730A  00                 	db	0
  3583  00730B  0F                 	db	15
  3584  00730C  00                 	db	0
  3585  00730D  00                 	db	0
  3586  00730E  0C                 	db	12
  3587  00730F  1C                 	db	28
  3588  007310  00                 	db	0
  3589  007311  22                 	db	34
  3590  007312  10                 	db	16
  3591  007313  22                 	db	34
  3592  007314  08                 	db	8
  3593  007315  22                 	db	34
  3594  007316  06                 	db	6
  3595  007317  1C                 	db	28
  3596  007318  01                 	db	1
  3597  007319  C0                 	db	192
  3598  00731A  00                 	db	0
  3599  00731B  20                 	db	32
  3600  00731C  0E                 	db	14
  3601  00731D  18                 	db	24
  3602  00731E  11                 	db	17
  3603  00731F  04                 	db	4
  3604  007320  11                 	db	17
  3605  007321  02                 	db	2
  3606  007322  11                 	db	17
  3607  007323  00                 	db	0
  3608  007324  0E                 	db	14
  3609  007325  00                 	db	0
  3610  007326  00                 	db	0
  3611  007327  0B                 	db	11
  3612  007328  00                 	db	0
  3613  007329  00                 	db	0
  3614  00732A  00                 	db	0
  3615  00732B  0E                 	db	14
  3616  00732C  1C                 	db	28
  3617  00732D  11                 	db	17
  3618  00732E  A2                 	db	162
  3619  00732F  10                 	db	16
  3620  007330  C2                 	db	194
  3621  007331  10                 	db	16
  3622  007332  22                 	db	34
  3623  007333  11                 	db	17
  3624  007334  1C                 	db	28
  3625  007335  0A                 	db	10
  3626  007336  00                 	db	0
  3627  007337  0C                 	db	12
  3628  007338  00                 	db	0
  3629  007339  0C                 	db	12
  3630  00733A  00                 	db	0
  3631  00733B  12                 	db	18
  3632  00733C  00                 	db	0
  3633  00733D  00                 	db	0
  3634  00733E  03                 	db	3
  3635  00733F  00                 	db	0
  3636  007340  00                 	db	0
  3637  007341  1E                 	db	30
  3638  007342  00                 	db	0
  3639  007343  00                 	db	0
  3640  007344  00                 	db	0
  3641  007345  06                 	db	6
  3642  007346  00                 	db	0
  3643  007347  00                 	db	0
  3644  007348  00                 	db	0
  3645  007349  00                 	db	0
  3646  00734A  E0                 	db	224
  3647  00734B  1F                 	db	31
  3648  00734C  1C                 	db	28
  3649  00734D  60                 	db	96
  3650  00734E  02                 	db	2
  3651  00734F  80                 	db	128
  3652  007350  00                 	db	0
  3653  007351  00                 	db	0
  3654  007352  04                 	db	4
  3655  007353  00                 	db	0
  3656  007354  00                 	db	0
  3657  007355  06                 	db	6
  3658  007356  C0                 	db	192
  3659  007357  F8                 	db	248
  3660  007358  3F                 	db	63
  3661  007359  00                 	db	0
  3662  00735A  00                 	db	0
  3663  00735B  06                 	db	6
  3664  00735C  24                 	db	36
  3665  00735D  00                 	db	0
  3666  00735E  18                 	db	24
  3667  00735F  00                 	db	0
  3668  007360  7E                 	db	126
  3669  007361  00                 	db	0
  3670  007362  18                 	db	24
  3671  007363  00                 	db	0
  3672  007364  24                 	db	36
  3673  007365  00                 	db	0
  3674  007366  00                 	db	0
  3675  007367  00                 	db	0
  3676  007368  09                 	db	9
  3677  007369  00                 	db	0
  3678  00736A  00                 	db	0
  3679  00736B  80                 	db	128
  3680  00736C  00                 	db	0
  3681  00736D  80                 	db	128
  3682  00736E  00                 	db	0
  3683  00736F  80                 	db	128
  3684  007370  00                 	db	0
  3685  007371  F0                 	db	240
  3686  007372  07                 	db	7
  3687  007373  80                 	db	128
  3688  007374  00                 	db	0
  3689  007375  80                 	db	128
  3690  007376  00                 	db	0
  3691  007377  80                 	db	128
  3692  007378  00                 	db	0
  3693  007379  00                 	db	0
  3694  00737A  00                 	db	0
  3695  00737B  04                 	db	4
  3696  00737C  00                 	db	0
  3697  00737D  00                 	db	0
  3698  00737E  00                 	db	0
  3699  00737F  60                 	db	96
  3700  007380  00                 	db	0
  3701  007381  18                 	db	24
  3702  007382  00                 	db	0
  3703  007383  00                 	db	0
  3704  007384  05                 	db	5
  3705  007385  00                 	db	0
  3706  007386  01                 	db	1
  3707  007387  00                 	db	0
  3708  007388  01                 	db	1
  3709  007389  00                 	db	0
  3710  00738A  01                 	db	1
  3711  00738B  00                 	db	0
  3712  00738C  01                 	db	1
  3713  00738D  00                 	db	0
  3714  00738E  00                 	db	0
  3715  00738F  04                 	db	4
  3716  007390  00                 	db	0
  3717  007391  00                 	db	0
  3718  007392  00                 	db	0
  3719  007393  18                 	db	24
  3720  007394  00                 	db	0
  3721  007395  18                 	db	24
  3722  007396  00                 	db	0
  3723  007397  00                 	db	0
  3724  007398  08                 	db	8
  3725  007399  00                 	db	0
  3726  00739A  00                 	db	0
  3727  00739B  00                 	db	0
  3728  00739C  40                 	db	64
  3729  00739D  00                 	db	0
  3730  00739E  38                 	db	56
  3731  00739F  00                 	db	0
  3732  0073A0  07                 	db	7
  3733  0073A1  E0                 	db	224
  3734  0073A2  00                 	db	0
  3735  0073A3  1C                 	db	28
  3736  0073A4  00                 	db	0
  3737  0073A5  02                 	db	2
  3738  0073A6  00                 	db	0
  3739  0073A7  00                 	db	0
  3740  0073A8  00                 	db	0
  3741  0073A9  09                 	db	9
  3742  0073AA  F8                 	db	248
  3743  0073AB  07                 	db	7
  3744  0073AC  04                 	db	4
  3745  0073AD  08                 	db	8
  3746  0073AE  02                 	db	2
  3747  0073AF  10                 	db	16
  3748  0073B0  02                 	db	2
  3749  0073B1  10                 	db	16
  3750  0073B2  02                 	db	2
  3751  0073B3  10                 	db	16
  3752  0073B4  02                 	db	2
  3753  0073B5  10                 	db	16
  3754  0073B6  04                 	db	4
  3755  0073B7  08                 	db	8
  3756  0073B8  F8                 	db	248
  3757  0073B9  07                 	db	7
  3758  0073BA  00                 	db	0
  3759  0073BB  00                 	db	0
  3760  0073BC  06                 	db	6
  3761  0073BD  00                 	db	0
  3762  0073BE  00                 	db	0
  3763  0073BF  00                 	db	0
  3764  0073C0  00                 	db	0
  3765  0073C1  02                 	db	2
  3766  0073C2  00                 	db	0
  3767  0073C3  02                 	db	2
  3768  0073C4  00                 	db	0
  3769  0073C5  FE                 	db	254
  3770  0073C6  1F                 	db	31
  3771  0073C7  00                 	db	0
  3772  0073C8  00                 	db	0
  3773  0073C9  09                 	db	9
  3774  0073CA  18                 	db	24
  3775  0073CB  10                 	db	16
  3776  0073CC  04                 	db	4
  3777  0073CD  18                 	db	24
  3778  0073CE  02                 	db	2
  3779  0073CF  14                 	db	20
  3780  0073D0  02                 	db	2
  3781  0073D1  12                 	db	18
  3782  0073D2  02                 	db	2
  3783  0073D3  11                 	db	17
  3784  0073D4  82                 	db	130
  3785  0073D5  10                 	db	16
  3786  0073D6  44                 	db	68
  3787  0073D7  10                 	db	16
  3788  0073D8  38                 	db	56
  3789  0073D9  10                 	db	16
  3790  0073DA  00                 	db	0
  3791  0073DB  00                 	db	0
  3792  0073DC  09                 	db	9
  3793  0073DD  08                 	db	8
  3794  0073DE  0C                 	db	12
  3795  0073DF  04                 	db	4
  3796  0073E0  10                 	db	16
  3797  0073E1  02                 	db	2
  3798  0073E2  10                 	db	16
  3799  0073E3  42                 	db	66
  3800  0073E4  10                 	db	16
  3801  0073E5  42                 	db	66
  3802  0073E6  10                 	db	16
  3803  0073E7  44                 	db	68
  3804  0073E8  10                 	db	16
  3805  0073E9  B8                 	db	184
  3806  0073EA  08                 	db	8
  3807  0073EB  00                 	db	0
  3808  0073EC  07                 	db	7
  3809  0073ED  00                 	db	0
  3810  0073EE  00                 	db	0
  3811  0073EF  09                 	db	9
  3812  0073F0  00                 	db	0
  3813  0073F1  02                 	db	2
  3814  0073F2  00                 	db	0
  3815  0073F3  03                 	db	3
  3816  0073F4  80                 	db	128
  3817  0073F5  02                 	db	2
  3818  0073F6  60                 	db	96
  3819  0073F7  02                 	db	2
  3820  0073F8  10                 	db	16
  3821  0073F9  02                 	db	2
  3822  0073FA  08                 	db	8
  3823  0073FB  02                 	db	2
  3824  0073FC  FE                 	db	254
  3825  0073FD  1F                 	db	31
  3826  0073FE  00                 	db	0
  3827  0073FF  02                 	db	2
  3828  007400  00                 	db	0
  3829  007401  00                 	db	0
  3830  007402  09                 	db	9
  3831  007403  00                 	db	0
  3832  007404  04                 	db	4
  3833  007405  70                 	db	112
  3834  007406  08                 	db	8
  3835  007407  2E                 	db	46
  3836  007408  10                 	db	16
  3837  007409  22                 	db	34
  3838  00740A  10                 	db	16
  3839  00740B  22                 	db	34
  3840  00740C  10                 	db	16
  3841  00740D  22                 	db	34
  3842  00740E  10                 	db	16
  3843  00740F  42                 	db	66
  3844  007410  08                 	db	8
  3845  007411  82                 	db	130
  3846  007412  07                 	db	7
  3847  007413  00                 	db	0
  3848  007414  00                 	db	0
  3849  007415  09                 	db	9
  3850  007416  00                 	db	0
  3851  007417  00                 	db	0
  3852  007418  00                 	db	0
  3853  007419  07                 	db	7
  3854  00741A  C0                 	db	192
  3855  00741B  08                 	db	8
  3856  00741C  60                 	db	96
  3857  00741D  10                 	db	16
  3858  00741E  58                 	db	88
  3859  00741F  10                 	db	16
  3860  007420  44                 	db	68
  3861  007421  10                 	db	16
  3862  007422  82                 	db	130
  3863  007423  08                 	db	8
  3864  007424  00                 	db	0
  3865  007425  07                 	db	7
  3866  007426  00                 	db	0
  3867  007427  00                 	db	0
  3868  007428  09                 	db	9
  3869  007429  00                 	db	0
  3870  00742A  00                 	db	0
  3871  00742B  02                 	db	2
  3872  00742C  10                 	db	16
  3873  00742D  02                 	db	2
  3874  00742E  0C                 	db	12
  3875  00742F  02                 	db	2
  3876  007430  03                 	db	3
  3877  007431  C2                 	db	194
  3878  007432  00                 	db	0
  3879  007433  32                 	db	50
  3880  007434  00                 	db	0
  3881  007435  0E                 	db	14
  3882  007436  00                 	db	0
  3883  007437  02                 	db	2
  3884  007438  00                 	db	0
  3885  007439  00                 	db	0
  3886  00743A  00                 	db	0
  3887  00743B  09                 	db	9
  3888  00743C  00                 	db	0
  3889  00743D  07                 	db	7
  3890  00743E  98                 	db	152
  3891  00743F  08                 	db	8
  3892  007440  64                 	db	100
  3893  007441  10                 	db	16
  3894  007442  42                 	db	66
  3895  007443  10                 	db	16
  3896  007444  42                 	db	66
  3897  007445  10                 	db	16
  3898  007446  64                 	db	100
  3899  007447  10                 	db	16
  3900  007448  98                 	db	152
  3901  007449  08                 	db	8
  3902  00744A  00                 	db	0
  3903  00744B  07                 	db	7
  3904  00744C  00                 	db	0
  3905  00744D  00                 	db	0
  3906  00744E  09                 	db	9
  3907  00744F  00                 	db	0
  3908  007450  00                 	db	0
  3909  007451  38                 	db	56
  3910  007452  00                 	db	0
  3911  007453  44                 	db	68
  3912  007454  10                 	db	16
  3913  007455  82                 	db	130
  3914  007456  08                 	db	8
  3915  007457  82                 	db	130
  3916  007458  04                 	db	4
  3917  007459  82                 	db	130
  3918  00745A  03                 	db	3
  3919  00745B  84                 	db	132
  3920  00745C  00                 	db	0
  3921  00745D  78                 	db	120
  3922  00745E  00                 	db	0
  3923  00745F  00                 	db	0
  3924  007460  00                 	db	0
  3925  007461  04                 	db	4
  3926  007462  00                 	db	0
  3927  007463  00                 	db	0
  3928  007464  30                 	db	48
  3929  007465  18                 	db	24
  3930  007466  30                 	db	48
  3931  007467  18                 	db	24
  3932  007468  00                 	db	0
  3933  007469  00                 	db	0
  3934  00746A  04                 	db	4
  3935  00746B  00                 	db	0
  3936  00746C  00                 	db	0
  3937  00746D  30                 	db	48
  3938  00746E  60                 	db	96
  3939  00746F  30                 	db	48
  3940  007470  18                 	db	24
  3941  007471  00                 	db	0
  3942  007472  00                 	db	0
  3943  007473  0A                 	db	10
  3944  007474  00                 	db	0
  3945  007475  00                 	db	0
  3946  007476  80                 	db	128
  3947  007477  00                 	db	0
  3948  007478  80                 	db	128
  3949  007479  00                 	db	0
  3950  00747A  40                 	db	64
  3951  00747B  01                 	db	1
  3952  00747C  20                 	db	32
  3953  00747D  02                 	db	2
  3954  00747E  20                 	db	32
  3955  00747F  02                 	db	2
  3956  007480  10                 	db	16
  3957  007481  04                 	db	4
  3958  007482  10                 	db	16
  3959  007483  04                 	db	4
  3960  007484  08                 	db	8
  3961  007485  08                 	db	8
  3962  007486  00                 	db	0
  3963  007487  00                 	db	0
  3964  007488  0A                 	db	10
  3965  007489  00                 	db	0
  3966  00748A  00                 	db	0
  3967  00748B  20                 	db	32
  3968  00748C  01                 	db	1
  3969  00748D  20                 	db	32
  3970  00748E  01                 	db	1
  3971  00748F  20                 	db	32
  3972  007490  01                 	db	1
  3973  007491  20                 	db	32
  3974  007492  01                 	db	1
  3975  007493  20                 	db	32
  3976  007494  01                 	db	1
  3977  007495  20                 	db	32
  3978  007496  01                 	db	1
  3979  007497  20                 	db	32
  3980  007498  01                 	db	1
  3981  007499  20                 	db	32
  3982  00749A  01                 	db	1
  3983  00749B  00                 	db	0
  3984  00749C  00                 	db	0
  3985  00749D  0A                 	db	10
  3986  00749E  00                 	db	0
  3987  00749F  00                 	db	0
  3988  0074A0  08                 	db	8
  3989  0074A1  08                 	db	8
  3990  0074A2  10                 	db	16
  3991  0074A3  04                 	db	4
  3992  0074A4  10                 	db	16
  3993  0074A5  04                 	db	4
  3994  0074A6  20                 	db	32
  3995  0074A7  02                 	db	2
  3996  0074A8  20                 	db	32
  3997  0074A9  02                 	db	2
  3998  0074AA  40                 	db	64
  3999  0074AB  01                 	db	1
  4000  0074AC  80                 	db	128
  4001  0074AD  00                 	db	0
  4002  0074AE  80                 	db	128
  4003  0074AF  00                 	db	0
  4004  0074B0  00                 	db	0
  4005  0074B1  00                 	db	0
  4006  0074B2  08                 	db	8
  4007  0074B3  00                 	db	0
  4008  0074B4  00                 	db	0
  4009  0074B5  0C                 	db	12
  4010  0074B6  00                 	db	0
  4011  0074B7  82                 	db	130
  4012  0074B8  01                 	db	1
  4013  0074B9  42                 	db	66
  4014  0074BA  02                 	db	2
  4015  0074BB  22                 	db	34
  4016  0074BC  1A                 	db	26
  4017  0074BD  22                 	db	34
  4018  0074BE  1A                 	db	26
  4019  0074BF  9C                 	db	156
  4020  0074C0  01                 	db	1
  4021  0074C1  00                 	db	0
  4022  0074C2  00                 	db	0
  4023  0074C3  0E                 	db	14
  4024  0074C4  00                 	db	0
  4025  0074C5  00                 	db	0
  4026  0074C6  F0                 	db	240
  4027  0074C7  03                 	db	3
  4028  0074C8  08                 	db	8
  4029  0074C9  04                 	db	4
  4030  0074CA  04                 	db	4
  4031  0074CB  08                 	db	8
  4032  0074CC  C2                 	db	194
  4033  0074CD  11                 	db	17
  4034  0074CE  22                 	db	34
  4035  0074CF  12                 	db	18
  4036  0074D0  12                 	db	18
  4037  0074D1  12                 	db	18
  4038  0074D2  12                 	db	18
  4039  0074D3  12                 	db	18
  4040  0074D4  E2                 	db	226
  4041  0074D5  11                 	db	17
  4042  0074D6  12                 	db	18
  4043  0074D7  12                 	db	18
  4044  0074D8  04                 	db	4
  4045  0074D9  12                 	db	18
  4046  0074DA  08                 	db	8
  4047  0074DB  09                 	db	9
  4048  0074DC  F0                 	db	240
  4049  0074DD  04                 	db	4
  4050  0074DE  00                 	db	0
  4051  0074DF  00                 	db	0
  4052  0074E0  0D                 	db	13
  4053  0074E1  00                 	db	0
  4054  0074E2  00                 	db	0
  4055  0074E3  00                 	db	0
  4056  0074E4  10                 	db	16
  4057  0074E5  00                 	db	0
  4058  0074E6  0E                 	db	14
  4059  0074E7  80                 	db	128
  4060  0074E8  01                 	db	1
  4061  0074E9  60                 	db	96
  4062  0074EA  01                 	db	1
  4063  0074EB  1C                 	db	28
  4064  0074EC  01                 	db	1
  4065  0074ED  02                 	db	2
  4066  0074EE  01                 	db	1
  4067  0074EF  1C                 	db	28
  4068  0074F0  01                 	db	1
  4069  0074F1  60                 	db	96
  4070  0074F2  01                 	db	1
  4071  0074F3  80                 	db	128
  4072  0074F4  01                 	db	1
  4073  0074F5  00                 	db	0
  4074  0074F6  0E                 	db	14
  4075  0074F7  00                 	db	0
  4076  0074F8  10                 	db	16
  4077  0074F9  00                 	db	0
  4078  0074FA  00                 	db	0
  4079  0074FB  09                 	db	9
  4080  0074FC  00                 	db	0
  4081  0074FD  00                 	db	0
  4082  0074FE  00                 	db	0
  4083  0074FF  00                 	db	0
  4084  007500  FE                 	db	254
  4085  007501  1F                 	db	31
  4086  007502  42                 	db	66
  4087  007503  10                 	db	16
  4088  007504  42                 	db	66
  4089  007505  10                 	db	16
  4090  007506  64                 	db	100
  4091  007507  10                 	db	16
  4092  007508  98                 	db	152
  4093  007509  08                 	db	8
  4094  00750A  00                 	db	0
  4095  00750B  07                 	db	7
  4096  00750C  00                 	db	0
  4097  00750D  00                 	db	0
  4098  00750E  0D                 	db	13
  4099  00750F  00                 	db	0
  4100  007510  00                 	db	0
  4101  007511  F0                 	db	240
  4102  007512  03                 	db	3
  4103  007513  08                 	db	8
  4104  007514  04                 	db	4
  4105  007515  04                 	db	4
  4106  007516  08                 	db	8
  4107  007517  02                 	db	2
  4108  007518  10                 	db	16
  4109  007519  02                 	db	2
  4110  00751A  10                 	db	16
  4111  00751B  02                 	db	2
  4112  00751C  10                 	db	16
  4113  00751D  02                 	db	2
  4114  00751E  10                 	db	16
  4115  00751F  02                 	db	2
  4116  007520  10                 	db	16
  4117  007521  04                 	db	4
  4118  007522  08                 	db	8
  4119  007523  04                 	db	4
  4120  007524  08                 	db	8
  4121  007525  08                 	db	8
  4122  007526  04                 	db	4
  4123  007527  00                 	db	0
  4124  007528  00                 	db	0
  4125  007529  0C                 	db	12
  4126  00752A  00                 	db	0
  4127  00752B  00                 	db	0
  4128  00752C  00                 	db	0
  4129  00752D  00                 	db	0
  4130  00752E  FE                 	db	254
  4131  00752F  1F                 	db	31
  4132  007530  02                 	db	2
  4133  007531  10                 	db	16
  4134  007532  02                 	db	2
  4135  007533  10                 	db	16
  4136  007534  02                 	db	2
  4137  007535  10                 	db	16
  4138  007536  02                 	db	2
  4139  007537  10                 	db	16
  4140  007538  02                 	db	2
  4141  007539  10                 	db	16
  4142  00753A  04                 	db	4
  4143  00753B  08                 	db	8
  4144  00753C  08                 	db	8
  4145  00753D  04                 	db	4
  4146  00753E  F0                 	db	240
  4147  00753F  03                 	db	3
  4148  007540  00                 	db	0
  4149  007541  00                 	db	0
  4150  007542  09                 	db	9
  4151  007543  00                 	db	0
  4152  007544  00                 	db	0
  4153  007545  00                 	db	0
  4154  007546  00                 	db	0
  4155  007547  FE                 	db	254
  4156  007548  1F                 	db	31
  4157  007549  42                 	db	66
  4158  00754A  10                 	db	16
  4159  00754B  42                 	db	66
  4160  00754C  10                 	db	16
  4161  00754D  42                 	db	66
  4162  00754E  10                 	db	16
  4163  00754F  42                 	db	66
  4164  007550  10                 	db	16
  4165  007551  42                 	db	66
  4166  007552  10                 	db	16
  4167  007553  00                 	db	0
  4168  007554  00                 	db	0
  4169  007555  08                 	db	8
  4170  007556  00                 	db	0
  4171  007557  00                 	db	0
  4172  007558  00                 	db	0
  4173  007559  00                 	db	0
  4174  00755A  FE                 	db	254
  4175  00755B  1F                 	db	31
  4176  00755C  42                 	db	66
  4177  00755D  00                 	db	0
  4178  00755E  42                 	db	66
  4179  00755F  00                 	db	0
  4180  007560  42                 	db	66
  4181  007561  00                 	db	0
  4182  007562  42                 	db	66
  4183  007563  00                 	db	0
  4184  007564  00                 	db	0
  4185  007565  00                 	db	0
  4186  007566  0E                 	db	14
  4187  007567  00                 	db	0
  4188  007568  00                 	db	0
  4189  007569  F0                 	db	240
  4190  00756A  03                 	db	3
  4191  00756B  08                 	db	8
  4192  00756C  04                 	db	4
  4193  00756D  04                 	db	4
  4194  00756E  08                 	db	8
  4195  00756F  02                 	db	2
  4196  007570  10                 	db	16
  4197  007571  02                 	db	2
  4198  007572  10                 	db	16
  4199  007573  02                 	db	2
  4200  007574  10                 	db	16
  4201  007575  02                 	db	2
  4202  007576  10                 	db	16
  4203  007577  82                 	db	130
  4204  007578  10                 	db	16
  4205  007579  84                 	db	132
  4206  00757A  10                 	db	16
  4207  00757B  84                 	db	132
  4208  00757C  08                 	db	8
  4209  00757D  88                 	db	136
  4210  00757E  04                 	db	4
  4211  00757F  80                 	db	128
  4212  007580  03                 	db	3
  4213  007581  00                 	db	0
  4214  007582  00                 	db	0
  4215  007583  0A                 	db	10
  4216  007584  00                 	db	0
  4217  007585  00                 	db	0
  4218  007586  00                 	db	0
  4219  007587  00                 	db	0
  4220  007588  FE                 	db	254
  4221  007589  1F                 	db	31
  4222  00758A  40                 	db	64
  4223  00758B  00                 	db	0
  4224  00758C  40                 	db	64
  4225  00758D  00                 	db	0
  4226  00758E  40                 	db	64
  4227  00758F  00                 	db	0
  4228  007590  40                 	db	64
  4229  007591  00                 	db	0
  4230  007592  40                 	db	64
  4231  007593  00                 	db	0
  4232  007594  FE                 	db	254
  4233  007595  1F                 	db	31
  4234  007596  00                 	db	0
  4235  007597  00                 	db	0
  4236  007598  04                 	db	4
  4237  007599  00                 	db	0
  4238  00759A  00                 	db	0
  4239  00759B  00                 	db	0
  4240  00759C  00                 	db	0
  4241  00759D  FE                 	db	254
  4242  00759E  1F                 	db	31
  4243  00759F  00                 	db	0
  4244  0075A0  00                 	db	0
  4245  0075A1  07                 	db	7
  4246  0075A2  00                 	db	0
  4247  0075A3  00                 	db	0
  4248  0075A4  00                 	db	0
  4249  0075A5  08                 	db	8
  4250  0075A6  00                 	db	0
  4251  0075A7  10                 	db	16
  4252  0075A8  00                 	db	0
  4253  0075A9  10                 	db	16
  4254  0075AA  00                 	db	0
  4255  0075AB  08                 	db	8
  4256  0075AC  FE                 	db	254
  4257  0075AD  07                 	db	7
  4258  0075AE  00                 	db	0
  4259  0075AF  00                 	db	0
  4260  0075B0  09                 	db	9
  4261  0075B1  00                 	db	0
  4262  0075B2  00                 	db	0
  4263  0075B3  00                 	db	0
  4264  0075B4  00                 	db	0
  4265  0075B5  FE                 	db	254
  4266  0075B6  1F                 	db	31
  4267  0075B7  60                 	db	96
  4268  0075B8  00                 	db	0
  4269  0075B9  90                 	db	144
  4270  0075BA  01                 	db	1
  4271  0075BB  08                 	db	8
  4272  0075BC  02                 	db	2
  4273  0075BD  04                 	db	4
  4274  0075BE  0C                 	db	12
  4275  0075BF  02                 	db	2
  4276  0075C0  10                 	db	16
  4277  0075C1  00                 	db	0
  4278  0075C2  00                 	db	0
  4279  0075C3  08                 	db	8
  4280  0075C4  00                 	db	0
  4281  0075C5  00                 	db	0
  4282  0075C6  00                 	db	0
  4283  0075C7  00                 	db	0
  4284  0075C8  FE                 	db	254
  4285  0075C9  1F                 	db	31
  4286  0075CA  00                 	db	0
  4287  0075CB  10                 	db	16
  4288  0075CC  00                 	db	0
  4289  0075CD  10                 	db	16
  4290  0075CE  00                 	db	0
  4291  0075CF  10                 	db	16
  4292  0075D0  00                 	db	0
  4293  0075D1  10                 	db	16
  4294  0075D2  00                 	db	0
  4295  0075D3  00                 	db	0
  4296  0075D4  0F                 	db	15
  4297  0075D5  00                 	db	0
  4298  0075D6  00                 	db	0
  4299  0075D7  00                 	db	0
  4300  0075D8  1C                 	db	28
  4301  0075D9  F8                 	db	248
  4302  0075DA  03                 	db	3
  4303  0075DB  06                 	db	6
  4304  0075DC  00                 	db	0
  4305  0075DD  38                 	db	56
  4306  0075DE  00                 	db	0
  4307  0075DF  C0                 	db	192
  4308  0075E0  01                 	db	1
  4309  0075E1  00                 	db	0
  4310  0075E2  0E                 	db	14
  4311  0075E3  00                 	db	0
  4312  0075E4  10                 	db	16
  4313  0075E5  00                 	db	0
  4314  0075E6  0E                 	db	14
  4315  0075E7  C0                 	db	192
  4316  0075E8  01                 	db	1
  4317  0075E9  38                 	db	56
  4318  0075EA  00                 	db	0
  4319  0075EB  06                 	db	6
  4320  0075EC  00                 	db	0
  4321  0075ED  F8                 	db	248
  4322  0075EE  03                 	db	3
  4323  0075EF  00                 	db	0
  4324  0075F0  1C                 	db	28
  4325  0075F1  00                 	db	0
  4326  0075F2  00                 	db	0
  4327  0075F3  0B                 	db	11
  4328  0075F4  00                 	db	0
  4329  0075F5  00                 	db	0
  4330  0075F6  00                 	db	0
  4331  0075F7  00                 	db	0
  4332  0075F8  FE                 	db	254
  4333  0075F9  1F                 	db	31
  4334  0075FA  08                 	db	8
  4335  0075FB  00                 	db	0
  4336  0075FC  30                 	db	48
  4337  0075FD  00                 	db	0
  4338  0075FE  40                 	db	64
  4339  0075FF  00                 	db	0
  4340  007600  80                 	db	128
  4341  007601  00                 	db	0
  4342  007602  00                 	db	0
  4343  007603  03                 	db	3
  4344  007604  00                 	db	0
  4345  007605  04                 	db	4
  4346  007606  FE                 	db	254
  4347  007607  1F                 	db	31
  4348  007608  00                 	db	0
  4349  007609  00                 	db	0
  4350  00760A  0E                 	db	14
  4351  00760B  00                 	db	0
  4352  00760C  00                 	db	0
  4353  00760D  F0                 	db	240
  4354  00760E  03                 	db	3
  4355  00760F  08                 	db	8
  4356  007610  04                 	db	4
  4357  007611  04                 	db	4
  4358  007612  08                 	db	8
  4359  007613  02                 	db	2
  4360  007614  10                 	db	16
  4361  007615  02                 	db	2
  4362  007616  10                 	db	16
  4363  007617  02                 	db	2
  4364  007618  10                 	db	16
  4365  007619  02                 	db	2
  4366  00761A  10                 	db	16
  4367  00761B  02                 	db	2
  4368  00761C  10                 	db	16
  4369  00761D  02                 	db	2
  4370  00761E  10                 	db	16
  4371  00761F  04                 	db	4
  4372  007620  08                 	db	8
  4373  007621  08                 	db	8
  4374  007622  04                 	db	4
  4375  007623  F0                 	db	240
  4376  007624  03                 	db	3
  4377  007625  00                 	db	0
  4378  007626  00                 	db	0
  4379  007627  09                 	db	9
  4380  007628  00                 	db	0
  4381  007629  00                 	db	0
  4382  00762A  00                 	db	0
  4383  00762B  00                 	db	0
  4384  00762C  FE                 	db	254
  4385  00762D  1F                 	db	31
  4386  00762E  42                 	db	66
  4387  00762F  00                 	db	0
  4388  007630  42                 	db	66
  4389  007631  00                 	db	0
  4390  007632  42                 	db	66
  4391  007633  00                 	db	0
  4392  007634  24                 	db	36
  4393  007635  00                 	db	0
  4394  007636  18                 	db	24
  4395  007637  00                 	db	0
  4396  007638  00                 	db	0
  4397  007639  00                 	db	0
  4398  00763A  0E                 	db	14
  4399  00763B  00                 	db	0
  4400  00763C  00                 	db	0
  4401  00763D  F0                 	db	240
  4402  00763E  03                 	db	3
  4403  00763F  08                 	db	8
  4404  007640  04                 	db	4
  4405  007641  04                 	db	4
  4406  007642  08                 	db	8
  4407  007643  02                 	db	2
  4408  007644  10                 	db	16
  4409  007645  02                 	db	2
  4410  007646  10                 	db	16
  4411  007647  02                 	db	2
  4412  007648  10                 	db	16
  4413  007649  02                 	db	2
  4414  00764A  11                 	db	17
  4415  00764B  02                 	db	2
  4416  00764C  12                 	db	18
  4417  00764D  02                 	db	2
  4418  00764E  0C                 	db	12
  4419  00764F  04                 	db	4
  4420  007650  08                 	db	8
  4421  007651  08                 	db	8
  4422  007652  16                 	db	22
  4423  007653  F0                 	db	240
  4424  007654  21                 	db	33
  4425  007655  00                 	db	0
  4426  007656  00                 	db	0
  4427  007657  0A                 	db	10
  4428  007658  00                 	db	0
  4429  007659  00                 	db	0
  4430  00765A  00                 	db	0
  4431  00765B  00                 	db	0
  4432  00765C  FE                 	db	254
  4433  00765D  1F                 	db	31
  4434  00765E  42                 	db	66
  4435  00765F  00                 	db	0
  4436  007660  C2                 	db	194
  4437  007661  00                 	db	0
  4438  007662  42                 	db	66
  4439  007663  01                 	db	1
  4440  007664  42                 	db	66
  4441  007665  06                 	db	6
  4442  007666  24                 	db	36
  4443  007667  08                 	db	8
  4444  007668  18                 	db	24
  4445  007669  10                 	db	16
  4446  00766A  00                 	db	0
  4447  00766B  00                 	db	0
  4448  00766C  08                 	db	8
  4449  00766D  00                 	db	0
  4450  00766E  04                 	db	4
  4451  00766F  18                 	db	24
  4452  007670  08                 	db	8
  4453  007671  24                 	db	36
  4454  007672  10                 	db	16
  4455  007673  42                 	db	66
  4456  007674  10                 	db	16
  4457  007675  42                 	db	66
  4458  007676  10                 	db	16
  4459  007677  84                 	db	132
  4460  007678  08                 	db	8
  4461  007679  08                 	db	8
  4462  00767A  07                 	db	7
  4463  00767B  00                 	db	0
  4464  00767C  00                 	db	0
  4465  00767D  08                 	db	8
  4466  00767E  02                 	db	2
  4467  00767F  00                 	db	0
  4468  007680  02                 	db	2
  4469  007681  00                 	db	0
  4470  007682  02                 	db	2
  4471  007683  00                 	db	0
  4472  007684  FE                 	db	254
  4473  007685  1F                 	db	31
  4474  007686  02                 	db	2
  4475  007687  00                 	db	0
  4476  007688  02                 	db	2
  4477  007689  00                 	db	0
  4478  00768A  02                 	db	2
  4479  00768B  00                 	db	0
  4480  00768C  00                 	db	0
  4481  00768D  00                 	db	0
  4482  00768E  0A                 	db	10
  4483  00768F  00                 	db	0
  4484  007690  00                 	db	0
  4485  007691  00                 	db	0
  4486  007692  00                 	db	0
  4487  007693  FE                 	db	254
  4488  007694  07                 	db	7
  4489  007695  00                 	db	0
  4490  007696  08                 	db	8
  4491  007697  00                 	db	0
  4492  007698  10                 	db	16
  4493  007699  00                 	db	0
  4494  00769A  10                 	db	16
  4495  00769B  00                 	db	0
  4496  00769C  10                 	db	16
  4497  00769D  00                 	db	0
  4498  00769E  08                 	db	8
  4499  00769F  FE                 	db	254
  4500  0076A0  07                 	db	7
  4501  0076A1  00                 	db	0
  4502  0076A2  00                 	db	0
  4503  0076A3  0C                 	db	12
  4504  0076A4  02                 	db	2
  4505  0076A5  00                 	db	0
  4506  0076A6  1C                 	db	28
  4507  0076A7  00                 	db	0
  4508  0076A8  60                 	db	96
  4509  0076A9  00                 	db	0
  4510  0076AA  80                 	db	128
  4511  0076AB  01                 	db	1
  4512  0076AC  00                 	db	0
  4513  0076AD  0E                 	db	14
  4514  0076AE  00                 	db	0
  4515  0076AF  10                 	db	16
  4516  0076B0  00                 	db	0
  4517  0076B1  0E                 	db	14
  4518  0076B2  80                 	db	128
  4519  0076B3  01                 	db	1
  4520  0076B4  60                 	db	96
  4521  0076B5  00                 	db	0
  4522  0076B6  1C                 	db	28
  4523  0076B7  00                 	db	0
  4524  0076B8  02                 	db	2
  4525  0076B9  00                 	db	0
  4526  0076BA  00                 	db	0
  4527  0076BB  00                 	db	0
  4528  0076BC  0F                 	db	15
  4529  0076BD  00                 	db	0
  4530  0076BE  00                 	db	0
  4531  0076BF  06                 	db	6
  4532  0076C0  00                 	db	0
  4533  0076C1  78                 	db	120
  4534  0076C2  00                 	db	0
  4535  0076C3  80                 	db	128
  4536  0076C4  07                 	db	7
  4537  0076C5  00                 	db	0
  4538  0076C6  18                 	db	24
  4539  0076C7  80                 	db	128
  4540  0076C8  07                 	db	7
  4541  0076C9  78                 	db	120
  4542  0076CA  00                 	db	0
  4543  0076CB  06                 	db	6
  4544  0076CC  00                 	db	0
  4545  0076CD  78                 	db	120
  4546  0076CE  00                 	db	0
  4547  0076CF  80                 	db	128
  4548  0076D0  07                 	db	7
  4549  0076D1  00                 	db	0
  4550  0076D2  18                 	db	24
  4551  0076D3  80                 	db	128
  4552  0076D4  07                 	db	7
  4553  0076D5  78                 	db	120
  4554  0076D6  00                 	db	0
  4555  0076D7  06                 	db	6
  4556  0076D8  00                 	db	0
  4557  0076D9  00                 	db	0
  4558  0076DA  00                 	db	0
  4559  0076DB  09                 	db	9
  4560  0076DC  00                 	db	0
  4561  0076DD  00                 	db	0
  4562  0076DE  06                 	db	6
  4563  0076DF  18                 	db	24
  4564  0076E0  08                 	db	8
  4565  0076E1  04                 	db	4
  4566  0076E2  30                 	db	48
  4567  0076E3  03                 	db	3
  4568  0076E4  C0                 	db	192
  4569  0076E5  00                 	db	0
  4570  0076E6  30                 	db	48
  4571  0076E7  03                 	db	3
  4572  0076E8  08                 	db	8
  4573  0076E9  04                 	db	4
  4574  0076EA  06                 	db	6
  4575  0076EB  18                 	db	24
  4576  0076EC  00                 	db	0
  4577  0076ED  00                 	db	0
  4578  0076EE  0B                 	db	11
  4579  0076EF  00                 	db	0
  4580  0076F0  00                 	db	0
  4581  0076F1  02                 	db	2
  4582  0076F2  00                 	db	0
  4583  0076F3  04                 	db	4
  4584  0076F4  00                 	db	0
  4585  0076F5  18                 	db	24
  4586  0076F6  00                 	db	0
  4587  0076F7  60                 	db	96
  4588  0076F8  00                 	db	0
  4589  0076F9  80                 	db	128
  4590  0076FA  1F                 	db	31
  4591  0076FB  60                 	db	96
  4592  0076FC  00                 	db	0
  4593  0076FD  18                 	db	24
  4594  0076FE  00                 	db	0
  4595  0076FF  04                 	db	4
  4596  007700  00                 	db	0
  4597  007701  02                 	db	2
  4598  007702  00                 	db	0
  4599  007703  00                 	db	0
  4600  007704  00                 	db	0
  4601  007705  08                 	db	8
  4602  007706  02                 	db	2
  4603  007707  10                 	db	16
  4604  007708  02                 	db	2
  4605  007709  1C                 	db	28
  4606  00770A  02                 	db	2
  4607  00770B  13                 	db	19
  4608  00770C  C2                 	db	194
  4609  00770D  10                 	db	16
  4610  00770E  32                 	db	50
  4611  00770F  10                 	db	16
  4612  007710  0E                 	db	14
  4613  007711  10                 	db	16
  4614  007712  02                 	db	2
  4615  007713  10                 	db	16
  4616  007714  00                 	db	0
  4617  007715  00                 	db	0
  4618  007716  06                 	db	6
  4619  007717  00                 	db	0
  4620  007718  00                 	db	0
  4621  007719  00                 	db	0
  4622  00771A  00                 	db	0
  4623  00771B  FE                 	db	254
  4624  00771C  FF                 	db	255
  4625  00771D  02                 	db	2
  4626  00771E  80                 	db	128
  4627  00771F  02                 	db	2
  4628  007720  80                 	db	128
  4629  007721  00                 	db	0
  4630  007722  00                 	db	0
  4631  007723  0A                 	db	10
  4632  007724  02                 	db	2
  4633  007725  00                 	db	0
  4634  007726  0C                 	db	12
  4635  007727  00                 	db	0
  4636  007728  10                 	db	16
  4637  007729  00                 	db	0
  4638  00772A  60                 	db	96
  4639  00772B  00                 	db	0
  4640  00772C  80                 	db	128
  4641  00772D  01                 	db	1
  4642  00772E  00                 	db	0
  4643  00772F  06                 	db	6
  4644  007730  00                 	db	0
  4645  007731  08                 	db	8
  4646  007732  00                 	db	0
  4647  007733  30                 	db	48
  4648  007734  00                 	db	0
  4649  007735  40                 	db	64
  4650  007736  00                 	db	0
  4651  007737  00                 	db	0
  4652  007738  05                 	db	5
  4653  007739  00                 	db	0
  4654  00773A  00                 	db	0
  4655  00773B  02                 	db	2
  4656  00773C  80                 	db	128
  4657  00773D  02                 	db	2
  4658  00773E  80                 	db	128
  4659  00773F  FE                 	db	254
  4660  007740  FF                 	db	255
  4661  007741  00                 	db	0
  4662  007742  00                 	db	0
  4663  007743  0B                 	db	11
  4664  007744  00                 	db	0
  4665  007745  00                 	db	0
  4666  007746  00                 	db	0
  4667  007747  02                 	db	2
  4668  007748  80                 	db	128
  4669  007749  01                 	db	1
  4670  00774A  70                 	db	112
  4671  00774B  00                 	db	0
  4672  00774C  0C                 	db	12
  4673  00774D  00                 	db	0
  4674  00774E  02                 	db	2
  4675  00774F  00                 	db	0
  4676  007750  0C                 	db	12
  4677  007751  00                 	db	0
  4678  007752  70                 	db	112
  4679  007753  00                 	db	0
  4680  007754  80                 	db	128
  4681  007755  01                 	db	1
  4682  007756  00                 	db	0
  4683  007757  02                 	db	2
  4684  007758  00                 	db	0
  4685  007759  00                 	db	0
  4686  00775A  09                 	db	9
  4687  00775B  00                 	db	0
  4688  00775C  40                 	db	64
  4689  00775D  00                 	db	0
  4690  00775E  40                 	db	64
  4691  00775F  00                 	db	0
  4692  007760  40                 	db	64
  4693  007761  00                 	db	0
  4694  007762  40                 	db	64
  4695  007763  00                 	db	0
  4696  007764  40                 	db	64
  4697  007765  00                 	db	0
  4698  007766  40                 	db	64
  4699  007767  00                 	db	0
  4700  007768  40                 	db	64
  4701  007769  00                 	db	0
  4702  00776A  40                 	db	64
  4703  00776B  00                 	db	0
  4704  00776C  00                 	db	0
  4705  00776D  05                 	db	5
  4706  00776E  00                 	db	0
  4707  00776F  00                 	db	0
  4708  007770  00                 	db	0
  4709  007771  00                 	db	0
  4710  007772  02                 	db	2
  4711  007773  00                 	db	0
  4712  007774  04                 	db	4
  4713  007775  00                 	db	0
  4714  007776  00                 	db	0
  4715  007777  00                 	db	0
  4716  007778  0B                 	db	11
  4717  007779  00                 	db	0
  4718  00777A  00                 	db	0
  4719  00777B  C0                 	db	192
  4720  00777C  07                 	db	7
  4721  00777D  20                 	db	32
  4722  00777E  08                 	db	8
  4723  00777F  10                 	db	16
  4724  007780  10                 	db	16
  4725  007781  10                 	db	16
  4726  007782  10                 	db	16
  4727  007783  10                 	db	16
  4728  007784  10                 	db	16
  4729  007785  10                 	db	16
  4730  007786  10                 	db	16
  4731  007787  10                 	db	16
  4732  007788  10                 	db	16
  4733  007789  20                 	db	32
  4734  00778A  08                 	db	8
  4735  00778B  F0                 	db	240
  4736  00778C  1F                 	db	31
  4737  00778D  00                 	db	0
  4738  00778E  00                 	db	0
  4739  00778F  0B                 	db	11
  4740  007790  00                 	db	0
  4741  007791  00                 	db	0
  4742  007792  FE                 	db	254
  4743  007793  1F                 	db	31
  4744  007794  20                 	db	32
  4745  007795  08                 	db	8
  4746  007796  10                 	db	16
  4747  007797  10                 	db	16
  4748  007798  10                 	db	16
  4749  007799  10                 	db	16
  4750  00779A  10                 	db	16
  4751  00779B  10                 	db	16
  4752  00779C  10                 	db	16
  4753  00779D  10                 	db	16
  4754  00779E  10                 	db	16
  4755  00779F  10                 	db	16
  4756  0077A0  20                 	db	32
  4757  0077A1  08                 	db	8
  4758  0077A2  C0                 	db	192
  4759  0077A3  07                 	db	7
  4760  0077A4  00                 	db	0
  4761  0077A5  00                 	db	0
  4762  0077A6  0A                 	db	10
  4763  0077A7  00                 	db	0
  4764  0077A8  00                 	db	0
  4765  0077A9  C0                 	db	192
  4766  0077AA  07                 	db	7
  4767  0077AB  20                 	db	32
  4768  0077AC  08                 	db	8
  4769  0077AD  10                 	db	16
  4770  0077AE  10                 	db	16
  4771  0077AF  10                 	db	16
  4772  0077B0  10                 	db	16
  4773  0077B1  10                 	db	16
  4774  0077B2  10                 	db	16
  4775  0077B3  10                 	db	16
  4776  0077B4  10                 	db	16
  4777  0077B5  20                 	db	32
  4778  0077B6  08                 	db	8
  4779  0077B7  40                 	db	64
  4780  0077B8  04                 	db	4
  4781  0077B9  00                 	db	0
  4782  0077BA  00                 	db	0
  4783  0077BB  0B                 	db	11
  4784  0077BC  00                 	db	0
  4785  0077BD  00                 	db	0
  4786  0077BE  C0                 	db	192
  4787  0077BF  07                 	db	7
  4788  0077C0  20                 	db	32
  4789  0077C1  08                 	db	8
  4790  0077C2  10                 	db	16
  4791  0077C3  10                 	db	16
  4792  0077C4  10                 	db	16
  4793  0077C5  10                 	db	16
  4794  0077C6  10                 	db	16
  4795  0077C7  10                 	db	16
  4796  0077C8  10                 	db	16
  4797  0077C9  10                 	db	16
  4798  0077CA  10                 	db	16
  4799  0077CB  10                 	db	16
  4800  0077CC  20                 	db	32
  4801  0077CD  08                 	db	8
  4802  0077CE  FE                 	db	254
  4803  0077CF  1F                 	db	31
  4804  0077D0  00                 	db	0
  4805  0077D1  00                 	db	0
  4806  0077D2  0A                 	db	10
  4807  0077D3  00                 	db	0
  4808  0077D4  00                 	db	0
  4809  0077D5  C0                 	db	192
  4810  0077D6  07                 	db	7
  4811  0077D7  20                 	db	32
  4812  0077D8  09                 	db	9
  4813  0077D9  10                 	db	16
  4814  0077DA  11                 	db	17
  4815  0077DB  10                 	db	16
  4816  0077DC  11                 	db	17
  4817  0077DD  10                 	db	16
  4818  0077DE  11                 	db	17
  4819  0077DF  10                 	db	16
  4820  0077E0  11                 	db	17
  4821  0077E1  20                 	db	32
  4822  0077E2  09                 	db	9
  4823  0077E3  C0                 	db	192
  4824  0077E4  05                 	db	5
  4825  0077E5  00                 	db	0
  4826  0077E6  00                 	db	0
  4827  0077E7  06                 	db	6
  4828  0077E8  00                 	db	0
  4829  0077E9  00                 	db	0
  4830  0077EA  10                 	db	16
  4831  0077EB  00                 	db	0
  4832  0077EC  FC                 	db	252
  4833  0077ED  1F                 	db	31
  4834  0077EE  12                 	db	18
  4835  0077EF  00                 	db	0
  4836  0077F0  12                 	db	18
  4837  0077F1  00                 	db	0
  4838  0077F2  00                 	db	0
  4839  0077F3  00                 	db	0
  4840  0077F4  0B                 	db	11
  4841  0077F5  00                 	db	0
  4842  0077F6  00                 	db	0
  4843  0077F7  C0                 	db	192
  4844  0077F8  27                 	db	39
  4845  0077F9  20                 	db	32
  4846  0077FA  48                 	db	72
  4847  0077FB  10                 	db	16
  4848  0077FC  90                 	db	144
  4849  0077FD  10                 	db	16
  4850  0077FE  90                 	db	144
  4851  0077FF  10                 	db	16
  4852  007800  90                 	db	144
  4853  007801  10                 	db	16
  4854  007802  90                 	db	144
  4855  007803  10                 	db	16
  4856  007804  90                 	db	144
  4857  007805  20                 	db	32
  4858  007806  48                 	db	72
  4859  007807  F0                 	db	240
  4860  007808  3F                 	db	63
  4861  007809  00                 	db	0
  4862  00780A  00                 	db	0
  4863  00780B  0A                 	db	10
  4864  00780C  00                 	db	0
  4865  00780D  00                 	db	0
  4866  00780E  FE                 	db	254
  4867  00780F  1F                 	db	31
  4868  007810  20                 	db	32
  4869  007811  00                 	db	0
  4870  007812  10                 	db	16
  4871  007813  00                 	db	0
  4872  007814  10                 	db	16
  4873  007815  00                 	db	0
  4874  007816  10                 	db	16
  4875  007817  00                 	db	0
  4876  007818  10                 	db	16
  4877  007819  00                 	db	0
  4878  00781A  20                 	db	32
  4879  00781B  00                 	db	0
  4880  00781C  C0                 	db	192
  4881  00781D  1F                 	db	31
  4882  00781E  00                 	db	0
  4883  00781F  00                 	db	0
  4884  007820  03                 	db	3
  4885  007821  00                 	db	0
  4886  007822  00                 	db	0
  4887  007823  F6                 	db	246
  4888  007824  1F                 	db	31
  4889  007825  00                 	db	0
  4890  007826  00                 	db	0
  4891  007827  03                 	db	3
  4892  007828  00                 	db	0
  4893  007829  80                 	db	128
  4894  00782A  F6                 	db	246
  4895  00782B  7F                 	db	127
  4896  00782C  00                 	db	0
  4897  00782D  00                 	db	0
  4898  00782E  08                 	db	8
  4899  00782F  00                 	db	0
  4900  007830  00                 	db	0
  4901  007831  FE                 	db	254
  4902  007832  1F                 	db	31
  4903  007833  00                 	db	0
  4904  007834  01                 	db	1
  4905  007835  80                 	db	128
  4906  007836  02                 	db	2
  4907  007837  40                 	db	64
  4908  007838  04                 	db	4
  4909  007839  20                 	db	32
  4910  00783A  08                 	db	8
  4911  00783B  10                 	db	16
  4912  00783C  10                 	db	16
  4913  00783D  00                 	db	0
  4914  00783E  00                 	db	0
  4915  00783F  03                 	db	3
  4916  007840  00                 	db	0
  4917  007841  00                 	db	0
  4918  007842  FE                 	db	254
  4919  007843  1F                 	db	31
  4920  007844  00                 	db	0
  4921  007845  00                 	db	0
  4922  007846  0F                 	db	15
  4923  007847  00                 	db	0
  4924  007848  00                 	db	0
  4925  007849  F0                 	db	240
  4926  00784A  1F                 	db	31
  4927  00784B  20                 	db	32
  4928  00784C  00                 	db	0
  4929  00784D  10                 	db	16
  4930  00784E  00                 	db	0
  4931  00784F  10                 	db	16
  4932  007850  00                 	db	0
  4933  007851  10                 	db	16
  4934  007852  00                 	db	0
  4935  007853  20                 	db	32
  4936  007854  00                 	db	0
  4937  007855  C0                 	db	192
  4938  007856  1F                 	db	31
  4939  007857  20                 	db	32
  4940  007858  00                 	db	0
  4941  007859  10                 	db	16
  4942  00785A  00                 	db	0
  4943  00785B  10                 	db	16
  4944  00785C  00                 	db	0
  4945  00785D  10                 	db	16
  4946  00785E  00                 	db	0
  4947  00785F  20                 	db	32
  4948  007860  00                 	db	0
  4949  007861  C0                 	db	192
  4950  007862  1F                 	db	31
  4951  007863  00                 	db	0
  4952  007864  00                 	db	0
  4953  007865  0A                 	db	10
  4954  007866  00                 	db	0
  4955  007867  00                 	db	0
  4956  007868  F0                 	db	240
  4957  007869  1F                 	db	31
  4958  00786A  20                 	db	32
  4959  00786B  00                 	db	0
  4960  00786C  10                 	db	16
  4961  00786D  00                 	db	0
  4962  00786E  10                 	db	16
  4963  00786F  00                 	db	0
  4964  007870  10                 	db	16
  4965  007871  00                 	db	0
  4966  007872  10                 	db	16
  4967  007873  00                 	db	0
  4968  007874  20                 	db	32
  4969  007875  00                 	db	0
  4970  007876  C0                 	db	192
  4971  007877  1F                 	db	31
  4972  007878  00                 	db	0
  4973  007879  00                 	db	0
  4974  00787A  0A                 	db	10
  4975  00787B  00                 	db	0
  4976  00787C  00                 	db	0
  4977  00787D  C0                 	db	192
  4978  00787E  07                 	db	7
  4979  00787F  20                 	db	32
  4980  007880  08                 	db	8
  4981  007881  10                 	db	16
  4982  007882  10                 	db	16
  4983  007883  10                 	db	16
  4984  007884  10                 	db	16
  4985  007885  10                 	db	16
  4986  007886  10                 	db	16
  4987  007887  10                 	db	16
  4988  007888  10                 	db	16
  4989  007889  20                 	db	32
  4990  00788A  08                 	db	8
  4991  00788B  C0                 	db	192
  4992  00788C  07                 	db	7
  4993  00788D  00                 	db	0
  4994  00788E  00                 	db	0
  4995  00788F  0B                 	db	11
  4996  007890  00                 	db	0
  4997  007891  00                 	db	0
  4998  007892  F0                 	db	240
  4999  007893  FF                 	db	255
  5000  007894  20                 	db	32
  5001  007895  08                 	db	8
  5002  007896  10                 	db	16
  5003  007897  10                 	db	16
  5004  007898  10                 	db	16
  5005  007899  10                 	db	16
  5006  00789A  10                 	db	16
  5007  00789B  10                 	db	16
  5008  00789C  10                 	db	16
  5009  00789D  10                 	db	16
  5010  00789E  10                 	db	16
  5011  00789F  10                 	db	16
  5012  0078A0  20                 	db	32
  5013  0078A1  08                 	db	8
  5014  0078A2  C0                 	db	192
  5015  0078A3  07                 	db	7
  5016  0078A4  00                 	db	0
  5017  0078A5  00                 	db	0
  5018  0078A6  0B                 	db	11
  5019  0078A7  00                 	db	0
  5020  0078A8  00                 	db	0
  5021  0078A9  C0                 	db	192
  5022  0078AA  07                 	db	7
  5023  0078AB  20                 	db	32
  5024  0078AC  08                 	db	8
  5025  0078AD  10                 	db	16
  5026  0078AE  10                 	db	16
  5027  0078AF  10                 	db	16
  5028  0078B0  10                 	db	16
  5029  0078B1  10                 	db	16
  5030  0078B2  10                 	db	16
  5031  0078B3  10                 	db	16
  5032  0078B4  10                 	db	16
  5033  0078B5  10                 	db	16
  5034  0078B6  10                 	db	16
  5035  0078B7  20                 	db	32
  5036  0078B8  08                 	db	8
  5037  0078B9  F0                 	db	240
  5038  0078BA  FF                 	db	255
  5039  0078BB  00                 	db	0
  5040  0078BC  00                 	db	0
  5041  0078BD  06                 	db	6
  5042  0078BE  00                 	db	0
  5043  0078BF  00                 	db	0
  5044  0078C0  F0                 	db	240
  5045  0078C1  1F                 	db	31
  5046  0078C2  20                 	db	32
  5047  0078C3  00                 	db	0
  5048  0078C4  10                 	db	16
  5049  0078C5  00                 	db	0
  5050  0078C6  10                 	db	16
  5051  0078C7  00                 	db	0
  5052  0078C8  00                 	db	0
  5053  0078C9  00                 	db	0
  5054  0078CA  06                 	db	6
  5055  0078CB  60                 	db	96
  5056  0078CC  08                 	db	8
  5057  0078CD  90                 	db	144
  5058  0078CE  10                 	db	16
  5059  0078CF  10                 	db	16
  5060  0078D0  11                 	db	17
  5061  0078D1  10                 	db	16
  5062  0078D2  11                 	db	17
  5063  0078D3  20                 	db	32
  5064  0078D4  0E                 	db	14
  5065  0078D5  00                 	db	0
  5066  0078D6  00                 	db	0
  5067  0078D7  07                 	db	7
  5068  0078D8  00                 	db	0
  5069  0078D9  00                 	db	0
  5070  0078DA  10                 	db	16
  5071  0078DB  00                 	db	0
  5072  0078DC  10                 	db	16
  5073  0078DD  00                 	db	0
  5074  0078DE  FE                 	db	254
  5075  0078DF  1F                 	db	31
  5076  0078E0  10                 	db	16
  5077  0078E1  00                 	db	0
  5078  0078E2  10                 	db	16
  5079  0078E3  00                 	db	0
  5080  0078E4  00                 	db	0
  5081  0078E5  00                 	db	0
  5082  0078E6  0A                 	db	10
  5083  0078E7  00                 	db	0
  5084  0078E8  00                 	db	0
  5085  0078E9  F0                 	db	240
  5086  0078EA  07                 	db	7
  5087  0078EB  00                 	db	0
  5088  0078EC  08                 	db	8
  5089  0078ED  00                 	db	0
  5090  0078EE  10                 	db	16
  5091  0078EF  00                 	db	0
  5092  0078F0  10                 	db	16
  5093  0078F1  00                 	db	0
  5094  0078F2  10                 	db	16
  5095  0078F3  00                 	db	0
  5096  0078F4  10                 	db	16
  5097  0078F5  00                 	db	0
  5098  0078F6  08                 	db	8
  5099  0078F7  F0                 	db	240
  5100  0078F8  07                 	db	7
  5101  0078F9  00                 	db	0
  5102  0078FA  00                 	db	0
  5103  0078FB  0A                 	db	10
  5104  0078FC  10                 	db	16
  5105  0078FD  00                 	db	0
  5106  0078FE  60                 	db	96
  5107  0078FF  00                 	db	0
  5108  007900  80                 	db	128
  5109  007901  03                 	db	3
  5110  007902  00                 	db	0
  5111  007903  0C                 	db	12
  5112  007904  00                 	db	0
  5113  007905  10                 	db	16
  5114  007906  00                 	db	0
  5115  007907  0C                 	db	12
  5116  007908  80                 	db	128
  5117  007909  03                 	db	3
  5118  00790A  60                 	db	96
  5119  00790B  00                 	db	0
  5120  00790C  10                 	db	16
  5121  00790D  00                 	db	0
  5122  00790E  00                 	db	0
  5123  00790F  00                 	db	0
  5124  007910  0E                 	db	14
  5125  007911  10                 	db	16
  5126  007912  00                 	db	0
  5127  007913  E0                 	db	224
  5128  007914  00                 	db	0
  5129  007915  00                 	db	0
  5130  007916  07                 	db	7
  5131  007917  00                 	db	0
  5132  007918  18                 	db	24
  5133  007919  00                 	db	0
  5134  00791A  07                 	db	7
  5135  00791B  E0                 	db	224
  5136  00791C  00                 	db	0
  5137  00791D  10                 	db	16
  5138  00791E  00                 	db	0
  5139  00791F  E0                 	db	224
  5140  007920  00                 	db	0
  5141  007921  00                 	db	0
  5142  007922  07                 	db	7
  5143  007923  00                 	db	0
  5144  007924  18                 	db	24
  5145  007925  00                 	db	0
  5146  007926  07                 	db	7
  5147  007927  E0                 	db	224
  5148  007928  00                 	db	0
  5149  007929  10                 	db	16
  5150  00792A  00                 	db	0
  5151  00792B  00                 	db	0
  5152  00792C  00                 	db	0
  5153  00792D  09                 	db	9
  5154  00792E  10                 	db	16
  5155  00792F  10                 	db	16
  5156  007930  20                 	db	32
  5157  007931  08                 	db	8
  5158  007932  40                 	db	64
  5159  007933  04                 	db	4
  5160  007934  80                 	db	128
  5161  007935  03                 	db	3
  5162  007936  80                 	db	128
  5163  007937  03                 	db	3
  5164  007938  40                 	db	64
  5165  007939  04                 	db	4
  5166  00793A  20                 	db	32
  5167  00793B  08                 	db	8
  5168  00793C  10                 	db	16
  5169  00793D  10                 	db	16
  5170  00793E  00                 	db	0
  5171  00793F  00                 	db	0
  5172  007940  09                 	db	9
  5173  007941  10                 	db	16
  5174  007942  00                 	db	0
  5175  007943  E0                 	db	224
  5176  007944  00                 	db	0
  5177  007945  00                 	db	0
  5178  007946  83                 	db	131
  5179  007947  00                 	db	0
  5180  007948  7C                 	db	124
  5181  007949  00                 	db	0
  5182  00794A  0C                 	db	12
  5183  00794B  00                 	db	0
  5184  00794C  03                 	db	3
  5185  00794D  E0                 	db	224
  5186  00794E  00                 	db	0
  5187  00794F  10                 	db	16
  5188  007950  00                 	db	0
  5189  007951  00                 	db	0
  5190  007952  00                 	db	0
  5191  007953  08                 	db	8
  5192  007954  10                 	db	16
  5193  007955  10                 	db	16
  5194  007956  10                 	db	16
  5195  007957  18                 	db	24
  5196  007958  10                 	db	16
  5197  007959  16                 	db	22
  5198  00795A  10                 	db	16
  5199  00795B  11                 	db	17
  5200  00795C  D0                 	db	208
  5201  00795D  10                 	db	16
  5202  00795E  30                 	db	48
  5203  00795F  10                 	db	16
  5204  007960  10                 	db	16
  5205  007961  10                 	db	16
  5206  007962  00                 	db	0
  5207  007963  00                 	db	0
  5208  007964  07                 	db	7
  5209  007965  00                 	db	0
  5210  007966  00                 	db	0
  5211  007967  00                 	db	0
  5212  007968  01                 	db	1
  5213  007969  80                 	db	128
  5214  00796A  02                 	db	2
  5215  00796B  FC                 	db	252
  5216  00796C  7E                 	db	126
  5217  00796D  02                 	db	2
  5218  00796E  80                 	db	128
  5219  00796F  02                 	db	2
  5220  007970  80                 	db	128
  5221  007971  00                 	db	0
  5222  007972  00                 	db	0
  5223  007973  07                 	db	7
  5224  007974  00                 	db	0
  5225  007975  00                 	db	0
  5226  007976  00                 	db	0
  5227  007977  00                 	db	0
  5228  007978  00                 	db	0
  5229  007979  00                 	db	0
  5230  00797A  00                 	db	0
  5231  00797B  00                 	db	0
  5232  00797C  00                 	db	0
  5233  00797D  00                 	db	0
  5234  00797E  FE                 	db	254
  5235  00797F  FF                 	db	255
  5236  007980  00                 	db	0
  5237  007981  00                 	db	0
  5238  007982  06                 	db	6
  5239  007983  02                 	db	2
  5240  007984  80                 	db	128
  5241  007985  02                 	db	2
  5242  007986  80                 	db	128
  5243  007987  FC                 	db	252
  5244  007988  7E                 	db	126
  5245  007989  80                 	db	128
  5246  00798A  02                 	db	2
  5247  00798B  00                 	db	0
  5248  00798C  01                 	db	1
  5249  00798D  00                 	db	0
  5250  00798E  00                 	db	0
  5251  00798F  0A                 	db	10
  5252  007990  00                 	db	0
  5253  007991  00                 	db	0
  5254  007992  80                 	db	128
  5255  007993  00                 	db	0
  5256  007994  40                 	db	64
  5257  007995  00                 	db	0
  5258  007996  40                 	db	64
  5259  007997  00                 	db	0
  5260  007998  40                 	db	64
  5261  007999  00                 	db	0
  5262  00799A  80                 	db	128
  5263  00799B  00                 	db	0
  5264  00799C  80                 	db	128
  5265  00799D  00                 	db	0
  5266  00799E  80                 	db	128
  5267  00799F  00                 	db	0
  5268  0079A0  40                 	db	64
  5269  0079A1  00                 	db	0
  5270  0079A2  00                 	db	0
  5271  0079A3  00                 	db	0
  5272  0079A4  05                 	db	5
  5273  0079A5  FF                 	db	255
  5274  0079A6  0F                 	db	15
  5275  0079A7  01                 	db	1
  5276  0079A8  08                 	db	8
  5277  0079A9  01                 	db	1
  5278  0079AA  08                 	db	8
  5279  0079AB  FF                 	db	255
  5280  0079AC  0F                 	db	15
  5281  0079AD  00                 	db	0
  5282  0079AE  00                 	db	0
  5283  0079AF                     __end_of_font:
  5284                           	callstack 0
  5285  0079AF                     _numbers:
  5286                           	callstack 0
  5287  0079AF  00                 	db	0
  5288  0079B0  00                 	db	0
  5289  0079B1  00                 	db	0
  5290  0079B2  00                 	db	0
  5291  0079B3  00                 	db	0
  5292  0079B4  FC                 	db	252
  5293  0079B5  1F                 	db	31
  5294  0079B6  00                 	db	0
  5295  0079B7  80                 	db	128
  5296  0079B8  FF                 	db	255
  5297  0079B9  FF                 	db	255
  5298  0079BA  00                 	db	0
  5299  0079BB  E0                 	db	224
  5300  0079BC  03                 	db	3
  5301  0079BD  E0                 	db	224
  5302  0079BE  03                 	db	3
  5303  0079BF  F0                 	db	240
  5304  0079C0  00                 	db	0
  5305  0079C1  80                 	db	128
  5306  0079C2  07                 	db	7
  5307  0079C3  38                 	db	56
  5308  0079C4  00                 	db	0
  5309  0079C5  00                 	db	0
  5310  0079C6  0E                 	db	14
  5311  0079C7  18                 	db	24
  5312  0079C8  00                 	db	0
  5313  0079C9  00                 	db	0
  5314  0079CA  0C                 	db	12
  5315  0079CB  1C                 	db	28
  5316  0079CC  00                 	db	0
  5317  0079CD  00                 	db	0
  5318  0079CE  1C                 	db	28
  5319  0079CF  0C                 	db	12
  5320  0079D0  00                 	db	0
  5321  0079D1  00                 	db	0
  5322  0079D2  18                 	db	24
  5323  0079D3  0C                 	db	12
  5324  0079D4  00                 	db	0
  5325  0079D5  00                 	db	0
  5326  0079D6  18                 	db	24
  5327  0079D7  0C                 	db	12
  5328  0079D8  00                 	db	0
  5329  0079D9  00                 	db	0
  5330  0079DA  18                 	db	24
  5331  0079DB  0C                 	db	12
  5332  0079DC  00                 	db	0
  5333  0079DD  00                 	db	0
  5334  0079DE  18                 	db	24
  5335  0079DF  0C                 	db	12
  5336  0079E0  00                 	db	0
  5337  0079E1  00                 	db	0
  5338  0079E2  18                 	db	24
  5339  0079E3  18                 	db	24
  5340  0079E4  00                 	db	0
  5341  0079E5  00                 	db	0
  5342  0079E6  0C                 	db	12
  5343  0079E7  18                 	db	24
  5344  0079E8  00                 	db	0
  5345  0079E9  00                 	db	0
  5346  0079EA  0C                 	db	12
  5347  0079EB  30                 	db	48
  5348  0079EC  00                 	db	0
  5349  0079ED  00                 	db	0
  5350  0079EE  06                 	db	6
  5351  0079EF  F0                 	db	240
  5352  0079F0  00                 	db	0
  5353  0079F1  80                 	db	128
  5354  0079F2  07                 	db	7
  5355  0079F3  C0                 	db	192
  5356  0079F4  07                 	db	7
  5357  0079F5  F0                 	db	240
  5358  0079F6  01                 	db	1
  5359  0079F7  80                 	db	128
  5360  0079F8  FF                 	db	255
  5361  0079F9  FF                 	db	255
  5362  0079FA  00                 	db	0
  5363  0079FB  00                 	db	0
  5364  0079FC  FC                 	db	252
  5365  0079FD  1F                 	db	31
  5366  0079FE  00                 	db	0
  5367  0079FF  00                 	db	0
  5368  007A00  00                 	db	0
  5369  007A01  00                 	db	0
  5370  007A02  00                 	db	0
  5371  007A03  00                 	db	0
  5372  007A04  00                 	db	0
  5373  007A05  00                 	db	0
  5374  007A06  00                 	db	0
  5375  007A07  00                 	db	0
  5376  007A08  00                 	db	0
  5377  007A09  00                 	db	0
  5378  007A0A  00                 	db	0
  5379  007A0B  00                 	db	0
  5380  007A0C  00                 	db	0
  5381  007A0D  00                 	db	0
  5382  007A0E  00                 	db	0
  5383  007A0F  00                 	db	0
  5384  007A10  00                 	db	0
  5385  007A11  00                 	db	0
  5386  007A12  00                 	db	0
  5387  007A13  00                 	db	0
  5388  007A14  00                 	db	0
  5389  007A15  00                 	db	0
  5390  007A16  00                 	db	0
  5391  007A17  08                 	db	8
  5392  007A18  00                 	db	0
  5393  007A19  00                 	db	0
  5394  007A1A  00                 	db	0
  5395  007A1B  0C                 	db	12
  5396  007A1C  00                 	db	0
  5397  007A1D  00                 	db	0
  5398  007A1E  00                 	db	0
  5399  007A1F  0C                 	db	12
  5400  007A20  00                 	db	0
  5401  007A21  00                 	db	0
  5402  007A22  00                 	db	0
  5403  007A23  0C                 	db	12
  5404  007A24  00                 	db	0
  5405  007A25  00                 	db	0
  5406  007A26  00                 	db	0
  5407  007A27  FC                 	db	252
  5408  007A28  FF                 	db	255
  5409  007A29  FF                 	db	255
  5410  007A2A  1F                 	db	31
  5411  007A2B  FC                 	db	252
  5412  007A2C  FF                 	db	255
  5413  007A2D  FF                 	db	255
  5414  007A2E  1F                 	db	31
  5415  007A2F  00                 	db	0
  5416  007A30  00                 	db	0
  5417  007A31  00                 	db	0
  5418  007A32  00                 	db	0
  5419  007A33  00                 	db	0
  5420  007A34  00                 	db	0
  5421  007A35  00                 	db	0
  5422  007A36  00                 	db	0
  5423  007A37  00                 	db	0
  5424  007A38  00                 	db	0
  5425  007A39  00                 	db	0
  5426  007A3A  00                 	db	0
  5427  007A3B  00                 	db	0
  5428  007A3C  00                 	db	0
  5429  007A3D  00                 	db	0
  5430  007A3E  00                 	db	0
  5431  007A3F  00                 	db	0
  5432  007A40  00                 	db	0
  5433  007A41  00                 	db	0
  5434  007A42  00                 	db	0
  5435  007A43  00                 	db	0
  5436  007A44  00                 	db	0
  5437  007A45  00                 	db	0
  5438  007A46  00                 	db	0
  5439  007A47  00                 	db	0
  5440  007A48  00                 	db	0
  5441  007A49  00                 	db	0
  5442  007A4A  00                 	db	0
  5443  007A4B  00                 	db	0
  5444  007A4C  00                 	db	0
  5445  007A4D  00                 	db	0
  5446  007A4E  00                 	db	0
  5447  007A4F  00                 	db	0
  5448  007A50  00                 	db	0
  5449  007A51  00                 	db	0
  5450  007A52  00                 	db	0
  5451  007A53  00                 	db	0
  5452  007A54  00                 	db	0
  5453  007A55  00                 	db	0
  5454  007A56  00                 	db	0
  5455  007A57  00                 	db	0
  5456  007A58  00                 	db	0
  5457  007A59  00                 	db	0
  5458  007A5A  00                 	db	0
  5459  007A5B  00                 	db	0
  5460  007A5C  00                 	db	0
  5461  007A5D  00                 	db	0
  5462  007A5E  00                 	db	0
  5463  007A5F  80                 	db	128
  5464  007A60  03                 	db	3
  5465  007A61  00                 	db	0
  5466  007A62  10                 	db	16
  5467  007A63  C0                 	db	192
  5468  007A64  03                 	db	3
  5469  007A65  00                 	db	0
  5470  007A66  18                 	db	24
  5471  007A67  F0                 	db	240
  5472  007A68  00                 	db	0
  5473  007A69  00                 	db	0
  5474  007A6A  1C                 	db	28
  5475  007A6B  30                 	db	48
  5476  007A6C  00                 	db	0
  5477  007A6D  00                 	db	0
  5478  007A6E  1E                 	db	30
  5479  007A6F  18                 	db	24
  5480  007A70  00                 	db	0
  5481  007A71  00                 	db	0
  5482  007A72  1B                 	db	27
  5483  007A73  18                 	db	24
  5484  007A74  00                 	db	0
  5485  007A75  80                 	db	128
  5486  007A76  19                 	db	25
  5487  007A77  0C                 	db	12
  5488  007A78  00                 	db	0
  5489  007A79  C0                 	db	192
  5490  007A7A  18                 	db	24
  5491  007A7B  0C                 	db	12
  5492  007A7C  00                 	db	0
  5493  007A7D  60                 	db	96
  5494  007A7E  18                 	db	24
  5495  007A7F  0C                 	db	12
  5496  007A80  00                 	db	0
  5497  007A81  30                 	db	48
  5498  007A82  18                 	db	24
  5499  007A83  0C                 	db	12
  5500  007A84  00                 	db	0
  5501  007A85  18                 	db	24
  5502  007A86  18                 	db	24
  5503  007A87  0C                 	db	12
  5504  007A88  00                 	db	0
  5505  007A89  0C                 	db	12
  5506  007A8A  18                 	db	24
  5507  007A8B  0C                 	db	12
  5508  007A8C  00                 	db	0
  5509  007A8D  06                 	db	6
  5510  007A8E  18                 	db	24
  5511  007A8F  1C                 	db	28
  5512  007A90  00                 	db	0
  5513  007A91  03                 	db	3
  5514  007A92  18                 	db	24
  5515  007A93  18                 	db	24
  5516  007A94  80                 	db	128
  5517  007A95  01                 	db	1
  5518  007A96  18                 	db	24
  5519  007A97  38                 	db	56
  5520  007A98  C0                 	db	192
  5521  007A99  00                 	db	0
  5522  007A9A  18                 	db	24
  5523  007A9B  70                 	db	112
  5524  007A9C  70                 	db	112
  5525  007A9D  00                 	db	0
  5526  007A9E  18                 	db	24
  5527  007A9F  E0                 	db	224
  5528  007AA0  3F                 	db	63
  5529  007AA1  00                 	db	0
  5530  007AA2  18                 	db	24
  5531  007AA3  80                 	db	128
  5532  007AA4  0F                 	db	15
  5533  007AA5  00                 	db	0
  5534  007AA6  18                 	db	24
  5535  007AA7  00                 	db	0
  5536  007AA8  00                 	db	0
  5537  007AA9  00                 	db	0
  5538  007AAA  00                 	db	0
  5539  007AAB  00                 	db	0
  5540  007AAC  00                 	db	0
  5541  007AAD  00                 	db	0
  5542  007AAE  00                 	db	0
  5543  007AAF  00                 	db	0
  5544  007AB0  00                 	db	0
  5545  007AB1  C0                 	db	192
  5546  007AB2  00                 	db	0
  5547  007AB3  80                 	db	128
  5548  007AB4  00                 	db	0
  5549  007AB5  C0                 	db	192
  5550  007AB6  03                 	db	3
  5551  007AB7  E0                 	db	224
  5552  007AB8  00                 	db	0
  5553  007AB9  80                 	db	128
  5554  007ABA  07                 	db	7
  5555  007ABB  70                 	db	112
  5556  007ABC  00                 	db	0
  5557  007ABD  00                 	db	0
  5558  007ABE  06                 	db	6
  5559  007ABF  38                 	db	56
  5560  007AC0  00                 	db	0
  5561  007AC1  00                 	db	0
  5562  007AC2  0C                 	db	12
  5563  007AC3  18                 	db	24
  5564  007AC4  00                 	db	0
  5565  007AC5  00                 	db	0
  5566  007AC6  0C                 	db	12
  5567  007AC7  1C                 	db	28
  5568  007AC8  00                 	db	0
  5569  007AC9  00                 	db	0
  5570  007ACA  18                 	db	24
  5571  007ACB  0C                 	db	12
  5572  007ACC  00                 	db	0
  5573  007ACD  00                 	db	0
  5574  007ACE  18                 	db	24
  5575  007ACF  0C                 	db	12
  5576  007AD0  60                 	db	96
  5577  007AD1  00                 	db	0
  5578  007AD2  18                 	db	24
  5579  007AD3  0C                 	db	12
  5580  007AD4  60                 	db	96
  5581  007AD5  00                 	db	0
  5582  007AD6  18                 	db	24
  5583  007AD7  0C                 	db	12
  5584  007AD8  60                 	db	96
  5585  007AD9  00                 	db	0
  5586  007ADA  18                 	db	24
  5587  007ADB  0C                 	db	12
  5588  007ADC  60                 	db	96
  5589  007ADD  00                 	db	0
  5590  007ADE  18                 	db	24
  5591  007ADF  0C                 	db	12
  5592  007AE0  F0                 	db	240
  5593  007AE1  00                 	db	0
  5594  007AE2  18                 	db	24
  5595  007AE3  18                 	db	24
  5596  007AE4  F0                 	db	240
  5597  007AE5  00                 	db	0
  5598  007AE6  0C                 	db	12
  5599  007AE7  38                 	db	56
  5600  007AE8  F8                 	db	248
  5601  007AE9  01                 	db	1
  5602  007AEA  0C                 	db	12
  5603  007AEB  70                 	db	112
  5604  007AEC  FC                 	db	252
  5605  007AED  01                 	db	1
  5606  007AEE  06                 	db	6
  5607  007AEF  E0                 	db	224
  5608  007AF0  9F                 	db	159
  5609  007AF1  87                 	db	135
  5610  007AF2  03                 	db	3
  5611  007AF3  C0                 	db	192
  5612  007AF4  07                 	db	7
  5613  007AF5  FF                 	db	255
  5614  007AF6  01                 	db	1
  5615  007AF7  00                 	db	0
  5616  007AF8  00                 	db	0
  5617  007AF9  7C                 	db	124
  5618  007AFA  00                 	db	0
  5619  007AFB  00                 	db	0
  5620  007AFC  00                 	db	0
  5621  007AFD  00                 	db	0
  5622  007AFE  00                 	db	0
  5623  007AFF  00                 	db	0
  5624  007B00  00                 	db	0
  5625  007B01  00                 	db	0
  5626  007B02  00                 	db	0
  5627  007B03  00                 	db	0
  5628  007B04  00                 	db	0
  5629  007B05  40                 	db	64
  5630  007B06  00                 	db	0
  5631  007B07  00                 	db	0
  5632  007B08  00                 	db	0
  5633  007B09  60                 	db	96
  5634  007B0A  00                 	db	0
  5635  007B0B  00                 	db	0
  5636  007B0C  00                 	db	0
  5637  007B0D  70                 	db	112
  5638  007B0E  00                 	db	0
  5639  007B0F  00                 	db	0
  5640  007B10  00                 	db	0
  5641  007B11  7C                 	db	124
  5642  007B12  00                 	db	0
  5643  007B13  00                 	db	0
  5644  007B14  00                 	db	0
  5645  007B15  6E                 	db	110
  5646  007B16  00                 	db	0
  5647  007B17  00                 	db	0
  5648  007B18  00                 	db	0
  5649  007B19  63                 	db	99
  5650  007B1A  00                 	db	0
  5651  007B1B  00                 	db	0
  5652  007B1C  C0                 	db	192
  5653  007B1D  61                 	db	97
  5654  007B1E  00                 	db	0
  5655  007B1F  00                 	db	0
  5656  007B20  E0                 	db	224
  5657  007B21  60                 	db	96
  5658  007B22  00                 	db	0
  5659  007B23  00                 	db	0
  5660  007B24  30                 	db	48
  5661  007B25  60                 	db	96
  5662  007B26  00                 	db	0
  5663  007B27  00                 	db	0
  5664  007B28  1C                 	db	28
  5665  007B29  60                 	db	96
  5666  007B2A  00                 	db	0
  5667  007B2B  00                 	db	0
  5668  007B2C  0E                 	db	14
  5669  007B2D  60                 	db	96
  5670  007B2E  00                 	db	0
  5671  007B2F  00                 	db	0
  5672  007B30  03                 	db	3
  5673  007B31  60                 	db	96
  5674  007B32  00                 	db	0
  5675  007B33  C0                 	db	192
  5676  007B34  01                 	db	1
  5677  007B35  60                 	db	96
  5678  007B36  00                 	db	0
  5679  007B37  E0                 	db	224
  5680  007B38  00                 	db	0
  5681  007B39  60                 	db	96
  5682  007B3A  00                 	db	0
  5683  007B3B  F8                 	db	248
  5684  007B3C  FF                 	db	255
  5685  007B3D  FF                 	db	255
  5686  007B3E  1F                 	db	31
  5687  007B3F  FC                 	db	252
  5688  007B40  FF                 	db	255
  5689  007B41  FF                 	db	255
  5690  007B42  1F                 	db	31
  5691  007B43  00                 	db	0
  5692  007B44  00                 	db	0
  5693  007B45  60                 	db	96
  5694  007B46  00                 	db	0
  5695  007B47  00                 	db	0
  5696  007B48  00                 	db	0
  5697  007B49  60                 	db	96
  5698  007B4A  00                 	db	0
  5699  007B4B  00                 	db	0
  5700  007B4C  00                 	db	0
  5701  007B4D  60                 	db	96
  5702  007B4E  00                 	db	0
  5703  007B4F  00                 	db	0
  5704  007B50  00                 	db	0
  5705  007B51  00                 	db	0
  5706  007B52  00                 	db	0
  5707  007B53  00                 	db	0
  5708  007B54  00                 	db	0
  5709  007B55  00                 	db	0
  5710  007B56  00                 	db	0
  5711  007B57  00                 	db	0
  5712  007B58  00                 	db	0
  5713  007B59  C0                 	db	192
  5714  007B5A  00                 	db	0
  5715  007B5B  00                 	db	0
  5716  007B5C  00                 	db	0
  5717  007B5D  C0                 	db	192
  5718  007B5E  03                 	db	3
  5719  007B5F  00                 	db	0
  5720  007B60  00                 	db	0
  5721  007B61  00                 	db	0
  5722  007B62  07                 	db	7
  5723  007B63  00                 	db	0
  5724  007B64  30                 	db	48
  5725  007B65  00                 	db	0
  5726  007B66  0E                 	db	14
  5727  007B67  00                 	db	0
  5728  007B68  3F                 	db	63
  5729  007B69  00                 	db	0
  5730  007B6A  0C                 	db	12
  5731  007B6B  F0                 	db	240
  5732  007B6C  1F                 	db	31
  5733  007B6D  00                 	db	0
  5734  007B6E  1C                 	db	28
  5735  007B6F  FC                 	db	252
  5736  007B70  18                 	db	24
  5737  007B71  00                 	db	0
  5738  007B72  18                 	db	24
  5739  007B73  0C                 	db	12
  5740  007B74  18                 	db	24
  5741  007B75  00                 	db	0
  5742  007B76  18                 	db	24
  5743  007B77  0C                 	db	12
  5744  007B78  18                 	db	24
  5745  007B79  00                 	db	0
  5746  007B7A  18                 	db	24
  5747  007B7B  0C                 	db	12
  5748  007B7C  18                 	db	24
  5749  007B7D  00                 	db	0
  5750  007B7E  18                 	db	24
  5751  007B7F  0C                 	db	12
  5752  007B80  18                 	db	24
  5753  007B81  00                 	db	0
  5754  007B82  18                 	db	24
  5755  007B83  0C                 	db	12
  5756  007B84  18                 	db	24
  5757  007B85  00                 	db	0
  5758  007B86  1C                 	db	28
  5759  007B87  0C                 	db	12
  5760  007B88  30                 	db	48
  5761  007B89  00                 	db	0
  5762  007B8A  0C                 	db	12
  5763  007B8B  0C                 	db	12
  5764  007B8C  30                 	db	48
  5765  007B8D  00                 	db	0
  5766  007B8E  0E                 	db	14
  5767  007B8F  0C                 	db	12
  5768  007B90  60                 	db	96
  5769  007B91  00                 	db	0
  5770  007B92  07                 	db	7
  5771  007B93  0C                 	db	12
  5772  007B94  E0                 	db	224
  5773  007B95  C1                 	db	193
  5774  007B96  03                 	db	3
  5775  007B97  0C                 	db	12
  5776  007B98  80                 	db	128
  5777  007B99  FF                 	db	255
  5778  007B9A  01                 	db	1
  5779  007B9B  00                 	db	0
  5780  007B9C  00                 	db	0
  5781  007B9D  7E                 	db	126
  5782  007B9E  00                 	db	0
  5783  007B9F  00                 	db	0
  5784  007BA0  00                 	db	0
  5785  007BA1  00                 	db	0
  5786  007BA2  00                 	db	0
  5787  007BA3  00                 	db	0
  5788  007BA4  00                 	db	0
  5789  007BA5  00                 	db	0
  5790  007BA6  00                 	db	0
  5791  007BA7  00                 	db	0
  5792  007BA8  00                 	db	0
  5793  007BA9  00                 	db	0
  5794  007BAA  00                 	db	0
  5795  007BAB  00                 	db	0
  5796  007BAC  00                 	db	0
  5797  007BAD  00                 	db	0
  5798  007BAE  00                 	db	0
  5799  007BAF  00                 	db	0
  5800  007BB0  00                 	db	0
  5801  007BB1  FC                 	db	252
  5802  007BB2  00                 	db	0
  5803  007BB3  00                 	db	0
  5804  007BB4  00                 	db	0
  5805  007BB5  FF                 	db	255
  5806  007BB6  03                 	db	3
  5807  007BB7  00                 	db	0
  5808  007BB8  80                 	db	128
  5809  007BB9  07                 	db	7
  5810  007BBA  07                 	db	7
  5811  007BBB  00                 	db	0
  5812  007BBC  E0                 	db	224
  5813  007BBD  01                 	db	1
  5814  007BBE  0E                 	db	14
  5815  007BBF  00                 	db	0
  5816  007BC0  F0                 	db	240
  5817  007BC1  01                 	db	1
  5818  007BC2  0C                 	db	12
  5819  007BC3  00                 	db	0
  5820  007BC4  D8                 	db	216
  5821  007BC5  00                 	db	0
  5822  007BC6  1C                 	db	28
  5823  007BC7  00                 	db	0
  5824  007BC8  CE                 	db	206
  5825  007BC9  00                 	db	0
  5826  007BCA  18                 	db	24
  5827  007BCB  00                 	db	0
  5828  007BCC  C7                 	db	199
  5829  007BCD  00                 	db	0
  5830  007BCE  18                 	db	24
  5831  007BCF  80                 	db	128
  5832  007BD0  C1                 	db	193
  5833  007BD1  00                 	db	0
  5834  007BD2  18                 	db	24
  5835  007BD3  E0                 	db	224
  5836  007BD4  C0                 	db	192
  5837  007BD5  00                 	db	0
  5838  007BD6  18                 	db	24
  5839  007BD7  70                 	db	112
  5840  007BD8  C0                 	db	192
  5841  007BD9  00                 	db	0
  5842  007BDA  18                 	db	24
  5843  007BDB  18                 	db	24
  5844  007BDC  80                 	db	128
  5845  007BDD  01                 	db	1
  5846  007BDE  1C                 	db	28
  5847  007BDF  0C                 	db	12
  5848  007BE0  80                 	db	128
  5849  007BE1  01                 	db	1
  5850  007BE2  0C                 	db	12
  5851  007BE3  00                 	db	0
  5852  007BE4  00                 	db	0
  5853  007BE5  03                 	db	3
  5854  007BE6  0E                 	db	14
  5855  007BE7  00                 	db	0
  5856  007BE8  00                 	db	0
  5857  007BE9  07                 	db	7
  5858  007BEA  07                 	db	7
  5859  007BEB  00                 	db	0
  5860  007BEC  00                 	db	0
  5861  007BED  FE                 	db	254
  5862  007BEE  03                 	db	3
  5863  007BEF  00                 	db	0
  5864  007BF0  00                 	db	0
  5865  007BF1  F8                 	db	248
  5866  007BF2  00                 	db	0
  5867  007BF3  00                 	db	0
  5868  007BF4  00                 	db	0
  5869  007BF5  00                 	db	0
  5870  007BF6  00                 	db	0
  5871  007BF7  00                 	db	0
  5872  007BF8  00                 	db	0
  5873  007BF9  00                 	db	0
  5874  007BFA  00                 	db	0
  5875  007BFB  00                 	db	0
  5876  007BFC  00                 	db	0
  5877  007BFD  00                 	db	0
  5878  007BFE  00                 	db	0
  5879  007BFF  00                 	db	0
  5880  007C00  00                 	db	0
  5881  007C01  00                 	db	0
  5882  007C02  00                 	db	0
  5883  007C03  00                 	db	0
  5884  007C04  00                 	db	0
  5885  007C05  00                 	db	0
  5886  007C06  00                 	db	0
  5887  007C07  0C                 	db	12
  5888  007C08  00                 	db	0
  5889  007C09  00                 	db	0
  5890  007C0A  10                 	db	16
  5891  007C0B  0C                 	db	12
  5892  007C0C  00                 	db	0
  5893  007C0D  00                 	db	0
  5894  007C0E  1C                 	db	28
  5895  007C0F  0C                 	db	12
  5896  007C10  00                 	db	0
  5897  007C11  00                 	db	0
  5898  007C12  0F                 	db	15
  5899  007C13  0C                 	db	12
  5900  007C14  00                 	db	0
  5901  007C15  80                 	db	128
  5902  007C16  03                 	db	3
  5903  007C17  0C                 	db	12
  5904  007C18  00                 	db	0
  5905  007C19  E0                 	db	224
  5906  007C1A  01                 	db	1
  5907  007C1B  0C                 	db	12
  5908  007C1C  00                 	db	0
  5909  007C1D  78                 	db	120
  5910  007C1E  00                 	db	0
  5911  007C1F  0C                 	db	12
  5912  007C20  00                 	db	0
  5913  007C21  1E                 	db	30
  5914  007C22  00                 	db	0
  5915  007C23  0C                 	db	12
  5916  007C24  80                 	db	128
  5917  007C25  07                 	db	7
  5918  007C26  00                 	db	0
  5919  007C27  0C                 	db	12
  5920  007C28  C0                 	db	192
  5921  007C29  01                 	db	1
  5922  007C2A  00                 	db	0
  5923  007C2B  0C                 	db	12
  5924  007C2C  F0                 	db	240
  5925  007C2D  00                 	db	0
  5926  007C2E  00                 	db	0
  5927  007C2F  0C                 	db	12
  5928  007C30  3C                 	db	60
  5929  007C31  00                 	db	0
  5930  007C32  00                 	db	0
  5931  007C33  0C                 	db	12
  5932  007C34  0F                 	db	15
  5933  007C35  00                 	db	0
  5934  007C36  00                 	db	0
  5935  007C37  CC                 	db	204
  5936  007C38  03                 	db	3
  5937  007C39  00                 	db	0
  5938  007C3A  00                 	db	0
  5939  007C3B  EC                 	db	236
  5940  007C3C  00                 	db	0
  5941  007C3D  00                 	db	0
  5942  007C3E  00                 	db	0
  5943  007C3F  7C                 	db	124
  5944  007C40  00                 	db	0
  5945  007C41  00                 	db	0
  5946  007C42  00                 	db	0
  5947  007C43  1C                 	db	28
  5948  007C44  00                 	db	0
  5949  007C45  00                 	db	0
  5950  007C46  00                 	db	0
  5951  007C47  04                 	db	4
  5952  007C48  00                 	db	0
  5953  007C49  00                 	db	0
  5954  007C4A  00                 	db	0
  5955  007C4B  00                 	db	0
  5956  007C4C  00                 	db	0
  5957  007C4D  00                 	db	0
  5958  007C4E  00                 	db	0
  5959  007C4F  00                 	db	0
  5960  007C50  00                 	db	0
  5961  007C51  00                 	db	0
  5962  007C52  00                 	db	0
  5963  007C53  00                 	db	0
  5964  007C54  00                 	db	0
  5965  007C55  F8                 	db	248
  5966  007C56  00                 	db	0
  5967  007C57  80                 	db	128
  5968  007C58  07                 	db	7
  5969  007C59  FE                 	db	254
  5970  007C5A  03                 	db	3
  5971  007C5B  E0                 	db	224
  5972  007C5C  1F                 	db	31
  5973  007C5D  0F                 	db	15
  5974  007C5E  07                 	db	7
  5975  007C5F  70                 	db	112
  5976  007C60  38                 	db	56
  5977  007C61  03                 	db	3
  5978  007C62  0E                 	db	14
  5979  007C63  38                 	db	56
  5980  007C64  F0                 	db	240
  5981  007C65  01                 	db	1
  5982  007C66  0C                 	db	12
  5983  007C67  18                 	db	24
  5984  007C68  E0                 	db	224
  5985  007C69  01                 	db	1
  5986  007C6A  0C                 	db	12
  5987  007C6B  1C                 	db	28
  5988  007C6C  E0                 	db	224
  5989  007C6D  00                 	db	0
  5990  007C6E  18                 	db	24
  5991  007C6F  0C                 	db	12
  5992  007C70  C0                 	db	192
  5993  007C71  00                 	db	0
  5994  007C72  18                 	db	24
  5995  007C73  0C                 	db	12
  5996  007C74  C0                 	db	192
  5997  007C75  00                 	db	0
  5998  007C76  18                 	db	24
  5999  007C77  0C                 	db	12
  6000  007C78  C0                 	db	192
  6001  007C79  00                 	db	0
  6002  007C7A  18                 	db	24
  6003  007C7B  0C                 	db	12
  6004  007C7C  C0                 	db	192
  6005  007C7D  00                 	db	0
  6006  007C7E  18                 	db	24
  6007  007C7F  0C                 	db	12
  6008  007C80  C0                 	db	192
  6009  007C81  00                 	db	0
  6010  007C82  18                 	db	24
  6011  007C83  0C                 	db	12
  6012  007C84  E0                 	db	224
  6013  007C85  00                 	db	0
  6014  007C86  18                 	db	24
  6015  007C87  18                 	db	24
  6016  007C88  E0                 	db	224
  6017  007C89  01                 	db	1
  6018  007C8A  0C                 	db	12
  6019  007C8B  38                 	db	56
  6020  007C8C  F0                 	db	240
  6021  007C8D  01                 	db	1
  6022  007C8E  0C                 	db	12
  6023  007C8F  70                 	db	112
  6024  007C90  38                 	db	56
  6025  007C91  03                 	db	3
  6026  007C92  06                 	db	6
  6027  007C93  E0                 	db	224
  6028  007C94  1F                 	db	31
  6029  007C95  0F                 	db	15
  6030  007C96  07                 	db	7
  6031  007C97  80                 	db	128
  6032  007C98  0F                 	db	15
  6033  007C99  FE                 	db	254
  6034  007C9A  03                 	db	3
  6035  007C9B  00                 	db	0
  6036  007C9C  00                 	db	0
  6037  007C9D  F8                 	db	248
  6038  007C9E  00                 	db	0
  6039  007C9F  00                 	db	0
  6040  007CA0  00                 	db	0
  6041  007CA1  00                 	db	0
  6042  007CA2  00                 	db	0
  6043  007CA3  00                 	db	0
  6044  007CA4  00                 	db	0
  6045  007CA5  00                 	db	0
  6046  007CA6  00                 	db	0
  6047  007CA7  00                 	db	0
  6048  007CA8  00                 	db	0
  6049  007CA9  00                 	db	0
  6050  007CAA  00                 	db	0
  6051  007CAB  80                 	db	128
  6052  007CAC  0F                 	db	15
  6053  007CAD  00                 	db	0
  6054  007CAE  00                 	db	0
  6055  007CAF  E0                 	db	224
  6056  007CB0  3F                 	db	63
  6057  007CB1  00                 	db	0
  6058  007CB2  00                 	db	0
  6059  007CB3  70                 	db	112
  6060  007CB4  70                 	db	112
  6061  007CB5  00                 	db	0
  6062  007CB6  00                 	db	0
  6063  007CB7  38                 	db	56
  6064  007CB8  60                 	db	96
  6065  007CB9  00                 	db	0
  6066  007CBA  00                 	db	0
  6067  007CBB  18                 	db	24
  6068  007CBC  C0                 	db	192
  6069  007CBD  00                 	db	0
  6070  007CBE  10                 	db	16
  6071  007CBF  1C                 	db	28
  6072  007CC0  C0                 	db	192
  6073  007CC1  00                 	db	0
  6074  007CC2  18                 	db	24
  6075  007CC3  0C                 	db	12
  6076  007CC4  80                 	db	128
  6077  007CC5  01                 	db	1
  6078  007CC6  0E                 	db	14
  6079  007CC7  0C                 	db	12
  6080  007CC8  80                 	db	128
  6081  007CC9  01                 	db	1
  6082  007CCA  07                 	db	7
  6083  007CCB  0C                 	db	12
  6084  007CCC  80                 	db	128
  6085  007CCD  81                 	db	129
  6086  007CCE  01                 	db	1
  6087  007CCF  0C                 	db	12
  6088  007CD0  80                 	db	128
  6089  007CD1  E1                 	db	225
  6090  007CD2  00                 	db	0
  6091  007CD3  0C                 	db	12
  6092  007CD4  80                 	db	128
  6093  007CD5  71                 	db	113
  6094  007CD6  00                 	db	0
  6095  007CD7  1C                 	db	28
  6096  007CD8  80                 	db	128
  6097  007CD9  1D                 	db	29
  6098  007CDA  00                 	db	0
  6099  007CDB  18                 	db	24
  6100  007CDC  80                 	db	128
  6101  007CDD  0F                 	db	15
  6102  007CDE  00                 	db	0
  6103  007CDF  38                 	db	56
  6104  007CE0  C0                 	db	192
  6105  007CE1  03                 	db	3
  6106  007CE2  00                 	db	0
  6107  007CE3  70                 	db	112
  6108  007CE4  F0                 	db	240
  6109  007CE5  01                 	db	1
  6110  007CE6  00                 	db	0
  6111  007CE7  E0                 	db	224
  6112  007CE8  7F                 	db	127
  6113  007CE9  00                 	db	0
  6114  007CEA  00                 	db	0
  6115  007CEB  80                 	db	128
  6116  007CEC  1F                 	db	31
  6117  007CED  00                 	db	0
  6118  007CEE  00                 	db	0
  6119  007CEF  00                 	db	0
  6120  007CF0  00                 	db	0
  6121  007CF1  00                 	db	0
  6122  007CF2  00                 	db	0
  6123  007CF3  00                 	db	0
  6124  007CF4  00                 	db	0
  6125  007CF5  00                 	db	0
  6126  007CF6  00                 	db	0
  6127  007CF7                     __end_of_numbers:
  6128                           	callstack 0
  6129  007CF7                     _help:
  6130                           	callstack 0
  6131  007CF7  68                 	db	104
  6132  007CF8  65                 	db	101
  6133  007CF9  6C                 	db	108
  6134  007CFA  70                 	db	112
  6135  007CFB  00                 	db	0
  6136  007CFC                     __end_of_help:
  6137                           	callstack 0
  6138  007CFC                     _setreset:
  6139                           	callstack 0
  6140  007CFC  73                 	db	115
  6141  007CFD  65                 	db	101
  6142  007CFE  74                 	db	116
  6143  007CFF  72                 	db	114
  6144  007D00  65                 	db	101
  6145  007D01  73                 	db	115
  6146  007D02  65                 	db	101
  6147  007D03  74                 	db	116
  6148  007D04  00                 	db	0
  6149  007D05                     __end_of_setreset:
  6150                           	callstack 0
  6151  007D05                     _setest:
  6152                           	callstack 0
  6153  007D05  73                 	db	115
  6154  007D06  65                 	db	101
  6155  007D07  74                 	db	116
  6156  007D08  65                 	db	101
  6157  007D09  73                 	db	115
  6158  007D0A  74                 	db	116
  6159  007D0B  3A                 	db	58
  6160  007D0C  00                 	db	0
  6161  007D0D                     __end_of_setest:
  6162                           	callstack 0
  6163  007D0D                     _setpwm:
  6164                           	callstack 0
  6165  007D0D  73                 	db	115
  6166  007D0E  65                 	db	101
  6167  007D0F  74                 	db	116
  6168  007D10  70                 	db	112
  6169  007D11  77                 	db	119
  6170  007D12  6D                 	db	109
  6171  007D13  3A                 	db	58
  6172  007D14  00                 	db	0
  6173  007D15                     __end_of_setpwm:
  6174                           	callstack 0
  6175  007D15                     _gettmp:
  6176                           	callstack 0
  6177  007D15  67                 	db	103
  6178  007D16  65                 	db	101
  6179  007D17  74                 	db	116
  6180  007D18  74                 	db	116
  6181  007D19  6D                 	db	109
  6182  007D1A  70                 	db	112
  6183  007D1B  00                 	db	0
  6184  007D1C                     __end_of_gettmp:
  6185                           	callstack 0
  6186  0000                     _TMR0	set	4054
  6187  0000                     _PORTDbits	set	3971
  6188  0000                     _TRISBbits	set	3987
  6189  0000                     _TRISB	set	3987
  6190  0000                     _PORTBbits	set	3969
  6191  0000                     _RCREG	set	4014
  6192  0000                     _TXREG	set	4013
  6193  0000                     _IPR1bits	set	3999
  6194  0000                     _PIE1bits	set	3997
  6195  0000                     _RCSTAbits	set	4011
  6196  0000                     _SPBRG	set	4015
  6197  0000                     _TXSTAbits	set	4012
  6198  0000                     _TRISCbits	set	3988
  6199  0000                     _TMR2	set	4044
  6200  0000                     _T2CONbits	set	4042
  6201  0000                     _CCPR1L	set	4030
  6202  0000                     _PR2	set	4043
  6203  0000                     _CCP1CONbits	set	4029
  6204  0000                     _PIR1bits	set	3998
  6205  0000                     _INTCON2bits	set	4081
  6206  0000                     _T0CONbits	set	4053
  6207  0000                     _RCONbits	set	4048
  6208  0000                     _INTCONbits	set	4082
  6209  0000                     _PORTD	set	3971
  6210  0000                     _TRISD	set	3989
  6211  0000                     _TMR2ON	set	32338
  6212  0000                     _TMR0IE	set	32661
  6213  0000                     _TMR0IF	set	32658
  6214  0000                     _TMR0ON	set	32431
  6215  0000                     _PSA	set	32427
  6216  0000                     _T0SE	set	32428
  6217  0000                     _ADON	set	32272
  6218  007D1C                     STR_4:
  6219  007D1C  41                 	db	65	;'A'
  6220  007D1D  6C                 	db	108	;'l'
  6221  007D1E  75                 	db	117	;'u'
  6222  007D1F  6D                 	db	109	;'m'
  6223  007D20  6E                 	db	110	;'n'
  6224  007D21  6F                 	db	111	;'o'
  6225  007D22  73                 	db	115	;'s'
  6226  007D23  3A                 	db	58	;':'
  6227  007D24  20                 	db	32
  6228  007D25  5A                 	db	90	;'Z'
  6229  007D26  75                 	db	117	;'u'
  6230  007D27  6C                 	db	108	;'l'
  6231  007D28  69                 	db	105	;'i'
  6232  007D29  61                 	db	97	;'a'
  6233  007D2A  6E                 	db	110	;'n'
  6234  007D2B  69                 	db	105	;'i'
  6235  007D2C  2C                 	db	44
  6236  007D2D  41                 	db	65	;'A'
  6237  007D2E  67                 	db	103	;'g'
  6238  007D2F  75                 	db	117	;'u'
  6239  007D30  73                 	db	115	;'s'
  6240  007D31  74                 	db	116	;'t'
  6241  007D32  69                 	db	105	;'i'
  6242  007D33  6E                 	db	110	;'n'
  6243  007D34  3B                 	db	59	;';'
  6244  007D35  20                 	db	32
  6245  007D36  4C                 	db	76	;'L'
  6246  007D37  75                 	db	117	;'u'
  6247  007D38  6A                 	db	106	;'j'
  6248  007D39  61                 	db	97	;'a'
  6249  007D3A  6E                 	db	110	;'n'
  6250  007D3B  2C                 	db	44
  6251  007D3C  4C                 	db	76	;'L'
  6252  007D3D  61                 	db	97	;'a'
  6253  007D3E  75                 	db	117	;'u'
  6254  007D3F  74                 	db	116	;'t'
  6255  007D40  61                 	db	97	;'a'
  6256  007D41  72                 	db	114	;'r'
  6257  007D42  6F                 	db	111	;'o'
  6258  007D43  00                 	db	0
  6259  007D44                     STR_53:
  6260  007D44  4F                 	db	79	;'O'
  6261  007D45  62                 	db	98	;'b'
  6262  007D46  74                 	db	116	;'t'
  6263  007D47  65                 	db	101	;'e'
  6264  007D48  6E                 	db	110	;'n'
  6265  007D49  69                 	db	105	;'i'
  6266  007D4A  65                 	db	101	;'e'
  6267  007D4B  6E                 	db	110	;'n'
  6268  007D4C  64                 	db	100	;'d'
  6269  007D4D  6F                 	db	111	;'o'
  6270  007D4E  20                 	db	32
  6271  007D4F  65                 	db	101	;'e'
  6272  007D50  6C                 	db	108	;'l'
  6273  007D51  20                 	db	32
  6274  007D52  76                 	db	118	;'v'
  6275  007D53  61                 	db	97	;'a'
  6276  007D54  6C                 	db	108	;'l'
  6277  007D55  6F                 	db	111	;'o'
  6278  007D56  72                 	db	114	;'r'
  6279  007D57  20                 	db	32
  6280  007D58  64                 	db	100	;'d'
  6281  007D59  65                 	db	101	;'e'
  6282  007D5A  20                 	db	32
  6283  007D5B  74                 	db	116	;'t'
  6284  007D5C  65                 	db	101	;'e'
  6285  007D5D  6D                 	db	109	;'m'
  6286  007D5E  70                 	db	112	;'p'
  6287  007D5F  65                 	db	101	;'e'
  6288  007D60  72                 	db	114	;'r'
  6289  007D61  61                 	db	97	;'a'
  6290  007D62  74                 	db	116	;'t'
  6291  007D63  75                 	db	117	;'u'
  6292  007D64  72                 	db	114	;'r'
  6293  007D65  61                 	db	97	;'a'
  6294  007D66  3A                 	db	58	;':'
  6295  007D67  00                 	db	0
  6296  007D68                     STR_5:
  6297  007D68  50                 	db	80	;'P'
  6298  007D69  72                 	db	114	;'r'
  6299  007D6A  6F                 	db	111	;'o'
  6300  007D6B  79                 	db	121	;'y'
  6301  007D6C  65                 	db	101	;'e'
  6302  007D6D  63                 	db	99	;'c'
  6303  007D6E  74                 	db	116	;'t'
  6304  007D6F  6F                 	db	111	;'o'
  6305  007D70  3A                 	db	58	;':'
  6306  007D71  20                 	db	32
  6307  007D72  54                 	db	84	;'T'
  6308  007D73  72                 	db	114	;'r'
  6309  007D74  61                 	db	97	;'a'
  6310  007D75  62                 	db	98	;'b'
  6311  007D76  61                 	db	97	;'a'
  6312  007D77  6A                 	db	106	;'j'
  6313  007D78  6F                 	db	111	;'o'
  6314  007D79  20                 	db	32
  6315  007D7A  46                 	db	70	;'F'
  6316  007D7B  69                 	db	105	;'i'
  6317  007D7C  6E                 	db	110	;'n'
  6318  007D7D  61                 	db	97	;'a'
  6319  007D7E  6C                 	db	108	;'l'
  6320  007D7F  20                 	db	32
  6321  007D80  44                 	db	68	;'D'
  6322  007D81  65                 	db	101	;'e'
  6323  007D82  73                 	db	115	;'s'
  6324  007D83  61                 	db	97	;'a'
  6325  007D84  72                 	db	114	;'r'
  6326  007D85  72                 	db	114	;'r'
  6327  007D86  6F                 	db	111	;'o'
  6328  007D87  6C                 	db	108	;'l'
  6329  007D88  6C                 	db	108	;'l'
  6330  007D89  6F                 	db	111	;'o'
  6331  007D8A  00                 	db	0
  6332  007D8B                     STR_9:
  6333  007D8B  45                 	db	69	;'E'
  6334  007D8C  73                 	db	115	;'s'
  6335  007D8D  74                 	db	116	;'t'
  6336  007D8E  61                 	db	97	;'a'
  6337  007D8F  20                 	db	32
  6338  007D90  70                 	db	112	;'p'
  6339  007D91  72                 	db	114	;'r'
  6340  007D92  6F                 	db	111	;'o'
  6341  007D93  67                 	db	103	;'g'
  6342  007D94  72                 	db	114	;'r'
  6343  007D95  61                 	db	97	;'a'
  6344  007D96  6D                 	db	109	;'m'
  6345  007D97  61                 	db	97	;'a'
  6346  007D98  20                 	db	32
  6347  007D99  6D                 	db	109	;'m'
  6348  007D9A  69                 	db	105	;'i'
  6349  007D9B  64                 	db	100	;'d'
  6350  007D9C  65                 	db	101	;'e'
  6351  007D9D  20                 	db	32
  6352  007D9E  6C                 	db	108	;'l'
  6353  007D9F  61                 	db	97	;'a'
  6354  007DA0  20                 	db	32
  6355  007DA1  74                 	db	116	;'t'
  6356  007DA2  65                 	db	101	;'e'
  6357  007DA3  6D                 	db	109	;'m'
  6358  007DA4  70                 	db	112	;'p'
  6359  007DA5  65                 	db	101	;'e'
  6360  007DA6  72                 	db	114	;'r'
  6361  007DA7  61                 	db	97	;'a'
  6362  007DA8  74                 	db	116	;'t'
  6363  007DA9  75                 	db	117	;'u'
  6364  007DAA  72                 	db	114	;'r'
  6365  007DAB  61                 	db	97	;'a'
  6366  007DAC  00                 	db	0
  6367  007DAD                     STR_55:
  6368  007DAD  4C                 	db	76	;'L'
  6369  007DAE  69                 	db	105	;'i'
  6370  007DAF  73                 	db	115	;'s'
  6371  007DB0  74                 	db	116	;'t'
  6372  007DB1  61                 	db	97	;'a'
  6373  007DB2  64                 	db	100	;'d'
  6374  007DB3  6F                 	db	111	;'o'
  6375  007DB4  20                 	db	32
  6376  007DB5  64                 	db	100	;'d'
  6377  007DB6  65                 	db	101	;'e'
  6378  007DB7  20                 	db	32
  6379  007DB8  63                 	db	99	;'c'
  6380  007DB9  6F                 	db	111	;'o'
  6381  007DBA  6D                 	db	109	;'m'
  6382  007DBB  61                 	db	97	;'a'
  6383  007DBC  6E                 	db	110	;'n'
  6384  007DBD  64                 	db	100	;'d'
  6385  007DBE  6F                 	db	111	;'o'
  6386  007DBF  73                 	db	115	;'s'
  6387  007DC0  20                 	db	32
  6388  007DC1  64                 	db	100	;'d'
  6389  007DC2  69                 	db	105	;'i'
  6390  007DC3  73                 	db	115	;'s'
  6391  007DC4  70                 	db	112	;'p'
  6392  007DC5  6F                 	db	111	;'o'
  6393  007DC6  6E                 	db	110	;'n'
  6394  007DC7  69                 	db	105	;'i'
  6395  007DC8  62                 	db	98	;'b'
  6396  007DC9  6C                 	db	108	;'l'
  6397  007DCA  65                 	db	101	;'e'
  6398  007DCB  73                 	db	115	;'s'
  6399  007DCC  3A                 	db	58	;':'
  6400  007DCD  00                 	db	0
  6401  007DCE                     STR_8:
  6402  007DCE  43                 	db	67	;'C'
  6403  007DCF  6F                 	db	111	;'o'
  6404  007DD0  6E                 	db	110	;'n'
  6405  007DD1  74                 	db	116	;'t'
  6406  007DD2  72                 	db	114	;'r'
  6407  007DD3  6F                 	db	111	;'o'
  6408  007DD4  6C                 	db	108	;'l'
  6409  007DD5  61                 	db	97	;'a'
  6410  007DD6  64                 	db	100	;'d'
  6411  007DD7  6F                 	db	111	;'o'
  6412  007DD8  72                 	db	114	;'r'
  6413  007DD9  3A                 	db	58	;':'
  6414  007DDA  20                 	db	32
  6415  007DDB  49                 	db	73	;'I'
  6416  007DDC  4C                 	db	76	;'L'
  6417  007DDD  49                 	db	73	;'I'
  6418  007DDE  39                 	db	57	;'9'
  6419  007DDF  33                 	db	51	;'3'
  6420  007DE0  34                 	db	52	;'4'
  6421  007DE1  31                 	db	49	;'1'
  6422  007DE2  20                 	db	32
  6423  007DE3  4D                 	db	77	;'M'
  6424  007DE4  50                 	db	80	;'P'
  6425  007DE5  4C                 	db	76	;'L'
  6426  007DE6  41                 	db	65	;'A'
  6427  007DE7  42                 	db	66	;'B'
  6428  007DE8  20                 	db	32
  6429  007DE9  58                 	db	88	;'X'
  6430  007DEA  43                 	db	67	;'C'
  6431  007DEB  38                 	db	56	;'8'
  6432  007DEC  00                 	db	0
  6433  007DED                     STR_24:
  6434  007DED  54                 	db	84	;'T'
  6435  007DEE  65                 	db	101	;'e'
  6436  007DEF  6D                 	db	109	;'m'
  6437  007DF0  70                 	db	112	;'p'
  6438  007DF1  65                 	db	101	;'e'
  6439  007DF2  72                 	db	114	;'r'
  6440  007DF3  61                 	db	97	;'a'
  6441  007DF4  74                 	db	116	;'t'
  6442  007DF5  75                 	db	117	;'u'
  6443  007DF6  72                 	db	114	;'r'
  6444  007DF7  61                 	db	97	;'a'
  6445  007DF8  3A                 	db	58	;':'
  6446  007DF9  20                 	db	32
  6447  007DFA  20                 	db	32
  6448  007DFB  20                 	db	32
  6449  007DFC  20                 	db	32
  6450  007DFD  20                 	db	32
  6451  007DFE  25                 	db	37
  6452  007DFF  30                 	db	48	;'0'
  6453  007E00  33                 	db	51	;'3'
  6454  007E01  2E                 	db	46
  6455  007E02  30                 	db	48	;'0'
  6456  007E03  32                 	db	50	;'2'
  6457  007E04  66                 	db	102	;'f'
  6458  007E05  20                 	db	32
  6459  007E06  20                 	db	32
  6460  007E07  20                 	db	32
  6461  007E08  20                 	db	32
  6462  007E09  20                 	db	32
  6463  007E0A  43                 	db	67	;'C'
  6464  007E0B  00                 	db	0
  6465  007E0C                     STR_3:
  6466  007E0C  49                 	db	73	;'I'
  6467  007E0D  6E                 	db	110	;'n'
  6468  007E0E  69                 	db	105	;'i'
  6469  007E0F  63                 	db	99	;'c'
  6470  007E10  69                 	db	105	;'i'
  6471  007E11  61                 	db	97	;'a'
  6472  007E12  6C                 	db	108	;'l'
  6473  007E13  69                 	db	105	;'i'
  6474  007E14  7A                 	db	122	;'z'
  6475  007E15  61                 	db	97	;'a'
  6476  007E16  6E                 	db	110	;'n'
  6477  007E17  64                 	db	100	;'d'
  6478  007E18  6F                 	db	111	;'o'
  6479  007E19  20                 	db	32
  6480  007E1A  63                 	db	99	;'c'
  6481  007E1B  6F                 	db	111	;'o'
  6482  007E1C  6E                 	db	110	;'n'
  6483  007E1D  74                 	db	116	;'t'
  6484  007E1E  72                 	db	114	;'r'
  6485  007E1F  6F                 	db	111	;'o'
  6486  007E20  6C                 	db	108	;'l'
  6487  007E21  61                 	db	97	;'a'
  6488  007E22  64                 	db	100	;'d'
  6489  007E23  6F                 	db	111	;'o'
  6490  007E24  72                 	db	114	;'r'
  6491  007E25  2E                 	db	46
  6492  007E26  2E                 	db	46
  6493  007E27  2E                 	db	46
  6494  007E28  00                 	db	0
  6495  007E29                     STR_15:
  6496  007E29  54                 	db	84	;'T'
  6497  007E2A  65                 	db	101	;'e'
  6498  007E2B  6D                 	db	109	;'m'
  6499  007E2C  70                 	db	112	;'p'
  6500  007E2D  65                 	db	101	;'e'
  6501  007E2E  72                 	db	114	;'r'
  6502  007E2F  61                 	db	97	;'a'
  6503  007E30  74                 	db	116	;'t'
  6504  007E31  75                 	db	117	;'u'
  6505  007E32  72                 	db	114	;'r'
  6506  007E33  61                 	db	97	;'a'
  6507  007E34  3A                 	db	58	;':'
  6508  007E35  20                 	db	32
  6509  007E36  20                 	db	32
  6510  007E37  20                 	db	32
  6511  007E38  20                 	db	32
  6512  007E39  30                 	db	48	;'0'
  6513  007E3A  2E                 	db	46
  6514  007E3B  30                 	db	48	;'0'
  6515  007E3C  30                 	db	48	;'0'
  6516  007E3D  20                 	db	32
  6517  007E3E  20                 	db	32
  6518  007E3F  20                 	db	32
  6519  007E40  20                 	db	32
  6520  007E41  20                 	db	32
  6521  007E42  43                 	db	67	;'C'
  6522  007E43  00                 	db	0
  6523  007E44                     STR_12:
  6524  007E44  56                 	db	86	;'V'
  6525  007E45  69                 	db	105	;'i'
  6526  007E46  73                 	db	115	;'s'
  6527  007E47  75                 	db	117	;'u'
  6528  007E48  61                 	db	97	;'a'
  6529  007E49  6C                 	db	108	;'l'
  6530  007E4A  69                 	db	105	;'i'
  6531  007E4B  7A                 	db	122	;'z'
  6532  007E4C  61                 	db	97	;'a'
  6533  007E4D  63                 	db	99	;'c'
  6534  007E4E  69                 	db	105	;'i'
  6535  007E4F  6F                 	db	111	;'o'
  6536  007E50  6E                 	db	110	;'n'
  6537  007E51  20                 	db	32
  6538  007E52  64                 	db	100	;'d'
  6539  007E53  65                 	db	101	;'e'
  6540  007E54  20                 	db	32
  6541  007E55  43                 	db	67	;'C'
  6542  007E56  6F                 	db	111	;'o'
  6543  007E57  6E                 	db	110	;'n'
  6544  007E58  74                 	db	116	;'t'
  6545  007E59  72                 	db	114	;'r'
  6546  007E5A  6F                 	db	111	;'o'
  6547  007E5B  6C                 	db	108	;'l'
  6548  007E5C  65                 	db	101	;'e'
  6549  007E5D  73                 	db	115	;'s'
  6550  007E5E  00                 	db	0
  6551  007E5F                     STR_48:
  6552  007E5F  52                 	db	82	;'R'
  6553  007E60  65                 	db	101	;'e'
  6554  007E61  73                 	db	115	;'s'
  6555  007E62  65                 	db	101	;'e'
  6556  007E63  74                 	db	116	;'t'
  6557  007E64  65                 	db	101	;'e'
  6558  007E65  61                 	db	97	;'a'
  6559  007E66  6E                 	db	110	;'n'
  6560  007E67  64                 	db	100	;'d'
  6561  007E68  6F                 	db	111	;'o'
  6562  007E69  20                 	db	32
  6563  007E6A  65                 	db	101	;'e'
  6564  007E6B  6C                 	db	108	;'l'
  6565  007E6C  20                 	db	32
  6566  007E6D  63                 	db	99	;'c'
  6567  007E6E  6F                 	db	111	;'o'
  6568  007E6F  6E                 	db	110	;'n'
  6569  007E70  74                 	db	116	;'t'
  6570  007E71  72                 	db	114	;'r'
  6571  007E72  6F                 	db	111	;'o'
  6572  007E73  6C                 	db	108	;'l'
  6573  007E74  61                 	db	97	;'a'
  6574  007E75  64                 	db	100	;'d'
  6575  007E76  6F                 	db	111	;'o'
  6576  007E77  72                 	db	114	;'r'
  6577  007E78  00                 	db	0
  6578  007E79                     STR_42:
  6579  007E79  53                 	db	83	;'S'
  6580  007E7A  65                 	db	101	;'e'
  6581  007E7B  74                 	db	116	;'t'
  6582  007E7C  65                 	db	101	;'e'
  6583  007E7D  61                 	db	97	;'a'
  6584  007E7E  6E                 	db	110	;'n'
  6585  007E7F  64                 	db	100	;'d'
  6586  007E80  6F                 	db	111	;'o'
  6587  007E81  20                 	db	32
  6588  007E82  65                 	db	101	;'e'
  6589  007E83  73                 	db	115	;'s'
  6590  007E84  74                 	db	116	;'t'
  6591  007E85  61                 	db	97	;'a'
  6592  007E86  64                 	db	100	;'d'
  6593  007E87  6F                 	db	111	;'o'
  6594  007E88  20                 	db	32
  6595  007E89  64                 	db	100	;'d'
  6596  007E8A  65                 	db	101	;'e'
  6597  007E8B  6C                 	db	108	;'l'
  6598  007E8C  20                 	db	32
  6599  007E8D  6D                 	db	109	;'m'
  6600  007E8E  6F                 	db	111	;'o'
  6601  007E8F  74                 	db	116	;'t'
  6602  007E90  6F                 	db	111	;'o'
  6603  007E91  72                 	db	114	;'r'
  6604  007E92  00                 	db	0
  6605  007E93                     STR_14:
  6606  007E93  45                 	db	69	;'E'
  6607  007E94  73                 	db	115	;'s'
  6608  007E95  74                 	db	116	;'t'
  6609  007E96  61                 	db	97	;'a'
  6610  007E97  64                 	db	100	;'d'
  6611  007E98  6F                 	db	111	;'o'
  6612  007E99  20                 	db	32
  6613  007E9A  64                 	db	100	;'d'
  6614  007E9B  65                 	db	101	;'e'
  6615  007E9C  6C                 	db	108	;'l'
  6616  007E9D  20                 	db	32
  6617  007E9E  6D                 	db	109	;'m'
  6618  007E9F  6F                 	db	111	;'o'
  6619  007EA0  74                 	db	116	;'t'
  6620  007EA1  6F                 	db	111	;'o'
  6621  007EA2  72                 	db	114	;'r'
  6622  007EA3  3A                 	db	58	;':'
  6623  007EA4  20                 	db	32
  6624  007EA5  20                 	db	32
  6625  007EA6  20                 	db	32
  6626  007EA7  4F                 	db	79	;'O'
  6627  007EA8  46                 	db	70	;'F'
  6628  007EA9  46                 	db	70	;'F'
  6629  007EAA  00                 	db	0
  6630  007EAB                     STR_21:
  6631  007EAB  45                 	db	69	;'E'
  6632  007EAC  73                 	db	115	;'s'
  6633  007EAD  74                 	db	116	;'t'
  6634  007EAE  61                 	db	97	;'a'
  6635  007EAF  64                 	db	100	;'d'
  6636  007EB0  6F                 	db	111	;'o'
  6637  007EB1  20                 	db	32
  6638  007EB2  64                 	db	100	;'d'
  6639  007EB3  65                 	db	101	;'e'
  6640  007EB4  6C                 	db	108	;'l'
  6641  007EB5  20                 	db	32
  6642  007EB6  6D                 	db	109	;'m'
  6643  007EB7  6F                 	db	111	;'o'
  6644  007EB8  74                 	db	116	;'t'
  6645  007EB9  6F                 	db	111	;'o'
  6646  007EBA  72                 	db	114	;'r'
  6647  007EBB  3A                 	db	58	;':'
  6648  007EBC  20                 	db	32
  6649  007EBD  20                 	db	32
  6650  007EBE  20                 	db	32
  6651  007EBF  4F                 	db	79	;'O'
  6652  007EC0  4E                 	db	78	;'N'
  6653  007EC1  00                 	db	0
  6654  007EC2                     STR_7:
  6655  007EC2  41                 	db	65	;'A'
  6656  007EC3  6C                 	db	108	;'l'
  6657  007EC4  75                 	db	117	;'u'
  6658  007EC5  6D                 	db	109	;'m'
  6659  007EC6  6E                 	db	110	;'n'
  6660  007EC7  6F                 	db	111	;'o'
  6661  007EC8  73                 	db	115	;'s'
  6662  007EC9  3A                 	db	58	;':'
  6663  007ECA  20                 	db	32
  6664  007ECB  5A                 	db	90	;'Z'
  6665  007ECC  75                 	db	117	;'u'
  6666  007ECD  6C                 	db	108	;'l'
  6667  007ECE  69                 	db	105	;'i'
  6668  007ECF  61                 	db	97	;'a'
  6669  007ED0  6E                 	db	110	;'n'
  6670  007ED1  69                 	db	105	;'i'
  6671  007ED2  2C                 	db	44
  6672  007ED3  4C                 	db	76	;'L'
  6673  007ED4  75                 	db	117	;'u'
  6674  007ED5  6A                 	db	106	;'j'
  6675  007ED6  61                 	db	97	;'a'
  6676  007ED7  6E                 	db	110	;'n'
  6677  007ED8  00                 	db	0
  6678  007ED9                     STR_20:
  6679  007ED9  50                 	db	80	;'P'
  6680  007EDA  6F                 	db	111	;'o'
  6681  007EDB  72                 	db	114	;'r'
  6682  007EDC  63                 	db	99	;'c'
  6683  007EDD  65                 	db	101	;'e'
  6684  007EDE  6E                 	db	110	;'n'
  6685  007EDF  74                 	db	116	;'t'
  6686  007EE0  61                 	db	97	;'a'
  6687  007EE1  6A                 	db	106	;'j'
  6688  007EE2  65                 	db	101	;'e'
  6689  007EE3  20                 	db	32
  6690  007EE4  50                 	db	80	;'P'
  6691  007EE5  57                 	db	87	;'W'
  6692  007EE6  4D                 	db	77	;'M'
  6693  007EE7  3A                 	db	58	;':'
  6694  007EE8  20                 	db	32
  6695  007EE9  20                 	db	32
  6696  007EEA  20                 	db	32
  6697  007EEB  25                 	db	37
  6698  007EEC  33                 	db	51	;'3'
  6699  007EED  64                 	db	100	;'d'
  6700  007EEE  00                 	db	0
  6701  007EEF                     STR_6:
  6702  007EEF  53                 	db	83	;'S'
  6703  007EF0  69                 	db	105	;'i'
  6704  007EF1  73                 	db	115	;'s'
  6705  007EF2  74                 	db	116	;'t'
  6706  007EF3  65                 	db	101	;'e'
  6707  007EF4  6D                 	db	109	;'m'
  6708  007EF5  61                 	db	97	;'a'
  6709  007EF6  20                 	db	32
  6710  007EF7  64                 	db	100	;'d'
  6711  007EF8  65                 	db	101	;'e'
  6712  007EF9  20                 	db	32
  6713  007EFA  44                 	db	68	;'D'
  6714  007EFB  65                 	db	101	;'e'
  6715  007EFC  73                 	db	115	;'s'
  6716  007EFD  61                 	db	97	;'a'
  6717  007EFE  72                 	db	114	;'r'
  6718  007EFF  72                 	db	114	;'r'
  6719  007F00  6F                 	db	111	;'o'
  6720  007F01  6C                 	db	108	;'l'
  6721  007F02  6C                 	db	108	;'l'
  6722  007F03  6F                 	db	111	;'o'
  6723  007F04  00                 	db	0
  6724  007F05                     STR_38:
  6725  007F05  44                 	db	68	;'D'
  6726  007F06  65                 	db	101	;'e'
  6727  007F07  62                 	db	98	;'b'
  6728  007F08  65                 	db	101	;'e'
  6729  007F09  20                 	db	32
  6730  007F0A  70                 	db	112	;'p'
  6731  007F0B  72                 	db	114	;'r'
  6732  007F0C  65                 	db	101	;'e'
  6733  007F0D  6E                 	db	110	;'n'
  6734  007F0E  64                 	db	100	;'d'
  6735  007F0F  65                 	db	101	;'e'
  6736  007F10  72                 	db	114	;'r'
  6737  007F11  20                 	db	32
  6738  007F12  65                 	db	101	;'e'
  6739  007F13  6C                 	db	108	;'l'
  6740  007F14  20                 	db	32
  6741  007F15  6D                 	db	109	;'m'
  6742  007F16  6F                 	db	111	;'o'
  6743  007F17  74                 	db	116	;'t'
  6744  007F18  6F                 	db	111	;'o'
  6745  007F19  72                 	db	114	;'r'
  6746  007F1A  00                 	db	0
  6747  007F1B                     STR_30:
  6748  007F1B  45                 	db	69	;'E'
  6749  007F1C  6C                 	db	108	;'l'
  6750  007F1D  20                 	db	32
  6751  007F1E  63                 	db	99	;'c'
  6752  007F1F  6F                 	db	111	;'o'
  6753  007F20  6D                 	db	109	;'m'
  6754  007F21  61                 	db	97	;'a'
  6755  007F22  6E                 	db	110	;'n'
  6756  007F23  64                 	db	100	;'d'
  6757  007F24  6F                 	db	111	;'o'
  6758  007F25  20                 	db	32
  6759  007F26  6E                 	db	110	;'n'
  6760  007F27  6F                 	db	111	;'o'
  6761  007F28  20                 	db	32
  6762  007F29  65                 	db	101	;'e'
  6763  007F2A  78                 	db	120	;'x'
  6764  007F2B  69                 	db	105	;'i'
  6765  007F2C  73                 	db	115	;'s'
  6766  007F2D  74                 	db	116	;'t'
  6767  007F2E  65                 	db	101	;'e'
  6768  007F2F  00                 	db	0
  6769  007F30                     STR_44:
  6770  007F30  20                 	db	32
  6771  007F31  20                 	db	32
  6772  007F32  20                 	db	32
  6773  007F33  20                 	db	32
  6774  007F34  20                 	db	32
  6775  007F35  20                 	db	32
  6776  007F36  4D                 	db	77	;'M'
  6777  007F37  6F                 	db	111	;'o'
  6778  007F38  74                 	db	116	;'t'
  6779  007F39  6F                 	db	111	;'o'
  6780  007F3A  72                 	db	114	;'r'
  6781  007F3B  3A                 	db	58	;':'
  6782  007F3C  70                 	db	112	;'p'
  6783  007F3D  72                 	db	114	;'r'
  6784  007F3E  65                 	db	101	;'e'
  6785  007F3F  6E                 	db	110	;'n'
  6786  007F40  64                 	db	100	;'d'
  6787  007F41  69                 	db	105	;'i'
  6788  007F42  64                 	db	100	;'d'
  6789  007F43  6F                 	db	111	;'o'
  6790  007F44  00                 	db	0
  6791  007F45                     STR_13:
  6792  007F45  50                 	db	80	;'P'
  6793  007F46  6F                 	db	111	;'o'
  6794  007F47  72                 	db	114	;'r'
  6795  007F48  63                 	db	99	;'c'
  6796  007F49  65                 	db	101	;'e'
  6797  007F4A  6E                 	db	110	;'n'
  6798  007F4B  74                 	db	116	;'t'
  6799  007F4C  61                 	db	97	;'a'
  6800  007F4D  6A                 	db	106	;'j'
  6801  007F4E  65                 	db	101	;'e'
  6802  007F4F  20                 	db	32
  6803  007F50  50                 	db	80	;'P'
  6804  007F51  57                 	db	87	;'W'
  6805  007F52  4D                 	db	77	;'M'
  6806  007F53  3A                 	db	58	;':'
  6807  007F54  20                 	db	32
  6808  007F55  20                 	db	32
  6809  007F56  20                 	db	32
  6810  007F57  30                 	db	48	;'0'
  6811  007F58  00                 	db	0
  6812  007F59                     STR_43:
  6813  007F59  20                 	db	32
  6814  007F5A  20                 	db	32
  6815  007F5B  20                 	db	32
  6816  007F5C  20                 	db	32
  6817  007F5D  20                 	db	32
  6818  007F5E  20                 	db	32
  6819  007F5F  4D                 	db	77	;'M'
  6820  007F60  6F                 	db	111	;'o'
  6821  007F61  74                 	db	116	;'t'
  6822  007F62  6F                 	db	111	;'o'
  6823  007F63  72                 	db	114	;'r'
  6824  007F64  3A                 	db	58	;':'
  6825  007F65  61                 	db	97	;'a'
  6826  007F66  70                 	db	112	;'p'
  6827  007F67  61                 	db	97	;'a'
  6828  007F68  67                 	db	103	;'g'
  6829  007F69  61                 	db	97	;'a'
  6830  007F6A  64                 	db	100	;'d'
  6831  007F6B  6F                 	db	111	;'o'
  6832  007F6C  00                 	db	0
  6833  007F6D                     STR_34:
  6834  007F6D  53                 	db	83	;'S'
  6835  007F6E  65                 	db	101	;'e'
  6836  007F6F  74                 	db	116	;'t'
  6837  007F70  65                 	db	101	;'e'
  6838  007F71  61                 	db	97	;'a'
  6839  007F72  6E                 	db	110	;'n'
  6840  007F73  64                 	db	100	;'d'
  6841  007F74  6F                 	db	111	;'o'
  6842  007F75  20                 	db	32
  6843  007F76  76                 	db	118	;'v'
  6844  007F77  61                 	db	97	;'a'
  6845  007F78  6C                 	db	108	;'l'
  6846  007F79  6F                 	db	111	;'o'
  6847  007F7A  72                 	db	114	;'r'
  6848  007F7B  20                 	db	32
  6849  007F7C  70                 	db	112	;'p'
  6850  007F7D  77                 	db	119	;'w'
  6851  007F7E  6D                 	db	109	;'m'
  6852  007F7F  00                 	db	0
  6853  007F80                     STR_10:
  6854  007F80  79                 	db	121	;'y'
  6855  007F81  20                 	db	32
  6856  007F82  63                 	db	99	;'c'
  6857  007F83  6F                 	db	111	;'o'
  6858  007F84  6E                 	db	110	;'n'
  6859  007F85  74                 	db	116	;'t'
  6860  007F86  72                 	db	114	;'r'
  6861  007F87  6F                 	db	111	;'o'
  6862  007F88  6C                 	db	108	;'l'
  6863  007F89  61                 	db	97	;'a'
  6864  007F8A  20                 	db	32
  6865  007F8B  75                 	db	117	;'u'
  6866  007F8C  6E                 	db	110	;'n'
  6867  007F8D  20                 	db	32
  6868  007F8E  70                 	db	112	;'p'
  6869  007F8F  77                 	db	119	;'w'
  6870  007F90  6D                 	db	109	;'m'
  6871  007F91  00                 	db	0
  6872  007F92                     STR_50:
  6873  007F92  63                 	db	99	;'c'
  6874  007F93  6D                 	db	109	;'m'
  6875  007F94  64                 	db	100	;'d'
  6876  007F95  20                 	db	32
  6877  007F96  3C                 	db	60	;'<'
  6878  007F97  20                 	db	32
  6879  007F98  62                 	db	98	;'b'
  6880  007F99  6C                 	db	108	;'l'
  6881  007F9A  6F                 	db	111	;'o'
  6882  007F9B  71                 	db	113	;'q'
  6883  007F9C  75                 	db	117	;'u'
  6884  007F9D  65                 	db	101	;'e'
  6885  007F9E  61                 	db	97	;'a'
  6886  007F9F  64                 	db	100	;'d'
  6887  007FA0  6F                 	db	111	;'o'
  6888  007FA1  00                 	db	0
  6889  007FA2                     STR_35:
  6890  007FA2  20                 	db	32
  6891  007FA3  20                 	db	32
  6892  007FA4  20                 	db	32
  6893  007FA5  20                 	db	32
  6894  007FA6  20                 	db	32
  6895  007FA7  20                 	db	32
  6896  007FA8  53                 	db	83	;'S'
  6897  007FA9  65                 	db	101	;'e'
  6898  007FAA  74                 	db	116	;'t'
  6899  007FAB  3A                 	db	58	;':'
  6900  007FAC  00                 	db	0
  6901  007FAD                     STR_57:
  6902  007FAD  27                 	db	39
  6903  007FAE  31                 	db	49	;'1'
  6904  007FAF  27                 	db	39
  6905  007FB0  20                 	db	32
  6906  007FB1  6F                 	db	111	;'o'
  6907  007FB2  20                 	db	32
  6908  007FB3  27                 	db	39
  6909  007FB4  30                 	db	48	;'0'
  6910  007FB5  27                 	db	39
  6911  007FB6  00                 	db	0
  6912  007FB7                     STR_59:
  6913  007FB7  27                 	db	39
  6914  007FB8  30                 	db	48	;'0'
  6915  007FB9  30                 	db	48	;'0'
  6916  007FBA  30                 	db	48	;'0'
  6917  007FBB  2D                 	db	45
  6918  007FBC  31                 	db	49	;'1'
  6919  007FBD  30                 	db	48	;'0'
  6920  007FBE  30                 	db	48	;'0'
  6921  007FBF  27                 	db	39
  6922  007FC0  00                 	db	0
  6923  007FC1                     STR_16:
  6924  007FC1  49                 	db	73	;'I'
  6925  007FC2  6E                 	db	110	;'n'
  6926  007FC3  69                 	db	105	;'i'
  6927  007FC4  63                 	db	99	;'c'
  6928  007FC5  69                 	db	105	;'i'
  6929  007FC6  61                 	db	97	;'a'
  6930  007FC7  64                 	db	100	;'d'
  6931  007FC8  6F                 	db	111	;'o'
  6932  007FC9  00                 	db	0
  6933  007FCA                     STR_25:
  6934  007FCA  25                 	db	37
  6935  007FCB  33                 	db	51	;'3'
  6936  007FCC  2E                 	db	46
  6937  007FCD  32                 	db	50	;'2'
  6938  007FCE  66                 	db	102	;'f'
  6939  007FCF  20                 	db	32
  6940  007FD0  43                 	db	67	;'C'
  6941  007FD1  00                 	db	0
  6942  007FD2                     STR_26:
  6943  007FD2  20                 	db	32
  6944  007FD3  20                 	db	32
  6945  007FD4  20                 	db	32
  6946  007FD5  20                 	db	32
  6947  007FD6  20                 	db	32
  6948  007FD7  20                 	db	32
  6949  007FD8  00                 	db	0
  6950  007FD9                     STR_18:
  6951  007FD9  63                 	db	99	;'c'
  6952  007FDA  6D                 	db	109	;'m'
  6953  007FDB  64                 	db	100	;'d'
  6954  007FDC  20                 	db	32
  6955  007FDD  3C                 	db	60	;'<'
  6956  007FDE  20                 	db	32
  6957  007FDF  00                 	db	0
  6958  007FE0                     STR_29:
  6959  007FE0  63                 	db	99	;'c'
  6960  007FE1  6D                 	db	109	;'m'
  6961  007FE2  64                 	db	100	;'d'
  6962  007FE3  20                 	db	32
  6963  007FE4  3E                 	db	62	;'>'
  6964  007FE5  20                 	db	32
  6965  007FE6  00                 	db	0
  6966  007FE7                     STR_65:
  6967  007FE7  49                 	db	73	;'I'
  6968  007FE8  4E                 	db	78	;'N'
  6969  007FE9  46                 	db	70	;'F'
  6970  007FEA  00                 	db	0
  6971  007FEB                     STR_69:
  6972  007FEB  4E                 	db	78	;'N'
  6973  007FEC  41                 	db	65	;'A'
  6974  007FED  4E                 	db	78	;'N'
  6975  007FEE  00                 	db	0
  6976  007FEF                     STR_66:
  6977  007FEF  69                 	db	105	;'i'
  6978  007FF0  6E                 	db	110	;'n'
  6979  007FF1  66                 	db	102	;'f'
  6980  007FF2  00                 	db	0
  6981  007FF3                     STR_70:
  6982  007FF3  6E                 	db	110	;'n'
  6983  007FF4  61                 	db	97	;'a'
  6984  007FF5  6E                 	db	110	;'n'
  6985  007FF6  00                 	db	0
  6986  007FF7                     STR_73:
  6987  007FF7  6C                 	db	108	;'l'
  6988  007FF8  66                 	db	102	;'f'
  6989  007FF9  00                 	db	0
  6990  007FFA                     STR_64:
  6991  007FFA  0A                 	db	10
  6992  007FFB  00                 	db	0
  6993  007FFC                     STR_36:
  6994  007FFC  25                 	db	37
  6995  007FFD  00                 	db	0
  6996  007FFE  00                 	db	0	; dummy byte at the end
  6997  0000                     
  6998                           ; #config settings
  6999                           
  7000                           	psect	cinit
  7001  004C68                     __pcinit:
  7002                           	callstack 0
  7003  004C68                     start_initialization:
  7004                           	callstack 0
  7005  004C68                     __initialization:
  7006                           	callstack 0
  7007                           
  7008                           ; Initialize objects allocated to COMRAM (7 bytes)
  7009                           ; load TBLPTR registers with __pidataCOMRAM
  7010  004C68  0E58               	movlw	low __pidataCOMRAM
  7011  004C6A  6EF6               	movwf	tblptrl,c
  7012  004C6C  0E51               	movlw	high __pidataCOMRAM
  7013  004C6E  6EF7               	movwf	tblptrh,c
  7014  004C70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  7015  004C72  6EF8               	movwf	tblptru,c
  7016  004C74  EE00  F052         	lfsr	0,__pdataCOMRAM
  7017  004C78  EE10 F007          	lfsr	1,7
  7018  004C7C                     copy_data0:
  7019  004C7C  0009               	tblrd		*+
  7020  004C7E  CFF5 FFEE          	movff	tablat,postinc0
  7021  004C82  50E5               	movf	postdec1,w,c
  7022  004C84  50E1               	movf	fsr1l,w,c
  7023  004C86  E1FA               	bnz	copy_data0
  7024                           
  7025                           ; Clear objects allocated to BANK1 (130 bytes)
  7026  004C88  EE01  F000         	lfsr	0,__pbssBANK1
  7027  004C8C  0E82               	movlw	130
  7028  004C8E                     clear_0:
  7029  004C8E  6AEE               	clrf	postinc0,c
  7030  004C90  06E8               	decf	wreg,f,c
  7031  004C92  E1FD               	bnz	clear_0
  7032                           
  7033                           ; Clear objects allocated to COMRAM (23 bytes)
  7034  004C94  EE00  F03B         	lfsr	0,__pbssCOMRAM
  7035  004C98  0E17               	movlw	23
  7036  004C9A                     clear_1:
  7037  004C9A  6AEE               	clrf	postinc0,c
  7038  004C9C  06E8               	decf	wreg,f,c
  7039  004C9E  E1FD               	bnz	clear_1
  7040  004CA0                     end_of_initialization:
  7041                           	callstack 0
  7042  004CA0                     __end_of__initialization:
  7043                           	callstack 0
  7044  004CA0  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7045  004CA2  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7046  004CA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  7047  004CA6  6EF8               	movwf	tblptru,c
  7048  004CA8  0100               	movlb	0
  7049  004CAA  EF22  F005         	goto	_main	;jump to C main() function
  7050                           
  7051                           	psect	bssCOMRAM
  7052  00003B                     __pbssCOMRAM:
  7053                           	callstack 0
  7054  00003B                     ___fpclassifyf@F463:
  7055                           	callstack 0
  7056  00003B                     	ds	4
  7057  00003F                     _rpm:
  7058                           	callstack 0
  7059  00003F                     	ds	2
  7060  000041                     _txt_y:
  7061                           	callstack 0
  7062  000041                     	ds	2
  7063  000043                     _txt_x:
  7064                           	callstack 0
  7065  000043                     	ds	2
  7066  000045                     _bg_colour:
  7067                           	callstack 0
  7068  000045                     	ds	2
  7069  000047                     _txt_colour:
  7070                           	callstack 0
  7071  000047                     	ds	2
  7072  000049                     _pr2:
  7073                           	callstack 0
  7074  000049                     	ds	2
  7075  00004B                     _ver:
  7076                           	callstack 0
  7077  00004B                     	ds	1
  7078  00004C                     _set_ver:
  7079                           	callstack 0
  7080  00004C                     	ds	1
  7081  00004D                     _giro:
  7082                           	callstack 0
  7083  00004D                     	ds	1
  7084  00004E                     _giro_ant:
  7085                           	callstack 0
  7086  00004E                     	ds	1
  7087  00004F                     _long_cad:
  7088                           	callstack 0
  7089  00004F                     	ds	1
  7090  000050                     _freq:
  7091                           	callstack 0
  7092  000050                     	ds	2
  7093                           
  7094                           	psect	dataCOMRAM
  7095  000052                     __pdataCOMRAM:
  7096                           	callstack 0
  7097  000052                     _LCD_H:
  7098                           	callstack 0
  7099  000052                     	ds	2
  7100  000054                     _LCD_W:
  7101                           	callstack 0
  7102  000054                     	ds	2
  7103  000056                     _Timer_Most_Pant_Temp:
  7104                           	callstack 0
  7105  000056                     	ds	2
  7106  000058                     _Timer_Lect_Temp:
  7107                           	callstack 0
  7108  000058                     	ds	1
  7109                           
  7110                           	psect	bssBANK1
  7111  000100                     __pbssBANK1:
  7112                           	callstack 0
  7113  000100                     _cmd:
  7114                           	callstack 0
  7115  000100                     	ds	25
  7116  000119                     floorf@F524:
  7117                           	callstack 0
  7118  000119                     	ds	4
  7119  00011D                     _temp:
  7120                           	callstack 0
  7121  00011D                     	ds	4
  7122  000121                     _nout:
  7123                           	callstack 0
  7124  000121                     	ds	2
  7125  000123                     _width:
  7126                           	callstack 0
  7127  000123                     	ds	2
  7128  000125                     _prec:
  7129                           	callstack 0
  7130  000125                     	ds	2
  7131  000127                     _flags:
  7132                           	callstack 0
  7133  000127                     	ds	2
  7134  000129                     _pwm1:
  7135                           	callstack 0
  7136  000129                     	ds	2
  7137  00012B                     _pwm_c:
  7138                           	callstack 0
  7139  00012B                     	ds	1
  7140  00012C                     _vis_p_temp:
  7141                           	callstack 0
  7142  00012C                     	ds	1
  7143  00012D                     _est_c:
  7144                           	callstack 0
  7145  00012D                     	ds	1
  7146  00012E                     _Most_Temp:
  7147                           	callstack 0
  7148  00012E                     	ds	1
  7149  00012F                     _est_m:
  7150                           	callstack 0
  7151  00012F                     	ds	1
  7152  000130                     _vis:
  7153                           	callstack 0
  7154  000130                     	ds	1
  7155  000131                     _fin_carro:
  7156                           	callstack 0
  7157  000131                     	ds	1
  7158  000132                     _dbuf:
  7159                           	callstack 0
  7160  000132                     	ds	80
  7161                           
  7162                           	psect	cstackBANK1
  7163  000182                     __pcstackBANK1:
  7164                           	callstack 0
  7165  000182                     efgtoa@ou:
  7166                           	callstack 0
  7167                           
  7168                           ; 4 bytes @ 0x0
  7169  000182                     	ds	4
  7170  000186                     _efgtoa$1992:
  7171                           	callstack 0
  7172                           
  7173                           ; 2 bytes @ 0x4
  7174  000186                     	ds	2
  7175  000188                     _efgtoa$1993:
  7176                           	callstack 0
  7177                           
  7178                           ; 2 bytes @ 0x6
  7179  000188                     	ds	2
  7180  00018A                     _efgtoa$1997:
  7181                           	callstack 0
  7182                           
  7183                           ; 2 bytes @ 0x8
  7184  00018A                     	ds	2
  7185  00018C                     _efgtoa$2001:
  7186                           	callstack 0
  7187                           
  7188                           ; 2 bytes @ 0xA
  7189  00018C                     	ds	2
  7190  00018E                     _efgtoa$2002:
  7191                           	callstack 0
  7192                           
  7193                           ; 2 bytes @ 0xC
  7194  00018E                     	ds	2
  7195  000190                     _efgtoa$2003:
  7196                           	callstack 0
  7197                           
  7198                           ; 2 bytes @ 0xE
  7199  000190                     	ds	2
  7200  000192                     efgtoa@t:
  7201                           	callstack 0
  7202                           
  7203                           ; 2 bytes @ 0x10
  7204  000192                     	ds	2
  7205  000194                     efgtoa@pp:
  7206                           	callstack 0
  7207                           
  7208                           ; 2 bytes @ 0x12
  7209  000194                     	ds	2
  7210  000196                     efgtoa@m:
  7211                           	callstack 0
  7212                           
  7213                           ; 2 bytes @ 0x14
  7214  000196                     	ds	2
  7215  000198                     efgtoa@ne:
  7216                           	callstack 0
  7217                           
  7218                           ; 2 bytes @ 0x16
  7219  000198                     	ds	2
  7220  00019A                     efgtoa@d:
  7221                           	callstack 0
  7222                           
  7223                           ; 2 bytes @ 0x18
  7224  00019A                     	ds	2
  7225  00019C                     efgtoa@sign:
  7226                           	callstack 0
  7227                           
  7228                           ; 2 bytes @ 0x1A
  7229  00019C                     	ds	2
  7230  00019E                     efgtoa@p:
  7231                           	callstack 0
  7232                           
  7233                           ; 2 bytes @ 0x1C
  7234  00019E                     	ds	2
  7235  0001A0                     efgtoa@nmode:
  7236                           	callstack 0
  7237                           
  7238                           ; 1 bytes @ 0x1E
  7239  0001A0                     	ds	1
  7240  0001A1                     efgtoa@w:
  7241                           	callstack 0
  7242                           
  7243                           ; 2 bytes @ 0x1F
  7244  0001A1                     	ds	2
  7245  0001A3                     efgtoa@mode:
  7246                           	callstack 0
  7247                           
  7248                           ; 1 bytes @ 0x21
  7249  0001A3                     	ds	1
  7250  0001A4                     efgtoa@h:
  7251                           	callstack 0
  7252                           
  7253                           ; 4 bytes @ 0x22
  7254  0001A4                     	ds	4
  7255  0001A8                     efgtoa@l:
  7256                           	callstack 0
  7257                           
  7258                           ; 4 bytes @ 0x26
  7259  0001A8                     	ds	4
  7260  0001AC                     efgtoa@g:
  7261                           	callstack 0
  7262                           
  7263                           ; 4 bytes @ 0x2A
  7264  0001AC                     	ds	4
  7265  0001B0                     efgtoa@i:
  7266                           	callstack 0
  7267                           
  7268                           ; 2 bytes @ 0x2E
  7269  0001B0                     	ds	2
  7270  0001B2                     efgtoa@e:
  7271                           	callstack 0
  7272                           
  7273                           ; 2 bytes @ 0x30
  7274  0001B2                     	ds	2
  7275  0001B4                     efgtoa@n:
  7276                           	callstack 0
  7277                           
  7278                           ; 2 bytes @ 0x32
  7279  0001B4                     	ds	2
  7280  0001B6                     efgtoa@u:
  7281                           	callstack 0
  7282                           
  7283                           ; 4 bytes @ 0x34
  7284  0001B6                     	ds	4
  7285  0001BA                     ?_vfprintf:
  7286                           	callstack 0
  7287  0001BA                     vfprintf@fp:
  7288                           	callstack 0
  7289                           
  7290                           ; 1 bytes @ 0x38
  7291  0001BA                     	ds	1
  7292  0001BB                     vfprintf@fmt:
  7293                           	callstack 0
  7294                           
  7295                           ; 2 bytes @ 0x39
  7296  0001BB                     	ds	2
  7297  0001BD                     vfprintf@ap:
  7298                           	callstack 0
  7299                           
  7300                           ; 1 bytes @ 0x3B
  7301  0001BD                     	ds	1
  7302  0001BE                     ?_sprintf:
  7303                           	callstack 0
  7304  0001BE                     sprintf@s:
  7305                           	callstack 0
  7306                           
  7307                           ; 2 bytes @ 0x3C
  7308  0001BE                     	ds	2
  7309  0001C0                     sprintf@fmt:
  7310                           	callstack 0
  7311                           
  7312                           ; 2 bytes @ 0x3E
  7313  0001C0                     	ds	6
  7314  0001C6                     Set_Val@buffer:
  7315                           	callstack 0
  7316                           
  7317                           ; 32 bytes @ 0x44
  7318  0001C6                     	ds	32
  7319  0001E6                     ??_main:
  7320                           
  7321                           ; 1 bytes @ 0x64
  7322  0001E6                     	ds	2
  7323  0001E8                     main@i:
  7324                           	callstack 0
  7325                           
  7326                           ; 1 bytes @ 0x66
  7327  0001E8                     	ds	1
  7328  0001E9                     main@i_461:
  7329                           	callstack 0
  7330                           
  7331                           ; 1 bytes @ 0x67
  7332  0001E9                     	ds	1
  7333  0001EA                     main@i_462:
  7334                           	callstack 0
  7335                           
  7336                           ; 1 bytes @ 0x68
  7337  0001EA                     	ds	1
  7338  0001EB                     main@i_463:
  7339                           	callstack 0
  7340                           
  7341                           ; 1 bytes @ 0x69
  7342  0001EB                     	ds	1
  7343  0001EC                     main@i_464:
  7344                           	callstack 0
  7345                           
  7346                           ; 1 bytes @ 0x6A
  7347  0001EC                     	ds	1
  7348  0001ED                     main@color:
  7349                           	callstack 0
  7350                           
  7351                           ; 2 bytes @ 0x6B
  7352  0001ED                     	ds	2
  7353  0001EF                     main@x1:
  7354                           	callstack 0
  7355                           
  7356                           ; 2 bytes @ 0x6D
  7357  0001EF                     	ds	2
  7358  0001F1                     main@y1:
  7359                           	callstack 0
  7360                           
  7361                           ; 2 bytes @ 0x6F
  7362  0001F1                     	ds	2
  7363  0001F3                     main@w:
  7364                           	callstack 0
  7365                           
  7366                           ; 2 bytes @ 0x71
  7367  0001F3                     	ds	2
  7368  0001F5                     main@h:
  7369                           	callstack 0
  7370                           
  7371                           ; 2 bytes @ 0x73
  7372  0001F5                     	ds	2
  7373                           
  7374                           	psect	cstackBANK0
  7375  000060                     __pcstackBANK0:
  7376                           	callstack 0
  7377  000060                     ??_ISRL:
  7378                           
  7379                           ; 1 bytes @ 0x0
  7380  000060                     	ds	5
  7381  000065                     ??_ili9341_write_command:
  7382  000065                     ??_ili9341_write_date:
  7383  000065                     ?_strlen:
  7384                           	callstack 0
  7385  000065                     ?___fpclassifyf:
  7386                           	callstack 0
  7387  000065                     ?_isupper:
  7388                           	callstack 0
  7389  000065                     ?_isdigit:
  7390                           	callstack 0
  7391  000065                     ?_strncmp:
  7392                           	callstack 0
  7393  000065                     ?_isspace:
  7394                           	callstack 0
  7395  000065                     ?___wmul:
  7396                           	callstack 0
  7397  000065                     ?___awdiv:
  7398                           	callstack 0
  7399  000065                     ?___awmod:
  7400                           	callstack 0
  7401  000065                     ?___fladd:
  7402                           	callstack 0
  7403  000065                     ?___aldiv:
  7404                           	callstack 0
  7405  000065                     ?___flneg:
  7406                           	callstack 0
  7407  000065                     ?___xxtofl:
  7408                           	callstack 0
  7409  000065                     ?___aodiv:
  7410                           	callstack 0
  7411  000065                     ?___aomod:
  7412                           	callstack 0
  7413  000065                     UART_int@transmicion:
  7414                           	callstack 0
  7415  000065                     UART_write@dato:
  7416                           	callstack 0
  7417  000065                     strncmp@_l:
  7418                           	callstack 0
  7419  000065                     UART_array@cadena:
  7420                           	callstack 0
  7421  000065                     ___wmul@multiplier:
  7422                           	callstack 0
  7423  000065                     ___awdiv@dividend:
  7424                           	callstack 0
  7425  000065                     ___awmod@dividend:
  7426                           	callstack 0
  7427  000065                     isdigit@c:
  7428                           	callstack 0
  7429  000065                     isspace@c:
  7430                           	callstack 0
  7431  000065                     isupper@c:
  7432                           	callstack 0
  7433  000065                     fputc@c:
  7434                           	callstack 0
  7435  000065                     strcpy@dest:
  7436                           	callstack 0
  7437  000065                     strlen@s:
  7438                           	callstack 0
  7439  000065                     ___aldiv@dividend:
  7440                           	callstack 0
  7441  000065                     ___fleq@ff1:
  7442                           	callstack 0
  7443  000065                     ___flneg@f1:
  7444                           	callstack 0
  7445  000065                     ___fladd@b:
  7446                           	callstack 0
  7447  000065                     ___xxtofl@val:
  7448                           	callstack 0
  7449  000065                     ___fpclassifyf@x:
  7450                           	callstack 0
  7451  000065                     ___aodiv@dividend:
  7452                           	callstack 0
  7453  000065                     ___aomod@dividend:
  7454                           	callstack 0
  7455                           
  7456                           ; 8 bytes @ 0x5
  7457  000065                     	ds	1
  7458  000066                     ??_UART_int:
  7459  000066                     strncmp@_r:
  7460                           	callstack 0
  7461                           
  7462                           ; 2 bytes @ 0x6
  7463  000066                     	ds	1
  7464  000067                     ??_isupper:
  7465  000067                     ??_isdigit:
  7466  000067                     ??_isspace:
  7467  000067                     UART_int@recepcion:
  7468                           	callstack 0
  7469  000067                     ili9341_write_command@cmd:
  7470                           	callstack 0
  7471  000067                     ili9341_write_date@date:
  7472                           	callstack 0
  7473  000067                     fputc@fp:
  7474                           	callstack 0
  7475  000067                     UART_arrayln@cadena:
  7476                           	callstack 0
  7477  000067                     ___wmul@multiplicand:
  7478                           	callstack 0
  7479  000067                     ___awdiv@divisor:
  7480                           	callstack 0
  7481  000067                     ___awmod@divisor:
  7482                           	callstack 0
  7483  000067                     strcpy@src:
  7484                           	callstack 0
  7485  000067                     strlen@a:
  7486                           	callstack 0
  7487                           
  7488                           ; 2 bytes @ 0x7
  7489  000067                     	ds	1
  7490  000068                     ??_ili9341_init:
  7491  000068                     ??_fputc:
  7492  000068                     ili9341_setadress@sc:
  7493                           	callstack 0
  7494  000068                     ili9341_pushcolor@color:
  7495                           	callstack 0
  7496  000068                     ili9341_setcursor@x:
  7497                           	callstack 0
  7498  000068                     strncmp@n:
  7499                           	callstack 0
  7500                           
  7501                           ; 2 bytes @ 0x8
  7502  000068                     	ds	1
  7503  000069                     ??___fpclassifyf:
  7504  000069                     ??_strcpy:
  7505  000069                     ??___xxtofl:
  7506  000069                     ___awdiv@counter:
  7507                           	callstack 0
  7508  000069                     ___awmod@counter:
  7509                           	callstack 0
  7510  000069                     ___wmul@product:
  7511                           	callstack 0
  7512  000069                     ___aldiv@divisor:
  7513                           	callstack 0
  7514  000069                     ___fleq@ff2:
  7515                           	callstack 0
  7516  000069                     ___fladd@a:
  7517                           	callstack 0
  7518                           
  7519                           ; 4 bytes @ 0x9
  7520  000069                     	ds	1
  7521  00006A                     ??_strncmp:
  7522  00006A                     ___awdiv@sign:
  7523                           	callstack 0
  7524  00006A                     ___awmod@sign:
  7525                           	callstack 0
  7526  00006A                     ili9341_setadress@ec:
  7527                           	callstack 0
  7528  00006A                     ili9341_setcursor@y:
  7529                           	callstack 0
  7530                           
  7531                           ; 2 bytes @ 0xA
  7532  00006A                     	ds	1
  7533  00006B                     ??_Task_Com:
  7534  00006B                     ?_tolower:
  7535                           	callstack 0
  7536  00006B                     _isspace$2090:
  7537                           	callstack 0
  7538  00006B                     ___awdiv@quotient:
  7539                           	callstack 0
  7540  00006B                     strcpy@s:
  7541                           	callstack 0
  7542  00006B                     strncmp@r:
  7543                           	callstack 0
  7544  00006B                     tolower@c:
  7545                           	callstack 0
  7546                           
  7547                           ; 2 bytes @ 0xB
  7548  00006B                     	ds	1
  7549  00006C                     ?_atoi:
  7550                           	callstack 0
  7551  00006C                     ili9341_setadress@sp:
  7552                           	callstack 0
  7553  00006C                     ili9341_drawchar@x:
  7554                           	callstack 0
  7555  00006C                     atoi@s:
  7556                           	callstack 0
  7557                           
  7558                           ; 2 bytes @ 0xC
  7559  00006C                     	ds	1
  7560  00006D                     ??___fladd:
  7561  00006D                     ??_tolower:
  7562  00006D                     ??___fleq:
  7563  00006D                     ___aldiv@counter:
  7564                           	callstack 0
  7565  00006D                     ___xxtofl@sign:
  7566                           	callstack 0
  7567  00006D                     strncmp@l:
  7568                           	callstack 0
  7569  00006D                     ___fpclassifyf@e:
  7570                           	callstack 0
  7571  00006D                     fputs@s:
  7572                           	callstack 0
  7573  00006D                     strcpy@d:
  7574                           	callstack 0
  7575  00006D                     ___aodiv@divisor:
  7576                           	callstack 0
  7577  00006D                     ___aomod@divisor:
  7578                           	callstack 0
  7579                           
  7580                           ; 8 bytes @ 0xD
  7581  00006D                     	ds	1
  7582  00006E                     ??_atoi:
  7583  00006E                     ___aldiv@sign:
  7584                           	callstack 0
  7585  00006E                     ___xxtofl@exp:
  7586                           	callstack 0
  7587  00006E                     ili9341_setadress@ep:
  7588                           	callstack 0
  7589  00006E                     ili9341_drawchar@y:
  7590                           	callstack 0
  7591                           
  7592                           ; 2 bytes @ 0xE
  7593  00006E                     	ds	1
  7594  00006F                     fputs@fp:
  7595                           	callstack 0
  7596  00006F                     ___aldiv@quotient:
  7597                           	callstack 0
  7598  00006F                     ___xxtofl@arg:
  7599                           	callstack 0
  7600  00006F                     ___fpclassifyf@u:
  7601                           	callstack 0
  7602                           
  7603                           ; 4 bytes @ 0xF
  7604  00006F                     	ds	1
  7605  000070                     Task_Com@flag:
  7606                           	callstack 0
  7607  000070                     fputs@c:
  7608                           	callstack 0
  7609  000070                     ili9341_fill@color:
  7610                           	callstack 0
  7611  000070                     ili9341_fillrect@x:
  7612                           	callstack 0
  7613  000070                     ili9341_drawvline@x:
  7614                           	callstack 0
  7615  000070                     ili9341_drawhline@x:
  7616                           	callstack 0
  7617  000070                     ili9341_drawchar@fIndex:
  7618                           	callstack 0
  7619                           
  7620                           ; 2 bytes @ 0x10
  7621  000070                     	ds	1
  7622  000071                     Task_Com@j:
  7623                           	callstack 0
  7624  000071                     ___fladd@signs:
  7625                           	callstack 0
  7626  000071                     fputs@i:
  7627                           	callstack 0
  7628  000071                     _tolower$2154:
  7629                           	callstack 0
  7630                           
  7631                           ; 2 bytes @ 0x11
  7632  000071                     	ds	1
  7633  000072                     ___fladd@aexp:
  7634                           	callstack 0
  7635  000072                     ili9341_fill@i:
  7636                           	callstack 0
  7637  000072                     ili9341_fillrect@y:
  7638                           	callstack 0
  7639  000072                     ili9341_drawvline@y:
  7640                           	callstack 0
  7641  000072                     ili9341_drawhline@y:
  7642                           	callstack 0
  7643  000072                     ili9341_drawchar@color:
  7644                           	callstack 0
  7645  000072                     atoi@neg:
  7646                           	callstack 0
  7647  000072                     Task_Com@buffer_set:
  7648                           	callstack 0
  7649                           
  7650                           ; 15 bytes @ 0x12
  7651  000072                     	ds	1
  7652  000073                     ?_pad:
  7653                           	callstack 0
  7654  000073                     ?___flmul:
  7655                           	callstack 0
  7656  000073                     ___fladd@bexp:
  7657                           	callstack 0
  7658  000073                     pad@fp:
  7659                           	callstack 0
  7660  000073                     UART_init@BAUD:
  7661                           	callstack 0
  7662  000073                     ___flmul@b:
  7663                           	callstack 0
  7664                           
  7665                           ; 4 bytes @ 0x13
  7666  000073                     	ds	1
  7667  000074                     ___fladd@grs:
  7668                           	callstack 0
  7669  000074                     ili9341_fill@j:
  7670                           	callstack 0
  7671  000074                     ili9341_fillrect@w:
  7672                           	callstack 0
  7673  000074                     ili9341_drawvline@h:
  7674                           	callstack 0
  7675  000074                     ili9341_drawhline@w:
  7676                           	callstack 0
  7677  000074                     ili9341_drawchar@bg_color:
  7678                           	callstack 0
  7679  000074                     pad@buf:
  7680                           	callstack 0
  7681  000074                     _atoi$2059:
  7682                           	callstack 0
  7683                           
  7684                           ; 2 bytes @ 0x14
  7685  000074                     	ds	1
  7686  000075                     ??_UART_init:
  7687  000075                     ___aodiv@counter:
  7688                           	callstack 0
  7689  000075                     ___aomod@counter:
  7690                           	callstack 0
  7691                           
  7692                           ; 1 bytes @ 0x15
  7693  000075                     	ds	1
  7694  000076                     ??_ili9341_drawchar:
  7695  000076                     ___aodiv@sign:
  7696                           	callstack 0
  7697  000076                     ___aomod@sign:
  7698                           	callstack 0
  7699  000076                     ili9341_fillrect@h:
  7700                           	callstack 0
  7701  000076                     ili9341_drawvline@color:
  7702                           	callstack 0
  7703  000076                     ili9341_drawhline@color:
  7704                           	callstack 0
  7705  000076                     pad@p:
  7706                           	callstack 0
  7707  000076                     _atoi$2061:
  7708                           	callstack 0
  7709  000076                     _UART_init$2421:
  7710                           	callstack 0
  7711                           
  7712                           ; 4 bytes @ 0x16
  7713  000076                     	ds	1
  7714  000077                     ?_abs:
  7715                           	callstack 0
  7716  000077                     abs@a:
  7717                           	callstack 0
  7718  000077                     ___flmul@a:
  7719                           	callstack 0
  7720  000077                     ___aodiv@quotient:
  7721                           	callstack 0
  7722                           
  7723                           ; 8 bytes @ 0x17
  7724  000077                     	ds	1
  7725  000078                     ??_ili9341_drawvline:
  7726  000078                     ??_ili9341_drawhline:
  7727  000078                     ??_pad:
  7728  000078                     _atoi$2060:
  7729                           	callstack 0
  7730  000078                     ili9341_fillrect@color:
  7731                           	callstack 0
  7732                           
  7733                           ; 2 bytes @ 0x18
  7734  000078                     	ds	1
  7735  000079                     ??_abs:
  7736  000079                     pad@i:
  7737                           	callstack 0
  7738  000079                     atoi@n:
  7739                           	callstack 0
  7740                           
  7741                           ; 2 bytes @ 0x19
  7742  000079                     	ds	1
  7743  00007A                     ??_ili9341_fillrect:
  7744                           
  7745                           ; 1 bytes @ 0x1A
  7746  00007A                     	ds	1
  7747  00007B                     ??___flmul:
  7748  00007B                     pad@w:
  7749                           	callstack 0
  7750                           
  7751                           ; 2 bytes @ 0x1B
  7752  00007B                     	ds	1
  7753  00007C                     ili9341_drawchar@iOffset:
  7754                           	callstack 0
  7755                           
  7756                           ; 2 bytes @ 0x1C
  7757  00007C                     	ds	1
  7758  00007D                     ili9341_drawvline@i:
  7759                           	callstack 0
  7760  00007D                     ili9341_drawhline@j:
  7761                           	callstack 0
  7762                           
  7763                           ; 2 bytes @ 0x1D
  7764  00007D                     	ds	1
  7765  00007E                     ili9341_drawchar@j:
  7766                           	callstack 0
  7767                           
  7768                           ; 1 bytes @ 0x1E
  7769  00007E                     	ds	1
  7770  00007F                     ?_dtoa:
  7771                           	callstack 0
  7772  00007F                     ili9341_drawchar@k:
  7773                           	callstack 0
  7774  00007F                     ___flmul@sign:
  7775                           	callstack 0
  7776  00007F                     dtoa@fp:
  7777                           	callstack 0
  7778  00007F                     ili9341_drawvline@j:
  7779                           	callstack 0
  7780  00007F                     ili9341_drawhline@i:
  7781                           	callstack 0
  7782                           
  7783                           ; 2 bytes @ 0x1F
  7784  00007F                     	ds	1
  7785  000080                     ili9341_drawchar@i:
  7786                           	callstack 0
  7787  000080                     ___flmul@aexp:
  7788                           	callstack 0
  7789  000080                     dtoa@d:
  7790                           	callstack 0
  7791                           
  7792                           ; 8 bytes @ 0x20
  7793  000080                     	ds	1
  7794  000081                     ___flmul@bexp:
  7795                           	callstack 0
  7796  000081                     ili9341_drawrect@x:
  7797                           	callstack 0
  7798  000081                     ili9341_draw_string@x:
  7799                           	callstack 0
  7800  000081                     Task_Com@buffer_val:
  7801                           	callstack 0
  7802                           
  7803                           ; 3 bytes @ 0x21
  7804  000081                     	ds	1
  7805  000082                     ___flmul@grs:
  7806                           	callstack 0
  7807                           
  7808                           ; 4 bytes @ 0x22
  7809  000082                     	ds	1
  7810  000083                     ili9341_drawrect@y:
  7811                           	callstack 0
  7812  000083                     ili9341_draw_string@y:
  7813                           	callstack 0
  7814                           
  7815                           ; 2 bytes @ 0x23
  7816  000083                     	ds	1
  7817  000084                     Task_Com@i_535:
  7818                           	callstack 0
  7819                           
  7820                           ; 1 bytes @ 0x24
  7821  000084                     	ds	1
  7822  000085                     Task_Com@comando:
  7823                           	callstack 0
  7824  000085                     ili9341_drawrect@w:
  7825                           	callstack 0
  7826  000085                     ili9341_draw_string@pS:
  7827                           	callstack 0
  7828                           
  7829                           ; 2 bytes @ 0x25
  7830  000085                     	ds	1
  7831  000086                     Task_Com@i:
  7832                           	callstack 0
  7833  000086                     ___flmul@prod:
  7834                           	callstack 0
  7835                           
  7836                           ; 4 bytes @ 0x26
  7837  000086                     	ds	1
  7838  000087                     ili9341_drawrect@h:
  7839                           	callstack 0
  7840  000087                     ili9341_draw_string@fg_color:
  7841                           	callstack 0
  7842                           
  7843                           ; 2 bytes @ 0x27
  7844  000087                     	ds	1
  7845  000088                     ??_dtoa:
  7846                           
  7847                           ; 1 bytes @ 0x28
  7848  000088                     	ds	1
  7849  000089                     ili9341_drawrect@color:
  7850                           	callstack 0
  7851  000089                     ili9341_draw_string@bg_color:
  7852                           	callstack 0
  7853                           
  7854                           ; 2 bytes @ 0x29
  7855  000089                     	ds	1
  7856  00008A                     ___flmul@temp:
  7857                           	callstack 0
  7858                           
  7859                           ; 2 bytes @ 0x2A
  7860  00008A                     	ds	1
  7861  00008B                     ??_ili9341_draw_string:
  7862                           
  7863                           ; 1 bytes @ 0x2B
  7864  00008B                     	ds	1
  7865  00008C                     ?___fldiv:
  7866                           	callstack 0
  7867  00008C                     ?___flsub:
  7868                           	callstack 0
  7869  00008C                     ___flge@ff1:
  7870                           	callstack 0
  7871  00008C                     ___flsub@b:
  7872                           	callstack 0
  7873  00008C                     ___fldiv@b:
  7874                           	callstack 0
  7875                           
  7876                           ; 4 bytes @ 0x2C
  7877  00008C                     	ds	3
  7878  00008F                     ili9341_draw_string@k:
  7879                           	callstack 0
  7880                           
  7881                           ; 2 bytes @ 0x2F
  7882  00008F                     	ds	1
  7883  000090                     _dtoa$1968:
  7884                           	callstack 0
  7885  000090                     ___flge@ff2:
  7886                           	callstack 0
  7887  000090                     ___flsub@a:
  7888                           	callstack 0
  7889  000090                     ___fldiv@a:
  7890                           	callstack 0
  7891                           
  7892                           ; 4 bytes @ 0x30
  7893  000090                     	ds	1
  7894  000091                     ili9341_draw_string@lIndex:
  7895                           	callstack 0
  7896                           
  7897                           ; 2 bytes @ 0x31
  7898  000091                     	ds	1
  7899  000092                     dtoa@p:
  7900                           	callstack 0
  7901                           
  7902                           ; 2 bytes @ 0x32
  7903  000092                     	ds	2
  7904  000094                     ??___fldiv:
  7905  000094                     ??___flge:
  7906  000094                     dtoa@w:
  7907                           	callstack 0
  7908                           
  7909                           ; 2 bytes @ 0x34
  7910  000094                     	ds	2
  7911  000096                     dtoa@s:
  7912                           	callstack 0
  7913                           
  7914                           ; 2 bytes @ 0x36
  7915  000096                     	ds	2
  7916  000098                     ___fldiv@rem:
  7917                           	callstack 0
  7918  000098                     dtoa@n:
  7919                           	callstack 0
  7920                           
  7921                           ; 8 bytes @ 0x38
  7922  000098                     	ds	4
  7923  00009C                     ___fldiv@sign:
  7924                           	callstack 0
  7925                           
  7926                           ; 1 bytes @ 0x3C
  7927  00009C                     	ds	1
  7928  00009D                     ___fldiv@new_exp:
  7929                           	callstack 0
  7930                           
  7931                           ; 2 bytes @ 0x3D
  7932  00009D                     	ds	2
  7933  00009F                     ___fldiv@grs:
  7934                           	callstack 0
  7935                           
  7936                           ; 4 bytes @ 0x3F
  7937  00009F                     	ds	1
  7938  0000A0                     dtoa@i:
  7939                           	callstack 0
  7940                           
  7941                           ; 2 bytes @ 0x40
  7942  0000A0                     	ds	3
  7943  0000A3                     ___fldiv@bexp:
  7944                           	callstack 0
  7945                           
  7946                           ; 1 bytes @ 0x43
  7947  0000A3                     	ds	1
  7948  0000A4                     ___fldiv@aexp:
  7949                           	callstack 0
  7950                           
  7951                           ; 1 bytes @ 0x44
  7952  0000A4                     	ds	1
  7953  0000A5                     ?_floorf:
  7954                           	callstack 0
  7955  0000A5                     ?___fltol:
  7956                           	callstack 0
  7957  0000A5                     ___fltol@f1:
  7958                           	callstack 0
  7959  0000A5                     floorf@x:
  7960                           	callstack 0
  7961                           
  7962                           ; 4 bytes @ 0x45
  7963  0000A5                     	ds	4
  7964  0000A9                     ??_floorf:
  7965  0000A9                     ??___fltol:
  7966                           
  7967                           ; 1 bytes @ 0x49
  7968  0000A9                     	ds	4
  7969  0000AD                     ___fltol@sign1:
  7970                           	callstack 0
  7971                           
  7972                           ; 1 bytes @ 0x4D
  7973  0000AD                     	ds	1
  7974  0000AE                     ___fltol@exp1:
  7975                           	callstack 0
  7976                           
  7977                           ; 1 bytes @ 0x4E
  7978  0000AE                     	ds	1
  7979  0000AF                     ??_PWM_1:
  7980  0000AF                     PWM_init_1@frecuencia:
  7981                           	callstack 0
  7982  0000AF                     floorf@m:
  7983                           	callstack 0
  7984                           
  7985                           ; 4 bytes @ 0x4F
  7986  0000AF                     	ds	2
  7987  0000B1                     PWM_init_1@per:
  7988                           	callstack 0
  7989  0000B1                     PWM_1@per:
  7990                           	callstack 0
  7991                           
  7992                           ; 4 bytes @ 0x51
  7993  0000B1                     	ds	2
  7994  0000B3                     floorf@e:
  7995                           	callstack 0
  7996                           
  7997                           ; 2 bytes @ 0x53
  7998  0000B3                     	ds	2
  7999  0000B5                     PWM_1@pulso_alto:
  8000                           	callstack 0
  8001  0000B5                     floorf@u:
  8002                           	callstack 0
  8003                           
  8004                           ; 4 bytes @ 0x55
  8005  0000B5                     	ds	4
  8006  0000B9                     ?_efgtoa:
  8007                           	callstack 0
  8008  0000B9                     efgtoa@fp:
  8009                           	callstack 0
  8010  0000B9                     PWM_1@aux:
  8011                           	callstack 0
  8012                           
  8013                           ; 4 bytes @ 0x59
  8014  0000B9                     	ds	1
  8015  0000BA                     efgtoa@f:
  8016                           	callstack 0
  8017                           
  8018                           ; 4 bytes @ 0x5A
  8019  0000BA                     	ds	3
  8020  0000BD                     PWM_1@duty:
  8021                           	callstack 0
  8022                           
  8023                           ; 1 bytes @ 0x5D
  8024  0000BD                     	ds	1
  8025  0000BE                     efgtoa@c:
  8026                           	callstack 0
  8027  0000BE                     PWM_1@pwm:
  8028                           	callstack 0
  8029                           
  8030                           ; 2 bytes @ 0x5E
  8031  0000BE                     	ds	1
  8032  0000BF                     ??_efgtoa:
  8033                           
  8034                           ; 1 bytes @ 0x5F
  8035  0000BF                     	ds	1
  8036  0000C0                     
  8037                           ; 1 bytes @ 0x60
  8038  0000C0                     	ds	4
  8039  0000C4                     ?_vfpfcnvrt:
  8040                           	callstack 0
  8041  0000C4                     vfpfcnvrt@fp:
  8042                           	callstack 0
  8043                           
  8044                           ; 1 bytes @ 0x64
  8045  0000C4                     	ds	1
  8046  0000C5                     vfpfcnvrt@fmt:
  8047                           	callstack 0
  8048                           
  8049                           ; 1 bytes @ 0x65
  8050  0000C5                     	ds	1
  8051  0000C6                     vfpfcnvrt@ap:
  8052                           	callstack 0
  8053                           
  8054                           ; 1 bytes @ 0x66
  8055  0000C6                     	ds	1
  8056  0000C7                     ??_vfpfcnvrt:
  8057                           
  8058                           ; 1 bytes @ 0x67
  8059  0000C7                     	ds	4
  8060  0000CB                     vfpfcnvrt@ll:
  8061                           	callstack 0
  8062                           
  8063                           ; 8 bytes @ 0x6B
  8064  0000CB                     	ds	8
  8065  0000D3                     vfpfcnvrt@done:
  8066                           	callstack 0
  8067                           
  8068                           ; 2 bytes @ 0x73
  8069  0000D3                     	ds	2
  8070  0000D5                     _vfpfcnvrt$2017:
  8071                           	callstack 0
  8072                           
  8073                           ; 2 bytes @ 0x75
  8074  0000D5                     	ds	2
  8075  0000D7                     _vfpfcnvrt$2018:
  8076                           	callstack 0
  8077                           
  8078                           ; 2 bytes @ 0x77
  8079  0000D7                     	ds	2
  8080  0000D9                     _vfpfcnvrt$2023:
  8081                           	callstack 0
  8082                           
  8083                           ; 2 bytes @ 0x79
  8084  0000D9                     	ds	2
  8085  0000DB                     vfpfcnvrt@c:
  8086                           	callstack 0
  8087                           
  8088                           ; 1 bytes @ 0x7B
  8089  0000DB                     	ds	1
  8090  0000DC                     vfpfcnvrt@f:
  8091                           	callstack 0
  8092                           
  8093                           ; 4 bytes @ 0x7C
  8094  0000DC                     	ds	4
  8095  0000E0                     vfpfcnvrt@ct:
  8096                           	callstack 0
  8097                           
  8098                           ; 3 bytes @ 0x80
  8099  0000E0                     	ds	3
  8100  0000E3                     vfprintf@cfmt:
  8101                           	callstack 0
  8102                           
  8103                           ; 2 bytes @ 0x83
  8104  0000E3                     	ds	2
  8105  0000E5                     
  8106                           ; 1 bytes @ 0x85
  8107  0000E5                     	ds	2
  8108  0000E7                     sprintf@ap:
  8109                           	callstack 0
  8110                           
  8111                           ; 2 bytes @ 0x87
  8112  0000E7                     	ds	2
  8113  0000E9                     sprintf@f:
  8114                           	callstack 0
  8115                           
  8116                           ; 6 bytes @ 0x89
  8117  0000E9                     	ds	6
  8118  0000EF                     ??_Send_Temp:
  8119                           
  8120                           ; 1 bytes @ 0x8F
  8121  0000EF                     	ds	1
  8122  0000F0                     Send_Temp@buffer:
  8123                           	callstack 0
  8124                           
  8125                           ; 10 bytes @ 0x90
  8126  0000F0                     	ds	10
  8127                           
  8128                           	psect	cstackCOMRAM
  8129  000001                     __pcstackCOMRAM:
  8130                           	callstack 0
  8131  000001                     i2UART_write@dato:
  8132                           	callstack 0
  8133                           
  8134                           ; 1 bytes @ 0x0
  8135  000001                     	ds	1
  8136  000002                     ??_ISRH:
  8137                           
  8138                           ; 1 bytes @ 0x1
  8139  000002                     	ds	2
  8140  000004                     ISRH@aux:
  8141                           	callstack 0
  8142                           
  8143                           ; 2 bytes @ 0x3
  8144  000004                     	ds	2
  8145  000006                     ??_OWReset:
  8146  000006                     ?_OWReadBit:
  8147                           	callstack 0
  8148  000006                     ?i1___fldiv:
  8149                           	callstack 0
  8150  000006                     ?i1___xxtofl:
  8151                           	callstack 0
  8152  000006                     OWWriteBit@x:
  8153                           	callstack 0
  8154  000006                     i1___fldiv@b:
  8155                           	callstack 0
  8156  000006                     i1___xxtofl@val:
  8157                           	callstack 0
  8158                           
  8159                           ; 4 bytes @ 0x5
  8160  000006                     	ds	2
  8161  000008                     ??_OWReadBit:
  8162  000008                     OWWriteByte@data:
  8163                           	callstack 0
  8164                           
  8165                           ; 2 bytes @ 0x7
  8166  000008                     	ds	1
  8167  000009                     OWReadBit@result:
  8168                           	callstack 0
  8169                           
  8170                           ; 2 bytes @ 0x8
  8171  000009                     	ds	1
  8172  00000A                     ??i1___xxtofl:
  8173  00000A                     OWWriteByte@loop:
  8174                           	callstack 0
  8175  00000A                     i1___fldiv@a:
  8176                           	callstack 0
  8177                           
  8178                           ; 4 bytes @ 0x9
  8179  00000A                     	ds	1
  8180  00000B                     ?_OWReadByte:
  8181                           	callstack 0
  8182                           
  8183                           ; 2 bytes @ 0xA
  8184  00000B                     	ds	1
  8185  00000C                     
  8186                           ; 1 bytes @ 0xB
  8187  00000C                     	ds	1
  8188  00000D                     OWReadByte@result:
  8189                           	callstack 0
  8190                           
  8191                           ; 2 bytes @ 0xC
  8192  00000D                     	ds	1
  8193  00000E                     ??i1___fldiv:
  8194  00000E                     i1___xxtofl@sign:
  8195                           	callstack 0
  8196                           
  8197                           ; 1 bytes @ 0xD
  8198  00000E                     	ds	1
  8199  00000F                     i1___xxtofl@exp:
  8200                           	callstack 0
  8201  00000F                     OWReadByte@loop:
  8202                           	callstack 0
  8203                           
  8204                           ; 2 bytes @ 0xE
  8205  00000F                     	ds	1
  8206  000010                     i1___xxtofl@arg:
  8207                           	callstack 0
  8208                           
  8209                           ; 4 bytes @ 0xF
  8210  000010                     	ds	2
  8211  000012                     i1___fldiv@rem:
  8212                           	callstack 0
  8213                           
  8214                           ; 4 bytes @ 0x11
  8215  000012                     	ds	4
  8216  000016                     i1___fldiv@sign:
  8217                           	callstack 0
  8218                           
  8219                           ; 1 bytes @ 0x15
  8220  000016                     	ds	1
  8221  000017                     i1___fldiv@new_exp:
  8222                           	callstack 0
  8223                           
  8224                           ; 2 bytes @ 0x16
  8225  000017                     	ds	2
  8226  000019                     i1___fldiv@grs:
  8227                           	callstack 0
  8228                           
  8229                           ; 4 bytes @ 0x18
  8230  000019                     	ds	4
  8231  00001D                     i1___fldiv@bexp:
  8232                           	callstack 0
  8233                           
  8234                           ; 1 bytes @ 0x1C
  8235  00001D                     	ds	1
  8236  00001E                     i1___fldiv@aexp:
  8237                           	callstack 0
  8238                           
  8239                           ; 1 bytes @ 0x1D
  8240  00001E                     	ds	1
  8241  00001F                     ?_Read_Temperature_DS18B20:
  8242                           	callstack 0
  8243                           
  8244                           ; 4 bytes @ 0x1E
  8245  00001F                     	ds	4
  8246  000023                     ??_Read_Temperature_DS18B20:
  8247                           
  8248                           ; 1 bytes @ 0x22
  8249  000023                     	ds	4
  8250  000027                     Read_Temperature_DS18B20@get:
  8251                           	callstack 0
  8252                           
  8253                           ; 10 bytes @ 0x26
  8254  000027                     	ds	10
  8255  000031                     Read_Temperature_DS18B20@ftemp:
  8256                           	callstack 0
  8257                           
  8258                           ; 4 bytes @ 0x30
  8259  000031                     	ds	4
  8260  000035                     Read_Temperature_DS18B20@k:
  8261                           	callstack 0
  8262                           
  8263                           ; 2 bytes @ 0x34
  8264  000035                     	ds	2
  8265  000037                     Read_Temperature_DS18B20@temp:
  8266                           	callstack 0
  8267                           
  8268                           ; 4 bytes @ 0x36
  8269  000037                     	ds	4
  8270  00003B                     
  8271                           ; 1 bytes @ 0x3A
  8272 ;;
  8273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8274 ;;
  8275 ;; *************** function _main *****************
  8276 ;; Defined at:
  8277 ;;		line 55 in file "Main.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;  i               1  106[BANK1 ] unsigned char 
  8282 ;;  i               1  105[BANK1 ] unsigned char 
  8283 ;;  i               1  104[BANK1 ] unsigned char 
  8284 ;;  i               1  103[BANK1 ] unsigned char 
  8285 ;;  i               1  102[BANK1 ] unsigned char 
  8286 ;;  buffer         10    0        unsigned char [10]
  8287 ;;  h               2  115[BANK1 ] int 
  8288 ;;  w               2  113[BANK1 ] int 
  8289 ;;  y1              2  111[BANK1 ] int 
  8290 ;;  x1              2  109[BANK1 ] int 
  8291 ;;  color           2  107[BANK1 ] unsigned int 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 3F/1
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0
  8302 ;;      Locals:         0       0      15       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       2       0       0       0       0       0       0
  8304 ;;      Totals:         0       0      17       0       0       0       0       0       0
  8305 ;;Total ram usage:       17 bytes
  8306 ;; Hardware stack levels required when called:   16
  8307 ;; This function calls:
  8308 ;;		_PWM_init_1
  8309 ;;		_Send_Temp
  8310 ;;		_Set_Pwm
  8311 ;;		_Set_Val
  8312 ;;		_Task_Com
  8313 ;;		_UART_array
  8314 ;;		_UART_arrayln
  8315 ;;		_UART_init
  8316 ;;		_UART_int
  8317 ;;		_ili9341_draw_string
  8318 ;;		_ili9341_drawrect
  8319 ;;		_ili9341_fill
  8320 ;;		_ili9341_fillrect
  8321 ;;		_ili9341_init
  8322 ;; This function is called by:
  8323 ;;		Startup code after reset
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text0
  8328  000A44                     __ptext0:
  8329                           	callstack 0
  8330  000A44                     _main:
  8331                           	callstack 15
  8332                           
  8333                           ;Main.c: 57:     char buffer[10];;Main.c: 59:     ADON = 0;
  8334                           
  8335                           ;incstack = 0
  8336  000A44  90C2               	bcf	4034,0,c	;volatile
  8337                           
  8338                           ;Main.c: 61:     TRISD = 0;
  8339  000A46  0E00               	movlw	0
  8340  000A48  6E95               	movwf	149,c	;volatile
  8341                           
  8342                           ;Main.c: 62:     PORTD = 0;
  8343  000A4A  0E00               	movlw	0
  8344  000A4C  6E83               	movwf	131,c	;volatile
  8345                           
  8346                           ;Main.c: 65:     ili9341_init();
  8347  000A4E  EC0B  F013         	call	_ili9341_init	;wreg free
  8348                           
  8349                           ;Main.c: 66:     PWM_init_1(5000);
  8350  000A52  0E13               	movlw	19
  8351  000A54  0100               	movlb	0	; () banked
  8352  000A56  6FB0               	movwf	(PWM_init_1@frecuencia+1)& (0+255),b
  8353  000A58  0E88               	movlw	136
  8354  000A5A  6FAF               	movwf	PWM_init_1@frecuencia& (0+255),b
  8355  000A5C  EC38  F022         	call	_PWM_init_1	;wreg free
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;Main.c: 67:     UART_init(9600);
  8359  000A60  0E25               	movlw	37
  8360  000A62  6F74               	movwf	(UART_init@BAUD+1)& (0+255),b
  8361  000A64  0E80               	movlw	128
  8362  000A66  6F73               	movwf	UART_init@BAUD& (0+255),b
  8363  000A68  EC82  F024         	call	_UART_init	;wreg free
  8364                           
  8365                           ;Main.c: 70:     INTCONbits.GIEH = 1;
  8366  000A6C  8EF2               	bsf	242,7,c	;volatile
  8367                           
  8368                           ;Main.c: 71:     INTCONbits.GIEL = 1;
  8369  000A6E  8CF2               	bsf	242,6,c	;volatile
  8370                           
  8371                           ;Main.c: 72:     RCONbits.IPEN = 1;
  8372  000A70  8ED0               	bsf	208,7,c	;volatile
  8373                           
  8374                           ;Main.c: 75:     T0CONbits.TMR0ON = 0;
  8375  000A72  9ED5               	bcf	213,7,c	;volatile
  8376                           
  8377                           ;Main.c: 76:     T0CONbits.T08BIT = 1;
  8378  000A74  8CD5               	bsf	213,6,c	;volatile
  8379                           
  8380                           ;Main.c: 77:     T0CONbits.T0CS = 0;
  8381  000A76  9AD5               	bcf	213,5,c	;volatile
  8382                           
  8383                           ;Main.c: 78:     T0SE = 0;
  8384  000A78  98D5               	bcf	4053,4,c	;volatile
  8385                           
  8386                           ;Main.c: 79:     PSA = 0;
  8387  000A7A  96D5               	bcf	4053,3,c	;volatile
  8388                           
  8389                           ;Main.c: 80:     T0CONbits.T0PS = 0b111;
  8390  000A7C  0E07               	movlw	7
  8391  000A7E  12D5               	iorwf	213,f,c	;volatile
  8392                           
  8393                           ;Main.c: 81:     INTCONbits.TMR0IF = 0;
  8394  000A80  94F2               	bcf	242,2,c	;volatile
  8395                           
  8396                           ;Main.c: 82:     INTCONbits.TMR0IE = 0;
  8397  000A82  9AF2               	bcf	242,5,c	;volatile
  8398                           
  8399                           ;Main.c: 83:     INTCON2bits.TMR0IP = 0;
  8400  000A84  94F1               	bcf	241,2,c	;volatile
  8401                           
  8402                           ;Main.c: 84:     TMR0 = 59;
  8403  000A86  0E00               	movlw	0
  8404  000A88  6ED7               	movwf	215,c	;volatile
  8405  000A8A  0E3B               	movlw	59
  8406  000A8C  6ED6               	movwf	214,c	;volatile
  8407                           
  8408                           ;Main.c: 89:     UART_arrayln("");
  8409  000A8E  0EFB               	movlw	low (STR_64+1)
  8410  000A90  0100               	movlb	0	; () banked
  8411  000A92  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  8412  000A94  0E7F               	movlw	high (STR_64+1)
  8413  000A96  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  8414  000A98  ECC1  F024         	call	_UART_arrayln	;wreg free
  8415                           
  8416                           ;Main.c: 90:     UART_arrayln("");
  8417  000A9C  0EFB               	movlw	low (STR_64+1)
  8418  000A9E  0100               	movlb	0	; () banked
  8419  000AA0  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  8420  000AA2  0E7F               	movlw	high (STR_64+1)
  8421  000AA4  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  8422  000AA6  ECC1  F024         	call	_UART_arrayln	;wreg free
  8423                           
  8424                           ;Main.c: 91:     UART_arrayln("Inicializando controlador...");
  8425  000AAA  0E0C               	movlw	low STR_3
  8426  000AAC  0100               	movlb	0	; () banked
  8427  000AAE  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  8428  000AB0  0E7E               	movlw	high STR_3
  8429  000AB2  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  8430  000AB4  ECC1  F024         	call	_UART_arrayln	;wreg free
  8431                           
  8432                           ;Main.c: 92:     UART_arrayln("Alumnos: Zuliani,Agustin; Lujan,Lautaro");
  8433  000AB8  0E1C               	movlw	low STR_4
  8434  000ABA  0100               	movlb	0	; () banked
  8435  000ABC  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  8436  000ABE  0E7D               	movlw	high STR_4
  8437  000AC0  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  8438  000AC2  ECC1  F024         	call	_UART_arrayln	;wreg free
  8439                           
  8440                           ;Main.c: 93:     UART_arrayln("Proyecto: Trabajo Final Desarrollo");
  8441  000AC6  0E68               	movlw	low STR_5
  8442  000AC8  0100               	movlb	0	; () banked
  8443  000ACA  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  8444  000ACC  0E7D               	movlw	high STR_5
  8445  000ACE  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  8446  000AD0  ECC1  F024         	call	_UART_arrayln	;wreg free
  8447                           
  8448                           ;Main.c: 94:     UART_int(1,0);
  8449  000AD4  0E00               	movlw	0
  8450  000AD6  0100               	movlb	0	; () banked
  8451  000AD8  6F65               	movwf	UART_int@transmicion& (0+255),b
  8452  000ADA  0E01               	movlw	1
  8453  000ADC  EC73  F027         	call	_UART_int
  8454                           
  8455                           ;Main.c: 96:     ili9341_fill(0x0000);
  8456  000AE0  0E00               	movlw	0
  8457  000AE2  0100               	movlb	0	; () banked
  8458  000AE4  6F71               	movwf	(ili9341_fill@color+1)& (0+255),b
  8459  000AE6  0E00               	movlw	0
  8460  000AE8  6F70               	movwf	ili9341_fill@color& (0+255),b
  8461  000AEA  EC32  F025         	call	_ili9341_fill	;wreg free
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;Main.c: 98:     int x1=117,y1=155,w=5,h=10;
  8465  000AEE  0E00               	movlw	0
  8466  000AF0  0101               	movlb	1	; () banked
  8467  000AF2  6FF0               	movwf	(main@x1+1)& (0+255),b
  8468  000AF4  0E75               	movlw	117
  8469  000AF6  6FEF               	movwf	main@x1& (0+255),b
  8470                           
  8471                           ; BSR set to: 1
  8472  000AF8  0E00               	movlw	0
  8473  000AFA  6FF2               	movwf	(main@y1+1)& (0+255),b
  8474  000AFC  0E9B               	movlw	155
  8475  000AFE  6FF1               	movwf	main@y1& (0+255),b
  8476                           
  8477                           ; BSR set to: 1
  8478  000B00  0E00               	movlw	0
  8479  000B02  6FF4               	movwf	(main@w+1)& (0+255),b
  8480  000B04  0E05               	movlw	5
  8481  000B06  6FF3               	movwf	main@w& (0+255),b
  8482                           
  8483                           ; BSR set to: 1
  8484  000B08  0E00               	movlw	0
  8485  000B0A  6FF6               	movwf	(main@h+1)& (0+255),b
  8486  000B0C  0E0A               	movlw	10
  8487  000B0E  6FF5               	movwf	main@h& (0+255),b
  8488                           
  8489                           ; BSR set to: 1
  8490                           ;Main.c: 99:     unsigned int color;;Main.c: 100:     for(char i=1;i<100;i++)
  8491  000B10  0E01               	movlw	1
  8492  000B12  6FE8               	movwf	main@i& (0+255),b
  8493  000B14                     l11636:
  8494                           
  8495                           ; BSR set to: 1
  8496                           ;Main.c: 101:     {;Main.c: 102:         if(i<33) color=0xFFE0;
  8497  000B14  0E21               	movlw	33
  8498  000B16  61E8               	cpfslt	main@i& (0+255),b
  8499  000B18  D004               	goto	l11640
  8500                           
  8501                           ; BSR set to: 1
  8502  000B1A  0EFF               	movlw	255
  8503  000B1C  6FEE               	movwf	(main@color+1)& (0+255),b
  8504  000B1E  0EE0               	movlw	224
  8505  000B20  6FED               	movwf	main@color& (0+255),b
  8506  000B22                     l11640:
  8507                           
  8508                           ; BSR set to: 1
  8509                           ;Main.c: 103:         if(i>=33) color=0x07E0;
  8510  000B22  0E20               	movlw	32
  8511  000B24  65E8               	cpfsgt	main@i& (0+255),b
  8512  000B26  D004               	goto	l11644
  8513                           
  8514                           ; BSR set to: 1
  8515  000B28  0E07               	movlw	7
  8516  000B2A  6FEE               	movwf	(main@color+1)& (0+255),b
  8517  000B2C  0EE0               	movlw	224
  8518  000B2E  6FED               	movwf	main@color& (0+255),b
  8519  000B30                     l11644:
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;Main.c: 104:         ili9341_drawrect(x1,y1,w,h,color);
  8523  000B30  C1EF  F081         	movff	main@x1,ili9341_drawrect@x
  8524  000B34  C1F0  F082         	movff	main@x1+1,ili9341_drawrect@x+1
  8525  000B38  C1F1  F083         	movff	main@y1,ili9341_drawrect@y
  8526  000B3C  C1F2  F084         	movff	main@y1+1,ili9341_drawrect@y+1
  8527  000B40  C1F3  F085         	movff	main@w,ili9341_drawrect@w
  8528  000B44  C1F4  F086         	movff	main@w+1,ili9341_drawrect@w+1
  8529  000B48  C1F5  F087         	movff	main@h,ili9341_drawrect@h
  8530  000B4C  C1F6  F088         	movff	main@h+1,ili9341_drawrect@h+1
  8531  000B50  C1ED  F089         	movff	main@color,ili9341_drawrect@color
  8532  000B54  C1EE  F08A         	movff	main@color+1,ili9341_drawrect@color+1
  8533  000B58  EC91  F022         	call	_ili9341_drawrect	;wreg free
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;Main.c: 105:         x1 = x1 - 5;
  8537  000B5C  0EFB               	movlw	251
  8538  000B5E  0101               	movlb	1	; () banked
  8539  000B60  25EF               	addwf	main@x1& (0+255),w,b
  8540  000B62  6FEF               	movwf	main@x1& (0+255),b
  8541  000B64  0EFF               	movlw	255
  8542  000B66  21F0               	addwfc	(main@x1+1)& (0+255),w,b
  8543  000B68  6FF0               	movwf	(main@x1+1)& (0+255),b
  8544                           
  8545                           ; BSR set to: 1
  8546                           ;Main.c: 106:         y1 = y1 - 5;
  8547  000B6A  0EFB               	movlw	251
  8548  000B6C  25F1               	addwf	main@y1& (0+255),w,b
  8549  000B6E  6FF1               	movwf	main@y1& (0+255),b
  8550  000B70  0EFF               	movlw	255
  8551  000B72  21F2               	addwfc	(main@y1+1)& (0+255),w,b
  8552  000B74  6FF2               	movwf	(main@y1+1)& (0+255),b
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;Main.c: 107:         w = w + 10;
  8556  000B76  0E0A               	movlw	10
  8557  000B78  25F3               	addwf	main@w& (0+255),w,b
  8558  000B7A  6FF3               	movwf	main@w& (0+255),b
  8559  000B7C  0E00               	movlw	0
  8560  000B7E  21F4               	addwfc	(main@w+1)& (0+255),w,b
  8561  000B80  6FF4               	movwf	(main@w+1)& (0+255),b
  8562                           
  8563                           ; BSR set to: 1
  8564                           ;Main.c: 108:         h = h + 10;
  8565  000B82  0E0A               	movlw	10
  8566  000B84  25F5               	addwf	main@h& (0+255),w,b
  8567  000B86  6FF5               	movwf	main@h& (0+255),b
  8568  000B88  0E00               	movlw	0
  8569  000B8A  21F6               	addwfc	(main@h+1)& (0+255),w,b
  8570  000B8C  6FF6               	movwf	(main@h+1)& (0+255),b
  8571                           
  8572                           ; BSR set to: 1
  8573                           ;Main.c: 109:     }
  8574  000B8E  2BE8               	incf	main@i& (0+255),f,b
  8575                           
  8576                           ; BSR set to: 1
  8577  000B90  0E63               	movlw	99
  8578  000B92  65E8               	cpfsgt	main@i& (0+255),b
  8579  000B94  D7BF               	goto	l11636
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;Main.c: 110:     for(char i=1;i<100;i++)
  8583  000B96  0E01               	movlw	1
  8584  000B98  6FE9               	movwf	main@i_461& (0+255),b
  8585  000B9A                     l11660:
  8586                           
  8587                           ; BSR set to: 1
  8588  000B9A  0E63               	movlw	99
  8589  000B9C  65E9               	cpfsgt	main@i_461& (0+255),b
  8590  000B9E  D001               	goto	l11664
  8591  000BA0  D049               	goto	l11692
  8592  000BA2                     l11664:
  8593                           
  8594                           ; BSR set to: 1
  8595                           ;Main.c: 111:     {;Main.c: 112:         if(i<33) color=0x07E0;
  8596  000BA2  0E21               	movlw	33
  8597  000BA4  61E9               	cpfslt	main@i_461& (0+255),b
  8598  000BA6  D004               	goto	l11668
  8599                           
  8600                           ; BSR set to: 1
  8601  000BA8  0E07               	movlw	7
  8602  000BAA  6FEE               	movwf	(main@color+1)& (0+255),b
  8603  000BAC  0EE0               	movlw	224
  8604  000BAE  6FED               	movwf	main@color& (0+255),b
  8605  000BB0                     l11668:
  8606                           
  8607                           ; BSR set to: 1
  8608                           ;Main.c: 113:         if(i>33 && i<66) color=0xF81F;
  8609  000BB0  0E21               	movlw	33
  8610  000BB2  65E9               	cpfsgt	main@i_461& (0+255),b
  8611  000BB4  D007               	goto	l11674
  8612                           
  8613                           ; BSR set to: 1
  8614  000BB6  0E42               	movlw	66
  8615  000BB8  61E9               	cpfslt	main@i_461& (0+255),b
  8616  000BBA  D004               	goto	l11674
  8617                           
  8618                           ; BSR set to: 1
  8619  000BBC  0EF8               	movlw	248
  8620  000BBE  6FEE               	movwf	(main@color+1)& (0+255),b
  8621  000BC0  0E1F               	movlw	31
  8622  000BC2  6FED               	movwf	main@color& (0+255),b
  8623  000BC4                     l11674:
  8624                           
  8625                           ; BSR set to: 1
  8626                           ;Main.c: 114:         if(i>66) color=0xF81F;
  8627  000BC4  0E42               	movlw	66
  8628  000BC6  65E9               	cpfsgt	main@i_461& (0+255),b
  8629  000BC8  D004               	goto	l11678
  8630                           
  8631                           ; BSR set to: 1
  8632  000BCA  0EF8               	movlw	248
  8633  000BCC  6FEE               	movwf	(main@color+1)& (0+255),b
  8634  000BCE  0E1F               	movlw	31
  8635  000BD0  6FED               	movwf	main@color& (0+255),b
  8636  000BD2                     l11678:
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;Main.c: 115:         ili9341_drawrect(x1,y1,w,h,color);
  8640  000BD2  C1EF  F081         	movff	main@x1,ili9341_drawrect@x
  8641  000BD6  C1F0  F082         	movff	main@x1+1,ili9341_drawrect@x+1
  8642  000BDA  C1F1  F083         	movff	main@y1,ili9341_drawrect@y
  8643  000BDE  C1F2  F084         	movff	main@y1+1,ili9341_drawrect@y+1
  8644  000BE2  C1F3  F085         	movff	main@w,ili9341_drawrect@w
  8645  000BE6  C1F4  F086         	movff	main@w+1,ili9341_drawrect@w+1
  8646  000BEA  C1F5  F087         	movff	main@h,ili9341_drawrect@h
  8647  000BEE  C1F6  F088         	movff	main@h+1,ili9341_drawrect@h+1
  8648  000BF2  C1ED  F089         	movff	main@color,ili9341_drawrect@color
  8649  000BF6  C1EE  F08A         	movff	main@color+1,ili9341_drawrect@color+1
  8650  000BFA  EC91  F022         	call	_ili9341_drawrect	;wreg free
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;Main.c: 116:         x1 = x1 + 5;
  8654  000BFE  0E05               	movlw	5
  8655  000C00  0101               	movlb	1	; () banked
  8656  000C02  25EF               	addwf	main@x1& (0+255),w,b
  8657  000C04  6FEF               	movwf	main@x1& (0+255),b
  8658  000C06  0E00               	movlw	0
  8659  000C08  21F0               	addwfc	(main@x1+1)& (0+255),w,b
  8660  000C0A  6FF0               	movwf	(main@x1+1)& (0+255),b
  8661                           
  8662                           ; BSR set to: 1
  8663                           ;Main.c: 117:         y1 = y1 + 5;
  8664  000C0C  0E05               	movlw	5
  8665  000C0E  25F1               	addwf	main@y1& (0+255),w,b
  8666  000C10  6FF1               	movwf	main@y1& (0+255),b
  8667  000C12  0E00               	movlw	0
  8668  000C14  21F2               	addwfc	(main@y1+1)& (0+255),w,b
  8669  000C16  6FF2               	movwf	(main@y1+1)& (0+255),b
  8670                           
  8671                           ; BSR set to: 1
  8672                           ;Main.c: 118:         w = w - 10;
  8673  000C18  0EF6               	movlw	246
  8674  000C1A  25F3               	addwf	main@w& (0+255),w,b
  8675  000C1C  6FF3               	movwf	main@w& (0+255),b
  8676  000C1E  0EFF               	movlw	255
  8677  000C20  21F4               	addwfc	(main@w+1)& (0+255),w,b
  8678  000C22  6FF4               	movwf	(main@w+1)& (0+255),b
  8679                           
  8680                           ; BSR set to: 1
  8681                           ;Main.c: 119:         h = h - 10;
  8682  000C24  0EF6               	movlw	246
  8683  000C26  25F5               	addwf	main@h& (0+255),w,b
  8684  000C28  6FF5               	movwf	main@h& (0+255),b
  8685  000C2A  0EFF               	movlw	255
  8686  000C2C  21F6               	addwfc	(main@h+1)& (0+255),w,b
  8687  000C2E  6FF6               	movwf	(main@h+1)& (0+255),b
  8688                           
  8689                           ; BSR set to: 1
  8690                           ;Main.c: 120:     }
  8691  000C30  2BE9               	incf	main@i_461& (0+255),f,b
  8692  000C32  D7B3               	goto	l11660
  8693  000C34                     l11692:
  8694                           
  8695                           ; BSR set to: 1
  8696                           ;Main.c: 121:     x1=117,y1=155,w=5,h=10;
  8697  000C34  0E00               	movlw	0
  8698  000C36  6FF0               	movwf	(main@x1+1)& (0+255),b
  8699  000C38  0E75               	movlw	117
  8700  000C3A  6FEF               	movwf	main@x1& (0+255),b
  8701  000C3C  0E00               	movlw	0
  8702  000C3E  6FF2               	movwf	(main@y1+1)& (0+255),b
  8703  000C40  0E9B               	movlw	155
  8704  000C42  6FF1               	movwf	main@y1& (0+255),b
  8705  000C44  0E00               	movlw	0
  8706  000C46  6FF4               	movwf	(main@w+1)& (0+255),b
  8707  000C48  0E05               	movlw	5
  8708  000C4A  6FF3               	movwf	main@w& (0+255),b
  8709  000C4C  0E00               	movlw	0
  8710  000C4E  6FF6               	movwf	(main@h+1)& (0+255),b
  8711  000C50  0E0A               	movlw	10
  8712  000C52  6FF5               	movwf	main@h& (0+255),b
  8713                           
  8714                           ;Main.c: 122:     for(char i=1;i<100;i++)
  8715  000C54  0E01               	movlw	1
  8716  000C56  6FEA               	movwf	main@i_462& (0+255),b
  8717  000C58                     l11694:
  8718                           
  8719                           ; BSR set to: 1
  8720  000C58  0E63               	movlw	99
  8721  000C5A  65EA               	cpfsgt	main@i_462& (0+255),b
  8722  000C5C  D001               	goto	l11698
  8723  000C5E  D049               	goto	l11726
  8724  000C60                     l11698:
  8725                           
  8726                           ; BSR set to: 1
  8727                           ;Main.c: 123:     {;Main.c: 124:         if(i<33) color=0xFD20;
  8728  000C60  0E21               	movlw	33
  8729  000C62  61EA               	cpfslt	main@i_462& (0+255),b
  8730  000C64  D004               	goto	l11702
  8731                           
  8732                           ; BSR set to: 1
  8733  000C66  0EFD               	movlw	253
  8734  000C68  6FEE               	movwf	(main@color+1)& (0+255),b
  8735  000C6A  0E20               	movlw	32
  8736  000C6C  6FED               	movwf	main@color& (0+255),b
  8737  000C6E                     l11702:
  8738                           
  8739                           ; BSR set to: 1
  8740                           ;Main.c: 125:         if(i>33 && i<66) color=0x07E0;
  8741  000C6E  0E21               	movlw	33
  8742  000C70  65EA               	cpfsgt	main@i_462& (0+255),b
  8743  000C72  D007               	goto	l11708
  8744                           
  8745                           ; BSR set to: 1
  8746  000C74  0E42               	movlw	66
  8747  000C76  61EA               	cpfslt	main@i_462& (0+255),b
  8748  000C78  D004               	goto	l11708
  8749                           
  8750                           ; BSR set to: 1
  8751  000C7A  0E07               	movlw	7
  8752  000C7C  6FEE               	movwf	(main@color+1)& (0+255),b
  8753  000C7E  0EE0               	movlw	224
  8754  000C80  6FED               	movwf	main@color& (0+255),b
  8755  000C82                     l11708:
  8756                           
  8757                           ; BSR set to: 1
  8758                           ;Main.c: 126:         if(i>66) color=0xFFE0;
  8759  000C82  0E42               	movlw	66
  8760  000C84  65EA               	cpfsgt	main@i_462& (0+255),b
  8761  000C86  D004               	goto	l11712
  8762                           
  8763                           ; BSR set to: 1
  8764  000C88  0EFF               	movlw	255
  8765  000C8A  6FEE               	movwf	(main@color+1)& (0+255),b
  8766  000C8C  0EE0               	movlw	224
  8767  000C8E  6FED               	movwf	main@color& (0+255),b
  8768  000C90                     l11712:
  8769                           
  8770                           ; BSR set to: 1
  8771                           ;Main.c: 127:         ili9341_drawrect(x1,y1,w,h,color);
  8772  000C90  C1EF  F081         	movff	main@x1,ili9341_drawrect@x
  8773  000C94  C1F0  F082         	movff	main@x1+1,ili9341_drawrect@x+1
  8774  000C98  C1F1  F083         	movff	main@y1,ili9341_drawrect@y
  8775  000C9C  C1F2  F084         	movff	main@y1+1,ili9341_drawrect@y+1
  8776  000CA0  C1F3  F085         	movff	main@w,ili9341_drawrect@w
  8777  000CA4  C1F4  F086         	movff	main@w+1,ili9341_drawrect@w+1
  8778  000CA8  C1F5  F087         	movff	main@h,ili9341_drawrect@h
  8779  000CAC  C1F6  F088         	movff	main@h+1,ili9341_drawrect@h+1
  8780  000CB0  C1ED  F089         	movff	main@color,ili9341_drawrect@color
  8781  000CB4  C1EE  F08A         	movff	main@color+1,ili9341_drawrect@color+1
  8782  000CB8  EC91  F022         	call	_ili9341_drawrect	;wreg free
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;Main.c: 128:         x1 = x1 - 5;
  8786  000CBC  0EFB               	movlw	251
  8787  000CBE  0101               	movlb	1	; () banked
  8788  000CC0  25EF               	addwf	main@x1& (0+255),w,b
  8789  000CC2  6FEF               	movwf	main@x1& (0+255),b
  8790  000CC4  0EFF               	movlw	255
  8791  000CC6  21F0               	addwfc	(main@x1+1)& (0+255),w,b
  8792  000CC8  6FF0               	movwf	(main@x1+1)& (0+255),b
  8793                           
  8794                           ; BSR set to: 1
  8795                           ;Main.c: 129:         y1 = y1 - 5;
  8796  000CCA  0EFB               	movlw	251
  8797  000CCC  25F1               	addwf	main@y1& (0+255),w,b
  8798  000CCE  6FF1               	movwf	main@y1& (0+255),b
  8799  000CD0  0EFF               	movlw	255
  8800  000CD2  21F2               	addwfc	(main@y1+1)& (0+255),w,b
  8801  000CD4  6FF2               	movwf	(main@y1+1)& (0+255),b
  8802                           
  8803                           ; BSR set to: 1
  8804                           ;Main.c: 130:         w = w + 10;
  8805  000CD6  0E0A               	movlw	10
  8806  000CD8  25F3               	addwf	main@w& (0+255),w,b
  8807  000CDA  6FF3               	movwf	main@w& (0+255),b
  8808  000CDC  0E00               	movlw	0
  8809  000CDE  21F4               	addwfc	(main@w+1)& (0+255),w,b
  8810  000CE0  6FF4               	movwf	(main@w+1)& (0+255),b
  8811                           
  8812                           ; BSR set to: 1
  8813                           ;Main.c: 131:         h = h + 10;
  8814  000CE2  0E0A               	movlw	10
  8815  000CE4  25F5               	addwf	main@h& (0+255),w,b
  8816  000CE6  6FF5               	movwf	main@h& (0+255),b
  8817  000CE8  0E00               	movlw	0
  8818  000CEA  21F6               	addwfc	(main@h+1)& (0+255),w,b
  8819  000CEC  6FF6               	movwf	(main@h+1)& (0+255),b
  8820                           
  8821                           ; BSR set to: 1
  8822                           ;Main.c: 132:     }
  8823  000CEE  2BEA               	incf	main@i_462& (0+255),f,b
  8824  000CF0  D7B3               	goto	l11694
  8825  000CF2                     l11726:
  8826                           
  8827                           ; BSR set to: 1
  8828                           ;Main.c: 133:     for(char i=1;i<100;i++)
  8829  000CF2  0E01               	movlw	1
  8830  000CF4  6FEB               	movwf	main@i_463& (0+255),b
  8831  000CF6                     l11728:
  8832                           
  8833                           ; BSR set to: 1
  8834  000CF6  0E63               	movlw	99
  8835  000CF8  65EB               	cpfsgt	main@i_463& (0+255),b
  8836  000CFA  D001               	goto	l11732
  8837  000CFC  D048               	goto	l11760
  8838  000CFE                     l11732:
  8839                           
  8840                           ; BSR set to: 1
  8841                           ;Main.c: 134:     {;Main.c: 135:         if(i<33) color=0x07FF;
  8842  000CFE  0E21               	movlw	33
  8843  000D00  61EB               	cpfslt	main@i_463& (0+255),b
  8844  000D02  D003               	goto	l11736
  8845                           
  8846                           ; BSR set to: 1
  8847  000D04  0E07               	movlw	7
  8848  000D06  6FEE               	movwf	(main@color+1)& (0+255),b
  8849  000D08  69ED               	setf	main@color& (0+255),b
  8850  000D0A                     l11736:
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;Main.c: 136:         if(i>33 && i<66) color=0x780F;
  8854  000D0A  0E21               	movlw	33
  8855  000D0C  65EB               	cpfsgt	main@i_463& (0+255),b
  8856  000D0E  D007               	goto	l11742
  8857                           
  8858                           ; BSR set to: 1
  8859  000D10  0E42               	movlw	66
  8860  000D12  61EB               	cpfslt	main@i_463& (0+255),b
  8861  000D14  D004               	goto	l11742
  8862                           
  8863                           ; BSR set to: 1
  8864  000D16  0E78               	movlw	120
  8865  000D18  6FEE               	movwf	(main@color+1)& (0+255),b
  8866  000D1A  0E0F               	movlw	15
  8867  000D1C  6FED               	movwf	main@color& (0+255),b
  8868  000D1E                     l11742:
  8869                           
  8870                           ; BSR set to: 1
  8871                           ;Main.c: 137:         if(i>66) color=0x001F;
  8872  000D1E  0E42               	movlw	66
  8873  000D20  65EB               	cpfsgt	main@i_463& (0+255),b
  8874  000D22  D004               	goto	l11746
  8875                           
  8876                           ; BSR set to: 1
  8877  000D24  0E00               	movlw	0
  8878  000D26  6FEE               	movwf	(main@color+1)& (0+255),b
  8879  000D28  0E1F               	movlw	31
  8880  000D2A  6FED               	movwf	main@color& (0+255),b
  8881  000D2C                     l11746:
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;Main.c: 138:         ili9341_drawrect(x1,y1,w,h,color);
  8885  000D2C  C1EF  F081         	movff	main@x1,ili9341_drawrect@x
  8886  000D30  C1F0  F082         	movff	main@x1+1,ili9341_drawrect@x+1
  8887  000D34  C1F1  F083         	movff	main@y1,ili9341_drawrect@y
  8888  000D38  C1F2  F084         	movff	main@y1+1,ili9341_drawrect@y+1
  8889  000D3C  C1F3  F085         	movff	main@w,ili9341_drawrect@w
  8890  000D40  C1F4  F086         	movff	main@w+1,ili9341_drawrect@w+1
  8891  000D44  C1F5  F087         	movff	main@h,ili9341_drawrect@h
  8892  000D48  C1F6  F088         	movff	main@h+1,ili9341_drawrect@h+1
  8893  000D4C  C1ED  F089         	movff	main@color,ili9341_drawrect@color
  8894  000D50  C1EE  F08A         	movff	main@color+1,ili9341_drawrect@color+1
  8895  000D54  EC91  F022         	call	_ili9341_drawrect	;wreg free
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;Main.c: 139:         x1 = x1 + 5;
  8899  000D58  0E05               	movlw	5
  8900  000D5A  0101               	movlb	1	; () banked
  8901  000D5C  25EF               	addwf	main@x1& (0+255),w,b
  8902  000D5E  6FEF               	movwf	main@x1& (0+255),b
  8903  000D60  0E00               	movlw	0
  8904  000D62  21F0               	addwfc	(main@x1+1)& (0+255),w,b
  8905  000D64  6FF0               	movwf	(main@x1+1)& (0+255),b
  8906                           
  8907                           ; BSR set to: 1
  8908                           ;Main.c: 140:         y1 = y1 + 5;
  8909  000D66  0E05               	movlw	5
  8910  000D68  25F1               	addwf	main@y1& (0+255),w,b
  8911  000D6A  6FF1               	movwf	main@y1& (0+255),b
  8912  000D6C  0E00               	movlw	0
  8913  000D6E  21F2               	addwfc	(main@y1+1)& (0+255),w,b
  8914  000D70  6FF2               	movwf	(main@y1+1)& (0+255),b
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;Main.c: 141:         w = w - 10;
  8918  000D72  0EF6               	movlw	246
  8919  000D74  25F3               	addwf	main@w& (0+255),w,b
  8920  000D76  6FF3               	movwf	main@w& (0+255),b
  8921  000D78  0EFF               	movlw	255
  8922  000D7A  21F4               	addwfc	(main@w+1)& (0+255),w,b
  8923  000D7C  6FF4               	movwf	(main@w+1)& (0+255),b
  8924                           
  8925                           ; BSR set to: 1
  8926                           ;Main.c: 142:         h = h - 10;
  8927  000D7E  0EF6               	movlw	246
  8928  000D80  25F5               	addwf	main@h& (0+255),w,b
  8929  000D82  6FF5               	movwf	main@h& (0+255),b
  8930  000D84  0EFF               	movlw	255
  8931  000D86  21F6               	addwfc	(main@h+1)& (0+255),w,b
  8932  000D88  6FF6               	movwf	(main@h+1)& (0+255),b
  8933                           
  8934                           ; BSR set to: 1
  8935                           ;Main.c: 143:     }
  8936  000D8A  2BEB               	incf	main@i_463& (0+255),f,b
  8937  000D8C  D7B4               	goto	l11728
  8938  000D8E                     l11760:
  8939                           
  8940                           ; BSR set to: 1
  8941                           ;Main.c: 144:     x1=117,y1=155,w=5,h=10;
  8942  000D8E  0E00               	movlw	0
  8943  000D90  6FF0               	movwf	(main@x1+1)& (0+255),b
  8944  000D92  0E75               	movlw	117
  8945  000D94  6FEF               	movwf	main@x1& (0+255),b
  8946  000D96  0E00               	movlw	0
  8947  000D98  6FF2               	movwf	(main@y1+1)& (0+255),b
  8948  000D9A  0E9B               	movlw	155
  8949  000D9C  6FF1               	movwf	main@y1& (0+255),b
  8950  000D9E  0E00               	movlw	0
  8951  000DA0  6FF4               	movwf	(main@w+1)& (0+255),b
  8952  000DA2  0E05               	movlw	5
  8953  000DA4  6FF3               	movwf	main@w& (0+255),b
  8954  000DA6  0E00               	movlw	0
  8955  000DA8  6FF6               	movwf	(main@h+1)& (0+255),b
  8956  000DAA  0E0A               	movlw	10
  8957  000DAC  6FF5               	movwf	main@h& (0+255),b
  8958                           
  8959                           ;Main.c: 145:     for(char i=1;i<100;i++)
  8960  000DAE  0E01               	movlw	1
  8961  000DB0  6FEC               	movwf	main@i_464& (0+255),b
  8962  000DB2                     l11762:
  8963                           
  8964                           ; BSR set to: 1
  8965  000DB2  0E63               	movlw	99
  8966  000DB4  65EC               	cpfsgt	main@i_464& (0+255),b
  8967  000DB6  D001               	goto	l11766
  8968  000DB8  D047               	goto	l11794
  8969  000DBA                     l11766:
  8970                           
  8971                           ; BSR set to: 1
  8972                           ;Main.c: 146:     {;Main.c: 147:         if(i<33) color=0x7BE0;
  8973  000DBA  0E21               	movlw	33
  8974  000DBC  61EC               	cpfslt	main@i_464& (0+255),b
  8975  000DBE  D004               	goto	l11770
  8976                           
  8977                           ; BSR set to: 1
  8978  000DC0  0E7B               	movlw	123
  8979  000DC2  6FEE               	movwf	(main@color+1)& (0+255),b
  8980  000DC4  0EE0               	movlw	224
  8981  000DC6  6FED               	movwf	main@color& (0+255),b
  8982  000DC8                     l11770:
  8983                           
  8984                           ; BSR set to: 1
  8985                           ;Main.c: 148:         if(i>33 && i<66) color=0xFFFF;
  8986  000DC8  0E21               	movlw	33
  8987  000DCA  65EC               	cpfsgt	main@i_464& (0+255),b
  8988  000DCC  D005               	goto	l11776
  8989                           
  8990                           ; BSR set to: 1
  8991  000DCE  0E42               	movlw	66
  8992  000DD0  61EC               	cpfslt	main@i_464& (0+255),b
  8993  000DD2  D002               	goto	l11776
  8994                           
  8995                           ; BSR set to: 1
  8996  000DD4  69ED               	setf	main@color& (0+255),b
  8997  000DD6  69EE               	setf	(main@color+1)& (0+255),b
  8998  000DD8                     l11776:
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;Main.c: 149:         if(i>66) color=0x000F;
  9002  000DD8  0E42               	movlw	66
  9003  000DDA  65EC               	cpfsgt	main@i_464& (0+255),b
  9004  000DDC  D004               	goto	l11780
  9005                           
  9006                           ; BSR set to: 1
  9007  000DDE  0E00               	movlw	0
  9008  000DE0  6FEE               	movwf	(main@color+1)& (0+255),b
  9009  000DE2  0E0F               	movlw	15
  9010  000DE4  6FED               	movwf	main@color& (0+255),b
  9011  000DE6                     l11780:
  9012                           
  9013                           ; BSR set to: 1
  9014                           ;Main.c: 150:         ili9341_drawrect(x1,y1,w,h,color);
  9015  000DE6  C1EF  F081         	movff	main@x1,ili9341_drawrect@x
  9016  000DEA  C1F0  F082         	movff	main@x1+1,ili9341_drawrect@x+1
  9017  000DEE  C1F1  F083         	movff	main@y1,ili9341_drawrect@y
  9018  000DF2  C1F2  F084         	movff	main@y1+1,ili9341_drawrect@y+1
  9019  000DF6  C1F3  F085         	movff	main@w,ili9341_drawrect@w
  9020  000DFA  C1F4  F086         	movff	main@w+1,ili9341_drawrect@w+1
  9021  000DFE  C1F5  F087         	movff	main@h,ili9341_drawrect@h
  9022  000E02  C1F6  F088         	movff	main@h+1,ili9341_drawrect@h+1
  9023  000E06  C1ED  F089         	movff	main@color,ili9341_drawrect@color
  9024  000E0A  C1EE  F08A         	movff	main@color+1,ili9341_drawrect@color+1
  9025  000E0E  EC91  F022         	call	_ili9341_drawrect	;wreg free
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;Main.c: 151:         x1 = x1 - 5;
  9029  000E12  0EFB               	movlw	251
  9030  000E14  0101               	movlb	1	; () banked
  9031  000E16  25EF               	addwf	main@x1& (0+255),w,b
  9032  000E18  6FEF               	movwf	main@x1& (0+255),b
  9033  000E1A  0EFF               	movlw	255
  9034  000E1C  21F0               	addwfc	(main@x1+1)& (0+255),w,b
  9035  000E1E  6FF0               	movwf	(main@x1+1)& (0+255),b
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;Main.c: 152:         y1 = y1 - 5;
  9039  000E20  0EFB               	movlw	251
  9040  000E22  25F1               	addwf	main@y1& (0+255),w,b
  9041  000E24  6FF1               	movwf	main@y1& (0+255),b
  9042  000E26  0EFF               	movlw	255
  9043  000E28  21F2               	addwfc	(main@y1+1)& (0+255),w,b
  9044  000E2A  6FF2               	movwf	(main@y1+1)& (0+255),b
  9045                           
  9046                           ; BSR set to: 1
  9047                           ;Main.c: 153:         w = w + 10;
  9048  000E2C  0E0A               	movlw	10
  9049  000E2E  25F3               	addwf	main@w& (0+255),w,b
  9050  000E30  6FF3               	movwf	main@w& (0+255),b
  9051  000E32  0E00               	movlw	0
  9052  000E34  21F4               	addwfc	(main@w+1)& (0+255),w,b
  9053  000E36  6FF4               	movwf	(main@w+1)& (0+255),b
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;Main.c: 154:         h = h + 10;
  9057  000E38  0E0A               	movlw	10
  9058  000E3A  25F5               	addwf	main@h& (0+255),w,b
  9059  000E3C  6FF5               	movwf	main@h& (0+255),b
  9060  000E3E  0E00               	movlw	0
  9061  000E40  21F6               	addwfc	(main@h+1)& (0+255),w,b
  9062  000E42  6FF6               	movwf	(main@h+1)& (0+255),b
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;Main.c: 155:     }
  9066  000E44  2BEC               	incf	main@i_464& (0+255),f,b
  9067  000E46  D7B5               	goto	l11762
  9068  000E48                     l11794:
  9069                           
  9070                           ; BSR set to: 1
  9071                           ;Main.c: 156:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  9072  000E48  0E4D               	movlw	77
  9073  000E4A  0101               	movlb	1	; () banked
  9074  000E4C  6FE7               	movwf	(??_main+1)& (0+255),b
  9075  000E4E  0E19               	movlw	25
  9076  000E50  6FE6               	movwf	??_main& (0+255),b
  9077  000E52  0E4F               	movlw	79
  9078  000E54                     u16317:
  9079  000E54  2EE8               	decfsz	wreg,f,c
  9080  000E56  D7FE               	bra	u16317
  9081  000E58  2FE6               	decfsz	??_main& (0+255),f,b
  9082  000E5A  D7FC               	bra	u16317
  9083  000E5C  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  9084  000E5E  D7FA               	bra	u16317
  9085  000E60  D000               	nop2	
  9086                           
  9087                           ;Main.c: 158:     ili9341_fill(0x001F);
  9088  000E62  0E00               	movlw	0
  9089  000E64  0100               	movlb	0	; () banked
  9090  000E66  6F71               	movwf	(ili9341_fill@color+1)& (0+255),b
  9091  000E68  0E1F               	movlw	31
  9092  000E6A  6F70               	movwf	ili9341_fill@color& (0+255),b
  9093  000E6C  EC32  F025         	call	_ili9341_fill	;wreg free
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;Main.c: 159:     ili9341_draw_string(70,220,"Sistema de Desarrollo",0x0000,0xFFFF);
  9097  000E70  0E00               	movlw	0
  9098  000E72  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9099  000E74  0E46               	movlw	70
  9100  000E76  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9101  000E78  0E00               	movlw	0
  9102  000E7A  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9103  000E7C  0EDC               	movlw	220
  9104  000E7E  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9105  000E80  0EEF               	movlw	low STR_6
  9106  000E82  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9107  000E84  0E7E               	movlw	high STR_6
  9108  000E86  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9109  000E88  0E00               	movlw	0
  9110  000E8A  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9111  000E8C  0E00               	movlw	0
  9112  000E8E  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9113  000E90  0EFF               	movlw	255
  9114  000E92  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9115  000E94  6989               	setf	ili9341_draw_string@bg_color& (0+255),b
  9116  000E96  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9117                           
  9118                           ;Main.c: 160:     ili9341_draw_string(10,190,"Alumnos: Zuliani,Lujan",0x0000,0xFFFF);
  9119  000E9A  0E00               	movlw	0
  9120  000E9C  0100               	movlb	0	; () banked
  9121  000E9E  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9122  000EA0  0E0A               	movlw	10
  9123  000EA2  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9124  000EA4  0E00               	movlw	0
  9125  000EA6  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9126  000EA8  0EBE               	movlw	190
  9127  000EAA  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9128  000EAC  0EC2               	movlw	low STR_7
  9129  000EAE  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9130  000EB0  0E7E               	movlw	high STR_7
  9131  000EB2  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9132  000EB4  0E00               	movlw	0
  9133  000EB6  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9134  000EB8  0E00               	movlw	0
  9135  000EBA  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9136  000EBC  0EFF               	movlw	255
  9137  000EBE  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9138  000EC0  6989               	setf	ili9341_draw_string@bg_color& (0+255),b
  9139  000EC2  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9140                           
  9141                           ;Main.c: 161:     ili9341_draw_string(10,165,"Controlador: ILI9341 MPLAB XC8",0x0000,0xF
      +                          FFF);
  9142  000EC6  0E00               	movlw	0
  9143  000EC8  0100               	movlb	0	; () banked
  9144  000ECA  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9145  000ECC  0E0A               	movlw	10
  9146  000ECE  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9147  000ED0  0E00               	movlw	0
  9148  000ED2  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9149  000ED4  0EA5               	movlw	165
  9150  000ED6  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9151  000ED8  0ECE               	movlw	low STR_8
  9152  000EDA  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9153  000EDC  0E7D               	movlw	high STR_8
  9154  000EDE  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9155  000EE0  0E00               	movlw	0
  9156  000EE2  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9157  000EE4  0E00               	movlw	0
  9158  000EE6  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9159  000EE8  0EFF               	movlw	255
  9160  000EEA  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9161  000EEC  6989               	setf	ili9341_draw_string@bg_color& (0+255),b
  9162  000EEE  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9163                           
  9164                           ;Main.c: 162:     ili9341_draw_string(10,140,"Esta programa mide la temperatura",0x0000,
      +                          0xFFFF);
  9165  000EF2  0E00               	movlw	0
  9166  000EF4  0100               	movlb	0	; () banked
  9167  000EF6  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9168  000EF8  0E0A               	movlw	10
  9169  000EFA  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9170  000EFC  0E00               	movlw	0
  9171  000EFE  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9172  000F00  0E8C               	movlw	140
  9173  000F02  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9174  000F04  0E8B               	movlw	low STR_9
  9175  000F06  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9176  000F08  0E7D               	movlw	high STR_9
  9177  000F0A  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9178  000F0C  0E00               	movlw	0
  9179  000F0E  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9180  000F10  0E00               	movlw	0
  9181  000F12  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9182  000F14  0EFF               	movlw	255
  9183  000F16  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9184  000F18  6989               	setf	ili9341_draw_string@bg_color& (0+255),b
  9185  000F1A  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9186                           
  9187                           ;Main.c: 163:     ili9341_draw_string(10,115,"y controla un pwm",0x0000,0xFFFF);
  9188  000F1E  0E00               	movlw	0
  9189  000F20  0100               	movlb	0	; () banked
  9190  000F22  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9191  000F24  0E0A               	movlw	10
  9192  000F26  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9193  000F28  0E00               	movlw	0
  9194  000F2A  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9195  000F2C  0E73               	movlw	115
  9196  000F2E  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9197  000F30  0E80               	movlw	low STR_10
  9198  000F32  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9199  000F34  0E7F               	movlw	high STR_10
  9200  000F36  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9201  000F38  0E00               	movlw	0
  9202  000F3A  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9203  000F3C  0E00               	movlw	0
  9204  000F3E  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9205  000F40  0EFF               	movlw	255
  9206  000F42  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9207  000F44  6989               	setf	ili9341_draw_string@bg_color& (0+255),b
  9208  000F46  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9209                           
  9210                           ;Main.c: 164:     ili9341_draw_string(70,40,"Trabajo Final Desarrollo",0xAFE5,0x0000);
  9211  000F4A  0E00               	movlw	0
  9212  000F4C  0100               	movlb	0	; () banked
  9213  000F4E  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9214  000F50  0E46               	movlw	70
  9215  000F52  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9216  000F54  0E00               	movlw	0
  9217  000F56  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9218  000F58  0E28               	movlw	40
  9219  000F5A  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9220  000F5C  0E72               	movlw	low (STR_5+10)
  9221  000F5E  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9222  000F60  0E7D               	movlw	high (STR_5+10)
  9223  000F62  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9224  000F64  0EAF               	movlw	175
  9225  000F66  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9226  000F68  0EE5               	movlw	229
  9227  000F6A  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9228  000F6C  0E00               	movlw	0
  9229  000F6E  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9230  000F70  0E00               	movlw	0
  9231  000F72  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
  9232  000F74  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9233                           
  9234                           ;Main.c: 166:     _delay((unsigned long)((4000)*(20000000/4000.0)));
  9235  000F78  0E66               	movlw	102
  9236  000F7A  0101               	movlb	1	; () banked
  9237  000F7C  6FE7               	movwf	(??_main+1)& (0+255),b
  9238  000F7E  0E76               	movlw	118
  9239  000F80  6FE6               	movwf	??_main& (0+255),b
  9240  000F82  0EC1               	movlw	193
  9241  000F84                     u16327:
  9242  000F84  2EE8               	decfsz	wreg,f,c
  9243  000F86  D7FE               	bra	u16327
  9244  000F88  2FE6               	decfsz	??_main& (0+255),f,b
  9245  000F8A  D7FC               	bra	u16327
  9246  000F8C  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  9247  000F8E  D7FA               	bra	u16327
  9248                           
  9249                           ;Main.c: 168:     ili9341_fill(0x0000);
  9250  000F90  0E00               	movlw	0
  9251  000F92  0100               	movlb	0	; () banked
  9252  000F94  6F71               	movwf	(ili9341_fill@color+1)& (0+255),b
  9253  000F96  0E00               	movlw	0
  9254  000F98  6F70               	movwf	ili9341_fill@color& (0+255),b
  9255  000F9A  EC32  F025         	call	_ili9341_fill	;wreg free
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;Main.c: 172:     ili9341_draw_string(57,220,"Visualizacion de Controles",0xFFE0,0xFD20)
      +                          ;
  9259  000F9E  0E00               	movlw	0
  9260  000FA0  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9261  000FA2  0E39               	movlw	57
  9262  000FA4  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9263  000FA6  0E00               	movlw	0
  9264  000FA8  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9265  000FAA  0EDC               	movlw	220
  9266  000FAC  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9267  000FAE  0E44               	movlw	low STR_12
  9268  000FB0  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9269  000FB2  0E7E               	movlw	high STR_12
  9270  000FB4  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9271  000FB6  0EFF               	movlw	255
  9272  000FB8  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9273  000FBA  0EE0               	movlw	224
  9274  000FBC  6F87               	movwf	ili9341_draw_string@fg_color& (0+255),b
  9275  000FBE  0EFD               	movlw	253
  9276  000FC0  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9277  000FC2  0E20               	movlw	32
  9278  000FC4  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
  9279  000FC6  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9280                           
  9281                           ;Main.c: 173:     ili9341_draw_string(10,157,"Porcentaje PWM:   0",0xFFFF,0x0000);
  9282  000FCA  0E00               	movlw	0
  9283  000FCC  0100               	movlb	0	; () banked
  9284  000FCE  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9285  000FD0  0E0A               	movlw	10
  9286  000FD2  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9287  000FD4  0E00               	movlw	0
  9288  000FD6  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9289  000FD8  0E9D               	movlw	157
  9290  000FDA  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9291  000FDC  0E45               	movlw	low STR_13
  9292  000FDE  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9293  000FE0  0E7F               	movlw	high STR_13
  9294  000FE2  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9295  000FE4  0EFF               	movlw	255
  9296  000FE6  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9297  000FE8  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
  9298  000FEA  0E00               	movlw	0
  9299  000FEC  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9300  000FEE  0E00               	movlw	0
  9301  000FF0  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
  9302  000FF2  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9303                           
  9304                           ;Main.c: 174:     ili9341_draw_string(10,84,"Estado del motor:   OFF",0xFFFF,0x0000);
  9305  000FF6  0E00               	movlw	0
  9306  000FF8  0100               	movlb	0	; () banked
  9307  000FFA  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9308  000FFC  0E0A               	movlw	10
  9309  000FFE  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9310  001000  0E00               	movlw	0
  9311  001002  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9312  001004  0E54               	movlw	84
  9313  001006  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9314  001008  0E93               	movlw	low STR_14
  9315  00100A  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9316  00100C  0E7E               	movlw	high STR_14
  9317  00100E  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9318  001010  0EFF               	movlw	255
  9319  001012  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9320  001014  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
  9321  001016  0E00               	movlw	0
  9322  001018  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9323  00101A  0E00               	movlw	0
  9324  00101C  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
  9325  00101E  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9326                           
  9327                           ;Main.c: 175:     ili9341_draw_string(10,10,"Temperatura:    0.00     C",0xFFFF,0x0000);
  9328  001022  0E00               	movlw	0
  9329  001024  0100               	movlb	0	; () banked
  9330  001026  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
  9331  001028  0E0A               	movlw	10
  9332  00102A  6F81               	movwf	ili9341_draw_string@x& (0+255),b
  9333  00102C  0E00               	movlw	0
  9334  00102E  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
  9335  001030  0E0A               	movlw	10
  9336  001032  6F83               	movwf	ili9341_draw_string@y& (0+255),b
  9337  001034  0E29               	movlw	low STR_15
  9338  001036  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
  9339  001038  0E7E               	movlw	high STR_15
  9340  00103A  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
  9341  00103C  0EFF               	movlw	255
  9342  00103E  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
  9343  001040  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
  9344  001042  0E00               	movlw	0
  9345  001044  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
  9346  001046  0E00               	movlw	0
  9347  001048  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
  9348  00104A  EC41  F01F         	call	_ili9341_draw_string	;wreg free
  9349                           
  9350                           ;Main.c: 176:     ili9341_fillrect(86,200,10,10,0xF800);
  9351  00104E  0E00               	movlw	0
  9352  001050  0100               	movlb	0	; () banked
  9353  001052  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
  9354  001054  0E56               	movlw	86
  9355  001056  6F70               	movwf	ili9341_fillrect@x& (0+255),b
  9356  001058  0E00               	movlw	0
  9357  00105A  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
  9358  00105C  0EC8               	movlw	200
  9359  00105E  6F72               	movwf	ili9341_fillrect@y& (0+255),b
  9360  001060  0E00               	movlw	0
  9361  001062  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
  9362  001064  0E0A               	movlw	10
  9363  001066  6F74               	movwf	ili9341_fillrect@w& (0+255),b
  9364  001068  0E00               	movlw	0
  9365  00106A  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
  9366  00106C  0E0A               	movlw	10
  9367  00106E  6F76               	movwf	ili9341_fillrect@h& (0+255),b
  9368  001070  0EF8               	movlw	248
  9369  001072  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
  9370  001074  0E00               	movlw	0
  9371  001076  6F78               	movwf	ili9341_fillrect@color& (0+255),b
  9372  001078  EC38  F01D         	call	_ili9341_fillrect	;wreg free
  9373                           
  9374                           ;Main.c: 177:     ili9341_fillrect(157,200,10,10,0x07E0);
  9375  00107C  0E00               	movlw	0
  9376  00107E  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
  9377  001080  0E9D               	movlw	157
  9378  001082  6F70               	movwf	ili9341_fillrect@x& (0+255),b
  9379  001084  0E00               	movlw	0
  9380  001086  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
  9381  001088  0EC8               	movlw	200
  9382  00108A  6F72               	movwf	ili9341_fillrect@y& (0+255),b
  9383  00108C  0E00               	movlw	0
  9384  00108E  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
  9385  001090  0E0A               	movlw	10
  9386  001092  6F74               	movwf	ili9341_fillrect@w& (0+255),b
  9387  001094  0E00               	movlw	0
  9388  001096  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
  9389  001098  0E0A               	movlw	10
  9390  00109A  6F76               	movwf	ili9341_fillrect@h& (0+255),b
  9391  00109C  0E07               	movlw	7
  9392  00109E  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
  9393  0010A0  0EE0               	movlw	224
  9394  0010A2  6F78               	movwf	ili9341_fillrect@color& (0+255),b
  9395  0010A4  EC38  F01D         	call	_ili9341_fillrect	;wreg free
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;Main.c: 180:     TMR0ON = 1;
  9399  0010A8  8ED5               	bsf	4053,7,c	;volatile
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;Main.c: 181:     TMR0IF = 1;
  9403  0010AA  84F2               	bsf	4082,2,c	;volatile
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;Main.c: 182:     TMR0IE = 1;
  9407  0010AC  8AF2               	bsf	4082,5,c	;volatile
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;Main.c: 184:     UART_arrayln("Iniciado");
  9411  0010AE  0EC1               	movlw	low STR_16
  9412  0010B0  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  9413  0010B2  0E7F               	movlw	high STR_16
  9414  0010B4  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  9415  0010B6  ECC1  F024         	call	_UART_arrayln	;wreg free
  9416                           
  9417                           ;Main.c: 185:     UART_arrayln("");
  9418  0010BA  0EFB               	movlw	low (STR_64+1)
  9419  0010BC  0100               	movlb	0	; () banked
  9420  0010BE  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  9421  0010C0  0E7F               	movlw	high (STR_64+1)
  9422  0010C2  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  9423  0010C4  ECC1  F024         	call	_UART_arrayln	;wreg free
  9424                           
  9425                           ;Main.c: 186:     UART_array("cmd < ");
  9426  0010C8  0ED9               	movlw	low STR_18
  9427  0010CA  0100               	movlb	0	; () banked
  9428  0010CC  6F65               	movwf	UART_array@cadena& (0+255),b
  9429  0010CE  0E7F               	movlw	high STR_18
  9430  0010D0  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
  9431  0010D2  EC65  F025         	call	_UART_array	;wreg free
  9432  0010D6                     l11832:
  9433                           
  9434                           ;Main.c: 189:     {;Main.c: 191:         if(fin_carro) UART_arrayln(" "),Task_Com();
  9435  0010D6  0101               	movlb	1	; () banked
  9436  0010D8  5131               	movf	_fin_carro& (0+255),w,b
  9437  0010DA  B4D8               	btfsc	status,2,c
  9438  0010DC  D009               	goto	l11838
  9439                           
  9440                           ; BSR set to: 1
  9441  0010DE  0ED7               	movlw	low (STR_26+5)
  9442  0010E0  0100               	movlb	0	; () banked
  9443  0010E2  6F67               	movwf	UART_arrayln@cadena& (0+255),b
  9444  0010E4  0E7F               	movlw	high (STR_26+5)
  9445  0010E6  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
  9446  0010E8  ECC1  F024         	call	_UART_arrayln	;wreg free
  9447  0010EC  EC7F  F008         	call	_Task_Com	;wreg free
  9448  0010F0                     l11838:
  9449                           
  9450                           ; BSR set to: 1
  9451                           ;Main.c: 193:         Set_Val();
  9452  0010F0  ECE9  F00D         	call	_Set_Val	;wreg free
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;Main.c: 195:         Set_Pwm();
  9456  0010F4  EC39  F028         	call	_Set_Pwm	;wreg free
  9457                           
  9458                           ;Main.c: 197:         Send_Temp();
  9459  0010F8  ECFE  F023         	call	_Send_Temp	;wreg free
  9460  0010FC  D7EC               	goto	l11832
  9461  0010FE                     __end_of_main:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _ili9341_init *****************
  9465 ;; Defined at:
  9466 ;;		line 7 in file "Ili9341.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;		None
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9482 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9483 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9484 ;;Total ram usage:        2 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    8
  9487 ;; This function calls:
  9488 ;;		_ili9341_write_command
  9489 ;;		_ili9341_write_date
  9490 ;; This function is called by:
  9491 ;;		_main
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text1
  9496  002616                     __ptext1:
  9497                           	callstack 0
  9498  002616                     _ili9341_init:
  9499                           	callstack 22
  9500                           
  9501                           ;Ili9341.c: 10:     PORTBbits.RB1 = 1;
  9502                           
  9503                           ; BSR set to: 1
  9504                           ;incstack = 0
  9505  002616  8281               	bsf	129,1,c	;volatile
  9506                           
  9507                           ;Ili9341.c: 11:     TRISBbits.TRISB1 = 0;
  9508  002618  9293               	bcf	147,1,c	;volatile
  9509                           
  9510                           ;Ili9341.c: 12:     PORTBbits.RB2 = 1;
  9511  00261A  8481               	bsf	129,2,c	;volatile
  9512                           
  9513                           ;Ili9341.c: 13:     TRISBbits.TRISB2 = 0;
  9514  00261C  9493               	bcf	147,2,c	;volatile
  9515                           
  9516                           ;Ili9341.c: 14:     PORTBbits.RB3 = 1;
  9517  00261E  8681               	bsf	129,3,c	;volatile
  9518                           
  9519                           ;Ili9341.c: 15:     TRISBbits.TRISB3 = 0;
  9520  002620  9693               	bcf	147,3,c	;volatile
  9521                           
  9522                           ;Ili9341.c: 16:     PORTBbits.RB5 = 1;
  9523  002622  8A81               	bsf	129,5,c	;volatile
  9524                           
  9525                           ;Ili9341.c: 17:     TRISBbits.TRISB5 = 0;
  9526  002624  9A93               	bcf	147,5,c	;volatile
  9527                           
  9528                           ;Ili9341.c: 18:     PORTBbits.RB4 = 1;
  9529  002626  8881               	bsf	129,4,c	;volatile
  9530                           
  9531                           ;Ili9341.c: 19:     TRISBbits.TRISB4 = 0;
  9532  002628  9893               	bcf	147,4,c	;volatile
  9533                           
  9534                           ;Ili9341.c: 22:     PORTBbits.RB1 = 1;
  9535  00262A  8281               	bsf	129,1,c	;volatile
  9536                           
  9537                           ;Ili9341.c: 23:     TRISBbits.TRISB1 = 0;
  9538  00262C  9293               	bcf	147,1,c	;volatile
  9539                           
  9540                           ;Ili9341.c: 24:     _delay((unsigned long)((200)*(20000000/4000.0)));
  9541  00262E  0E06               	movlw	6
  9542  002630  0100               	movlb	0	; () banked
  9543  002632  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9544  002634  0E13               	movlw	19
  9545  002636  6F68               	movwf	??_ili9341_init& (0+255),b
  9546  002638  0EAD               	movlw	173
  9547  00263A                     u16337:
  9548  00263A  2EE8               	decfsz	wreg,f,c
  9549  00263C  D7FE               	bra	u16337
  9550  00263E  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9551  002640  D7FC               	bra	u16337
  9552  002642  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9553  002644  D7FA               	bra	u16337
  9554  002646  D000               	nop2	
  9555                           
  9556                           ;Ili9341.c: 25:     PORTBbits.RB1 = 0;
  9557  002648  9281               	bcf	129,1,c	;volatile
  9558                           
  9559                           ;Ili9341.c: 26:     _delay((unsigned long)((200)*(20000000/4000.0)));
  9560  00264A  0E06               	movlw	6
  9561  00264C  0100               	movlb	0	; () banked
  9562  00264E  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9563  002650  0E13               	movlw	19
  9564  002652  6F68               	movwf	??_ili9341_init& (0+255),b
  9565  002654  0EAD               	movlw	173
  9566  002656                     u16347:
  9567  002656  2EE8               	decfsz	wreg,f,c
  9568  002658  D7FE               	bra	u16347
  9569  00265A  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9570  00265C  D7FC               	bra	u16347
  9571  00265E  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9572  002660  D7FA               	bra	u16347
  9573  002662  D000               	nop2	
  9574                           
  9575                           ;Ili9341.c: 27:     PORTBbits.RB1 = 1;
  9576  002664  8281               	bsf	129,1,c	;volatile
  9577                           
  9578                           ;Ili9341.c: 28:     _delay((unsigned long)((200)*(20000000/4000.0)));
  9579  002666  0E06               	movlw	6
  9580  002668  0100               	movlb	0	; () banked
  9581  00266A  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9582  00266C  0E13               	movlw	19
  9583  00266E  6F68               	movwf	??_ili9341_init& (0+255),b
  9584  002670  0EAD               	movlw	173
  9585  002672                     u16357:
  9586  002672  2EE8               	decfsz	wreg,f,c
  9587  002674  D7FE               	bra	u16357
  9588  002676  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9589  002678  D7FC               	bra	u16357
  9590  00267A  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9591  00267C  D7FA               	bra	u16357
  9592  00267E  D000               	nop2	
  9593                           
  9594                           ;Ili9341.c: 31:     ili9341_write_command(0x01);
  9595  002680  0E01               	movlw	1
  9596  002682  ECBE  F01D         	call	_ili9341_write_command
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;Ili9341.c: 32:     _delay((unsigned long)((200)*(20000000/4000.0)));
  9600  002686  0E06               	movlw	6
  9601  002688  0100               	movlb	0	; () banked
  9602  00268A  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9603  00268C  0E13               	movlw	19
  9604  00268E  6F68               	movwf	??_ili9341_init& (0+255),b
  9605  002690  0EAD               	movlw	173
  9606  002692                     u16367:
  9607  002692  2EE8               	decfsz	wreg,f,c
  9608  002694  D7FE               	bra	u16367
  9609  002696  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9610  002698  D7FC               	bra	u16367
  9611  00269A  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9612  00269C  D7FA               	bra	u16367
  9613  00269E  D000               	nop2	
  9614                           
  9615                           ;Ili9341.c: 33:     ili9341_write_command(0x28);
  9616  0026A0  0E28               	movlw	40
  9617  0026A2  ECBE  F01D         	call	_ili9341_write_command
  9618                           
  9619                           ;Ili9341.c: 35:     ili9341_write_command(0xC0);
  9620  0026A6  0EC0               	movlw	192
  9621  0026A8  ECBE  F01D         	call	_ili9341_write_command
  9622                           
  9623                           ;Ili9341.c: 36:     ili9341_write_date(0x26);
  9624  0026AC  0E26               	movlw	38
  9625  0026AE  EC42  F01E         	call	_ili9341_write_date
  9626                           
  9627                           ;Ili9341.c: 38:     ili9341_write_command(0xC1);
  9628  0026B2  0EC1               	movlw	193
  9629  0026B4  ECBE  F01D         	call	_ili9341_write_command
  9630                           
  9631                           ;Ili9341.c: 39:     ili9341_write_date(0x11);
  9632  0026B8  0E11               	movlw	17
  9633  0026BA  EC42  F01E         	call	_ili9341_write_date
  9634                           
  9635                           ;Ili9341.c: 41:     ili9341_write_command(0xC5);
  9636  0026BE  0EC5               	movlw	197
  9637  0026C0  ECBE  F01D         	call	_ili9341_write_command
  9638                           
  9639                           ;Ili9341.c: 42:     ili9341_write_date(0x5C);
  9640  0026C4  0E5C               	movlw	92
  9641  0026C6  EC42  F01E         	call	_ili9341_write_date
  9642                           
  9643                           ;Ili9341.c: 43:     ili9341_write_date(0x4C);
  9644  0026CA  0E4C               	movlw	76
  9645  0026CC  EC42  F01E         	call	_ili9341_write_date
  9646                           
  9647                           ;Ili9341.c: 45:     ili9341_write_command(0xC7);
  9648  0026D0  0EC7               	movlw	199
  9649  0026D2  ECBE  F01D         	call	_ili9341_write_command
  9650                           
  9651                           ;Ili9341.c: 46:     ili9341_write_date(0x94);
  9652  0026D6  0E94               	movlw	148
  9653  0026D8  EC42  F01E         	call	_ili9341_write_date
  9654                           
  9655                           ;Ili9341.c: 48:     ili9341_write_command(0x36);
  9656  0026DC  0E36               	movlw	54
  9657  0026DE  ECBE  F01D         	call	_ili9341_write_command
  9658                           
  9659                           ;Ili9341.c: 49:     ili9341_write_date(0x48);
  9660  0026E2  0E48               	movlw	72
  9661  0026E4  EC42  F01E         	call	_ili9341_write_date
  9662                           
  9663                           ;Ili9341.c: 51:     ili9341_write_command(0x3A);
  9664  0026E8  0E3A               	movlw	58
  9665  0026EA  ECBE  F01D         	call	_ili9341_write_command
  9666                           
  9667                           ;Ili9341.c: 52:     ili9341_write_date(0x55);
  9668  0026EE  0E55               	movlw	85
  9669  0026F0  EC42  F01E         	call	_ili9341_write_date
  9670                           
  9671                           ;Ili9341.c: 54:     ili9341_write_command(0xB1);
  9672  0026F4  0EB1               	movlw	177
  9673  0026F6  ECBE  F01D         	call	_ili9341_write_command
  9674                           
  9675                           ;Ili9341.c: 55:     ili9341_write_date(0x00);
  9676  0026FA  0E00               	movlw	0
  9677  0026FC  EC42  F01E         	call	_ili9341_write_date
  9678                           
  9679                           ;Ili9341.c: 56:     ili9341_write_date(0x1B);
  9680  002700  0E1B               	movlw	27
  9681  002702  EC42  F01E         	call	_ili9341_write_date
  9682                           
  9683                           ;Ili9341.c: 59:     ili9341_write_command(0xF2);
  9684  002706  0EF2               	movlw	242
  9685  002708  ECBE  F01D         	call	_ili9341_write_command
  9686                           
  9687                           ;Ili9341.c: 60:     ili9341_write_date(0x08);
  9688  00270C  0E08               	movlw	8
  9689  00270E  EC42  F01E         	call	_ili9341_write_date
  9690                           
  9691                           ;Ili9341.c: 61:     ili9341_write_command(0x26);
  9692  002712  0E26               	movlw	38
  9693  002714  ECBE  F01D         	call	_ili9341_write_command
  9694                           
  9695                           ;Ili9341.c: 62:     ili9341_write_date(0x01);
  9696  002718  0E01               	movlw	1
  9697  00271A  EC42  F01E         	call	_ili9341_write_date
  9698                           
  9699                           ;Ili9341.c: 63:     ili9341_write_command(0xE0);
  9700  00271E  0EE0               	movlw	224
  9701  002720  ECBE  F01D         	call	_ili9341_write_command
  9702                           
  9703                           ;Ili9341.c: 64:     ili9341_write_date(0x1F);
  9704  002724  0E1F               	movlw	31
  9705  002726  EC42  F01E         	call	_ili9341_write_date
  9706                           
  9707                           ;Ili9341.c: 65:     ili9341_write_date(0x1a);
  9708  00272A  0E1A               	movlw	26
  9709  00272C  EC42  F01E         	call	_ili9341_write_date
  9710                           
  9711                           ;Ili9341.c: 66:     ili9341_write_date(0x18);
  9712  002730  0E18               	movlw	24
  9713  002732  EC42  F01E         	call	_ili9341_write_date
  9714                           
  9715                           ;Ili9341.c: 67:     ili9341_write_date(0x0a);
  9716  002736  0E0A               	movlw	10
  9717  002738  EC42  F01E         	call	_ili9341_write_date
  9718                           
  9719                           ;Ili9341.c: 68:     ili9341_write_date(0x0f);
  9720  00273C  0E0F               	movlw	15
  9721  00273E  EC42  F01E         	call	_ili9341_write_date
  9722                           
  9723                           ;Ili9341.c: 69:     ili9341_write_date(0x06);
  9724  002742  0E06               	movlw	6
  9725  002744  EC42  F01E         	call	_ili9341_write_date
  9726                           
  9727                           ;Ili9341.c: 70:     ili9341_write_date(0x45);
  9728  002748  0E45               	movlw	69
  9729  00274A  EC42  F01E         	call	_ili9341_write_date
  9730                           
  9731                           ;Ili9341.c: 71:     ili9341_write_date(0x87);
  9732  00274E  0E87               	movlw	135
  9733  002750  EC42  F01E         	call	_ili9341_write_date
  9734                           
  9735                           ;Ili9341.c: 72:     ili9341_write_date(0x32);
  9736  002754  0E32               	movlw	50
  9737  002756  EC42  F01E         	call	_ili9341_write_date
  9738                           
  9739                           ;Ili9341.c: 73:     ili9341_write_date(0x0a);
  9740  00275A  0E0A               	movlw	10
  9741  00275C  EC42  F01E         	call	_ili9341_write_date
  9742                           
  9743                           ;Ili9341.c: 74:     ili9341_write_date(0x07);
  9744  002760  0E07               	movlw	7
  9745  002762  EC42  F01E         	call	_ili9341_write_date
  9746                           
  9747                           ;Ili9341.c: 75:     ili9341_write_date(0x02);
  9748  002766  0E02               	movlw	2
  9749  002768  EC42  F01E         	call	_ili9341_write_date
  9750                           
  9751                           ;Ili9341.c: 76:     ili9341_write_date(0x07);
  9752  00276C  0E07               	movlw	7
  9753  00276E  EC42  F01E         	call	_ili9341_write_date
  9754                           
  9755                           ;Ili9341.c: 77:     ili9341_write_date(0x05);
  9756  002772  0E05               	movlw	5
  9757  002774  EC42  F01E         	call	_ili9341_write_date
  9758                           
  9759                           ;Ili9341.c: 78:     ili9341_write_date(0x00);
  9760  002778  0E00               	movlw	0
  9761  00277A  EC42  F01E         	call	_ili9341_write_date
  9762                           
  9763                           ;Ili9341.c: 79:     ili9341_write_command(0xE1);
  9764  00277E  0EE1               	movlw	225
  9765  002780  ECBE  F01D         	call	_ili9341_write_command
  9766                           
  9767                           ;Ili9341.c: 80:     ili9341_write_date(0x00);
  9768  002784  0E00               	movlw	0
  9769  002786  EC42  F01E         	call	_ili9341_write_date
  9770                           
  9771                           ;Ili9341.c: 81:     ili9341_write_date(0x25);
  9772  00278A  0E25               	movlw	37
  9773  00278C  EC42  F01E         	call	_ili9341_write_date
  9774                           
  9775                           ;Ili9341.c: 82:     ili9341_write_date(0x27);
  9776  002790  0E27               	movlw	39
  9777  002792  EC42  F01E         	call	_ili9341_write_date
  9778                           
  9779                           ;Ili9341.c: 83:     ili9341_write_date(0x05);
  9780  002796  0E05               	movlw	5
  9781  002798  EC42  F01E         	call	_ili9341_write_date
  9782                           
  9783                           ;Ili9341.c: 84:     ili9341_write_date(0x10);
  9784  00279C  0E10               	movlw	16
  9785  00279E  EC42  F01E         	call	_ili9341_write_date
  9786                           
  9787                           ;Ili9341.c: 85:     ili9341_write_date(0x09);
  9788  0027A2  0E09               	movlw	9
  9789  0027A4  EC42  F01E         	call	_ili9341_write_date
  9790                           
  9791                           ;Ili9341.c: 86:     ili9341_write_date(0x3a);
  9792  0027A8  0E3A               	movlw	58
  9793  0027AA  EC42  F01E         	call	_ili9341_write_date
  9794                           
  9795                           ;Ili9341.c: 87:     ili9341_write_date(0x78);
  9796  0027AE  0E78               	movlw	120
  9797  0027B0  EC42  F01E         	call	_ili9341_write_date
  9798                           
  9799                           ;Ili9341.c: 88:     ili9341_write_date(0x4d);
  9800  0027B4  0E4D               	movlw	77
  9801  0027B6  EC42  F01E         	call	_ili9341_write_date
  9802                           
  9803                           ;Ili9341.c: 89:     ili9341_write_date(0x05);
  9804  0027BA  0E05               	movlw	5
  9805  0027BC  EC42  F01E         	call	_ili9341_write_date
  9806                           
  9807                           ;Ili9341.c: 90:     ili9341_write_date(0x18);
  9808  0027C0  0E18               	movlw	24
  9809  0027C2  EC42  F01E         	call	_ili9341_write_date
  9810                           
  9811                           ;Ili9341.c: 91:     ili9341_write_date(0x0d);
  9812  0027C6  0E0D               	movlw	13
  9813  0027C8  EC42  F01E         	call	_ili9341_write_date
  9814                           
  9815                           ;Ili9341.c: 92:     ili9341_write_date(0x38);
  9816  0027CC  0E38               	movlw	56
  9817  0027CE  EC42  F01E         	call	_ili9341_write_date
  9818                           
  9819                           ;Ili9341.c: 93:     ili9341_write_date(0x3a);
  9820  0027D2  0E3A               	movlw	58
  9821  0027D4  EC42  F01E         	call	_ili9341_write_date
  9822                           
  9823                           ;Ili9341.c: 94:     ili9341_write_date(0x1f);
  9824  0027D8  0E1F               	movlw	31
  9825  0027DA  EC42  F01E         	call	_ili9341_write_date
  9826                           
  9827                           ;Ili9341.c: 96:     ili9341_write_command(0x2A);
  9828  0027DE  0E2A               	movlw	42
  9829  0027E0  ECBE  F01D         	call	_ili9341_write_command
  9830                           
  9831                           ;Ili9341.c: 97:     ili9341_write_date(0x00);
  9832  0027E4  0E00               	movlw	0
  9833  0027E6  EC42  F01E         	call	_ili9341_write_date
  9834                           
  9835                           ;Ili9341.c: 98:     ili9341_write_date(0x00);
  9836  0027EA  0E00               	movlw	0
  9837  0027EC  EC42  F01E         	call	_ili9341_write_date
  9838                           
  9839                           ;Ili9341.c: 99:     ili9341_write_date(0x00);
  9840  0027F0  0E00               	movlw	0
  9841  0027F2  EC42  F01E         	call	_ili9341_write_date
  9842                           
  9843                           ;Ili9341.c: 100:     ili9341_write_date(0xEF);
  9844  0027F6  0EEF               	movlw	239
  9845  0027F8  EC42  F01E         	call	_ili9341_write_date
  9846                           
  9847                           ;Ili9341.c: 101:     ili9341_write_command(0x2B);
  9848  0027FC  0E2B               	movlw	43
  9849  0027FE  ECBE  F01D         	call	_ili9341_write_command
  9850                           
  9851                           ;Ili9341.c: 102:     ili9341_write_date(0x00);
  9852  002802  0E00               	movlw	0
  9853  002804  EC42  F01E         	call	_ili9341_write_date
  9854                           
  9855                           ;Ili9341.c: 103:     ili9341_write_date(0x00);
  9856  002808  0E00               	movlw	0
  9857  00280A  EC42  F01E         	call	_ili9341_write_date
  9858                           
  9859                           ;Ili9341.c: 104:     ili9341_write_date(0x01);
  9860  00280E  0E01               	movlw	1
  9861  002810  EC42  F01E         	call	_ili9341_write_date
  9862                           
  9863                           ;Ili9341.c: 105:     ili9341_write_date(0x3F);
  9864  002814  0E3F               	movlw	63
  9865  002816  EC42  F01E         	call	_ili9341_write_date
  9866                           
  9867                           ;Ili9341.c: 106:     ili9341_write_command(0x20);
  9868  00281A  0E20               	movlw	32
  9869  00281C  ECBE  F01D         	call	_ili9341_write_command
  9870                           
  9871                           ;Ili9341.c: 107:     ili9341_write_command(0xB7);
  9872  002820  0EB7               	movlw	183
  9873  002822  ECBE  F01D         	call	_ili9341_write_command
  9874                           
  9875                           ;Ili9341.c: 108:     ili9341_write_date(0x07);
  9876  002826  0E07               	movlw	7
  9877  002828  EC42  F01E         	call	_ili9341_write_date
  9878                           
  9879                           ;Ili9341.c: 110:     ili9341_write_command(0xB6);
  9880  00282C  0EB6               	movlw	182
  9881  00282E  ECBE  F01D         	call	_ili9341_write_command
  9882                           
  9883                           ;Ili9341.c: 111:     ili9341_write_date(0x0A);
  9884  002832  0E0A               	movlw	10
  9885  002834  EC42  F01E         	call	_ili9341_write_date
  9886                           
  9887                           ;Ili9341.c: 112:     ili9341_write_date(0x82);
  9888  002838  0E82               	movlw	130
  9889  00283A  EC42  F01E         	call	_ili9341_write_date
  9890                           
  9891                           ;Ili9341.c: 113:     ili9341_write_date(0X27);
  9892  00283E  0E27               	movlw	39
  9893  002840  EC42  F01E         	call	_ili9341_write_date
  9894                           
  9895                           ;Ili9341.c: 114:     ili9341_write_date(0x00);
  9896  002844  0E00               	movlw	0
  9897  002846  EC42  F01E         	call	_ili9341_write_date
  9898                           
  9899                           ;Ili9341.c: 115:     ili9341_write_command(0x11);
  9900  00284A  0E11               	movlw	17
  9901  00284C  ECBE  F01D         	call	_ili9341_write_command
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;Ili9341.c: 116:     _delay((unsigned long)((125)*(20000000/4000.0)));
  9905  002850  0E04               	movlw	4
  9906  002852  0100               	movlb	0	; () banked
  9907  002854  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9908  002856  0E2C               	movlw	44
  9909  002858  6F68               	movwf	??_ili9341_init& (0+255),b
  9910  00285A  0EAB               	movlw	171
  9911  00285C                     u16377:
  9912  00285C  2EE8               	decfsz	wreg,f,c
  9913  00285E  D7FE               	bra	u16377
  9914  002860  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9915  002862  D7FC               	bra	u16377
  9916  002864  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9917  002866  D7FA               	bra	u16377
  9918  002868  D000               	nop2	
  9919                           
  9920                           ;Ili9341.c: 117:     ili9341_write_command(0x29);
  9921  00286A  0E29               	movlw	41
  9922  00286C  ECBE  F01D         	call	_ili9341_write_command
  9923                           
  9924                           ;Ili9341.c: 118:     _delay((unsigned long)((125)*(20000000/4000.0)));
  9925  002870  0E04               	movlw	4
  9926  002872  0100               	movlb	0	; () banked
  9927  002874  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9928  002876  0E2C               	movlw	44
  9929  002878  6F68               	movwf	??_ili9341_init& (0+255),b
  9930  00287A  0EAB               	movlw	171
  9931  00287C                     u16387:
  9932  00287C  2EE8               	decfsz	wreg,f,c
  9933  00287E  D7FE               	bra	u16387
  9934  002880  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9935  002882  D7FC               	bra	u16387
  9936  002884  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9937  002886  D7FA               	bra	u16387
  9938  002888  D000               	nop2	
  9939                           
  9940                           ;Ili9341.c: 119:     ili9341_write_command(0x2C);
  9941  00288A  0E2C               	movlw	44
  9942  00288C  ECBE  F01D         	call	_ili9341_write_command
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;Ili9341.c: 120:     _delay((unsigned long)((200)*(20000000/4000.0)));
  9946  002890  0E06               	movlw	6
  9947  002892  0100               	movlb	0	; () banked
  9948  002894  6F69               	movwf	(??_ili9341_init+1)& (0+255),b
  9949  002896  0E13               	movlw	19
  9950  002898  6F68               	movwf	??_ili9341_init& (0+255),b
  9951  00289A  0EAD               	movlw	173
  9952  00289C                     u16397:
  9953  00289C  2EE8               	decfsz	wreg,f,c
  9954  00289E  D7FE               	bra	u16397
  9955  0028A0  2F68               	decfsz	??_ili9341_init& (0+255),f,b
  9956  0028A2  D7FC               	bra	u16397
  9957  0028A4  2F69               	decfsz	(??_ili9341_init+1)& (0+255),f,b
  9958  0028A6  D7FA               	bra	u16397
  9959  0028A8  D000               	nop2	
  9960  0028AA  0012               	return		;funcret
  9961  0028AC                     __end_of_ili9341_init:
  9962                           	callstack 0
  9963                           
  9964 ;; *************** function _ili9341_fill *****************
  9965 ;; Defined at:
  9966 ;;		line 290 in file "Ili9341.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  color           2   16[BANK0 ] int 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  j               2   20[BANK0 ] int 
  9971 ;;  i               2   18[BANK0 ] int 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 3F/0
  9978 ;;		On exit  : 3F/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9981 ;;      Params:         0       2       0       0       0       0       0       0       0
  9982 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9984 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9985 ;;Total ram usage:        6 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:    9
  9988 ;; This function calls:
  9989 ;;		_ili9341_pushcolor
  9990 ;;		_ili9341_setadress
  9991 ;; This function is called by:
  9992 ;;		_main
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text2
  9997  004A64                     __ptext2:
  9998                           	callstack 0
  9999  004A64                     _ili9341_fill:
 10000                           	callstack 21
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;Ili9341.c: 290: void ili9341_fill(int color);Ili9341.c: 291: {;Ili9341.c: 293:     ili9
      +                          341_setadress(0,LCD_W,0,LCD_H);
 10004                           
 10005                           ;incstack = 0
 10006  004A64  0E00               	movlw	0
 10007  004A66  6F69               	movwf	(ili9341_setadress@sc+1)& (0+255),b
 10008  004A68  0E00               	movlw	0
 10009  004A6A  6F68               	movwf	ili9341_setadress@sc& (0+255),b
 10010  004A6C  C054  F06A         	movff	_LCD_W,ili9341_setadress@ec	;volatile
 10011  004A70  C055  F06B         	movff	_LCD_W+1,ili9341_setadress@ec+1	;volatile
 10012  004A74  0E00               	movlw	0
 10013  004A76  6F6D               	movwf	(ili9341_setadress@sp+1)& (0+255),b
 10014  004A78  0E00               	movlw	0
 10015  004A7A  6F6C               	movwf	ili9341_setadress@sp& (0+255),b
 10016  004A7C  C052  F06E         	movff	_LCD_H,ili9341_setadress@ep	;volatile
 10017  004A80  C053  F06F         	movff	_LCD_H+1,ili9341_setadress@ep+1	;volatile
 10018  004A84  EC9D  F026         	call	_ili9341_setadress	;wreg free
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;Ili9341.c: 295:     for(int i=0;i<LCD_H;i++)
 10022  004A88  0E00               	movlw	0
 10023  004A8A  6F73               	movwf	(ili9341_fill@i+1)& (0+255),b
 10024  004A8C  0E00               	movlw	0
 10025  004A8E  6F72               	movwf	ili9341_fill@i& (0+255),b
 10026  004A90  D015               	goto	l6746
 10027  004A92                     l6736:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;Ili9341.c: 296:     {;Ili9341.c: 297:         for(int j=0;j<LCD_W;j++)
 10031  004A92  0E00               	movlw	0
 10032  004A94  6F75               	movwf	(ili9341_fill@j+1)& (0+255),b
 10033  004A96  0E00               	movlw	0
 10034  004A98  6F74               	movwf	ili9341_fill@j& (0+255),b
 10035  004A9A  D008               	goto	l6742
 10036  004A9C                     l6738:
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;Ili9341.c: 298:         {;Ili9341.c: 299:             ili9341_pushcolor(color);
 10040  004A9C  C070  F068         	movff	ili9341_fill@color,ili9341_pushcolor@color
 10041  004AA0  C071  F069         	movff	ili9341_fill@color+1,ili9341_pushcolor@color+1
 10042  004AA4  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;Ili9341.c: 300:         }
 10046  004AA8  4B74               	infsnz	ili9341_fill@j& (0+255),f,b
 10047  004AAA  2B75               	incf	(ili9341_fill@j+1)& (0+255),f,b
 10048  004AAC                     l6742:
 10049                           
 10050                           ; BSR set to: 0
 10051  004AAC  5054               	movf	_LCD_W^0,w,c	;volatile
 10052  004AAE  5D74               	subwf	ili9341_fill@j& (0+255),w,b
 10053  004AB0  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 10054  004AB2  5975               	subwfb	(ili9341_fill@j+1)& (0+255),w,b
 10055  004AB4  A0D8               	btfss	status,0,c
 10056  004AB6  D7F2               	goto	l6738
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;Ili9341.c: 301:     }
 10060  004AB8  4B72               	infsnz	ili9341_fill@i& (0+255),f,b
 10061  004ABA  2B73               	incf	(ili9341_fill@i+1)& (0+255),f,b
 10062  004ABC                     l6746:
 10063                           
 10064                           ; BSR set to: 0
 10065  004ABC  5052               	movf	_LCD_H^0,w,c	;volatile
 10066  004ABE  5D72               	subwf	ili9341_fill@i& (0+255),w,b
 10067  004AC0  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 10068  004AC2  5973               	subwfb	(ili9341_fill@i+1)& (0+255),w,b
 10069  004AC4  B0D8               	btfsc	status,0,c
 10070  004AC6  0012               	return	
 10071  004AC8  D7E4               	goto	l6736
 10072  004ACA                     __end_of_ili9341_fill:
 10073                           	callstack 0
 10074                           
 10075 ;; *************** function _ili9341_drawrect *****************
 10076 ;; Defined at:
 10077 ;;		line 330 in file "Ili9341.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  x               2   33[BANK0 ] int 
 10080 ;;  y               2   35[BANK0 ] int 
 10081 ;;  w               2   37[BANK0 ] int 
 10082 ;;  h               2   39[BANK0 ] int 
 10083 ;;  color           2   41[BANK0 ] unsigned int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, status,2, status,0, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 3F/1
 10092 ;;		On exit  : 3F/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10095 ;;      Params:         0      10       0       0       0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10098 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10099 ;;Total ram usage:       10 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:   10
 10102 ;; This function calls:
 10103 ;;		_ili9341_drawhline
 10104 ;;		_ili9341_drawvline
 10105 ;; This function is called by:
 10106 ;;		_main
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           	psect	text3
 10111  004522                     __ptext3:
 10112                           	callstack 0
 10113  004522                     _ili9341_drawrect:
 10114                           	callstack 20
 10115                           
 10116                           ; BSR set to: 1
 10117                           ;Ili9341.c: 330: void ili9341_drawrect(int x, int y, int w, int h,unsigned int color);Il
      +                          i9341.c: 331: {;Ili9341.c: 332:     ili9341_drawvline(x,y,h,color);
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;incstack = 0
 10121  004522  C081  F070         	movff	ili9341_drawrect@x,ili9341_drawvline@x
 10122  004526  C082  F071         	movff	ili9341_drawrect@x+1,ili9341_drawvline@x+1
 10123  00452A  C083  F072         	movff	ili9341_drawrect@y,ili9341_drawvline@y
 10124  00452E  C084  F073         	movff	ili9341_drawrect@y+1,ili9341_drawvline@y+1
 10125  004532  C087  F074         	movff	ili9341_drawrect@h,ili9341_drawvline@h
 10126  004536  C088  F075         	movff	ili9341_drawrect@h+1,ili9341_drawvline@h+1
 10127  00453A  C089  F076         	movff	ili9341_drawrect@color,ili9341_drawvline@color
 10128  00453E  C08A  F077         	movff	ili9341_drawrect@color+1,ili9341_drawvline@color+1
 10129  004542  ECBB  F01F         	call	_ili9341_drawvline	;wreg free
 10130                           
 10131                           ;Ili9341.c: 333:     ili9341_drawvline(x+w,y,h,color);
 10132  004546  5185               	movf	ili9341_drawrect@w& (0+255),w,b
 10133  004548  2581               	addwf	ili9341_drawrect@x& (0+255),w,b
 10134  00454A  6F70               	movwf	ili9341_drawvline@x& (0+255),b
 10135  00454C  5186               	movf	(ili9341_drawrect@w+1)& (0+255),w,b
 10136  00454E  2182               	addwfc	(ili9341_drawrect@x+1)& (0+255),w,b
 10137  004550  6F71               	movwf	(ili9341_drawvline@x+1)& (0+255),b
 10138  004552  C083  F072         	movff	ili9341_drawrect@y,ili9341_drawvline@y
 10139  004556  C084  F073         	movff	ili9341_drawrect@y+1,ili9341_drawvline@y+1
 10140  00455A  C087  F074         	movff	ili9341_drawrect@h,ili9341_drawvline@h
 10141  00455E  C088  F075         	movff	ili9341_drawrect@h+1,ili9341_drawvline@h+1
 10142  004562  C089  F076         	movff	ili9341_drawrect@color,ili9341_drawvline@color
 10143  004566  C08A  F077         	movff	ili9341_drawrect@color+1,ili9341_drawvline@color+1
 10144  00456A  ECBB  F01F         	call	_ili9341_drawvline	;wreg free
 10145                           
 10146                           ;Ili9341.c: 334:     ili9341_drawhline(x,y,w,color);
 10147  00456E  C081  F070         	movff	ili9341_drawrect@x,ili9341_drawhline@x
 10148  004572  C082  F071         	movff	ili9341_drawrect@x+1,ili9341_drawhline@x+1
 10149  004576  C083  F072         	movff	ili9341_drawrect@y,ili9341_drawhline@y
 10150  00457A  C084  F073         	movff	ili9341_drawrect@y+1,ili9341_drawhline@y+1
 10151  00457E  C085  F074         	movff	ili9341_drawrect@w,ili9341_drawhline@w
 10152  004582  C086  F075         	movff	ili9341_drawrect@w+1,ili9341_drawhline@w+1
 10153  004586  C089  F076         	movff	ili9341_drawrect@color,ili9341_drawhline@color
 10154  00458A  C08A  F077         	movff	ili9341_drawrect@color+1,ili9341_drawhline@color+1
 10155  00458E  EC30  F020         	call	_ili9341_drawhline	;wreg free
 10156                           
 10157                           ;Ili9341.c: 335:     ili9341_drawhline(x,y+h,w,color);
 10158  004592  C081  F070         	movff	ili9341_drawrect@x,ili9341_drawhline@x
 10159  004596  C082  F071         	movff	ili9341_drawrect@x+1,ili9341_drawhline@x+1
 10160  00459A  5187               	movf	ili9341_drawrect@h& (0+255),w,b
 10161  00459C  2583               	addwf	ili9341_drawrect@y& (0+255),w,b
 10162  00459E  6F72               	movwf	ili9341_drawhline@y& (0+255),b
 10163  0045A0  5188               	movf	(ili9341_drawrect@h+1)& (0+255),w,b
 10164  0045A2  2184               	addwfc	(ili9341_drawrect@y+1)& (0+255),w,b
 10165  0045A4  6F73               	movwf	(ili9341_drawhline@y+1)& (0+255),b
 10166  0045A6  C085  F074         	movff	ili9341_drawrect@w,ili9341_drawhline@w
 10167  0045AA  C086  F075         	movff	ili9341_drawrect@w+1,ili9341_drawhline@w+1
 10168  0045AE  C089  F076         	movff	ili9341_drawrect@color,ili9341_drawhline@color
 10169  0045B2  C08A  F077         	movff	ili9341_drawrect@color+1,ili9341_drawhline@color+1
 10170  0045B6  EC30  F020         	call	_ili9341_drawhline	;wreg free
 10171                           
 10172                           ; BSR set to: 0
 10173  0045BA  0012               	return		;funcret
 10174  0045BC                     __end_of_ili9341_drawrect:
 10175                           	callstack 0
 10176                           
 10177 ;; *************** function _ili9341_drawvline *****************
 10178 ;; Defined at:
 10179 ;;		line 354 in file "Ili9341.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  x               2   16[BANK0 ] int 
 10182 ;;  y               2   18[BANK0 ] int 
 10183 ;;  h               2   20[BANK0 ] int 
 10184 ;;  color           2   22[BANK0 ] int 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  j               2   31[BANK0 ] int 
 10187 ;;  i               2   29[BANK0 ] int 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      void 
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, status,0, cstack
 10192 ;; Tracked objects:
 10193 ;;		On entry : 3E/1
 10194 ;;		On exit  : 3F/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10197 ;;      Params:         0       8       0       0       0       0       0       0       0
 10198 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10199 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10200 ;;      Totals:         0      17       0       0       0       0       0       0       0
 10201 ;;Total ram usage:       17 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    9
 10204 ;; This function calls:
 10205 ;;		_ili9341_pushcolor
 10206 ;;		_ili9341_setadress
 10207 ;; This function is called by:
 10208 ;;		_ili9341_drawrect
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text4
 10213  003F76                     __ptext4:
 10214                           	callstack 0
 10215  003F76                     _ili9341_drawvline:
 10216                           	callstack 20
 10217                           
 10218                           ;Ili9341.c: 354: void ili9341_drawvline(int x, int y, int h, int color);Ili9341.c: 355: 
      +                          {;Ili9341.c: 356:     if((x >= LCD_W)||(y >= LCD_H)) return;
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;incstack = 0
 10222  003F76  5054               	movf	_LCD_W^0,w,c	;volatile
 10223  003F78  0100               	movlb	0	; () banked
 10224  003F7A  5D70               	subwf	ili9341_drawvline@x& (0+255),w,b
 10225  003F7C  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 10226  003F7E  5971               	subwfb	(ili9341_drawvline@x+1)& (0+255),w,b
 10227  003F80  B0D8               	btfsc	status,0,c
 10228  003F82  0012               	return	
 10229                           
 10230                           ; BSR set to: 0
 10231  003F84  5052               	movf	_LCD_H^0,w,c	;volatile
 10232  003F86  5D72               	subwf	ili9341_drawvline@y& (0+255),w,b
 10233  003F88  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 10234  003F8A  5973               	subwfb	(ili9341_drawvline@y+1)& (0+255),w,b
 10235  003F8C  B0D8               	btfsc	status,0,c
 10236  003F8E  0012               	return	
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;Ili9341.c: 358:     if((y+h-1) >= LCD_H) h = LCD_H-y;
 10240  003F90  0EFF               	movlw	255
 10241  003F92  6F78               	movwf	??_ili9341_drawvline& (0+255),b
 10242  003F94  0EFF               	movlw	255
 10243  003F96  6F79               	movwf	(??_ili9341_drawvline+1)& (0+255),b
 10244  003F98  5174               	movf	ili9341_drawvline@h& (0+255),w,b
 10245  003F9A  2572               	addwf	ili9341_drawvline@y& (0+255),w,b
 10246  003F9C  6F7A               	movwf	(??_ili9341_drawvline+2)& (0+255),b
 10247  003F9E  5175               	movf	(ili9341_drawvline@h+1)& (0+255),w,b
 10248  003FA0  2173               	addwfc	(ili9341_drawvline@y+1)& (0+255),w,b
 10249  003FA2  6F7B               	movwf	(??_ili9341_drawvline+3)& (0+255),b
 10250  003FA4  5178               	movf	??_ili9341_drawvline& (0+255),w,b
 10251  003FA6  277A               	addwf	(??_ili9341_drawvline+2)& (0+255),f,b
 10252  003FA8  5179               	movf	(??_ili9341_drawvline+1)& (0+255),w,b
 10253  003FAA  237B               	addwfc	(??_ili9341_drawvline+3)& (0+255),f,b
 10254  003FAC  5052               	movf	_LCD_H^0,w,c	;volatile
 10255  003FAE  5D7A               	subwf	(??_ili9341_drawvline+2)& (0+255),w,b
 10256  003FB0  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 10257  003FB2  597B               	subwfb	(??_ili9341_drawvline+3)& (0+255),w,b
 10258  003FB4  A0D8               	btfss	status,0,c
 10259  003FB6  D006               	goto	l6558
 10260                           
 10261                           ; BSR set to: 0
 10262  003FB8  5172               	movf	ili9341_drawvline@y& (0+255),w,b
 10263  003FBA  5C52               	subwf	_LCD_H^0,w,c	;volatile
 10264  003FBC  6F74               	movwf	ili9341_drawvline@h& (0+255),b
 10265  003FBE  5173               	movf	(ili9341_drawvline@y+1)& (0+255),w,b
 10266  003FC0  5853               	subwfb	(_LCD_H+1)^0,w,c	;volatile
 10267  003FC2  6F75               	movwf	(ili9341_drawvline@h+1)& (0+255),b
 10268  003FC4                     l6558:
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;Ili9341.c: 360:     ili9341_setadress(x,x+1,y,y+h-1);
 10272  003FC4  C070  F068         	movff	ili9341_drawvline@x,ili9341_setadress@sc
 10273  003FC8  C071  F069         	movff	ili9341_drawvline@x+1,ili9341_setadress@sc+1
 10274  003FCC  0E01               	movlw	1
 10275  003FCE  2570               	addwf	ili9341_drawvline@x& (0+255),w,b
 10276  003FD0  6F6A               	movwf	ili9341_setadress@ec& (0+255),b
 10277  003FD2  0E00               	movlw	0
 10278  003FD4  2171               	addwfc	(ili9341_drawvline@x+1)& (0+255),w,b
 10279  003FD6  6F6B               	movwf	(ili9341_setadress@ec+1)& (0+255),b
 10280  003FD8  C072  F06C         	movff	ili9341_drawvline@y,ili9341_setadress@sp
 10281  003FDC  C073  F06D         	movff	ili9341_drawvline@y+1,ili9341_setadress@sp+1
 10282  003FE0  5174               	movf	ili9341_drawvline@h& (0+255),w,b
 10283  003FE2  2572               	addwf	ili9341_drawvline@y& (0+255),w,b
 10284  003FE4  6F78               	movwf	??_ili9341_drawvline& (0+255),b
 10285  003FE6  5175               	movf	(ili9341_drawvline@h+1)& (0+255),w,b
 10286  003FE8  2173               	addwfc	(ili9341_drawvline@y+1)& (0+255),w,b
 10287  003FEA  6F79               	movwf	(??_ili9341_drawvline+1)& (0+255),b
 10288  003FEC  0EFF               	movlw	255
 10289  003FEE  2578               	addwf	??_ili9341_drawvline& (0+255),w,b
 10290  003FF0  6F6E               	movwf	ili9341_setadress@ep& (0+255),b
 10291  003FF2  0EFF               	movlw	255
 10292  003FF4  2179               	addwfc	(??_ili9341_drawvline+1)& (0+255),w,b
 10293  003FF6  6F6F               	movwf	(ili9341_setadress@ep+1)& (0+255),b
 10294  003FF8  EC9D  F026         	call	_ili9341_setadress	;wreg free
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;Ili9341.c: 362:     for(int i=0;i<h-1;i++)
 10298  003FFC  0E00               	movlw	0
 10299  003FFE  6F7E               	movwf	(ili9341_drawvline@i+1)& (0+255),b
 10300  004000  0E00               	movlw	0
 10301  004002  6F7D               	movwf	ili9341_drawvline@i& (0+255),b
 10302  004004  D016               	goto	l6576
 10303  004006                     l6562:
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;Ili9341.c: 363:     {;Ili9341.c: 364:         for(int j=0;j<2;j++)
 10307  004006  0E00               	movlw	0
 10308  004008  6F80               	movwf	(ili9341_drawvline@j+1)& (0+255),b
 10309  00400A  0E00               	movlw	0
 10310  00400C  6F7F               	movwf	ili9341_drawvline@j& (0+255),b
 10311  00400E                     l6568:
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;Ili9341.c: 365:         {;Ili9341.c: 366:             ili9341_pushcolor(color);
 10315  00400E  C076  F068         	movff	ili9341_drawvline@color,ili9341_pushcolor@color
 10316  004012  C077  F069         	movff	ili9341_drawvline@color+1,ili9341_pushcolor@color+1
 10317  004016  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;Ili9341.c: 367:         }
 10321  00401A  4B7F               	infsnz	ili9341_drawvline@j& (0+255),f,b
 10322  00401C  2B80               	incf	(ili9341_drawvline@j+1)& (0+255),f,b
 10323                           
 10324                           ; BSR set to: 0
 10325  00401E  BF80               	btfsc	(ili9341_drawvline@j+1)& (0+255),7,b
 10326  004020  D7F6               	goto	l6568
 10327  004022  5180               	movf	(ili9341_drawvline@j+1)& (0+255),w,b
 10328  004024  E104               	bnz	u8030
 10329  004026  0E02               	movlw	2
 10330  004028  5D7F               	subwf	ili9341_drawvline@j& (0+255),w,b
 10331  00402A  A0D8               	btfss	status,0,c
 10332  00402C  D7F0               	goto	l6568
 10333  00402E                     u8030:
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;Ili9341.c: 368:     }
 10337  00402E  4B7D               	infsnz	ili9341_drawvline@i& (0+255),f,b
 10338  004030  2B7E               	incf	(ili9341_drawvline@i+1)& (0+255),f,b
 10339  004032                     l6576:
 10340                           
 10341                           ; BSR set to: 0
 10342  004032  0EFF               	movlw	255
 10343  004034  6F78               	movwf	??_ili9341_drawvline& (0+255),b
 10344  004036  0EFF               	movlw	255
 10345  004038  6F79               	movwf	(??_ili9341_drawvline+1)& (0+255),b
 10346  00403A  C074  F07A         	movff	ili9341_drawvline@h,??_ili9341_drawvline+2
 10347  00403E  C075  F07B         	movff	ili9341_drawvline@h+1,??_ili9341_drawvline+3
 10348  004042  5178               	movf	??_ili9341_drawvline& (0+255),w,b
 10349  004044  277A               	addwf	(??_ili9341_drawvline+2)& (0+255),f,b
 10350  004046  5179               	movf	(??_ili9341_drawvline+1)& (0+255),w,b
 10351  004048  237B               	addwfc	(??_ili9341_drawvline+3)& (0+255),f,b
 10352  00404A  517A               	movf	(??_ili9341_drawvline+2)& (0+255),w,b
 10353  00404C  5D7D               	subwf	ili9341_drawvline@i& (0+255),w,b
 10354  00404E  517E               	movf	(ili9341_drawvline@i+1)& (0+255),w,b
 10355  004050  0A80               	xorlw	128
 10356  004052  6F7C               	movwf	(??_ili9341_drawvline+4)& (0+255),b
 10357  004054  517B               	movf	(??_ili9341_drawvline+3)& (0+255),w,b
 10358  004056  0A80               	xorlw	128
 10359  004058  597C               	subwfb	(??_ili9341_drawvline+4)& (0+255),w,b
 10360  00405A  B0D8               	btfsc	status,0,c
 10361  00405C  0012               	return	
 10362  00405E  D7D3               	goto	l6562
 10363  004060                     __end_of_ili9341_drawvline:
 10364                           	callstack 0
 10365                           
 10366 ;; *************** function _ili9341_drawhline *****************
 10367 ;; Defined at:
 10368 ;;		line 375 in file "Ili9341.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  x               2   16[BANK0 ] int 
 10371 ;;  y               2   18[BANK0 ] int 
 10372 ;;  w               2   20[BANK0 ] int 
 10373 ;;  color           2   22[BANK0 ] int 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  j               2   29[BANK0 ] int 
 10376 ;;  i               2   31[BANK0 ] int 
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 3F/0
 10383 ;;		On exit  : 3F/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10386 ;;      Params:         0       8       0       0       0       0       0       0       0
 10387 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10388 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10389 ;;      Totals:         0      17       0       0       0       0       0       0       0
 10390 ;;Total ram usage:       17 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    9
 10393 ;; This function calls:
 10394 ;;		_ili9341_pushcolor
 10395 ;;		_ili9341_setadress
 10396 ;; This function is called by:
 10397 ;;		_ili9341_drawrect
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           	psect	text5
 10402  004060                     __ptext5:
 10403                           	callstack 0
 10404  004060                     _ili9341_drawhline:
 10405                           	callstack 20
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;Ili9341.c: 375: void ili9341_drawhline(int x, int y, int w, int color);Ili9341.c: 376: 
      +                          {;Ili9341.c: 377:     if((x >= LCD_W)||(y >= LCD_H)) return;
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;incstack = 0
 10412  004060  5054               	movf	_LCD_W^0,w,c	;volatile
 10413  004062  5D70               	subwf	ili9341_drawhline@x& (0+255),w,b
 10414  004064  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 10415  004066  5971               	subwfb	(ili9341_drawhline@x+1)& (0+255),w,b
 10416  004068  B0D8               	btfsc	status,0,c
 10417  00406A  0012               	return	
 10418                           
 10419                           ; BSR set to: 0
 10420  00406C  5052               	movf	_LCD_H^0,w,c	;volatile
 10421  00406E  5D72               	subwf	ili9341_drawhline@y& (0+255),w,b
 10422  004070  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 10423  004072  5973               	subwfb	(ili9341_drawhline@y+1)& (0+255),w,b
 10424  004074  B0D8               	btfsc	status,0,c
 10425  004076  0012               	return	
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;Ili9341.c: 379:     if((x+w-1) >= LCD_W) w = LCD_W-x;
 10429  004078  0EFF               	movlw	255
 10430  00407A  6F78               	movwf	??_ili9341_drawhline& (0+255),b
 10431  00407C  0EFF               	movlw	255
 10432  00407E  6F79               	movwf	(??_ili9341_drawhline+1)& (0+255),b
 10433  004080  5174               	movf	ili9341_drawhline@w& (0+255),w,b
 10434  004082  2570               	addwf	ili9341_drawhline@x& (0+255),w,b
 10435  004084  6F7A               	movwf	(??_ili9341_drawhline+2)& (0+255),b
 10436  004086  5175               	movf	(ili9341_drawhline@w+1)& (0+255),w,b
 10437  004088  2171               	addwfc	(ili9341_drawhline@x+1)& (0+255),w,b
 10438  00408A  6F7B               	movwf	(??_ili9341_drawhline+3)& (0+255),b
 10439  00408C  5178               	movf	??_ili9341_drawhline& (0+255),w,b
 10440  00408E  277A               	addwf	(??_ili9341_drawhline+2)& (0+255),f,b
 10441  004090  5179               	movf	(??_ili9341_drawhline+1)& (0+255),w,b
 10442  004092  237B               	addwfc	(??_ili9341_drawhline+3)& (0+255),f,b
 10443  004094  5054               	movf	_LCD_W^0,w,c	;volatile
 10444  004096  5D7A               	subwf	(??_ili9341_drawhline+2)& (0+255),w,b
 10445  004098  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 10446  00409A  597B               	subwfb	(??_ili9341_drawhline+3)& (0+255),w,b
 10447  00409C  A0D8               	btfss	status,0,c
 10448  00409E  D006               	goto	l6586
 10449                           
 10450                           ; BSR set to: 0
 10451  0040A0  5170               	movf	ili9341_drawhline@x& (0+255),w,b
 10452  0040A2  5C54               	subwf	_LCD_W^0,w,c	;volatile
 10453  0040A4  6F74               	movwf	ili9341_drawhline@w& (0+255),b
 10454  0040A6  5171               	movf	(ili9341_drawhline@x+1)& (0+255),w,b
 10455  0040A8  5855               	subwfb	(_LCD_W+1)^0,w,c	;volatile
 10456  0040AA  6F75               	movwf	(ili9341_drawhline@w+1)& (0+255),b
 10457  0040AC                     l6586:
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;Ili9341.c: 381:     ili9341_setadress(x,x+w-1,y,y+1);
 10461  0040AC  C070  F068         	movff	ili9341_drawhline@x,ili9341_setadress@sc
 10462  0040B0  C071  F069         	movff	ili9341_drawhline@x+1,ili9341_setadress@sc+1
 10463  0040B4  5174               	movf	ili9341_drawhline@w& (0+255),w,b
 10464  0040B6  2570               	addwf	ili9341_drawhline@x& (0+255),w,b
 10465  0040B8  6F78               	movwf	??_ili9341_drawhline& (0+255),b
 10466  0040BA  5175               	movf	(ili9341_drawhline@w+1)& (0+255),w,b
 10467  0040BC  2171               	addwfc	(ili9341_drawhline@x+1)& (0+255),w,b
 10468  0040BE  6F79               	movwf	(??_ili9341_drawhline+1)& (0+255),b
 10469  0040C0  0EFF               	movlw	255
 10470  0040C2  2578               	addwf	??_ili9341_drawhline& (0+255),w,b
 10471  0040C4  6F6A               	movwf	ili9341_setadress@ec& (0+255),b
 10472  0040C6  0EFF               	movlw	255
 10473  0040C8  2179               	addwfc	(??_ili9341_drawhline+1)& (0+255),w,b
 10474  0040CA  6F6B               	movwf	(ili9341_setadress@ec+1)& (0+255),b
 10475  0040CC  C072  F06C         	movff	ili9341_drawhline@y,ili9341_setadress@sp
 10476  0040D0  C073  F06D         	movff	ili9341_drawhline@y+1,ili9341_setadress@sp+1
 10477  0040D4  0E01               	movlw	1
 10478  0040D6  2572               	addwf	ili9341_drawhline@y& (0+255),w,b
 10479  0040D8  6F6E               	movwf	ili9341_setadress@ep& (0+255),b
 10480  0040DA  0E00               	movlw	0
 10481  0040DC  2173               	addwfc	(ili9341_drawhline@y+1)& (0+255),w,b
 10482  0040DE  6F6F               	movwf	(ili9341_setadress@ep+1)& (0+255),b
 10483  0040E0  EC9D  F026         	call	_ili9341_setadress	;wreg free
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;Ili9341.c: 383:     for(int i=0;i<2;i++)
 10487  0040E4  0E00               	movlw	0
 10488  0040E6  6F80               	movwf	(ili9341_drawhline@i+1)& (0+255),b
 10489  0040E8  0E00               	movlw	0
 10490  0040EA  6F7F               	movwf	ili9341_drawhline@i& (0+255),b
 10491  0040EC                     l6594:
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;Ili9341.c: 384:     {;Ili9341.c: 385:         for(int j=0;j<w-1;j++)
 10495  0040EC  0E00               	movlw	0
 10496  0040EE  6F7E               	movwf	(ili9341_drawhline@j+1)& (0+255),b
 10497  0040F0  0E00               	movlw	0
 10498  0040F2  6F7D               	movwf	ili9341_drawhline@j& (0+255),b
 10499  0040F4  D008               	goto	l6600
 10500  0040F6                     l6596:
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;Ili9341.c: 386:         {;Ili9341.c: 387:             ili9341_pushcolor(color);
 10504  0040F6  C076  F068         	movff	ili9341_drawhline@color,ili9341_pushcolor@color
 10505  0040FA  C077  F069         	movff	ili9341_drawhline@color+1,ili9341_pushcolor@color+1
 10506  0040FE  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;Ili9341.c: 388:         }
 10510  004102  4B7D               	infsnz	ili9341_drawhline@j& (0+255),f,b
 10511  004104  2B7E               	incf	(ili9341_drawhline@j+1)& (0+255),f,b
 10512  004106                     l6600:
 10513                           
 10514                           ; BSR set to: 0
 10515  004106  0EFF               	movlw	255
 10516  004108  6F78               	movwf	??_ili9341_drawhline& (0+255),b
 10517  00410A  0EFF               	movlw	255
 10518  00410C  6F79               	movwf	(??_ili9341_drawhline+1)& (0+255),b
 10519  00410E  C074  F07A         	movff	ili9341_drawhline@w,??_ili9341_drawhline+2
 10520  004112  C075  F07B         	movff	ili9341_drawhline@w+1,??_ili9341_drawhline+3
 10521  004116  5178               	movf	??_ili9341_drawhline& (0+255),w,b
 10522  004118  277A               	addwf	(??_ili9341_drawhline+2)& (0+255),f,b
 10523  00411A  5179               	movf	(??_ili9341_drawhline+1)& (0+255),w,b
 10524  00411C  237B               	addwfc	(??_ili9341_drawhline+3)& (0+255),f,b
 10525  00411E  517A               	movf	(??_ili9341_drawhline+2)& (0+255),w,b
 10526  004120  5D7D               	subwf	ili9341_drawhline@j& (0+255),w,b
 10527  004122  517E               	movf	(ili9341_drawhline@j+1)& (0+255),w,b
 10528  004124  0A80               	xorlw	128
 10529  004126  6F7C               	movwf	(??_ili9341_drawhline+4)& (0+255),b
 10530  004128  517B               	movf	(??_ili9341_drawhline+3)& (0+255),w,b
 10531  00412A  0A80               	xorlw	128
 10532  00412C  597C               	subwfb	(??_ili9341_drawhline+4)& (0+255),w,b
 10533  00412E  A0D8               	btfss	status,0,c
 10534  004130  D7E2               	goto	l6596
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;Ili9341.c: 389:     }
 10538  004132  4B7F               	infsnz	ili9341_drawhline@i& (0+255),f,b
 10539  004134  2B80               	incf	(ili9341_drawhline@i+1)& (0+255),f,b
 10540                           
 10541                           ; BSR set to: 0
 10542  004136  BF80               	btfsc	(ili9341_drawhline@i+1)& (0+255),7,b
 10543  004138  D7D9               	goto	l6594
 10544  00413A  5180               	movf	(ili9341_drawhline@i+1)& (0+255),w,b
 10545  00413C  E105               	bnz	u8090
 10546  00413E  0E02               	movlw	2
 10547  004140  5D7F               	subwf	ili9341_drawhline@i& (0+255),w,b
 10548  004142  B0D8               	btfsc	status,0,c
 10549  004144  0012               	return	
 10550  004146  D7D2               	goto	l6594
 10551  004148                     u8090:
 10552                           
 10553                           ; BSR set to: 0
 10554  004148  0012               	return		;funcret
 10555  00414A                     __end_of_ili9341_drawhline:
 10556                           	callstack 0
 10557                           
 10558 ;; *************** function _UART_int *****************
 10559 ;; Defined at:
 10560 ;;		line 35 in file "Uart_Hard.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  recepcion       1    wreg     unsigned char 
 10563 ;;  transmicion     1    5[BANK0 ] unsigned char 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;  recepcion       1    7[BANK0 ] unsigned char 
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      void 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2, status,0
 10570 ;; Tracked objects:
 10571 ;;		On entry : 3F/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10575 ;;      Params:         0       1       0       0       0       0       0       0       0
 10576 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10577 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10578 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10579 ;;Total ram usage:        3 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    7
 10582 ;; This function calls:
 10583 ;;		Nothing
 10584 ;; This function is called by:
 10585 ;;		_main
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text6
 10590  004EE6                     __ptext6:
 10591                           	callstack 0
 10592  004EE6                     _UART_int:
 10593                           	callstack 23
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;incstack = 0
 10597                           ;UART_int@recepcion stored from wreg
 10598  004EE6  6F67               	movwf	UART_int@recepcion& (0+255),b
 10599                           
 10600                           ;Uart_Hard.c: 35: void UART_int(unsigned char recepcion,unsigned char transmicion);Uart_
      +                          Hard.c: 36: {;Uart_Hard.c: 37:     if(recepcion == 1)
 10601  004EE8  0100               	movlb	0	; () banked
 10602  004EEA  0567               	decf	UART_int@recepcion& (0+255),w,b
 10603  004EEC  A4D8               	btfss	status,2,c
 10604  004EEE  D004               	goto	l6724
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;Uart_Hard.c: 38:     {;Uart_Hard.c: 41:         INTCONbits.GIE = 1;
 10608  004EF0  8EF2               	bsf	242,7,c	;volatile
 10609                           
 10610                           ;Uart_Hard.c: 42:         PIE1bits.RCIE = 1;
 10611  004EF2  8A9D               	bsf	157,5,c	;volatile
 10612                           
 10613                           ;Uart_Hard.c: 43:         IPR1bits.RCIP = 1;
 10614  004EF4  8A9F               	bsf	159,5,c	;volatile
 10615                           
 10616                           ;Uart_Hard.c: 44:         INTCONbits.PEIE = 1;
 10617  004EF6  8CF2               	bsf	242,6,c	;volatile
 10618  004EF8                     l6724:
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;Uart_Hard.c: 53:     if(transmicion == 1)
 10622  004EF8  0565               	decf	UART_int@transmicion& (0+255),w,b
 10623  004EFA  A4D8               	btfss	status,2,c
 10624  004EFC  D004               	goto	l6728
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;Uart_Hard.c: 54:     {;Uart_Hard.c: 57:         INTCONbits.GIE = 1;
 10628  004EFE  8EF2               	bsf	242,7,c	;volatile
 10629                           
 10630                           ;Uart_Hard.c: 58:         PIE1bits.TXIE = 1;
 10631  004F00  889D               	bsf	157,4,c	;volatile
 10632                           
 10633                           ;Uart_Hard.c: 59:         IPR1bits.RCIP = 1;
 10634  004F02  8A9F               	bsf	159,5,c	;volatile
 10635                           
 10636                           ;Uart_Hard.c: 60:         INTCONbits.PEIE = 1;
 10637  004F04  8CF2               	bsf	242,6,c	;volatile
 10638  004F06                     l6728:
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;Uart_Hard.c: 69:     _delay((unsigned long)((20)*(20000000/4000.0)));
 10642  004F06  0E82               	movlw	130
 10643  004F08  0100               	movlb	0	; () banked
 10644  004F0A  6F66               	movwf	??_UART_int& (0+255),b
 10645  004F0C  0EDD               	movlw	221
 10646  004F0E                     u16407:
 10647  004F0E  2EE8               	decfsz	wreg,f,c
 10648  004F10  D7FE               	bra	u16407
 10649  004F12  2F66               	decfsz	??_UART_int& (0+255),f,b
 10650  004F14  D7FC               	bra	u16407
 10651  004F16  D000               	nop2	
 10652  004F18  0012               	return		;funcret
 10653  004F1A                     __end_of_UART_int:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function _UART_init *****************
 10657 ;; Defined at:
 10658 ;;		line 4 in file "Uart_Hard.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  BAUD            2   19[BANK0 ] unsigned int 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 3F/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10672 ;;      Params:         0       2       0       0       0       0       0       0       0
 10673 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10674 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10675 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10676 ;;Total ram usage:        7 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    8
 10679 ;; This function calls:
 10680 ;;		___aldiv
 10681 ;; This function is called by:
 10682 ;;		_main
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text7
 10687  004904                     __ptext7:
 10688                           	callstack 0
 10689  004904                     _UART_init:
 10690                           	callstack 22
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;Uart_Hard.c: 4: void UART_init(unsigned int BAUD);Uart_Hard.c: 5: {;Uart_Hard.c: 7:    
      +                           TRISCbits.TRISC7 = 1;
 10694                           
 10695                           ;incstack = 0
 10696  004904  8E94               	bsf	148,7,c	;volatile
 10697                           
 10698                           ;Uart_Hard.c: 8:     TRISCbits.TRISC6 = 0;
 10699  004906  9C94               	bcf	148,6,c	;volatile
 10700                           
 10701                           ;Uart_Hard.c: 11:     TXSTAbits.BRGH = 1;
 10702  004908  84AC               	bsf	172,2,c	;volatile
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;Uart_Hard.c: 12:     SPBRG = (unsigned char) (((20000000 / BAUD) / 16) - 1);
 10706  00490A  C073  F069         	movff	UART_init@BAUD,___aldiv@divisor
 10707  00490E  C074  F06A         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 10708  004912  6B6B               	clrf	(___aldiv@divisor+2)& (0+255),b
 10709  004914  6B6C               	clrf	(___aldiv@divisor+3)& (0+255),b
 10710  004916  0E00               	movlw	0
 10711  004918  6F65               	movwf	___aldiv@dividend& (0+255),b
 10712  00491A  0E2D               	movlw	45
 10713  00491C  6F66               	movwf	(___aldiv@dividend+1)& (0+255),b
 10714  00491E  0E31               	movlw	49
 10715  004920  6F67               	movwf	(___aldiv@dividend+2)& (0+255),b
 10716  004922  0E01               	movlw	1
 10717  004924  6F68               	movwf	(___aldiv@dividend+3)& (0+255),b
 10718  004926  EC75  F021         	call	___aldiv	;wreg free
 10719  00492A  C065  F076         	movff	?___aldiv,_UART_init$2421
 10720  00492E  C066  F077         	movff	?___aldiv+1,_UART_init$2421+1
 10721  004932  C067  F078         	movff	?___aldiv+2,_UART_init$2421+2
 10722  004936  C068  F079         	movff	?___aldiv+3,_UART_init$2421+3
 10723                           
 10724                           ;Uart_Hard.c: 12:     SPBRG = (unsigned char) (((20000000 / BAUD) / 16) - 1);
 10725  00493A  C076  F065         	movff	_UART_init$2421,___aldiv@dividend
 10726  00493E  C077  F066         	movff	_UART_init$2421+1,___aldiv@dividend+1
 10727  004942  C078  F067         	movff	_UART_init$2421+2,___aldiv@dividend+2
 10728  004946  C079  F068         	movff	_UART_init$2421+3,___aldiv@dividend+3
 10729  00494A  0E10               	movlw	16
 10730  00494C  6F69               	movwf	___aldiv@divisor& (0+255),b
 10731  00494E  0E00               	movlw	0
 10732  004950  6F6A               	movwf	(___aldiv@divisor+1)& (0+255),b
 10733  004952  0E00               	movlw	0
 10734  004954  6F6B               	movwf	(___aldiv@divisor+2)& (0+255),b
 10735  004956  0E00               	movlw	0
 10736  004958  6F6C               	movwf	(___aldiv@divisor+3)& (0+255),b
 10737  00495A  EC75  F021         	call	___aldiv	;wreg free
 10738  00495E  0565               	decf	?___aldiv& (0+255),w,b
 10739  004960  6EAF               	movwf	175,c	;volatile
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;Uart_Hard.c: 15:     TXSTAbits.SYNC = 0;
 10743  004962  98AC               	bcf	172,4,c	;volatile
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;Uart_Hard.c: 18:     RCSTAbits.SPEN = 1;
 10747  004964  8EAB               	bsf	171,7,c	;volatile
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;Uart_Hard.c: 21:     TXSTAbits.TX9 = 0;
 10751  004966  9CAC               	bcf	172,6,c	;volatile
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;Uart_Hard.c: 22:     TXSTAbits.TXEN = 1;
 10755  004968  8AAC               	bsf	172,5,c	;volatile
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;Uart_Hard.c: 25:     RCSTAbits.CREN = 1;
 10759  00496A  88AB               	bsf	171,4,c	;volatile
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;Uart_Hard.c: 26:     RCSTAbits.RC9 = 0;
 10763  00496C  9CAB               	bcf	171,6,c	;volatile
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;Uart_Hard.c: 28:     _delay((unsigned long)((20)*(20000000/4000.0)));
 10767  00496E  0E82               	movlw	130
 10768  004970  0100               	movlb	0	; () banked
 10769  004972  6F75               	movwf	??_UART_init& (0+255),b
 10770  004974  0EDD               	movlw	221
 10771  004976                     u16417:
 10772  004976  2EE8               	decfsz	wreg,f,c
 10773  004978  D7FE               	bra	u16417
 10774  00497A  2F75               	decfsz	??_UART_init& (0+255),f,b
 10775  00497C  D7FC               	bra	u16417
 10776  00497E  D000               	nop2	
 10777  004980  0012               	return		;funcret
 10778  004982                     __end_of_UART_init:
 10779                           	callstack 0
 10780                           
 10781 ;; *************** function ___aldiv *****************
 10782 ;; Defined at:
 10783 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\aldiv.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  dividend        4    5[BANK0 ] long 
 10786 ;;  divisor         4    9[BANK0 ] long 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  quotient        4   15[BANK0 ] long 
 10789 ;;  sign            1   14[BANK0 ] unsigned char 
 10790 ;;  counter         1   13[BANK0 ] unsigned char 
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  4    5[BANK0 ] long 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2, status,0
 10795 ;; Tracked objects:
 10796 ;;		On entry : 3F/0
 10797 ;;		On exit  : 3F/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10800 ;;      Params:         0       8       0       0       0       0       0       0       0
 10801 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10803 ;;      Totals:         0      14       0       0       0       0       0       0       0
 10804 ;;Total ram usage:       14 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    7
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_UART_init
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text8
 10815  0042EA                     __ptext8:
 10816                           	callstack 0
 10817  0042EA                     ___aldiv:
 10818                           	callstack 22
 10819                           
 10820                           ; BSR set to: 0
 10821                           
 10822                           ;incstack = 0
 10823  0042EA  0E00               	movlw	0
 10824  0042EC  6F6E               	movwf	___aldiv@sign& (0+255),b
 10825                           
 10826                           ; BSR set to: 0
 10827  0042EE  AF6C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 10828  0042F0  D00A               	goto	l6614
 10829                           
 10830                           ; BSR set to: 0
 10831  0042F2  1F6C               	comf	(___aldiv@divisor+3)& (0+255),f,b
 10832  0042F4  1F6B               	comf	(___aldiv@divisor+2)& (0+255),f,b
 10833  0042F6  1F6A               	comf	(___aldiv@divisor+1)& (0+255),f,b
 10834  0042F8  6D69               	negf	___aldiv@divisor& (0+255),b
 10835  0042FA  0E00               	movlw	0
 10836  0042FC  236A               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 10837  0042FE  236B               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 10838  004300  236C               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 10839                           
 10840                           ; BSR set to: 0
 10841  004302  0E01               	movlw	1
 10842  004304  6F6E               	movwf	___aldiv@sign& (0+255),b
 10843  004306                     l6614:
 10844                           
 10845                           ; BSR set to: 0
 10846  004306  AF68               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 10847  004308  D00A               	goto	l6620
 10848                           
 10849                           ; BSR set to: 0
 10850  00430A  1F68               	comf	(___aldiv@dividend+3)& (0+255),f,b
 10851  00430C  1F67               	comf	(___aldiv@dividend+2)& (0+255),f,b
 10852  00430E  1F66               	comf	(___aldiv@dividend+1)& (0+255),f,b
 10853  004310  6D65               	negf	___aldiv@dividend& (0+255),b
 10854  004312  0E00               	movlw	0
 10855  004314  2366               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 10856  004316  2367               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 10857  004318  2368               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 10858                           
 10859                           ; BSR set to: 0
 10860  00431A  0E01               	movlw	1
 10861  00431C  1B6E               	xorwf	___aldiv@sign& (0+255),f,b
 10862  00431E                     l6620:
 10863                           
 10864                           ; BSR set to: 0
 10865  00431E  0E00               	movlw	0
 10866  004320  6F6F               	movwf	___aldiv@quotient& (0+255),b
 10867  004322  0E00               	movlw	0
 10868  004324  6F70               	movwf	(___aldiv@quotient+1)& (0+255),b
 10869  004326  0E00               	movlw	0
 10870  004328  6F71               	movwf	(___aldiv@quotient+2)& (0+255),b
 10871  00432A  0E00               	movlw	0
 10872  00432C  6F72               	movwf	(___aldiv@quotient+3)& (0+255),b
 10873                           
 10874                           ; BSR set to: 0
 10875  00432E  5169               	movf	___aldiv@divisor& (0+255),w,b
 10876  004330  116A               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 10877  004332  116B               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 10878  004334  116C               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 10879  004336  B4D8               	btfsc	status,2,c
 10880  004338  D02A               	goto	l6642
 10881                           
 10882                           ; BSR set to: 0
 10883  00433A  0E01               	movlw	1
 10884  00433C  6F6D               	movwf	___aldiv@counter& (0+255),b
 10885  00433E  D006               	goto	l6628
 10886  004340                     l6626:
 10887                           
 10888                           ; BSR set to: 0
 10889  004340  90D8               	bcf	status,0,c
 10890  004342  3769               	rlcf	___aldiv@divisor& (0+255),f,b
 10891  004344  376A               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 10892  004346  376B               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 10893  004348  376C               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 10894  00434A  2B6D               	incf	___aldiv@counter& (0+255),f,b
 10895  00434C                     l6628:
 10896                           
 10897                           ; BSR set to: 0
 10898  00434C  AF6C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 10899  00434E  D7F8               	goto	l6626
 10900  004350                     u8130:
 10901                           
 10902                           ; BSR set to: 0
 10903  004350  90D8               	bcf	status,0,c
 10904  004352  376F               	rlcf	___aldiv@quotient& (0+255),f,b
 10905  004354  3770               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 10906  004356  3771               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 10907  004358  3772               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 0
 10910  00435A  5169               	movf	___aldiv@divisor& (0+255),w,b
 10911  00435C  5D65               	subwf	___aldiv@dividend& (0+255),w,b
 10912  00435E  516A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10913  004360  5966               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 10914  004362  516B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10915  004364  5967               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 10916  004366  516C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10917  004368  5968               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 10918  00436A  A0D8               	btfss	status,0,c
 10919  00436C  D009               	goto	l6638
 10920                           
 10921                           ; BSR set to: 0
 10922  00436E  5169               	movf	___aldiv@divisor& (0+255),w,b
 10923  004370  5F65               	subwf	___aldiv@dividend& (0+255),f,b
 10924  004372  516A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10925  004374  5B66               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 10926  004376  516B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10927  004378  5B67               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 10928  00437A  516C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10929  00437C  5B68               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 10930                           
 10931                           ; BSR set to: 0
 10932  00437E  816F               	bsf	___aldiv@quotient& (0+255),0,b
 10933  004380                     l6638:
 10934                           
 10935                           ; BSR set to: 0
 10936  004380  90D8               	bcf	status,0,c
 10937  004382  336C               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 10938  004384  336B               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 10939  004386  336A               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 10940  004388  3369               	rrcf	___aldiv@divisor& (0+255),f,b
 10941                           
 10942                           ; BSR set to: 0
 10943  00438A  2F6D               	decfsz	___aldiv@counter& (0+255),f,b
 10944  00438C  D7E1               	goto	u8130
 10945  00438E                     l6642:
 10946                           
 10947                           ; BSR set to: 0
 10948  00438E  516E               	movf	___aldiv@sign& (0+255),w,b
 10949  004390  B4D8               	btfsc	status,2,c
 10950  004392  D008               	goto	l6646
 10951                           
 10952                           ; BSR set to: 0
 10953  004394  1F72               	comf	(___aldiv@quotient+3)& (0+255),f,b
 10954  004396  1F71               	comf	(___aldiv@quotient+2)& (0+255),f,b
 10955  004398  1F70               	comf	(___aldiv@quotient+1)& (0+255),f,b
 10956  00439A  6D6F               	negf	___aldiv@quotient& (0+255),b
 10957  00439C  0E00               	movlw	0
 10958  00439E  2370               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 10959  0043A0  2371               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 10960  0043A2  2372               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 10961  0043A4                     l6646:
 10962                           
 10963                           ; BSR set to: 0
 10964  0043A4  C06F  F065         	movff	___aldiv@quotient,?___aldiv
 10965  0043A8  C070  F066         	movff	___aldiv@quotient+1,?___aldiv+1
 10966  0043AC  C071  F067         	movff	___aldiv@quotient+2,?___aldiv+2
 10967  0043B0  C072  F068         	movff	___aldiv@quotient+3,?___aldiv+3
 10968                           
 10969                           ; BSR set to: 0
 10970  0043B4  0012               	return		;funcret
 10971  0043B6                     __end_of___aldiv:
 10972                           	callstack 0
 10973                           
 10974 ;; *************** function _Task_Com *****************
 10975 ;; Defined at:
 10976 ;;		line 295 in file "Main.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  i               1   36[BANK0 ] unsigned char 
 10981 ;;  i               1   38[BANK0 ] unsigned char 
 10982 ;;  buffer_set     15   18[BANK0 ] unsigned char [15]
 10983 ;;  buffer_val      3   33[BANK0 ] unsigned char [3]
 10984 ;;  comando         1   37[BANK0 ] unsigned char 
 10985 ;;  j               1   17[BANK0 ] unsigned char 
 10986 ;;  flag            1   16[BANK0 ] _Bool 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/1
 10993 ;;		On exit  : 3F/1
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10996 ;;      Params:         0       0       0       0       0       0       0       0       0
 10997 ;;      Locals:         0      23       0       0       0       0       0       0       0
 10998 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10999 ;;      Totals:         0      28       0       0       0       0       0       0       0
 11000 ;;Total ram usage:       28 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    9
 11003 ;; This function calls:
 11004 ;;		_UART_array
 11005 ;;		_UART_arrayln
 11006 ;;		___wmul
 11007 ;; This function is called by:
 11008 ;;		_main
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text9
 11013  0010FE                     __ptext9:
 11014                           	callstack 0
 11015  0010FE                     _Task_Com:
 11016                           	callstack 21
 11017                           
 11018                           ;Main.c: 297:     _Bool flag=0;
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;incstack = 0
 11022  0010FE  0E00               	movlw	0
 11023  001100  0100               	movlb	0	; () banked
 11024  001102  6F70               	movwf	Task_Com@flag& (0+255),b
 11025                           
 11026                           ;Main.c: 298:     uint8_t comando=0,j=0;
 11027  001104  0E00               	movlw	0
 11028  001106  6F85               	movwf	Task_Com@comando& (0+255),b
 11029  001108  0E00               	movlw	0
 11030  00110A  6F71               	movwf	Task_Com@j& (0+255),b
 11031                           
 11032                           ;Main.c: 299:     char buffer_set[15],buffer_val[3];;Main.c: 303:     for(char i=0;i<lon
      +                          g_cad;i++)
 11033  00110C  0E00               	movlw	0
 11034  00110E  6F86               	movwf	Task_Com@i& (0+255),b
 11035  001110  D028               	goto	l11310
 11036  001112                     l11296:
 11037                           
 11038                           ; BSR set to: 0
 11039                           ;Main.c: 304:     {;Main.c: 305:         if(!flag)
 11040  001112  5170               	movf	Task_Com@flag& (0+255),w,b
 11041  001114  A4D8               	btfss	status,2,c
 11042  001116  D017               	goto	l11304
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;Main.c: 306:         {;Main.c: 307:             buffer_set[i] = cmd[i];
 11046  001118  0E00               	movlw	low _cmd
 11047  00111A  2586               	addwf	Task_Com@i& (0+255),w,b
 11048  00111C  6ED9               	movwf	fsr2l,c
 11049  00111E  6ADA               	clrf	fsr2h,c
 11050  001120  0E01               	movlw	high _cmd
 11051  001122  22DA               	addwfc	fsr2h,f,c
 11052  001124  5186               	movf	Task_Com@i& (0+255),w,b
 11053  001126  0F72               	addlw	low Task_Com@buffer_set
 11054  001128  6EE1               	movwf	fsr1l,c
 11055  00112A  6AE2               	clrf	fsr1h,c
 11056  00112C  CFDF FFE7          	movff	indf2,indf1
 11057                           
 11058                           ; BSR set to: 0
 11059                           ;Main.c: 308:             if(buffer_set[i] == ':') flag=1;
 11060  001130  5186               	movf	Task_Com@i& (0+255),w,b
 11061  001132  0F72               	addlw	low Task_Com@buffer_set
 11062  001134  6ED9               	movwf	fsr2l,c
 11063  001136  6ADA               	clrf	fsr2h,c
 11064  001138  0E3A               	movlw	58
 11065  00113A  18DE               	xorwf	postinc2,w,c
 11066  00113C  A4D8               	btfss	status,2,c
 11067  00113E  D010               	goto	l11308
 11068                           
 11069                           ; BSR set to: 0
 11070  001140  0E01               	movlw	1
 11071  001142  6F70               	movwf	Task_Com@flag& (0+255),b
 11072  001144  D00D               	goto	l11308
 11073  001146                     l11304:
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;Main.c: 311:         {;Main.c: 312:             buffer_val[j] = cmd[i];
 11077  001146  0E00               	movlw	low _cmd
 11078  001148  2586               	addwf	Task_Com@i& (0+255),w,b
 11079  00114A  6ED9               	movwf	fsr2l,c
 11080  00114C  6ADA               	clrf	fsr2h,c
 11081  00114E  0E01               	movlw	high _cmd
 11082  001150  22DA               	addwfc	fsr2h,f,c
 11083  001152  5171               	movf	Task_Com@j& (0+255),w,b
 11084  001154  0F81               	addlw	low Task_Com@buffer_val
 11085  001156  6EE1               	movwf	fsr1l,c
 11086  001158  6AE2               	clrf	fsr1h,c
 11087  00115A  CFDF FFE7          	movff	indf2,indf1
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;Main.c: 313:             j++;
 11091  00115E  2B71               	incf	Task_Com@j& (0+255),f,b
 11092  001160                     l11308:
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;Main.c: 315:     }
 11096  001160  2B86               	incf	Task_Com@i& (0+255),f,b
 11097  001162                     l11310:
 11098                           
 11099                           ; BSR set to: 0
 11100  001162  504F               	movf	_long_cad^0,w,c
 11101  001164  5D86               	subwf	Task_Com@i& (0+255),w,b
 11102  001166  A0D8               	btfss	status,0,c
 11103  001168  D7D4               	goto	l11296
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;Main.c: 320:     if(buffer_set[0]=='s' && buffer_set[1]=='e' && buffer_set[2]=='t' && b
      +                          uffer_set[3]=='p' && buffer_set[4]=='w' && buffer_set[5]=='m' && buffer_set[6]==':') com
      +                          ando=1;
 11107  00116A  0E73               	movlw	115
 11108  00116C  1972               	xorwf	Task_Com@buffer_set& (0+255),w,b
 11109  00116E  A4D8               	btfss	status,2,c
 11110  001170  D01A               	goto	l11328
 11111                           
 11112                           ; BSR set to: 0
 11113  001172  0E65               	movlw	101
 11114  001174  1973               	xorwf	(Task_Com@buffer_set+1)& (0+255),w,b
 11115  001176  A4D8               	btfss	status,2,c
 11116  001178  D016               	goto	l11328
 11117                           
 11118                           ; BSR set to: 0
 11119  00117A  0E74               	movlw	116
 11120  00117C  1974               	xorwf	(Task_Com@buffer_set+2)& (0+255),w,b
 11121  00117E  A4D8               	btfss	status,2,c
 11122  001180  D012               	goto	l11328
 11123                           
 11124                           ; BSR set to: 0
 11125  001182  0E70               	movlw	112
 11126  001184  1975               	xorwf	(Task_Com@buffer_set+3)& (0+255),w,b
 11127  001186  A4D8               	btfss	status,2,c
 11128  001188  D00E               	goto	l11328
 11129                           
 11130                           ; BSR set to: 0
 11131  00118A  0E77               	movlw	119
 11132  00118C  1976               	xorwf	(Task_Com@buffer_set+4)& (0+255),w,b
 11133  00118E  A4D8               	btfss	status,2,c
 11134  001190  D00A               	goto	l11328
 11135                           
 11136                           ; BSR set to: 0
 11137  001192  0E6D               	movlw	109
 11138  001194  1977               	xorwf	(Task_Com@buffer_set+5)& (0+255),w,b
 11139  001196  A4D8               	btfss	status,2,c
 11140  001198  D006               	goto	l11328
 11141                           
 11142                           ; BSR set to: 0
 11143  00119A  0E3A               	movlw	58
 11144  00119C  1978               	xorwf	(Task_Com@buffer_set+6)& (0+255),w,b
 11145  00119E  A4D8               	btfss	status,2,c
 11146  0011A0  D002               	goto	l11328
 11147                           
 11148                           ; BSR set to: 0
 11149  0011A2  0E01               	movlw	1
 11150  0011A4  6F85               	movwf	Task_Com@comando& (0+255),b
 11151  0011A6                     l11328:
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;Main.c: 322:     if(buffer_set[0]=='s' && buffer_set[1]=='e' && buffer_set[2]=='t' && b
      +                          uffer_set[3]=='e' && buffer_set[4]=='s' && buffer_set[5]=='t' && buffer_set[6]==':') com
      +                          ando=2;
 11155  0011A6  0E73               	movlw	115
 11156  0011A8  1972               	xorwf	Task_Com@buffer_set& (0+255),w,b
 11157  0011AA  A4D8               	btfss	status,2,c
 11158  0011AC  D01A               	goto	l11344
 11159                           
 11160                           ; BSR set to: 0
 11161  0011AE  0E65               	movlw	101
 11162  0011B0  1973               	xorwf	(Task_Com@buffer_set+1)& (0+255),w,b
 11163  0011B2  A4D8               	btfss	status,2,c
 11164  0011B4  D016               	goto	l11344
 11165                           
 11166                           ; BSR set to: 0
 11167  0011B6  0E74               	movlw	116
 11168  0011B8  1974               	xorwf	(Task_Com@buffer_set+2)& (0+255),w,b
 11169  0011BA  A4D8               	btfss	status,2,c
 11170  0011BC  D012               	goto	l11344
 11171                           
 11172                           ; BSR set to: 0
 11173  0011BE  0E65               	movlw	101
 11174  0011C0  1975               	xorwf	(Task_Com@buffer_set+3)& (0+255),w,b
 11175  0011C2  A4D8               	btfss	status,2,c
 11176  0011C4  D00E               	goto	l11344
 11177                           
 11178                           ; BSR set to: 0
 11179  0011C6  0E73               	movlw	115
 11180  0011C8  1976               	xorwf	(Task_Com@buffer_set+4)& (0+255),w,b
 11181  0011CA  A4D8               	btfss	status,2,c
 11182  0011CC  D00A               	goto	l11344
 11183                           
 11184                           ; BSR set to: 0
 11185  0011CE  0E74               	movlw	116
 11186  0011D0  1977               	xorwf	(Task_Com@buffer_set+5)& (0+255),w,b
 11187  0011D2  A4D8               	btfss	status,2,c
 11188  0011D4  D006               	goto	l11344
 11189                           
 11190                           ; BSR set to: 0
 11191  0011D6  0E3A               	movlw	58
 11192  0011D8  1978               	xorwf	(Task_Com@buffer_set+6)& (0+255),w,b
 11193  0011DA  A4D8               	btfss	status,2,c
 11194  0011DC  D002               	goto	l11344
 11195                           
 11196                           ; BSR set to: 0
 11197  0011DE  0E02               	movlw	2
 11198  0011E0  6F85               	movwf	Task_Com@comando& (0+255),b
 11199  0011E2                     l11344:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;Main.c: 324:     if(buffer_set[0]=='s' && buffer_set[1]=='e' && buffer_set[2]=='t' && b
      +                          uffer_set[3]=='r' && buffer_set[4]=='e' && buffer_set[5]=='s' && buffer_set[6]=='e' && b
      +                          uffer_set[7]=='t') comando=3;
 11203  0011E2  0E73               	movlw	115
 11204  0011E4  1972               	xorwf	Task_Com@buffer_set& (0+255),w,b
 11205  0011E6  A4D8               	btfss	status,2,c
 11206  0011E8  D01E               	goto	l11362
 11207                           
 11208                           ; BSR set to: 0
 11209  0011EA  0E65               	movlw	101
 11210  0011EC  1973               	xorwf	(Task_Com@buffer_set+1)& (0+255),w,b
 11211  0011EE  A4D8               	btfss	status,2,c
 11212  0011F0  D01A               	goto	l11362
 11213                           
 11214                           ; BSR set to: 0
 11215  0011F2  0E74               	movlw	116
 11216  0011F4  1974               	xorwf	(Task_Com@buffer_set+2)& (0+255),w,b
 11217  0011F6  A4D8               	btfss	status,2,c
 11218  0011F8  D016               	goto	l11362
 11219                           
 11220                           ; BSR set to: 0
 11221  0011FA  0E72               	movlw	114
 11222  0011FC  1975               	xorwf	(Task_Com@buffer_set+3)& (0+255),w,b
 11223  0011FE  A4D8               	btfss	status,2,c
 11224  001200  D012               	goto	l11362
 11225                           
 11226                           ; BSR set to: 0
 11227  001202  0E65               	movlw	101
 11228  001204  1976               	xorwf	(Task_Com@buffer_set+4)& (0+255),w,b
 11229  001206  A4D8               	btfss	status,2,c
 11230  001208  D00E               	goto	l11362
 11231                           
 11232                           ; BSR set to: 0
 11233  00120A  0E73               	movlw	115
 11234  00120C  1977               	xorwf	(Task_Com@buffer_set+5)& (0+255),w,b
 11235  00120E  A4D8               	btfss	status,2,c
 11236  001210  D00A               	goto	l11362
 11237                           
 11238                           ; BSR set to: 0
 11239  001212  0E65               	movlw	101
 11240  001214  1978               	xorwf	(Task_Com@buffer_set+6)& (0+255),w,b
 11241  001216  A4D8               	btfss	status,2,c
 11242  001218  D006               	goto	l11362
 11243                           
 11244                           ; BSR set to: 0
 11245  00121A  0E74               	movlw	116
 11246  00121C  1979               	xorwf	(Task_Com@buffer_set+7)& (0+255),w,b
 11247  00121E  A4D8               	btfss	status,2,c
 11248  001220  D002               	goto	l11362
 11249                           
 11250                           ; BSR set to: 0
 11251  001222  0E03               	movlw	3
 11252  001224  6F85               	movwf	Task_Com@comando& (0+255),b
 11253  001226                     l11362:
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;Main.c: 326:     if(buffer_set[0]=='g' && buffer_set[1]=='e' && buffer_set[2]=='t' && b
      +                          uffer_set[3]=='t' && buffer_set[4]=='m' && buffer_set[5]=='p') comando=4;
 11257  001226  0E67               	movlw	103
 11258  001228  1972               	xorwf	Task_Com@buffer_set& (0+255),w,b
 11259  00122A  A4D8               	btfss	status,2,c
 11260  00122C  D016               	goto	l11376
 11261                           
 11262                           ; BSR set to: 0
 11263  00122E  0E65               	movlw	101
 11264  001230  1973               	xorwf	(Task_Com@buffer_set+1)& (0+255),w,b
 11265  001232  A4D8               	btfss	status,2,c
 11266  001234  D012               	goto	l11376
 11267                           
 11268                           ; BSR set to: 0
 11269  001236  0E74               	movlw	116
 11270  001238  1974               	xorwf	(Task_Com@buffer_set+2)& (0+255),w,b
 11271  00123A  A4D8               	btfss	status,2,c
 11272  00123C  D00E               	goto	l11376
 11273                           
 11274                           ; BSR set to: 0
 11275  00123E  0E74               	movlw	116
 11276  001240  1975               	xorwf	(Task_Com@buffer_set+3)& (0+255),w,b
 11277  001242  A4D8               	btfss	status,2,c
 11278  001244  D00A               	goto	l11376
 11279                           
 11280                           ; BSR set to: 0
 11281  001246  0E6D               	movlw	109
 11282  001248  1976               	xorwf	(Task_Com@buffer_set+4)& (0+255),w,b
 11283  00124A  A4D8               	btfss	status,2,c
 11284  00124C  D006               	goto	l11376
 11285                           
 11286                           ; BSR set to: 0
 11287  00124E  0E70               	movlw	112
 11288  001250  1977               	xorwf	(Task_Com@buffer_set+5)& (0+255),w,b
 11289  001252  A4D8               	btfss	status,2,c
 11290  001254  D002               	goto	l11376
 11291                           
 11292                           ; BSR set to: 0
 11293  001256  0E04               	movlw	4
 11294  001258  6F85               	movwf	Task_Com@comando& (0+255),b
 11295  00125A                     l11376:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;Main.c: 328:     if(buffer_set[0]=='h' && buffer_set[1]=='e' && buffer_set[2]=='l' && b
      +                          uffer_set[3]=='p') comando = 5;
 11299  00125A  0E68               	movlw	104
 11300  00125C  1972               	xorwf	Task_Com@buffer_set& (0+255),w,b
 11301  00125E  A4D8               	btfss	status,2,c
 11302  001260  D1C4               	goto	l11454
 11303                           
 11304                           ; BSR set to: 0
 11305  001262  0E65               	movlw	101
 11306  001264  1973               	xorwf	(Task_Com@buffer_set+1)& (0+255),w,b
 11307  001266  A4D8               	btfss	status,2,c
 11308  001268  D1C0               	goto	l11454
 11309                           
 11310                           ; BSR set to: 0
 11311  00126A  0E6C               	movlw	108
 11312  00126C  1974               	xorwf	(Task_Com@buffer_set+2)& (0+255),w,b
 11313  00126E  A4D8               	btfss	status,2,c
 11314  001270  D1BC               	goto	l11454
 11315                           
 11316                           ; BSR set to: 0
 11317  001272  0E70               	movlw	112
 11318  001274  1975               	xorwf	(Task_Com@buffer_set+3)& (0+255),w,b
 11319  001276  A4D8               	btfss	status,2,c
 11320  001278  D1B8               	goto	l11454
 11321                           
 11322                           ; BSR set to: 0
 11323  00127A  0E05               	movlw	5
 11324  00127C  6F85               	movwf	Task_Com@comando& (0+255),b
 11325  00127E  D1B5               	goto	l11454
 11326  001280                     l11386:
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;Main.c: 337:         {;Main.c: 338:             UART_array("cmd > "),UART_arrayln("El c
      +                          omando no existe");
 11330  001280  0EE0               	movlw	low STR_29
 11331  001282  6F65               	movwf	UART_array@cadena& (0+255),b
 11332  001284  0E7F               	movlw	high STR_29
 11333  001286  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11334  001288  EC65  F025         	call	_UART_array	;wreg free
 11335  00128C  0E1B               	movlw	low STR_30
 11336  00128E  0100               	movlb	0	; () banked
 11337  001290  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11338  001292  0E7F               	movlw	high STR_30
 11339  001294  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11340  001296  ECC1  F024         	call	_UART_arrayln	;wreg free
 11341                           
 11342                           ;Main.c: 339:             UART_arrayln("");
 11343  00129A  0EFB               	movlw	low (STR_64+1)
 11344  00129C  0100               	movlb	0	; () banked
 11345  00129E  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11346  0012A0  0E7F               	movlw	high (STR_64+1)
 11347  0012A2  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11348  0012A4  ECC1  F024         	call	_UART_arrayln	;wreg free
 11349                           
 11350                           ;Main.c: 340:             UART_array("cmd < ");
 11351  0012A8  0ED9               	movlw	low STR_18
 11352  0012AA  0100               	movlb	0	; () banked
 11353  0012AC  6F65               	movwf	UART_array@cadena& (0+255),b
 11354  0012AE  0E7F               	movlw	high STR_18
 11355  0012B0  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11356  0012B2  EC65  F025         	call	_UART_array	;wreg free
 11357                           
 11358                           ;Main.c: 341:         break;
 11359  0012B6  D1B3               	goto	l11456
 11360  0012B8                     l11388:
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;Main.c: 345:         {;Main.c: 346:             if(est_m)
 11364  0012B8  0101               	movlb	1	; () banked
 11365  0012BA  512F               	movf	_est_m& (0+255),w,b
 11366  0012BC  B4D8               	btfsc	status,2,c
 11367  0012BE  D07A               	goto	l11416
 11368                           
 11369                           ; BSR set to: 1
 11370                           ;Main.c: 347:             {;Main.c: 348:                 pwm_c = 1;
 11371  0012C0  0E01               	movlw	1
 11372  0012C2  6F2B               	movwf	_pwm_c& (0+255),b
 11373                           
 11374                           ;Main.c: 349:                 ver = 1;
 11375  0012C4  0E01               	movlw	1
 11376  0012C6  6E4B               	movwf	_ver^0,c
 11377                           
 11378                           ; BSR set to: 1
 11379                           ;Main.c: 351:                 pwm1 = buffer_val[0] - 48;
 11380  0012C8  0ED0               	movlw	208
 11381  0012CA  0100               	movlb	0	; () banked
 11382  0012CC  2581               	addwf	Task_Com@buffer_val& (0+255),w,b
 11383  0012CE  0101               	movlb	1	; () banked
 11384  0012D0  6F29               	movwf	_pwm1& (0+255),b
 11385  0012D2  6B2A               	clrf	(_pwm1+1)& (0+255),b
 11386  0012D4  0EFF               	movlw	255
 11387  0012D6  232A               	addwfc	(_pwm1+1)& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 1
 11390                           ;Main.c: 352:                 pwm1 = (pwm1 * 10) + (buffer_val[1] - 48);
 11391  0012D8  C129  F065         	movff	_pwm1,___wmul@multiplier
 11392  0012DC  C12A  F066         	movff	_pwm1+1,___wmul@multiplier+1
 11393  0012E0  0E00               	movlw	0
 11394  0012E2  0100               	movlb	0	; () banked
 11395  0012E4  6F68               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11396  0012E6  0E0A               	movlw	10
 11397  0012E8  6F67               	movwf	___wmul@multiplicand& (0+255),b
 11398  0012EA  EC64  F028         	call	___wmul	;wreg free
 11399  0012EE  5182               	movf	(Task_Com@buffer_val+1)& (0+255),w,b
 11400  0012F0  2765               	addwf	?___wmul& (0+255),f,b
 11401  0012F2  0E00               	movlw	0
 11402  0012F4  2366               	addwfc	(?___wmul+1)& (0+255),f,b
 11403  0012F6  0ED0               	movlw	208
 11404  0012F8  2565               	addwf	?___wmul& (0+255),w,b
 11405  0012FA  0101               	movlb	1	; () banked
 11406  0012FC  6F29               	movwf	_pwm1& (0+255),b
 11407  0012FE  0EFF               	movlw	255
 11408  001300  0100               	movlb	0	; () banked
 11409  001302  2166               	addwfc	(?___wmul+1)& (0+255),w,b
 11410  001304  0101               	movlb	1	; () banked
 11411  001306  6F2A               	movwf	(_pwm1+1)& (0+255),b
 11412                           
 11413                           ; BSR set to: 1
 11414                           ;Main.c: 353:                 pwm1 = (pwm1 * 10) + (buffer_val[2] - 48);
 11415  001308  C129  F065         	movff	_pwm1,___wmul@multiplier
 11416  00130C  C12A  F066         	movff	_pwm1+1,___wmul@multiplier+1
 11417  001310  0E00               	movlw	0
 11418  001312  0100               	movlb	0	; () banked
 11419  001314  6F68               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11420  001316  0E0A               	movlw	10
 11421  001318  6F67               	movwf	___wmul@multiplicand& (0+255),b
 11422  00131A  EC64  F028         	call	___wmul	;wreg free
 11423  00131E  5183               	movf	(Task_Com@buffer_val+2)& (0+255),w,b
 11424  001320  2765               	addwf	?___wmul& (0+255),f,b
 11425  001322  0E00               	movlw	0
 11426  001324  2366               	addwfc	(?___wmul+1)& (0+255),f,b
 11427  001326  0ED0               	movlw	208
 11428  001328  2565               	addwf	?___wmul& (0+255),w,b
 11429  00132A  0101               	movlb	1	; () banked
 11430  00132C  6F29               	movwf	_pwm1& (0+255),b
 11431  00132E  0EFF               	movlw	255
 11432  001330  0100               	movlb	0	; () banked
 11433  001332  2166               	addwfc	(?___wmul+1)& (0+255),w,b
 11434  001334  0101               	movlb	1	; () banked
 11435  001336  6F2A               	movwf	(_pwm1+1)& (0+255),b
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;Main.c: 354:                 if(pwm1 > 100) pwm1 = 100;
 11439  001338  512A               	movf	(_pwm1+1)& (0+255),w,b
 11440  00133A  E104               	bnz	u15870
 11441  00133C  0E65               	movlw	101
 11442  00133E  5D29               	subwf	_pwm1& (0+255),w,b
 11443  001340  A0D8               	btfss	status,0,c
 11444  001342  D004               	goto	l11402
 11445  001344                     u15870:
 11446                           
 11447                           ; BSR set to: 1
 11448  001344  0E00               	movlw	0
 11449  001346  6F2A               	movwf	(_pwm1+1)& (0+255),b
 11450  001348  0E64               	movlw	100
 11451  00134A  6F29               	movwf	_pwm1& (0+255),b
 11452  00134C                     l11402:
 11453                           
 11454                           ; BSR set to: 1
 11455                           ;Main.c: 356:                 UART_array("cmd > "),UART_arrayln("Seteando valor pwm");
 11456  00134C  0EE0               	movlw	low STR_29
 11457  00134E  0100               	movlb	0	; () banked
 11458  001350  6F65               	movwf	UART_array@cadena& (0+255),b
 11459  001352  0E7F               	movlw	high STR_29
 11460  001354  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11461  001356  EC65  F025         	call	_UART_array	;wreg free
 11462  00135A  0E6D               	movlw	low STR_34
 11463  00135C  0100               	movlb	0	; () banked
 11464  00135E  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11465  001360  0E7F               	movlw	high STR_34
 11466  001362  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11467  001364  ECC1  F024         	call	_UART_arrayln	;wreg free
 11468                           
 11469                           ;Main.c: 357:                 _delay((unsigned long)((2)*(20000000/4000.0)));
 11470  001368  0E0D               	movlw	13
 11471  00136A  0100               	movlb	0	; () banked
 11472  00136C  6F6B               	movwf	??_Task_Com& (0+255),b
 11473  00136E  0EFB               	movlw	251
 11474  001370                     u16427:
 11475  001370  2EE8               	decfsz	wreg,f,c
 11476  001372  D7FE               	bra	u16427
 11477  001374  2F6B               	decfsz	??_Task_Com& (0+255),f,b
 11478  001376  D7FC               	bra	u16427
 11479  001378  D000               	nop2	
 11480                           
 11481                           ;Main.c: 358:                 UART_array("      Set:"),UART_array(buffer_val),_delay((un
      +                          signed long)((2)*(20000000/4000.0))),UART_arrayln("%");
 11482  00137A  0EA2               	movlw	low STR_35
 11483  00137C  0100               	movlb	0	; () banked
 11484  00137E  6F65               	movwf	UART_array@cadena& (0+255),b
 11485  001380  0E7F               	movlw	high STR_35
 11486  001382  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11487  001384  EC65  F025         	call	_UART_array	;wreg free
 11488  001388  0E81               	movlw	low Task_Com@buffer_val
 11489  00138A  0100               	movlb	0	; () banked
 11490  00138C  6F65               	movwf	UART_array@cadena& (0+255),b
 11491  00138E  6B66               	clrf	(UART_array@cadena+1)& (0+255),b
 11492  001390  EC65  F025         	call	_UART_array	;wreg free
 11493  001394  0E0D               	movlw	13
 11494  001396  0100               	movlb	0	; () banked
 11495  001398  6F6B               	movwf	??_Task_Com& (0+255),b
 11496  00139A  0EFB               	movlw	251
 11497  00139C                     u16437:
 11498  00139C  2EE8               	decfsz	wreg,f,c
 11499  00139E  D7FE               	bra	u16437
 11500  0013A0  2F6B               	decfsz	??_Task_Com& (0+255),f,b
 11501  0013A2  D7FC               	bra	u16437
 11502  0013A4  D000               	nop2	
 11503  0013A6  0EFC               	movlw	low STR_36
 11504  0013A8  0100               	movlb	0	; () banked
 11505  0013AA  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11506  0013AC  0E7F               	movlw	high STR_36
 11507  0013AE  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11508  0013B0  ECC1  F024         	call	_UART_arrayln	;wreg free
 11509  0013B4                     l11416:
 11510                           
 11511                           ;Main.c: 360:             if(est_m == 0)
 11512  0013B4  0101               	movlb	1	; () banked
 11513  0013B6  512F               	movf	_est_m& (0+255),w,b
 11514  0013B8  A4D8               	btfss	status,2,c
 11515  0013BA  D00E               	goto	l217
 11516                           
 11517                           ; BSR set to: 1
 11518                           ;Main.c: 361:             {;Main.c: 362:                 UART_array("cmd > "),UART_array
      +                          ln("Debe prender el motor");
 11519  0013BC  0EE0               	movlw	low STR_29
 11520  0013BE  0100               	movlb	0	; () banked
 11521  0013C0  6F65               	movwf	UART_array@cadena& (0+255),b
 11522  0013C2  0E7F               	movlw	high STR_29
 11523  0013C4  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11524  0013C6  EC65  F025         	call	_UART_array	;wreg free
 11525  0013CA  0E05               	movlw	low STR_38
 11526  0013CC  0100               	movlb	0	; () banked
 11527  0013CE  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11528  0013D0  0E7F               	movlw	high STR_38
 11529  0013D2  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11530  0013D4  ECC1  F024         	call	_UART_arrayln	;wreg free
 11531  0013D8                     l217:
 11532                           
 11533                           ;Main.c: 364:             UART_arrayln("");
 11534  0013D8  0EFB               	movlw	low (STR_64+1)
 11535  0013DA  0100               	movlb	0	; () banked
 11536  0013DC  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11537  0013DE  0E7F               	movlw	high (STR_64+1)
 11538  0013E0  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11539  0013E2  ECC1  F024         	call	_UART_arrayln	;wreg free
 11540                           
 11541                           ;Main.c: 365:             UART_array("cmd < ");
 11542  0013E6  0ED9               	movlw	low STR_18
 11543  0013E8  0100               	movlb	0	; () banked
 11544  0013EA  6F65               	movwf	UART_array@cadena& (0+255),b
 11545  0013EC  0E7F               	movlw	high STR_18
 11546  0013EE  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11547  0013F0  EC65  F025         	call	_UART_array	;wreg free
 11548                           
 11549                           ;Main.c: 367:         break;
 11550  0013F4  D114               	goto	l11456
 11551  0013F6                     l11420:
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;Main.c: 371:         {;Main.c: 372:             ver = 1;
 11555  0013F6  0E01               	movlw	1
 11556  0013F8  6E4B               	movwf	_ver^0,c
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;Main.c: 373:             UART_array("cmd > "),UART_arrayln("Seteando estado del motor")
      +                          ;
 11560  0013FA  0EE0               	movlw	low STR_29
 11561  0013FC  6F65               	movwf	UART_array@cadena& (0+255),b
 11562  0013FE  0E7F               	movlw	high STR_29
 11563  001400  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11564  001402  EC65  F025         	call	_UART_array	;wreg free
 11565  001406  0E79               	movlw	low STR_42
 11566  001408  0100               	movlb	0	; () banked
 11567  00140A  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11568  00140C  0E7E               	movlw	high STR_42
 11569  00140E  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11570  001410  ECC1  F024         	call	_UART_arrayln	;wreg free
 11571                           
 11572                           ;Main.c: 374:             if((buffer_val[0]-48)==0) est_m=0,est_c=1,UART_arrayln("      
      +                          Motor:apagado");
 11573  001414  0ED0               	movlw	208
 11574  001416  0100               	movlb	0	; () banked
 11575  001418  6F6B               	movwf	??_Task_Com& (0+255),b
 11576  00141A  0EFF               	movlw	255
 11577  00141C  6F6C               	movwf	(??_Task_Com+1)& (0+255),b
 11578  00141E  5181               	movf	Task_Com@buffer_val& (0+255),w,b
 11579  001420  6F6D               	movwf	(??_Task_Com+2)& (0+255),b
 11580  001422  6B6E               	clrf	(??_Task_Com+3)& (0+255),b
 11581  001424  516B               	movf	??_Task_Com& (0+255),w,b
 11582  001426  276D               	addwf	(??_Task_Com+2)& (0+255),f,b
 11583  001428  516C               	movf	(??_Task_Com+1)& (0+255),w,b
 11584  00142A  236E               	addwfc	(??_Task_Com+3)& (0+255),f,b
 11585  00142C  516D               	movf	(??_Task_Com+2)& (0+255),w,b
 11586  00142E  116E               	iorwf	(??_Task_Com+3)& (0+255),w,b
 11587  001430  A4D8               	btfss	status,2,c
 11588  001432  D00D               	goto	l11432
 11589                           
 11590                           ; BSR set to: 0
 11591  001434  0E00               	movlw	0
 11592  001436  0101               	movlb	1	; () banked
 11593  001438  6F2F               	movwf	_est_m& (0+255),b
 11594  00143A  0E01               	movlw	1
 11595  00143C  6F2D               	movwf	_est_c& (0+255),b
 11596                           
 11597                           ; BSR set to: 1
 11598  00143E  0E59               	movlw	low STR_43
 11599  001440  0100               	movlb	0	; () banked
 11600  001442  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11601  001444  0E7F               	movlw	high STR_43
 11602  001446  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11603  001448  ECC1  F024         	call	_UART_arrayln	;wreg free
 11604  00144C  D01B               	goto	l11438
 11605  00144E                     l11432:
 11606                           
 11607                           ; BSR set to: 0
 11608  00144E  0ED0               	movlw	208
 11609  001450  6F6B               	movwf	??_Task_Com& (0+255),b
 11610  001452  0EFF               	movlw	255
 11611  001454  6F6C               	movwf	(??_Task_Com+1)& (0+255),b
 11612  001456  5181               	movf	Task_Com@buffer_val& (0+255),w,b
 11613  001458  6F6D               	movwf	(??_Task_Com+2)& (0+255),b
 11614  00145A  6B6E               	clrf	(??_Task_Com+3)& (0+255),b
 11615  00145C  516B               	movf	??_Task_Com& (0+255),w,b
 11616  00145E  276D               	addwf	(??_Task_Com+2)& (0+255),f,b
 11617  001460  516C               	movf	(??_Task_Com+1)& (0+255),w,b
 11618  001462  236E               	addwfc	(??_Task_Com+3)& (0+255),f,b
 11619  001464  056D               	decf	(??_Task_Com+2)& (0+255),w,b
 11620  001466  116E               	iorwf	(??_Task_Com+3)& (0+255),w,b
 11621  001468  A4D8               	btfss	status,2,c
 11622  00146A  D00C               	goto	l11438
 11623                           
 11624                           ; BSR set to: 0
 11625  00146C  0E01               	movlw	1
 11626  00146E  0101               	movlb	1	; () banked
 11627  001470  6F2F               	movwf	_est_m& (0+255),b
 11628  001472  0E01               	movlw	1
 11629  001474  6F2D               	movwf	_est_c& (0+255),b
 11630                           
 11631                           ; BSR set to: 1
 11632  001476  0E30               	movlw	low STR_44
 11633  001478  0100               	movlb	0	; () banked
 11634  00147A  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11635  00147C  0E7F               	movlw	high STR_44
 11636  00147E  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11637  001480  ECC1  F024         	call	_UART_arrayln	;wreg free
 11638  001484                     l11438:
 11639                           
 11640                           ;Main.c: 376:             UART_arrayln("");
 11641  001484  0EFB               	movlw	low (STR_64+1)
 11642  001486  0100               	movlb	0	; () banked
 11643  001488  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11644  00148A  0E7F               	movlw	high (STR_64+1)
 11645  00148C  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11646  00148E  ECC1  F024         	call	_UART_arrayln	;wreg free
 11647                           
 11648                           ;Main.c: 377:             UART_array("cmd < ");
 11649  001492  0ED9               	movlw	low STR_18
 11650  001494  0100               	movlb	0	; () banked
 11651  001496  6F65               	movwf	UART_array@cadena& (0+255),b
 11652  001498  0E7F               	movlw	high STR_18
 11653  00149A  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11654  00149C  EC65  F025         	call	_UART_array	;wreg free
 11655                           
 11656                           ;Main.c: 378:         break;
 11657  0014A0  D0BE               	goto	l11456
 11658  0014A2                     l11442:
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;Main.c: 382:         {;Main.c: 383:             UART_array("cmd > "),UART_arrayln("Rese
      +                          teando el controlador");
 11662  0014A2  0EE0               	movlw	low STR_29
 11663  0014A4  6F65               	movwf	UART_array@cadena& (0+255),b
 11664  0014A6  0E7F               	movlw	high STR_29
 11665  0014A8  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11666  0014AA  EC65  F025         	call	_UART_array	;wreg free
 11667  0014AE  0E5F               	movlw	low STR_48
 11668  0014B0  0100               	movlb	0	; () banked
 11669  0014B2  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11670  0014B4  0E7E               	movlw	high STR_48
 11671  0014B6  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11672  0014B8  ECC1  F024         	call	_UART_arrayln	;wreg free
 11673                           
 11674                           ;Main.c: 384:             UART_arrayln("");
 11675  0014BC  0EFB               	movlw	low (STR_64+1)
 11676  0014BE  0100               	movlb	0	; () banked
 11677  0014C0  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11678  0014C2  0E7F               	movlw	high (STR_64+1)
 11679  0014C4  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11680  0014C6  ECC1  F024         	call	_UART_arrayln	;wreg free
 11681                           
 11682                           ;Main.c: 385:             UART_arrayln("cmd < bloqueado"),UART_arrayln("");
 11683  0014CA  0E92               	movlw	low STR_50
 11684  0014CC  0100               	movlb	0	; () banked
 11685  0014CE  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11686  0014D0  0E7F               	movlw	high STR_50
 11687  0014D2  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11688  0014D4  ECC1  F024         	call	_UART_arrayln	;wreg free
 11689  0014D8  0EFB               	movlw	low (STR_64+1)
 11690  0014DA  0100               	movlb	0	; () banked
 11691  0014DC  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11692  0014DE  0E7F               	movlw	high (STR_64+1)
 11693  0014E0  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11694  0014E2  ECC1  F024         	call	_UART_arrayln	;wreg free
 11695                           
 11696                           ;Main.c: 386:             _delay((unsigned long)((3000)*(20000000/4000.0)));
 11697  0014E6  0E4D               	movlw	77
 11698  0014E8  0100               	movlb	0	; () banked
 11699  0014EA  6F6C               	movwf	(??_Task_Com+1)& (0+255),b
 11700  0014EC  0E19               	movlw	25
 11701  0014EE  6F6B               	movwf	??_Task_Com& (0+255),b
 11702  0014F0  0E4F               	movlw	79
 11703  0014F2                     u16447:
 11704  0014F2  2EE8               	decfsz	wreg,f,c
 11705  0014F4  D7FE               	bra	u16447
 11706  0014F6  2F6B               	decfsz	??_Task_Com& (0+255),f,b
 11707  0014F8  D7FC               	bra	u16447
 11708  0014FA  2F6C               	decfsz	(??_Task_Com+1)& (0+255),f,b
 11709  0014FC  D7FA               	bra	u16447
 11710  0014FE  D000               	nop2	
 11711  001500  00FF               	reset		;# 
 11712                           
 11713                           ;Main.c: 388:         break;
 11714  001502  D08D               	goto	l11456
 11715  001504                     l11446:
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;Main.c: 392:         {;Main.c: 393:             UART_array("cmd > "),UART_arrayln("Obte
      +                          niendo el valor de temperatura:");
 11719  001504  0EE0               	movlw	low STR_29
 11720  001506  6F65               	movwf	UART_array@cadena& (0+255),b
 11721  001508  0E7F               	movlw	high STR_29
 11722  00150A  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11723  00150C  EC65  F025         	call	_UART_array	;wreg free
 11724  001510  0E44               	movlw	low STR_53
 11725  001512  0100               	movlb	0	; () banked
 11726  001514  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11727  001516  0E7D               	movlw	high STR_53
 11728  001518  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11729  00151A  ECC1  F024         	call	_UART_arrayln	;wreg free
 11730                           
 11731                           ;Main.c: 394:             vis = 1;
 11732  00151E  0E01               	movlw	1
 11733  001520  0101               	movlb	1	; () banked
 11734  001522  6F30               	movwf	_vis& (0+255),b
 11735                           
 11736                           ;Main.c: 395:         break;
 11737  001524  D07C               	goto	l11456
 11738  001526                     l11450:
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;Main.c: 399:         {;Main.c: 400:             UART_array("cmd > "),UART_arrayln("List
      +                          ado de comandos disponibles:");
 11742  001526  0EE0               	movlw	low STR_29
 11743  001528  6F65               	movwf	UART_array@cadena& (0+255),b
 11744  00152A  0E7F               	movlw	high STR_29
 11745  00152C  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11746  00152E  EC65  F025         	call	_UART_array	;wreg free
 11747  001532  0EAD               	movlw	low STR_55
 11748  001534  0100               	movlb	0	; () banked
 11749  001536  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11750  001538  0E7D               	movlw	high STR_55
 11751  00153A  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11752  00153C  ECC1  F024         	call	_UART_arrayln	;wreg free
 11753                           
 11754                           ;Main.c: 401:             UART_array("      "),UART_array(setest),UART_arrayln("'1' o '0
      +                          '");
 11755  001540  0ED2               	movlw	low STR_26
 11756  001542  0100               	movlb	0	; () banked
 11757  001544  6F65               	movwf	UART_array@cadena& (0+255),b
 11758  001546  0E7F               	movlw	high STR_26
 11759  001548  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11760  00154A  EC65  F025         	call	_UART_array	;wreg free
 11761  00154E  0E05               	movlw	low _setest
 11762  001550  0100               	movlb	0	; () banked
 11763  001552  6F65               	movwf	UART_array@cadena& (0+255),b
 11764  001554  0E7D               	movlw	high _setest
 11765  001556  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11766  001558  EC65  F025         	call	_UART_array	;wreg free
 11767  00155C  0EAD               	movlw	low STR_57
 11768  00155E  0100               	movlb	0	; () banked
 11769  001560  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11770  001562  0E7F               	movlw	high STR_57
 11771  001564  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11772  001566  ECC1  F024         	call	_UART_arrayln	;wreg free
 11773                           
 11774                           ;Main.c: 402:             UART_array("      "),UART_array(setpwm),UART_arrayln("'000-100
      +                          '");
 11775  00156A  0ED2               	movlw	low STR_26
 11776  00156C  0100               	movlb	0	; () banked
 11777  00156E  6F65               	movwf	UART_array@cadena& (0+255),b
 11778  001570  0E7F               	movlw	high STR_26
 11779  001572  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11780  001574  EC65  F025         	call	_UART_array	;wreg free
 11781  001578  0E0D               	movlw	low _setpwm
 11782  00157A  0100               	movlb	0	; () banked
 11783  00157C  6F65               	movwf	UART_array@cadena& (0+255),b
 11784  00157E  0E7D               	movlw	high _setpwm
 11785  001580  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11786  001582  EC65  F025         	call	_UART_array	;wreg free
 11787  001586  0EB7               	movlw	low STR_59
 11788  001588  0100               	movlb	0	; () banked
 11789  00158A  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11790  00158C  0E7F               	movlw	high STR_59
 11791  00158E  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11792  001590  ECC1  F024         	call	_UART_arrayln	;wreg free
 11793                           
 11794                           ;Main.c: 403:             UART_array("      "),UART_arrayln(gettmp);
 11795  001594  0ED2               	movlw	low STR_26
 11796  001596  0100               	movlb	0	; () banked
 11797  001598  6F65               	movwf	UART_array@cadena& (0+255),b
 11798  00159A  0E7F               	movlw	high STR_26
 11799  00159C  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11800  00159E  EC65  F025         	call	_UART_array	;wreg free
 11801  0015A2  0E15               	movlw	low _gettmp
 11802  0015A4  0100               	movlb	0	; () banked
 11803  0015A6  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11804  0015A8  0E7D               	movlw	high _gettmp
 11805  0015AA  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11806  0015AC  ECC1  F024         	call	_UART_arrayln	;wreg free
 11807                           
 11808                           ;Main.c: 404:             UART_array("      "),UART_arrayln(setreset);
 11809  0015B0  0ED2               	movlw	low STR_26
 11810  0015B2  0100               	movlb	0	; () banked
 11811  0015B4  6F65               	movwf	UART_array@cadena& (0+255),b
 11812  0015B6  0E7F               	movlw	high STR_26
 11813  0015B8  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11814  0015BA  EC65  F025         	call	_UART_array	;wreg free
 11815  0015BE  0EFC               	movlw	low _setreset
 11816  0015C0  0100               	movlb	0	; () banked
 11817  0015C2  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11818  0015C4  0E7C               	movlw	high _setreset
 11819  0015C6  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11820  0015C8  ECC1  F024         	call	_UART_arrayln	;wreg free
 11821                           
 11822                           ;Main.c: 405:             UART_arrayln("");
 11823  0015CC  0EFB               	movlw	low (STR_64+1)
 11824  0015CE  0100               	movlb	0	; () banked
 11825  0015D0  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 11826  0015D2  0E7F               	movlw	high (STR_64+1)
 11827  0015D4  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 11828  0015D6  ECC1  F024         	call	_UART_arrayln	;wreg free
 11829                           
 11830                           ;Main.c: 406:             UART_array("cmd < ");
 11831  0015DA  0ED9               	movlw	low STR_18
 11832  0015DC  0100               	movlb	0	; () banked
 11833  0015DE  6F65               	movwf	UART_array@cadena& (0+255),b
 11834  0015E0  0E7F               	movlw	high STR_18
 11835  0015E2  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 11836  0015E4  EC65  F025         	call	_UART_array	;wreg free
 11837                           
 11838                           ;Main.c: 407:         break;
 11839  0015E8  D01A               	goto	l11456
 11840  0015EA                     l11454:
 11841                           
 11842                           ; BSR set to: 0
 11843  0015EA  5185               	movf	Task_Com@comando& (0+255),w,b
 11844  0015EC  6F6B               	movwf	??_Task_Com& (0+255),b
 11845  0015EE  6B6C               	clrf	(??_Task_Com+1)& (0+255),b
 11846                           
 11847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11848                           ; Switch size 1, requested type "simple"
 11849                           ; Number of cases is 1, Range of values is 0 to 0
 11850                           ; switch strategies available:
 11851                           ; Name         Instructions Cycles
 11852                           ; simple_byte            4     3 (average)
 11853                           ;	Chosen strategy is simple_byte
 11854  0015F0  516C               	movf	(??_Task_Com+1)& (0+255),w,b
 11855  0015F2  0A00               	xorlw	0	; case 0
 11856  0015F4  A4D8               	btfss	status,2,c
 11857  0015F6  D013               	goto	l11456
 11858                           
 11859                           ; BSR set to: 0
 11860                           ; Switch size 1, requested type "simple"
 11861                           ; Number of cases is 6, Range of values is 0 to 5
 11862                           ; switch strategies available:
 11863                           ; Name         Instructions Cycles
 11864                           ; simple_byte           19    10 (average)
 11865                           ;	Chosen strategy is simple_byte
 11866  0015F8  516B               	movf	??_Task_Com& (0+255),w,b
 11867  0015FA  0A00               	xorlw	0	; case 0
 11868  0015FC  B4D8               	btfsc	status,2,c
 11869  0015FE  D640               	goto	l11386
 11870  001600  0A01               	xorlw	1	; case 1
 11871  001602  B4D8               	btfsc	status,2,c
 11872  001604  D659               	goto	l11388
 11873  001606  0A03               	xorlw	3	; case 2
 11874  001608  B4D8               	btfsc	status,2,c
 11875  00160A  D6F5               	goto	l11420
 11876  00160C  0A01               	xorlw	1	; case 3
 11877  00160E  B4D8               	btfsc	status,2,c
 11878  001610  D748               	goto	l11442
 11879  001612  0A07               	xorlw	7	; case 4
 11880  001614  B4D8               	btfsc	status,2,c
 11881  001616  D776               	goto	l11446
 11882  001618  0A01               	xorlw	1	; case 5
 11883  00161A  B4D8               	btfsc	status,2,c
 11884  00161C  D784               	goto	l11450
 11885  00161E                     l11456:
 11886                           
 11887                           ;Main.c: 413:     for(char i=0;i<long_cad+1;i++)
 11888  00161E  0E00               	movlw	0
 11889  001620  0100               	movlb	0	; () banked
 11890  001622  6F84               	movwf	Task_Com@i_535& (0+255),b
 11891  001624  D009               	goto	l11462
 11892  001626                     l11458:
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;Main.c: 414:     {;Main.c: 415:         cmd[i] = 0;
 11896  001626  0E00               	movlw	low _cmd
 11897  001628  2584               	addwf	Task_Com@i_535& (0+255),w,b
 11898  00162A  6ED9               	movwf	fsr2l,c
 11899  00162C  6ADA               	clrf	fsr2h,c
 11900  00162E  0E01               	movlw	high _cmd
 11901  001630  22DA               	addwfc	fsr2h,f,c
 11902  001632  0E00               	movlw	0
 11903  001634  6EDF               	movwf	indf2,c
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;Main.c: 416:     }
 11907  001636  2B84               	incf	Task_Com@i_535& (0+255),f,b
 11908  001638                     l11462:
 11909                           
 11910                           ; BSR set to: 0
 11911  001638  504F               	movf	_long_cad^0,w,c
 11912  00163A  6F6B               	movwf	??_Task_Com& (0+255),b
 11913  00163C  6B6C               	clrf	(??_Task_Com+1)& (0+255),b
 11914  00163E  0E01               	movlw	1
 11915  001640  276B               	addwf	??_Task_Com& (0+255),f,b
 11916  001642  0E00               	movlw	0
 11917  001644  236C               	addwfc	(??_Task_Com+1)& (0+255),f,b
 11918  001646  5184               	movf	Task_Com@i_535& (0+255),w,b
 11919  001648  6F6D               	movwf	(??_Task_Com+2)& (0+255),b
 11920  00164A  6B6E               	clrf	(??_Task_Com+3)& (0+255),b
 11921  00164C  516B               	movf	??_Task_Com& (0+255),w,b
 11922  00164E  5D6D               	subwf	(??_Task_Com+2)& (0+255),w,b
 11923  001650  516E               	movf	(??_Task_Com+3)& (0+255),w,b
 11924  001652  0A80               	xorlw	128
 11925  001654  6F6F               	movwf	(??_Task_Com+4)& (0+255),b
 11926  001656  516C               	movf	(??_Task_Com+1)& (0+255),w,b
 11927  001658  0A80               	xorlw	128
 11928  00165A  596F               	subwfb	(??_Task_Com+4)& (0+255),w,b
 11929  00165C  A0D8               	btfss	status,0,c
 11930  00165E  D7E3               	goto	l11458
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;Main.c: 417:     fin_carro=0,long_cad=0,comando=0;
 11934  001660  0E00               	movlw	0
 11935  001662  0101               	movlb	1	; () banked
 11936  001664  6F31               	movwf	_fin_carro& (0+255),b
 11937  001666  0E00               	movlw	0
 11938  001668  6E4F               	movwf	_long_cad^0,c
 11939                           
 11940                           ; BSR set to: 1
 11941  00166A  0012               	return		;funcret
 11942  00166C                     __end_of_Task_Com:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _Set_Val *****************
 11946 ;; Defined at:
 11947 ;;		line 216 in file "Main.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  buffer         32   68[BANK1 ] unsigned char [32]
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11956 ;; Tracked objects:
 11957 ;;		On entry : 3F/1
 11958 ;;		On exit  : 3F/1
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0
 11962 ;;      Locals:         0       0      32       0       0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11964 ;;      Totals:         0       0      32       0       0       0       0       0       0
 11965 ;;Total ram usage:       32 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:   15
 11968 ;; This function calls:
 11969 ;;		_ili9341_draw_string
 11970 ;;		_ili9341_fillrect
 11971 ;;		_sprintf
 11972 ;; This function is called by:
 11973 ;;		_main
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text10
 11978  001BD2                     __ptext10:
 11979                           	callstack 0
 11980  001BD2                     _Set_Val:
 11981                           	callstack 15
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;Main.c: 218:     char buffer[32];;Main.c: 221:     if(pwm_c)
 11985                           
 11986                           ; BSR set to: 1
 11987                           ;incstack = 0
 11988  001BD2  512B               	movf	_pwm_c& (0+255),w,b
 11989  001BD4  B4D8               	btfsc	status,2,c
 11990  001BD6  D0F7               	goto	l11498
 11991                           
 11992                           ; BSR set to: 1
 11993                           ;Main.c: 222:     {;Main.c: 223:         ili9341_fillrect(155,5,30,180,0x0000);
 11994  001BD8  0E00               	movlw	0
 11995  001BDA  0100               	movlb	0	; () banked
 11996  001BDC  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 11997  001BDE  0E9B               	movlw	155
 11998  001BE0  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 11999  001BE2  0E00               	movlw	0
 12000  001BE4  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12001  001BE6  0E05               	movlw	5
 12002  001BE8  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12003  001BEA  0E00               	movlw	0
 12004  001BEC  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12005  001BEE  0E1E               	movlw	30
 12006  001BF0  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12007  001BF2  0E00               	movlw	0
 12008  001BF4  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12009  001BF6  0EB4               	movlw	180
 12010  001BF8  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12011  001BFA  0E00               	movlw	0
 12012  001BFC  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12013  001BFE  0E00               	movlw	0
 12014  001C00  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12015  001C02  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;Main.c: 224:         sprintf(buffer,"Porcentaje PWM:   %3d",pwm1);
 12019  001C06  0EC6               	movlw	low Set_Val@buffer
 12020  001C08  0101               	movlb	1	; () banked
 12021  001C0A  6FBE               	movwf	sprintf@s& (0+255),b
 12022  001C0C  0E01               	movlw	high Set_Val@buffer
 12023  001C0E  6FBF               	movwf	(sprintf@s+1)& (0+255),b
 12024  001C10  0ED9               	movlw	low STR_20
 12025  001C12  6FC0               	movwf	sprintf@fmt& (0+255),b
 12026  001C14  0E7E               	movlw	high STR_20
 12027  001C16  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
 12028  001C18  C129  F1C2         	movff	_pwm1,?_sprintf+4
 12029  001C1C  C12A  F1C3         	movff	_pwm1+1,?_sprintf+5
 12030  001C20  ECBE  F025         	call	_sprintf	;wreg free
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;Main.c: 225:         ili9341_draw_string(10,157,buffer,0xFFFF,0x0000);
 12034  001C24  0E00               	movlw	0
 12035  001C26  0100               	movlb	0	; () banked
 12036  001C28  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
 12037  001C2A  0E0A               	movlw	10
 12038  001C2C  6F81               	movwf	ili9341_draw_string@x& (0+255),b
 12039  001C2E  0E00               	movlw	0
 12040  001C30  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
 12041  001C32  0E9D               	movlw	157
 12042  001C34  6F83               	movwf	ili9341_draw_string@y& (0+255),b
 12043  001C36  0EC6               	movlw	low Set_Val@buffer
 12044  001C38  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
 12045  001C3A  0E01               	movlw	high Set_Val@buffer
 12046  001C3C  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
 12047  001C3E  0EFF               	movlw	255
 12048  001C40  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
 12049  001C42  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
 12050  001C44  0E00               	movlw	0
 12051  001C46  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
 12052  001C48  0E00               	movlw	0
 12053  001C4A  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
 12054  001C4C  EC41  F01F         	call	_ili9341_draw_string	;wreg free
 12055                           
 12056                           ;Main.c: 227:         if(pwm1 < 33)
 12057  001C50  0101               	movlb	1	; () banked
 12058  001C52  512A               	movf	(_pwm1+1)& (0+255),w,b
 12059  001C54  E147               	bnz	l11486
 12060  001C56  0E21               	movlw	33
 12061  001C58  5D29               	subwf	_pwm1& (0+255),w,b
 12062  001C5A  B0D8               	btfsc	status,0,c
 12063  001C5C  D043               	goto	l11486
 12064                           
 12065                           ; BSR set to: 1
 12066                           ;Main.c: 228:         {;Main.c: 229:             ili9341_fillrect(157,230,10,10,0x0000);
 12067  001C5E  0E00               	movlw	0
 12068  001C60  0100               	movlb	0	; () banked
 12069  001C62  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12070  001C64  0E9D               	movlw	157
 12071  001C66  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12072  001C68  0E00               	movlw	0
 12073  001C6A  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12074  001C6C  0EE6               	movlw	230
 12075  001C6E  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12076  001C70  0E00               	movlw	0
 12077  001C72  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12078  001C74  0E0A               	movlw	10
 12079  001C76  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12080  001C78  0E00               	movlw	0
 12081  001C7A  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12082  001C7C  0E0A               	movlw	10
 12083  001C7E  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12084  001C80  0E00               	movlw	0
 12085  001C82  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12086  001C84  0E00               	movlw	0
 12087  001C86  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12088  001C88  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12089                           
 12090                           ;Main.c: 230:             ili9341_fillrect(157,215,10,10,0x0000);
 12091  001C8C  0E00               	movlw	0
 12092  001C8E  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12093  001C90  0E9D               	movlw	157
 12094  001C92  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12095  001C94  0E00               	movlw	0
 12096  001C96  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12097  001C98  0ED7               	movlw	215
 12098  001C9A  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12099  001C9C  0E00               	movlw	0
 12100  001C9E  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12101  001CA0  0E0A               	movlw	10
 12102  001CA2  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12103  001CA4  0E00               	movlw	0
 12104  001CA6  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12105  001CA8  0E0A               	movlw	10
 12106  001CAA  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12107  001CAC  0E00               	movlw	0
 12108  001CAE  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12109  001CB0  0E00               	movlw	0
 12110  001CB2  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12111  001CB4  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12112                           
 12113                           ;Main.c: 231:             ili9341_fillrect(157,200,10,10,0x07E0);
 12114  001CB8  0E00               	movlw	0
 12115  001CBA  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12116  001CBC  0E9D               	movlw	157
 12117  001CBE  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12118  001CC0  0E00               	movlw	0
 12119  001CC2  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12120  001CC4  0EC8               	movlw	200
 12121  001CC6  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12122  001CC8  0E00               	movlw	0
 12123  001CCA  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12124  001CCC  0E0A               	movlw	10
 12125  001CCE  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12126  001CD0  0E00               	movlw	0
 12127  001CD2  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12128  001CD4  0E0A               	movlw	10
 12129  001CD6  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12130  001CD8  0E07               	movlw	7
 12131  001CDA  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12132  001CDC  0EE0               	movlw	224
 12133  001CDE  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12134  001CE0  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12135  001CE4                     l11486:
 12136                           
 12137                           ;Main.c: 233:         if(pwm1 >= 33 && pwm1 < 66)
 12138  001CE4  0101               	movlb	1	; () banked
 12139  001CE6  512A               	movf	(_pwm1+1)& (0+255),w,b
 12140  001CE8  E104               	bnz	u15940
 12141  001CEA  0E21               	movlw	33
 12142  001CEC  5D29               	subwf	_pwm1& (0+255),w,b
 12143  001CEE  A0D8               	btfss	status,0,c
 12144  001CF0  D033               	goto	l11492
 12145  001CF2                     u15940:
 12146                           
 12147                           ; BSR set to: 1
 12148  001CF2  512A               	movf	(_pwm1+1)& (0+255),w,b
 12149  001CF4  E131               	bnz	l11492
 12150  001CF6  0E42               	movlw	66
 12151  001CF8  5D29               	subwf	_pwm1& (0+255),w,b
 12152  001CFA  B0D8               	btfsc	status,0,c
 12153  001CFC  D02D               	goto	l11492
 12154                           
 12155                           ; BSR set to: 1
 12156                           ;Main.c: 234:         {;Main.c: 235:             ili9341_fillrect(157,230,10,10,0x0000);
 12157  001CFE  0E00               	movlw	0
 12158  001D00  0100               	movlb	0	; () banked
 12159  001D02  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12160  001D04  0E9D               	movlw	157
 12161  001D06  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12162  001D08  0E00               	movlw	0
 12163  001D0A  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12164  001D0C  0EE6               	movlw	230
 12165  001D0E  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12166  001D10  0E00               	movlw	0
 12167  001D12  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12168  001D14  0E0A               	movlw	10
 12169  001D16  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12170  001D18  0E00               	movlw	0
 12171  001D1A  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12172  001D1C  0E0A               	movlw	10
 12173  001D1E  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12174  001D20  0E00               	movlw	0
 12175  001D22  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12176  001D24  0E00               	movlw	0
 12177  001D26  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12178  001D28  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12179                           
 12180                           ;Main.c: 236:             ili9341_fillrect(157,215,10,10,0xFD20);
 12181  001D2C  0E00               	movlw	0
 12182  001D2E  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12183  001D30  0E9D               	movlw	157
 12184  001D32  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12185  001D34  0E00               	movlw	0
 12186  001D36  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12187  001D38  0ED7               	movlw	215
 12188  001D3A  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12189  001D3C  0E00               	movlw	0
 12190  001D3E  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12191  001D40  0E0A               	movlw	10
 12192  001D42  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12193  001D44  0E00               	movlw	0
 12194  001D46  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12195  001D48  0E0A               	movlw	10
 12196  001D4A  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12197  001D4C  0EFD               	movlw	253
 12198  001D4E  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12199  001D50  0E20               	movlw	32
 12200  001D52  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12201  001D54  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12202  001D58                     l11492:
 12203                           
 12204                           ;Main.c: 238:         if(pwm1 >= 66)
 12205  001D58  0101               	movlb	1	; () banked
 12206  001D5A  512A               	movf	(_pwm1+1)& (0+255),w,b
 12207  001D5C  E104               	bnz	u15960
 12208  001D5E  0E42               	movlw	66
 12209  001D60  5D29               	subwf	_pwm1& (0+255),w,b
 12210  001D62  A0D8               	btfss	status,0,c
 12211  001D64  D02D               	goto	l11496
 12212  001D66                     u15960:
 12213                           
 12214                           ; BSR set to: 1
 12215                           ;Main.c: 239:         {;Main.c: 240:             ili9341_fillrect(157,215,10,10,0xFD20);
 12216  001D66  0E00               	movlw	0
 12217  001D68  0100               	movlb	0	; () banked
 12218  001D6A  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12219  001D6C  0E9D               	movlw	157
 12220  001D6E  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12221  001D70  0E00               	movlw	0
 12222  001D72  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12223  001D74  0ED7               	movlw	215
 12224  001D76  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12225  001D78  0E00               	movlw	0
 12226  001D7A  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12227  001D7C  0E0A               	movlw	10
 12228  001D7E  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12229  001D80  0E00               	movlw	0
 12230  001D82  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12231  001D84  0E0A               	movlw	10
 12232  001D86  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12233  001D88  0EFD               	movlw	253
 12234  001D8A  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12235  001D8C  0E20               	movlw	32
 12236  001D8E  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12237  001D90  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12238                           
 12239                           ;Main.c: 241:             ili9341_fillrect(157,230,10,10,0xF800);
 12240  001D94  0E00               	movlw	0
 12241  001D96  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12242  001D98  0E9D               	movlw	157
 12243  001D9A  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12244  001D9C  0E00               	movlw	0
 12245  001D9E  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12246  001DA0  0EE6               	movlw	230
 12247  001DA2  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12248  001DA4  0E00               	movlw	0
 12249  001DA6  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12250  001DA8  0E0A               	movlw	10
 12251  001DAA  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12252  001DAC  0E00               	movlw	0
 12253  001DAE  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12254  001DB0  0E0A               	movlw	10
 12255  001DB2  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12256  001DB4  0EF8               	movlw	248
 12257  001DB6  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12258  001DB8  0E00               	movlw	0
 12259  001DBA  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12260  001DBC  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12261  001DC0                     l11496:
 12262                           
 12263                           ;Main.c: 244:         pwm_c = 0;
 12264  001DC0  0E00               	movlw	0
 12265  001DC2  0101               	movlb	1	; () banked
 12266  001DC4  6F2B               	movwf	_pwm_c& (0+255),b
 12267  001DC6                     l11498:
 12268                           
 12269                           ; BSR set to: 1
 12270                           ;Main.c: 246:     if(est_c)
 12271  001DC6  512D               	movf	_est_c& (0+255),w,b
 12272  001DC8  B4D8               	btfsc	status,2,c
 12273  001DCA  D0CF               	goto	l11520
 12274                           
 12275                           ; BSR set to: 1
 12276                           ;Main.c: 247:     {;Main.c: 248:         if(est_m)
 12277  001DCC  512F               	movf	_est_m& (0+255),w,b
 12278  001DCE  B4D8               	btfsc	status,2,c
 12279  001DD0  D044               	goto	l11508
 12280                           
 12281                           ; BSR set to: 1
 12282                           ;Main.c: 249:         {;Main.c: 250:             ili9341_fillrect(80,5,30,250,0x0000);
 12283  001DD2  0E00               	movlw	0
 12284  001DD4  0100               	movlb	0	; () banked
 12285  001DD6  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12286  001DD8  0E50               	movlw	80
 12287  001DDA  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12288  001DDC  0E00               	movlw	0
 12289  001DDE  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12290  001DE0  0E05               	movlw	5
 12291  001DE2  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12292  001DE4  0E00               	movlw	0
 12293  001DE6  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12294  001DE8  0E1E               	movlw	30
 12295  001DEA  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12296  001DEC  0E00               	movlw	0
 12297  001DEE  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12298  001DF0  0EFA               	movlw	250
 12299  001DF2  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12300  001DF4  0E00               	movlw	0
 12301  001DF6  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12302  001DF8  0E00               	movlw	0
 12303  001DFA  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12304  001DFC  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;Main.c: 251:             ili9341_draw_string(10,84,"Estado del motor:   ON",0xFFFF,0x00
      +                          00);
 12308  001E00  0E00               	movlw	0
 12309  001E02  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
 12310  001E04  0E0A               	movlw	10
 12311  001E06  6F81               	movwf	ili9341_draw_string@x& (0+255),b
 12312  001E08  0E00               	movlw	0
 12313  001E0A  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
 12314  001E0C  0E54               	movlw	84
 12315  001E0E  6F83               	movwf	ili9341_draw_string@y& (0+255),b
 12316  001E10  0EAB               	movlw	low STR_21
 12317  001E12  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
 12318  001E14  0E7E               	movlw	high STR_21
 12319  001E16  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
 12320  001E18  0EFF               	movlw	255
 12321  001E1A  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
 12322  001E1C  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
 12323  001E1E  0E00               	movlw	0
 12324  001E20  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
 12325  001E22  0E00               	movlw	0
 12326  001E24  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
 12327  001E26  EC41  F01F         	call	_ili9341_draw_string	;wreg free
 12328                           
 12329                           ;Main.c: 252:             ili9341_fillrect(86,200,10,10,0x07E0);
 12330  001E2A  0E00               	movlw	0
 12331  001E2C  0100               	movlb	0	; () banked
 12332  001E2E  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12333  001E30  0E56               	movlw	86
 12334  001E32  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12335  001E34  0E00               	movlw	0
 12336  001E36  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12337  001E38  0EC8               	movlw	200
 12338  001E3A  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12339  001E3C  0E00               	movlw	0
 12340  001E3E  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12341  001E40  0E0A               	movlw	10
 12342  001E42  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12343  001E44  0E00               	movlw	0
 12344  001E46  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12345  001E48  0E0A               	movlw	10
 12346  001E4A  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12347  001E4C  0E07               	movlw	7
 12348  001E4E  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12349  001E50  0EE0               	movlw	224
 12350  001E52  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12351  001E54  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12352                           
 12353                           ;Main.c: 253:         }
 12354  001E58  D085               	goto	l11518
 12355  001E5A                     l11508:
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;Main.c: 255:         {;Main.c: 256:             ili9341_fillrect(80,5,30,250,0x0000);
 12359  001E5A  0E00               	movlw	0
 12360  001E5C  0100               	movlb	0	; () banked
 12361  001E5E  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12362  001E60  0E50               	movlw	80
 12363  001E62  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12364  001E64  0E00               	movlw	0
 12365  001E66  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12366  001E68  0E05               	movlw	5
 12367  001E6A  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12368  001E6C  0E00               	movlw	0
 12369  001E6E  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12370  001E70  0E1E               	movlw	30
 12371  001E72  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12372  001E74  0E00               	movlw	0
 12373  001E76  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12374  001E78  0EFA               	movlw	250
 12375  001E7A  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12376  001E7C  0E00               	movlw	0
 12377  001E7E  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12378  001E80  0E00               	movlw	0
 12379  001E82  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12380  001E84  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;Main.c: 257:             ili9341_draw_string(10,84,"Estado del motor:   OFF",0xFFFF,0x0
      +                          000);
 12384  001E88  0E00               	movlw	0
 12385  001E8A  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
 12386  001E8C  0E0A               	movlw	10
 12387  001E8E  6F81               	movwf	ili9341_draw_string@x& (0+255),b
 12388  001E90  0E00               	movlw	0
 12389  001E92  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
 12390  001E94  0E54               	movlw	84
 12391  001E96  6F83               	movwf	ili9341_draw_string@y& (0+255),b
 12392  001E98  0E93               	movlw	low STR_14
 12393  001E9A  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
 12394  001E9C  0E7E               	movlw	high STR_14
 12395  001E9E  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
 12396  001EA0  0EFF               	movlw	255
 12397  001EA2  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
 12398  001EA4  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
 12399  001EA6  0E00               	movlw	0
 12400  001EA8  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
 12401  001EAA  0E00               	movlw	0
 12402  001EAC  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
 12403  001EAE  EC41  F01F         	call	_ili9341_draw_string	;wreg free
 12404                           
 12405                           ;Main.c: 258:             ili9341_fillrect(86,200,10,10,0xF800);
 12406  001EB2  0E00               	movlw	0
 12407  001EB4  0100               	movlb	0	; () banked
 12408  001EB6  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12409  001EB8  0E56               	movlw	86
 12410  001EBA  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12411  001EBC  0E00               	movlw	0
 12412  001EBE  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12413  001EC0  0EC8               	movlw	200
 12414  001EC2  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12415  001EC4  0E00               	movlw	0
 12416  001EC6  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12417  001EC8  0E0A               	movlw	10
 12418  001ECA  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12419  001ECC  0E00               	movlw	0
 12420  001ECE  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12421  001ED0  0E0A               	movlw	10
 12422  001ED2  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12423  001ED4  0EF8               	movlw	248
 12424  001ED6  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12425  001ED8  0E00               	movlw	0
 12426  001EDA  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12427  001EDC  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;Main.c: 259:             ili9341_fillrect(155,5,30,300,0x0000);
 12431  001EE0  0E00               	movlw	0
 12432  001EE2  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12433  001EE4  0E9B               	movlw	155
 12434  001EE6  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12435  001EE8  0E00               	movlw	0
 12436  001EEA  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12437  001EEC  0E05               	movlw	5
 12438  001EEE  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12439  001EF0  0E00               	movlw	0
 12440  001EF2  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12441  001EF4  0E1E               	movlw	30
 12442  001EF6  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12443  001EF8  0E01               	movlw	1
 12444  001EFA  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12445  001EFC  0E2C               	movlw	44
 12446  001EFE  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12447  001F00  0E00               	movlw	0
 12448  001F02  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12449  001F04  0E00               	movlw	0
 12450  001F06  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12451  001F08  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;Main.c: 260:             ili9341_draw_string(10,157,"Porcentaje PWM:   0",0xFFFF,0x0000
      +                          );
 12455  001F0C  0E00               	movlw	0
 12456  001F0E  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
 12457  001F10  0E0A               	movlw	10
 12458  001F12  6F81               	movwf	ili9341_draw_string@x& (0+255),b
 12459  001F14  0E00               	movlw	0
 12460  001F16  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
 12461  001F18  0E9D               	movlw	157
 12462  001F1A  6F83               	movwf	ili9341_draw_string@y& (0+255),b
 12463  001F1C  0E45               	movlw	low STR_13
 12464  001F1E  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
 12465  001F20  0E7F               	movlw	high STR_13
 12466  001F22  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
 12467  001F24  0EFF               	movlw	255
 12468  001F26  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
 12469  001F28  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
 12470  001F2A  0E00               	movlw	0
 12471  001F2C  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
 12472  001F2E  0E00               	movlw	0
 12473  001F30  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
 12474  001F32  EC41  F01F         	call	_ili9341_draw_string	;wreg free
 12475                           
 12476                           ;Main.c: 261:             ili9341_fillrect(157,200,10,10,0x07E0);
 12477  001F36  0E00               	movlw	0
 12478  001F38  0100               	movlb	0	; () banked
 12479  001F3A  6F71               	movwf	(ili9341_fillrect@x+1)& (0+255),b
 12480  001F3C  0E9D               	movlw	157
 12481  001F3E  6F70               	movwf	ili9341_fillrect@x& (0+255),b
 12482  001F40  0E00               	movlw	0
 12483  001F42  6F73               	movwf	(ili9341_fillrect@y+1)& (0+255),b
 12484  001F44  0EC8               	movlw	200
 12485  001F46  6F72               	movwf	ili9341_fillrect@y& (0+255),b
 12486  001F48  0E00               	movlw	0
 12487  001F4A  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12488  001F4C  0E0A               	movlw	10
 12489  001F4E  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12490  001F50  0E00               	movlw	0
 12491  001F52  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12492  001F54  0E0A               	movlw	10
 12493  001F56  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12494  001F58  0E07               	movlw	7
 12495  001F5A  6F79               	movwf	(ili9341_fillrect@color+1)& (0+255),b
 12496  001F5C  0EE0               	movlw	224
 12497  001F5E  6F78               	movwf	ili9341_fillrect@color& (0+255),b
 12498  001F60  EC38  F01D         	call	_ili9341_fillrect	;wreg free
 12499  001F64                     l11518:
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;Main.c: 264:         est_c = 0;
 12503  001F64  0E00               	movlw	0
 12504  001F66  0101               	movlb	1	; () banked
 12505  001F68  6F2D               	movwf	_est_c& (0+255),b
 12506  001F6A                     l11520:
 12507                           
 12508                           ; BSR set to: 1
 12509                           ;Main.c: 266:     if((Most_Temp && vis)|| vis_p_temp)
 12510  001F6A  512E               	movf	_Most_Temp& (0+255),w,b
 12511  001F6C  B4D8               	btfsc	status,2,c
 12512  001F6E  D003               	goto	u16000
 12513                           
 12514                           ; BSR set to: 1
 12515  001F70  5130               	movf	_vis& (0+255),w,b
 12516  001F72  A4D8               	btfss	status,2,c
 12517  001F74  D003               	goto	u16010
 12518  001F76                     u16000:
 12519                           
 12520                           ; BSR set to: 1
 12521  001F76  512C               	movf	_vis_p_temp& (0+255),w,b
 12522  001F78  B4D8               	btfsc	status,2,c
 12523  001F7A  0012               	return	
 12524  001F7C                     u16010:
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;Main.c: 267:     {;Main.c: 268:         sprintf(buffer,"Temperatura:     %03.02f     C"
      +                          ,temp);
 12528  001F7C  0EC6               	movlw	low Set_Val@buffer
 12529  001F7E  6FBE               	movwf	sprintf@s& (0+255),b
 12530  001F80  0E01               	movlw	high Set_Val@buffer
 12531  001F82  6FBF               	movwf	(sprintf@s+1)& (0+255),b
 12532  001F84  0EED               	movlw	low STR_24
 12533  001F86  6FC0               	movwf	sprintf@fmt& (0+255),b
 12534  001F88  0E7D               	movlw	high STR_24
 12535  001F8A  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
 12536  001F8C  C11D  F1C2         	movff	_temp,?_sprintf+4
 12537  001F90  C11E  F1C3         	movff	_temp+1,?_sprintf+5
 12538  001F94  C11F  F1C4         	movff	_temp+2,?_sprintf+6
 12539  001F98  C120  F1C5         	movff	_temp+3,?_sprintf+7
 12540  001F9C  ECBE  F025         	call	_sprintf	;wreg free
 12541                           
 12542                           ; BSR set to: 1
 12543                           ;Main.c: 269:         ili9341_draw_string(10,10,buffer,0xFFFF,0x0000);
 12544  001FA0  0E00               	movlw	0
 12545  001FA2  0100               	movlb	0	; () banked
 12546  001FA4  6F82               	movwf	(ili9341_draw_string@x+1)& (0+255),b
 12547  001FA6  0E0A               	movlw	10
 12548  001FA8  6F81               	movwf	ili9341_draw_string@x& (0+255),b
 12549  001FAA  0E00               	movlw	0
 12550  001FAC  6F84               	movwf	(ili9341_draw_string@y+1)& (0+255),b
 12551  001FAE  0E0A               	movlw	10
 12552  001FB0  6F83               	movwf	ili9341_draw_string@y& (0+255),b
 12553  001FB2  0EC6               	movlw	low Set_Val@buffer
 12554  001FB4  6F85               	movwf	ili9341_draw_string@pS& (0+255),b
 12555  001FB6  0E01               	movlw	high Set_Val@buffer
 12556  001FB8  6F86               	movwf	(ili9341_draw_string@pS+1)& (0+255),b
 12557  001FBA  0EFF               	movlw	255
 12558  001FBC  6F88               	movwf	(ili9341_draw_string@fg_color+1)& (0+255),b
 12559  001FBE  6987               	setf	ili9341_draw_string@fg_color& (0+255),b
 12560  001FC0  0E00               	movlw	0
 12561  001FC2  6F8A               	movwf	(ili9341_draw_string@bg_color+1)& (0+255),b
 12562  001FC4  0E00               	movlw	0
 12563  001FC6  6F89               	movwf	ili9341_draw_string@bg_color& (0+255),b
 12564  001FC8  EC41  F01F         	call	_ili9341_draw_string	;wreg free
 12565                           
 12566                           ;Main.c: 271:         if(vis_p_temp) vis_p_temp=0;
 12567  001FCC  0101               	movlb	1	; () banked
 12568  001FCE  512C               	movf	_vis_p_temp& (0+255),w,b
 12569  001FD0  B4D8               	btfsc	status,2,c
 12570  001FD2  0012               	return	
 12571                           
 12572                           ; BSR set to: 1
 12573  001FD4  0E00               	movlw	0
 12574  001FD6  6F2C               	movwf	_vis_p_temp& (0+255),b
 12575                           
 12576                           ; BSR set to: 1
 12577  001FD8  0012               	return		;funcret
 12578  001FDA                     __end_of_Set_Val:
 12579                           	callstack 0
 12580                           
 12581 ;; *************** function _ili9341_fillrect *****************
 12582 ;; Defined at:
 12583 ;;		line 308 in file "Ili9341.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  x               2   16[BANK0 ] int 
 12586 ;;  y               2   18[BANK0 ] int 
 12587 ;;  w               2   20[BANK0 ] int 
 12588 ;;  h               2   22[BANK0 ] int 
 12589 ;;  color           2   24[BANK0 ] unsigned int 
 12590 ;; Auto vars:     Size  Location     Type
 12591 ;;		None
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  1    wreg      void 
 12594 ;; Registers used:
 12595 ;;		wreg, status,2, status,0, cstack
 12596 ;; Tracked objects:
 12597 ;;		On entry : 3F/0
 12598 ;;		On exit  : 3F/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12601 ;;      Params:         0      10       0       0       0       0       0       0       0
 12602 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12603 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12604 ;;      Totals:         0      14       0       0       0       0       0       0       0
 12605 ;;Total ram usage:       14 bytes
 12606 ;; Hardware stack levels used:    1
 12607 ;; Hardware stack levels required when called:    9
 12608 ;; This function calls:
 12609 ;;		_ili9341_pushcolor
 12610 ;;		_ili9341_setadress
 12611 ;; This function is called by:
 12612 ;;		_main
 12613 ;;		_Set_Val
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           	psect	text11
 12618  003A70                     __ptext11:
 12619                           	callstack 0
 12620  003A70                     _ili9341_fillrect:
 12621                           	callstack 21
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;Ili9341.c: 308: void ili9341_fillrect(int x, int y, int w, int h, unsigned int color);I
      +                          li9341.c: 309: {;Ili9341.c: 310:     if((x >= LCD_W)||(y >= LCD_H)) return;
 12625                           
 12626                           ; BSR set to: 1
 12627                           ;incstack = 0
 12628  003A70  5054               	movf	_LCD_W^0,w,c	;volatile
 12629  003A72  5D70               	subwf	ili9341_fillrect@x& (0+255),w,b
 12630  003A74  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 12631  003A76  5971               	subwfb	(ili9341_fillrect@x+1)& (0+255),w,b
 12632  003A78  B0D8               	btfsc	status,0,c
 12633  003A7A  0012               	return	
 12634                           
 12635                           ; BSR set to: 0
 12636  003A7C  5052               	movf	_LCD_H^0,w,c	;volatile
 12637  003A7E  5D72               	subwf	ili9341_fillrect@y& (0+255),w,b
 12638  003A80  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 12639  003A82  5973               	subwfb	(ili9341_fillrect@y+1)& (0+255),w,b
 12640  003A84  B0D8               	btfsc	status,0,c
 12641  003A86  0012               	return	
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;Ili9341.c: 312:     if((x+w-1) >= LCD_W) w = LCD_W-x;
 12645  003A88  0EFF               	movlw	255
 12646  003A8A  6F7A               	movwf	??_ili9341_fillrect& (0+255),b
 12647  003A8C  0EFF               	movlw	255
 12648  003A8E  6F7B               	movwf	(??_ili9341_fillrect+1)& (0+255),b
 12649  003A90  5174               	movf	ili9341_fillrect@w& (0+255),w,b
 12650  003A92  2570               	addwf	ili9341_fillrect@x& (0+255),w,b
 12651  003A94  6F7C               	movwf	(??_ili9341_fillrect+2)& (0+255),b
 12652  003A96  5175               	movf	(ili9341_fillrect@w+1)& (0+255),w,b
 12653  003A98  2171               	addwfc	(ili9341_fillrect@x+1)& (0+255),w,b
 12654  003A9A  6F7D               	movwf	(??_ili9341_fillrect+3)& (0+255),b
 12655  003A9C  517A               	movf	??_ili9341_fillrect& (0+255),w,b
 12656  003A9E  277C               	addwf	(??_ili9341_fillrect+2)& (0+255),f,b
 12657  003AA0  517B               	movf	(??_ili9341_fillrect+1)& (0+255),w,b
 12658  003AA2  237D               	addwfc	(??_ili9341_fillrect+3)& (0+255),f,b
 12659  003AA4  5054               	movf	_LCD_W^0,w,c	;volatile
 12660  003AA6  5D7C               	subwf	(??_ili9341_fillrect+2)& (0+255),w,b
 12661  003AA8  5055               	movf	(_LCD_W+1)^0,w,c	;volatile
 12662  003AAA  597D               	subwfb	(??_ili9341_fillrect+3)& (0+255),w,b
 12663  003AAC  A0D8               	btfss	status,0,c
 12664  003AAE  D006               	goto	l494
 12665                           
 12666                           ; BSR set to: 0
 12667  003AB0  5170               	movf	ili9341_fillrect@x& (0+255),w,b
 12668  003AB2  5C54               	subwf	_LCD_W^0,w,c	;volatile
 12669  003AB4  6F74               	movwf	ili9341_fillrect@w& (0+255),b
 12670  003AB6  5171               	movf	(ili9341_fillrect@x+1)& (0+255),w,b
 12671  003AB8  5855               	subwfb	(_LCD_W+1)^0,w,c	;volatile
 12672  003ABA  6F75               	movwf	(ili9341_fillrect@w+1)& (0+255),b
 12673  003ABC                     l494:
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;Ili9341.c: 313:     if((y+h-1) >= LCD_H) h = LCD_H-y;
 12677  003ABC  0EFF               	movlw	255
 12678  003ABE  6F7A               	movwf	??_ili9341_fillrect& (0+255),b
 12679  003AC0  0EFF               	movlw	255
 12680  003AC2  6F7B               	movwf	(??_ili9341_fillrect+1)& (0+255),b
 12681  003AC4  5176               	movf	ili9341_fillrect@h& (0+255),w,b
 12682  003AC6  2572               	addwf	ili9341_fillrect@y& (0+255),w,b
 12683  003AC8  6F7C               	movwf	(??_ili9341_fillrect+2)& (0+255),b
 12684  003ACA  5177               	movf	(ili9341_fillrect@h+1)& (0+255),w,b
 12685  003ACC  2173               	addwfc	(ili9341_fillrect@y+1)& (0+255),w,b
 12686  003ACE  6F7D               	movwf	(??_ili9341_fillrect+3)& (0+255),b
 12687  003AD0  517A               	movf	??_ili9341_fillrect& (0+255),w,b
 12688  003AD2  277C               	addwf	(??_ili9341_fillrect+2)& (0+255),f,b
 12689  003AD4  517B               	movf	(??_ili9341_fillrect+1)& (0+255),w,b
 12690  003AD6  237D               	addwfc	(??_ili9341_fillrect+3)& (0+255),f,b
 12691  003AD8  5052               	movf	_LCD_H^0,w,c	;volatile
 12692  003ADA  5D7C               	subwf	(??_ili9341_fillrect+2)& (0+255),w,b
 12693  003ADC  5053               	movf	(_LCD_H+1)^0,w,c	;volatile
 12694  003ADE  597D               	subwfb	(??_ili9341_fillrect+3)& (0+255),w,b
 12695  003AE0  A0D8               	btfss	status,0,c
 12696  003AE2  D006               	goto	l6468
 12697                           
 12698                           ; BSR set to: 0
 12699  003AE4  5172               	movf	ili9341_fillrect@y& (0+255),w,b
 12700  003AE6  5C52               	subwf	_LCD_H^0,w,c	;volatile
 12701  003AE8  6F76               	movwf	ili9341_fillrect@h& (0+255),b
 12702  003AEA  5173               	movf	(ili9341_fillrect@y+1)& (0+255),w,b
 12703  003AEC  5853               	subwfb	(_LCD_H+1)^0,w,c	;volatile
 12704  003AEE  6F77               	movwf	(ili9341_fillrect@h+1)& (0+255),b
 12705  003AF0                     l6468:
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;Ili9341.c: 315:     ili9341_setadress(x,x+w-1,y,y+h-1);
 12709  003AF0  C070  F068         	movff	ili9341_fillrect@x,ili9341_setadress@sc
 12710  003AF4  C071  F069         	movff	ili9341_fillrect@x+1,ili9341_setadress@sc+1
 12711  003AF8  5174               	movf	ili9341_fillrect@w& (0+255),w,b
 12712  003AFA  2570               	addwf	ili9341_fillrect@x& (0+255),w,b
 12713  003AFC  6F7A               	movwf	??_ili9341_fillrect& (0+255),b
 12714  003AFE  5175               	movf	(ili9341_fillrect@w+1)& (0+255),w,b
 12715  003B00  2171               	addwfc	(ili9341_fillrect@x+1)& (0+255),w,b
 12716  003B02  6F7B               	movwf	(??_ili9341_fillrect+1)& (0+255),b
 12717  003B04  0EFF               	movlw	255
 12718  003B06  257A               	addwf	??_ili9341_fillrect& (0+255),w,b
 12719  003B08  6F6A               	movwf	ili9341_setadress@ec& (0+255),b
 12720  003B0A  0EFF               	movlw	255
 12721  003B0C  217B               	addwfc	(??_ili9341_fillrect+1)& (0+255),w,b
 12722  003B0E  6F6B               	movwf	(ili9341_setadress@ec+1)& (0+255),b
 12723  003B10  C072  F06C         	movff	ili9341_fillrect@y,ili9341_setadress@sp
 12724  003B14  C073  F06D         	movff	ili9341_fillrect@y+1,ili9341_setadress@sp+1
 12725  003B18  5176               	movf	ili9341_fillrect@h& (0+255),w,b
 12726  003B1A  2572               	addwf	ili9341_fillrect@y& (0+255),w,b
 12727  003B1C  6F7C               	movwf	(??_ili9341_fillrect+2)& (0+255),b
 12728  003B1E  5177               	movf	(ili9341_fillrect@h+1)& (0+255),w,b
 12729  003B20  2173               	addwfc	(ili9341_fillrect@y+1)& (0+255),w,b
 12730  003B22  6F7D               	movwf	(??_ili9341_fillrect+3)& (0+255),b
 12731  003B24  0EFF               	movlw	255
 12732  003B26  257C               	addwf	(??_ili9341_fillrect+2)& (0+255),w,b
 12733  003B28  6F6E               	movwf	ili9341_setadress@ep& (0+255),b
 12734  003B2A  0EFF               	movlw	255
 12735  003B2C  217D               	addwfc	(??_ili9341_fillrect+3)& (0+255),w,b
 12736  003B2E  6F6F               	movwf	(ili9341_setadress@ep+1)& (0+255),b
 12737  003B30  EC9D  F026         	call	_ili9341_setadress	;wreg free
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;Ili9341.c: 317:     for(y=h;y>0;y--)
 12741  003B34  C076  F072         	movff	ili9341_fillrect@h,ili9341_fillrect@y
 12742  003B38  C077  F073         	movff	ili9341_fillrect@h+1,ili9341_fillrect@y+1
 12743  003B3C                     l6472:
 12744                           
 12745                           ; BSR set to: 0
 12746  003B3C  BF73               	btfsc	(ili9341_fillrect@y+1)& (0+255),7,b
 12747  003B3E  0012               	return	
 12748  003B40  5173               	movf	(ili9341_fillrect@y+1)& (0+255),w,b
 12749  003B42  E103               	bnz	l496
 12750  003B44  0572               	decf	ili9341_fillrect@y& (0+255),w,b
 12751  003B46  A0D8               	btfss	status,0,c
 12752  003B48  0012               	return	
 12753  003B4A                     l496:
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;Ili9341.c: 318:     {;Ili9341.c: 319:         for(x=w;x>0;x--)
 12757  003B4A  C074  F070         	movff	ili9341_fillrect@w,ili9341_fillrect@x
 12758  003B4E  C075  F071         	movff	ili9341_fillrect@w+1,ili9341_fillrect@x+1
 12759  003B52                     l6476:
 12760                           
 12761                           ; BSR set to: 0
 12762  003B52  BF71               	btfsc	(ili9341_fillrect@x+1)& (0+255),7,b
 12763  003B54  D00F               	goto	l6486
 12764  003B56  5171               	movf	(ili9341_fillrect@x+1)& (0+255),w,b
 12765  003B58  E103               	bnz	l6480
 12766  003B5A  0570               	decf	ili9341_fillrect@x& (0+255),w,b
 12767  003B5C  A0D8               	btfss	status,0,c
 12768  003B5E  D00A               	goto	l6486
 12769  003B60                     l6480:
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;Ili9341.c: 320:         {;Ili9341.c: 321:             ili9341_pushcolor(color);
 12773  003B60  C078  F068         	movff	ili9341_fillrect@color,ili9341_pushcolor@color
 12774  003B64  C079  F069         	movff	ili9341_fillrect@color+1,ili9341_pushcolor@color+1
 12775  003B68  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;Ili9341.c: 322:         }
 12779  003B6C  0770               	decf	ili9341_fillrect@x& (0+255),f,b
 12780  003B6E  A0D8               	btfss	status,0,c
 12781  003B70  0771               	decf	(ili9341_fillrect@x+1)& (0+255),f,b
 12782  003B72  D7EF               	goto	l6476
 12783  003B74                     l6486:
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;Ili9341.c: 323:     }
 12787  003B74  0772               	decf	ili9341_fillrect@y& (0+255),f,b
 12788  003B76  A0D8               	btfss	status,0,c
 12789  003B78  0773               	decf	(ili9341_fillrect@y+1)& (0+255),f,b
 12790  003B7A  D7E0               	goto	l6472
 12791  003B7C                     __end_of_ili9341_fillrect:
 12792                           	callstack 0
 12793                           
 12794 ;; *************** function _ili9341_setadress *****************
 12795 ;; Defined at:
 12796 ;;		line 259 in file "Ili9341.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  sc              2    8[BANK0 ] int 
 12799 ;;  ec              2   10[BANK0 ] int 
 12800 ;;  sp              2   12[BANK0 ] int 
 12801 ;;  ep              2   14[BANK0 ] int 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;		None
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1    wreg      void 
 12806 ;; Registers used:
 12807 ;;		wreg, status,2, status,0, cstack
 12808 ;; Tracked objects:
 12809 ;;		On entry : 3F/0
 12810 ;;		On exit  : 3F/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12813 ;;      Params:         0       8       0       0       0       0       0       0       0
 12814 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12816 ;;      Totals:         0       8       0       0       0       0       0       0       0
 12817 ;;Total ram usage:        8 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:    8
 12820 ;; This function calls:
 12821 ;;		_ili9341_write_command
 12822 ;;		_ili9341_write_date
 12823 ;; This function is called by:
 12824 ;;		_ili9341_fill
 12825 ;;		_ili9341_fillrect
 12826 ;;		_ili9341_drawvline
 12827 ;;		_ili9341_drawhline
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text12
 12832  004D3A                     __ptext12:
 12833                           	callstack 0
 12834  004D3A                     _ili9341_setadress:
 12835                           	callstack 21
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;Ili9341.c: 259: void ili9341_setadress(int sc, int ec, int sp, int ep);Ili9341.c: 260: 
      +                          {;Ili9341.c: 261:     ili9341_write_command(0x2A);
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;incstack = 0
 12842  004D3A  0E2A               	movlw	42
 12843  004D3C  ECBE  F01D         	call	_ili9341_write_command
 12844                           
 12845                           ;Ili9341.c: 262:     ili9341_write_date(sc >> 8);
 12846  004D40  5169               	movf	(ili9341_setadress@sc+1)& (0+255),w,b
 12847  004D42  EC42  F01E         	call	_ili9341_write_date
 12848                           
 12849                           ;Ili9341.c: 263:     ili9341_write_date(sc & 0x00FF);
 12850  004D46  5168               	movf	ili9341_setadress@sc& (0+255),w,b
 12851  004D48  EC42  F01E         	call	_ili9341_write_date
 12852                           
 12853                           ;Ili9341.c: 264:     ili9341_write_date(ec >> 8);
 12854  004D4C  516B               	movf	(ili9341_setadress@ec+1)& (0+255),w,b
 12855  004D4E  EC42  F01E         	call	_ili9341_write_date
 12856                           
 12857                           ;Ili9341.c: 265:     ili9341_write_date(ec & 0x00FF);
 12858  004D52  516A               	movf	ili9341_setadress@ec& (0+255),w,b
 12859  004D54  EC42  F01E         	call	_ili9341_write_date
 12860                           
 12861                           ;Ili9341.c: 267:     ili9341_write_command(0x2B);
 12862  004D58  0E2B               	movlw	43
 12863  004D5A  ECBE  F01D         	call	_ili9341_write_command
 12864                           
 12865                           ;Ili9341.c: 268:     ili9341_write_date(sp >> 8);
 12866  004D5E  516D               	movf	(ili9341_setadress@sp+1)& (0+255),w,b
 12867  004D60  EC42  F01E         	call	_ili9341_write_date
 12868                           
 12869                           ;Ili9341.c: 269:     ili9341_write_date(sp & 0x00FF);
 12870  004D64  516C               	movf	ili9341_setadress@sp& (0+255),w,b
 12871  004D66  EC42  F01E         	call	_ili9341_write_date
 12872                           
 12873                           ;Ili9341.c: 270:     ili9341_write_date(ep >> 8);
 12874  004D6A  516F               	movf	(ili9341_setadress@ep+1)& (0+255),w,b
 12875  004D6C  EC42  F01E         	call	_ili9341_write_date
 12876                           
 12877                           ;Ili9341.c: 271:     ili9341_write_date(ep & 0x00FF);
 12878  004D70  516E               	movf	ili9341_setadress@ep& (0+255),w,b
 12879  004D72  EC42  F01E         	call	_ili9341_write_date
 12880                           
 12881                           ;Ili9341.c: 273:     ili9341_write_command(0x2C);
 12882  004D76  0E2C               	movlw	44
 12883  004D78  ECBE  F01D         	call	_ili9341_write_command
 12884                           
 12885                           ; BSR set to: 0
 12886  004D7C  0012               	return		;funcret
 12887  004D7E                     __end_of_ili9341_setadress:
 12888                           	callstack 0
 12889                           
 12890 ;; *************** function _ili9341_draw_string *****************
 12891 ;; Defined at:
 12892 ;;		line 499 in file "Ili9341.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  x               2   33[BANK0 ] unsigned short 
 12895 ;;  y               2   35[BANK0 ] unsigned short 
 12896 ;;  pS              2   37[BANK0 ] PTR const unsigned char 
 12897 ;;		 -> STR_23(20), STR_22(24), STR_21(23), Set_Val@buffer(32), 
 12898 ;;		 -> STR_15(27), STR_14(24), STR_13(20), STR_12(27), 
 12899 ;;		 -> STR_11(25), STR_10(18), STR_9(34), STR_8(31), 
 12900 ;;		 -> STR_7(23), STR_6(22), 
 12901 ;;  fg_color        2   39[BANK0 ] unsigned short 
 12902 ;;  bg_color        2   41[BANK0 ] unsigned short 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  lIndex          2   49[BANK0 ] unsigned short 
 12905 ;;  k               2   47[BANK0 ] unsigned short 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 3F/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12915 ;;      Params:         0      10       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12917 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12918 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12919 ;;Total ram usage:       18 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:   10
 12922 ;; This function calls:
 12923 ;;		_ili9341_drawchar
 12924 ;; This function is called by:
 12925 ;;		_main
 12926 ;;		_Set_Val
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text13
 12931  003E82                     __ptext13:
 12932                           	callstack 0
 12933  003E82                     _ili9341_draw_string:
 12934                           	callstack 20
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;Ili9341.c: 499: void ili9341_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);Ili9341.c: 500: {;Ili9341.c: 501:     uint16_t lIndex, 
      +                          k;;Ili9341.c: 503:     while(*pS)
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;incstack = 0
 12941  003E82  D065               	goto	l11240
 12942  003E84                     l11226:
 12943                           
 12944                           ;Ili9341.c: 504:     {;Ili9341.c: 506:         lIndex = 0;
 12945  003E84  0E00               	movlw	0
 12946  003E86  0100               	movlb	0	; () banked
 12947  003E88  6F92               	movwf	(ili9341_draw_string@lIndex+1)& (0+255),b
 12948  003E8A  0E00               	movlw	0
 12949  003E8C  6F91               	movwf	ili9341_draw_string@lIndex& (0+255),b
 12950                           
 12951                           ;Ili9341.c: 507:         for(k=0; k<(*pS - ' '); k++)
 12952  003E8E  0E00               	movlw	0
 12953  003E90  6F90               	movwf	(ili9341_draw_string@k+1)& (0+255),b
 12954  003E92  0E00               	movlw	0
 12955  003E94  6F8F               	movwf	ili9341_draw_string@k& (0+255),b
 12956  003E96  D017               	goto	l11232
 12957  003E98                     l11228:
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;Ili9341.c: 508:         {;Ili9341.c: 509:             lIndex += ((font[lIndex]) << 1) +
      +                           1;
 12961  003E98  0EC9               	movlw	low _font
 12962  003E9A  2591               	addwf	ili9341_draw_string@lIndex& (0+255),w,b
 12963  003E9C  6EF6               	movwf	tblptrl,c
 12964  003E9E  0E72               	movlw	high _font
 12965  003EA0  2192               	addwfc	(ili9341_draw_string@lIndex+1)& (0+255),w,b
 12966  003EA2  6EF7               	movwf	tblptrh,c
 12967  003EA4                     	if	0	;There are less than 3 active tblptr bytes
 12968  003EA4                     	endif
 12969  003EA4  0008               	tblrd		*
 12970  003EA6  50F5               	movf	tablat,w,c
 12971  003EA8  6F8B               	movwf	??_ili9341_draw_string& (0+255),b
 12972  003EAA  6B8C               	clrf	(??_ili9341_draw_string+1)& (0+255),b
 12973  003EAC  90D8               	bcf	status,0,c
 12974  003EAE  378B               	rlcf	??_ili9341_draw_string& (0+255),f,b
 12975  003EB0  378C               	rlcf	(??_ili9341_draw_string+1)& (0+255),f,b
 12976  003EB2  0E01               	movlw	1
 12977  003EB4  278B               	addwf	??_ili9341_draw_string& (0+255),f,b
 12978  003EB6  0E00               	movlw	0
 12979  003EB8  238C               	addwfc	(??_ili9341_draw_string+1)& (0+255),f,b
 12980  003EBA  518B               	movf	??_ili9341_draw_string& (0+255),w,b
 12981  003EBC  2791               	addwf	ili9341_draw_string@lIndex& (0+255),f,b
 12982  003EBE  518C               	movf	(??_ili9341_draw_string+1)& (0+255),w,b
 12983  003EC0  2392               	addwfc	(ili9341_draw_string@lIndex+1)& (0+255),f,b
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;Ili9341.c: 510:         }
 12987  003EC2  4B8F               	infsnz	ili9341_draw_string@k& (0+255),f,b
 12988  003EC4  2B90               	incf	(ili9341_draw_string@k+1)& (0+255),f,b
 12989  003EC6                     l11232:
 12990                           
 12991                           ; BSR set to: 0
 12992  003EC6  0EE0               	movlw	224
 12993  003EC8  6F8B               	movwf	??_ili9341_draw_string& (0+255),b
 12994  003ECA  0EFF               	movlw	255
 12995  003ECC  6F8C               	movwf	(??_ili9341_draw_string+1)& (0+255),b
 12996  003ECE  C085  FFF6         	movff	ili9341_draw_string@pS,tblptrl
 12997  003ED2  C086  FFF7         	movff	ili9341_draw_string@pS+1,tblptrh
 12998  003ED6  6AF8               	clrf	tblptru,c
 12999  003ED8  0E07               	movlw	(high __ramtop+-1)
 13000  003EDA  64F7               	cpfsgt	tblptrh,c
 13001  003EDC  D003               	bra	u15477
 13002  003EDE  0008               	tblrd		*
 13003  003EE0  50F5               	movf	tablat,w,c
 13004  003EE2  D005               	bra	u15470
 13005  003EE4                     u15477:
 13006  003EE4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13007  003EE8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13008  003EEC  50E7               	movf	indf1,w,c
 13009  003EEE                     u15470:
 13010  003EEE  0100               	movlb	0	; () banked
 13011  003EF0  6F8D               	movwf	(??_ili9341_draw_string+2)& (0+255),b
 13012  003EF2  6B8E               	clrf	(??_ili9341_draw_string+3)& (0+255),b
 13013  003EF4  518B               	movf	??_ili9341_draw_string& (0+255),w,b
 13014  003EF6  278D               	addwf	(??_ili9341_draw_string+2)& (0+255),f,b
 13015  003EF8  518C               	movf	(??_ili9341_draw_string+1)& (0+255),w,b
 13016  003EFA  238E               	addwfc	(??_ili9341_draw_string+3)& (0+255),f,b
 13017  003EFC  518D               	movf	(??_ili9341_draw_string+2)& (0+255),w,b
 13018  003EFE  5D8F               	subwf	ili9341_draw_string@k& (0+255),w,b
 13019  003F00  518E               	movf	(??_ili9341_draw_string+3)& (0+255),w,b
 13020  003F02  5990               	subwfb	(ili9341_draw_string@k+1)& (0+255),w,b
 13021  003F04  A0D8               	btfss	status,0,c
 13022  003F06  D7C8               	goto	l11228
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;Ili9341.c: 513:         ili9341_drawchar(x, y, lIndex, fg_color, bg_color);
 13026  003F08  C081  F06C         	movff	ili9341_draw_string@x,ili9341_drawchar@x
 13027  003F0C  C082  F06D         	movff	ili9341_draw_string@x+1,ili9341_drawchar@x+1
 13028  003F10  C083  F06E         	movff	ili9341_draw_string@y,ili9341_drawchar@y
 13029  003F14  C084  F06F         	movff	ili9341_draw_string@y+1,ili9341_drawchar@y+1
 13030  003F18  C091  F070         	movff	ili9341_draw_string@lIndex,ili9341_drawchar@fIndex
 13031  003F1C  C092  F071         	movff	ili9341_draw_string@lIndex+1,ili9341_drawchar@fIndex+1
 13032  003F20  C087  F072         	movff	ili9341_draw_string@fg_color,ili9341_drawchar@color
 13033  003F24  C088  F073         	movff	ili9341_draw_string@fg_color+1,ili9341_drawchar@color+1
 13034  003F28  C089  F074         	movff	ili9341_draw_string@bg_color,ili9341_drawchar@bg_color
 13035  003F2C  C08A  F075         	movff	ili9341_draw_string@bg_color+1,ili9341_drawchar@bg_color+1
 13036  003F30  ECAF  F01C         	call	_ili9341_drawchar	;wreg free
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;Ili9341.c: 516:         x += font[lIndex];
 13040  003F34  0EC9               	movlw	low _font
 13041  003F36  2591               	addwf	ili9341_draw_string@lIndex& (0+255),w,b
 13042  003F38  6EF6               	movwf	tblptrl,c
 13043  003F3A  0E72               	movlw	high _font
 13044  003F3C  2192               	addwfc	(ili9341_draw_string@lIndex+1)& (0+255),w,b
 13045  003F3E  6EF7               	movwf	tblptrh,c
 13046  003F40                     	if	0	;There are less than 3 active tblptr bytes
 13047  003F40                     	endif
 13048  003F40  0008               	tblrd		*
 13049  003F42  50F5               	movf	tablat,w,c
 13050  003F44  2781               	addwf	ili9341_draw_string@x& (0+255),f,b
 13051  003F46  0E00               	movlw	0
 13052  003F48  2382               	addwfc	(ili9341_draw_string@x+1)& (0+255),f,b
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;Ili9341.c: 519:         pS++;
 13056  003F4A  4B85               	infsnz	ili9341_draw_string@pS& (0+255),f,b
 13057  003F4C  2B86               	incf	(ili9341_draw_string@pS+1)& (0+255),f,b
 13058  003F4E                     l11240:
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;Ili9341.c: 503:     while(*pS)
 13062  003F4E  C085  FFF6         	movff	ili9341_draw_string@pS,tblptrl
 13063  003F52  C086  FFF7         	movff	ili9341_draw_string@pS+1,tblptrh
 13064  003F56  6AF8               	clrf	tblptru,c
 13065  003F58  0E07               	movlw	(high __ramtop+-1)
 13066  003F5A  64F7               	cpfsgt	tblptrh,c
 13067  003F5C  D003               	bra	u15497
 13068  003F5E  0008               	tblrd		*
 13069  003F60  50F5               	movf	tablat,w,c
 13070  003F62  D005               	bra	u15490
 13071  003F64                     u15497:
 13072  003F64  CFF6 FFE1          	movff	tblptrl,fsr1l
 13073  003F68  CFF7 FFE2          	movff	tblptrh,fsr1h
 13074  003F6C  50E7               	movf	indf1,w,c
 13075  003F6E                     u15490:
 13076  003F6E  0900               	iorlw	0
 13077  003F70  B4D8               	btfsc	status,2,c
 13078  003F72  0012               	return	
 13079  003F74  D787               	goto	l11226
 13080  003F76                     __end_of_ili9341_draw_string:
 13081                           	callstack 0
 13082                           
 13083 ;; *************** function _ili9341_drawchar *****************
 13084 ;; Defined at:
 13085 ;;		line 423 in file "Ili9341.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  x               2   12[BANK0 ] int 
 13088 ;;  y               2   14[BANK0 ] int 
 13089 ;;  fIndex          2   16[BANK0 ] int 
 13090 ;;  color           2   18[BANK0 ] int 
 13091 ;;  bg_color        2   20[BANK0 ] int 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  iOffset         2   28[BANK0 ] unsigned short 
 13094 ;;  i               1   32[BANK0 ] unsigned char 
 13095 ;;  k               1   31[BANK0 ] unsigned char 
 13096 ;;  j               1   30[BANK0 ] unsigned char 
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  1    wreg      void 
 13099 ;; Registers used:
 13100 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13101 ;; Tracked objects:
 13102 ;;		On entry : 3F/0
 13103 ;;		On exit  : 3F/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13106 ;;      Params:         0      10       0       0       0       0       0       0       0
 13107 ;;      Locals:         0       5       0       0       0       0       0       0       0
 13108 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13109 ;;      Totals:         0      21       0       0       0       0       0       0       0
 13110 ;;Total ram usage:       21 bytes
 13111 ;; Hardware stack levels used:    1
 13112 ;; Hardware stack levels required when called:    9
 13113 ;; This function calls:
 13114 ;;		___wmul
 13115 ;;		_ili9341_pushcolor
 13116 ;;		_ili9341_setcursor
 13117 ;; This function is called by:
 13118 ;;		_ili9341_draw_string
 13119 ;; This function uses a non-reentrant model
 13120 ;;
 13121                           
 13122                           	psect	text14
 13123  00395E                     __ptext14:
 13124                           	callstack 0
 13125  00395E                     _ili9341_drawchar:
 13126                           	callstack 20
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;Ili9341.c: 423: void ili9341_drawchar(int x,int y,int fIndex,int color,int bg_color);Il
      +                          i9341.c: 424: {;Ili9341.c: 425:     uint8_t j, k, i;;Ili9341.c: 426:     uint16_t iOffse
      +                          t = fIndex + (font[fIndex])*2;
 13130                           
 13131                           ;incstack = 0
 13132  00395E  0EC9               	movlw	low _font
 13133  003960  2570               	addwf	ili9341_drawchar@fIndex& (0+255),w,b
 13134  003962  6EF6               	movwf	tblptrl,c
 13135  003964  0E72               	movlw	high _font
 13136  003966  2171               	addwfc	(ili9341_drawchar@fIndex+1)& (0+255),w,b
 13137  003968  6EF7               	movwf	tblptrh,c
 13138  00396A                     	if	0	;There are less than 3 active tblptr bytes
 13139  00396A                     	endif
 13140  00396A  0008               	tblrd		*
 13141  00396C  50F5               	movf	tablat,w,c
 13142  00396E  0D02               	mullw	2
 13143  003970  CFF3 F076          	movff	prodl,??_ili9341_drawchar
 13144  003974  CFF4 F077          	movff	prodh,??_ili9341_drawchar+1
 13145  003978  5170               	movf	ili9341_drawchar@fIndex& (0+255),w,b
 13146  00397A  2576               	addwf	??_ili9341_drawchar& (0+255),w,b
 13147  00397C  6F7C               	movwf	ili9341_drawchar@iOffset& (0+255),b
 13148  00397E  5171               	movf	(ili9341_drawchar@fIndex+1)& (0+255),w,b
 13149  003980  2177               	addwfc	(??_ili9341_drawchar+1)& (0+255),w,b
 13150  003982  6F7D               	movwf	(ili9341_drawchar@iOffset+1)& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;Ili9341.c: 428:     for(j=0; j < font[fIndex]; j++)
 13154  003984  0E00               	movlw	0
 13155  003986  6F7E               	movwf	ili9341_drawchar@j& (0+255),b
 13156  003988  D067               	goto	l11198
 13157  00398A                     l11168:
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;Ili9341.c: 429:     {;Ili9341.c: 430:         ili9341_setcursor(x + font[fIndex] - j, y
      +                          );
 13161  00398A  0EC9               	movlw	low _font
 13162  00398C  2570               	addwf	ili9341_drawchar@fIndex& (0+255),w,b
 13163  00398E  6EF6               	movwf	tblptrl,c
 13164  003990  0E72               	movlw	high _font
 13165  003992  2171               	addwfc	(ili9341_drawchar@fIndex+1)& (0+255),w,b
 13166  003994  6EF7               	movwf	tblptrh,c
 13167  003996                     	if	0	;There are less than 3 active tblptr bytes
 13168  003996                     	endif
 13169  003996  0008               	tblrd		*
 13170  003998  50F5               	movf	tablat,w,c
 13171  00399A  6F76               	movwf	??_ili9341_drawchar& (0+255),b
 13172  00399C  6B77               	clrf	(??_ili9341_drawchar+1)& (0+255),b
 13173  00399E  517E               	movf	ili9341_drawchar@j& (0+255),w,b
 13174  0039A0  5F76               	subwf	??_ili9341_drawchar& (0+255),f,b
 13175  0039A2  0E00               	movlw	0
 13176  0039A4  5B77               	subwfb	(??_ili9341_drawchar+1)& (0+255),f,b
 13177  0039A6  516C               	movf	ili9341_drawchar@x& (0+255),w,b
 13178  0039A8  2576               	addwf	??_ili9341_drawchar& (0+255),w,b
 13179  0039AA  6F68               	movwf	ili9341_setcursor@x& (0+255),b
 13180  0039AC  516D               	movf	(ili9341_drawchar@x+1)& (0+255),w,b
 13181  0039AE  2177               	addwfc	(??_ili9341_drawchar+1)& (0+255),w,b
 13182  0039B0  6F69               	movwf	(ili9341_setcursor@x+1)& (0+255),b
 13183  0039B2  C06E  F06A         	movff	ili9341_drawchar@y,ili9341_setcursor@y
 13184  0039B6  C06F  F06B         	movff	ili9341_drawchar@y+1,ili9341_setcursor@y+1
 13185  0039BA  EC8D  F027         	call	_ili9341_setcursor	;wreg free
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;Ili9341.c: 432:         for(k=0; k<2; k++)
 13189  0039BE  0E00               	movlw	0
 13190  0039C0  6F7F               	movwf	ili9341_drawchar@k& (0+255),b
 13191  0039C2                     l11176:
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;Ili9341.c: 433:         {;Ili9341.c: 434:             for(i=0; i<8; i++)
 13195  0039C2  0E00               	movlw	0
 13196  0039C4  6F80               	movwf	ili9341_drawchar@i& (0+255),b
 13197  0039C6                     l11182:
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;Ili9341.c: 435:             {;Ili9341.c: 436:                 if( font[ iOffset - (j*2)
      +                           - k ] & (0x80 >> i) )
 13201  0039C6  C07E  F065         	movff	ili9341_drawchar@j,___wmul@multiplier
 13202  0039CA  6B66               	clrf	(___wmul@multiplier+1)& (0+255),b
 13203  0039CC  0EFF               	movlw	255
 13204  0039CE  6F68               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13205  0039D0  0EFE               	movlw	254
 13206  0039D2  6F67               	movwf	___wmul@multiplicand& (0+255),b
 13207  0039D4  EC64  F028         	call	___wmul	;wreg free
 13208  0039D8  0EC9               	movlw	low _font
 13209  0039DA  6F76               	movwf	??_ili9341_drawchar& (0+255),b
 13210  0039DC  0E72               	movlw	high _font
 13211  0039DE  6F77               	movwf	(??_ili9341_drawchar+1)& (0+255),b
 13212  0039E0  5165               	movf	?___wmul& (0+255),w,b
 13213  0039E2  2776               	addwf	??_ili9341_drawchar& (0+255),f,b
 13214  0039E4  5166               	movf	(?___wmul+1)& (0+255),w,b
 13215  0039E6  2377               	addwfc	(??_ili9341_drawchar+1)& (0+255),f,b
 13216  0039E8  517F               	movf	ili9341_drawchar@k& (0+255),w,b
 13217  0039EA  5F76               	subwf	??_ili9341_drawchar& (0+255),f,b
 13218  0039EC  0E00               	movlw	0
 13219  0039EE  5B77               	subwfb	(??_ili9341_drawchar+1)& (0+255),f,b
 13220  0039F0  517C               	movf	ili9341_drawchar@iOffset& (0+255),w,b
 13221  0039F2  2776               	addwf	??_ili9341_drawchar& (0+255),f,b
 13222  0039F4  517D               	movf	(ili9341_drawchar@iOffset+1)& (0+255),w,b
 13223  0039F6  2377               	addwfc	(??_ili9341_drawchar+1)& (0+255),f,b
 13224  0039F8  C076  FFF6         	movff	??_ili9341_drawchar,tblptrl
 13225  0039FC  C077  FFF7         	movff	??_ili9341_drawchar+1,tblptrh
 13226  003A00                     	if	0	;tblptru may be non-zero
 13227  003A00                     	endif
 13228  003A00                     	if	0	;tblptru may be non-zero
 13229  003A00                     	endif
 13230  003A00  0008               	tblrd		*
 13231  003A02  CFF5 F078          	movff	tablat,??_ili9341_drawchar+2
 13232  003A06  C080  F079         	movff	ili9341_drawchar@i,??_ili9341_drawchar+3
 13233  003A0A  0E80               	movlw	128
 13234  003A0C  6F7A               	movwf	(??_ili9341_drawchar+4)& (0+255),b
 13235  003A0E  0E00               	movlw	0
 13236  003A10  6F7B               	movwf	(??_ili9341_drawchar+5)& (0+255),b
 13237  003A12  2B79               	incf	(??_ili9341_drawchar+3)& (0+255),f,b
 13238  003A14  D003               	goto	u15374
 13239  003A16                     u15375:
 13240  003A16  357B               	rlcf	(??_ili9341_drawchar+5)& (0+255),w,b
 13241  003A18  337B               	rrcf	(??_ili9341_drawchar+5)& (0+255),f,b
 13242  003A1A  337A               	rrcf	(??_ili9341_drawchar+4)& (0+255),f,b
 13243  003A1C                     u15374:
 13244  003A1C  2F79               	decfsz	(??_ili9341_drawchar+3)& (0+255),f,b
 13245  003A1E  D7FB               	goto	u15375
 13246  003A20  0100               	movlb	0	; () banked
 13247  003A22  517A               	movf	(??_ili9341_drawchar+4)& (0+255),w,b
 13248  003A24  1578               	andwf	(??_ili9341_drawchar+2)& (0+255),w,b
 13249  003A26  0900               	iorlw	0
 13250  003A28  B4D8               	btfsc	status,2,c
 13251  003A2A  D007               	goto	l11186
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;Ili9341.c: 437:                 {;Ili9341.c: 438:                     ili9341_pushcolor
      +                          (color);
 13255  003A2C  C072  F068         	movff	ili9341_drawchar@color,ili9341_pushcolor@color
 13256  003A30  C073  F069         	movff	ili9341_drawchar@color+1,ili9341_pushcolor@color+1
 13257  003A34  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 13258                           
 13259                           ;Ili9341.c: 439:                 }
 13260  003A38  D006               	goto	l11188
 13261  003A3A                     l11186:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;Ili9341.c: 441:                 {;Ili9341.c: 442:                     ili9341_pushcolor
      +                          (bg_color);
 13265  003A3A  C074  F068         	movff	ili9341_drawchar@bg_color,ili9341_pushcolor@color
 13266  003A3E  C075  F069         	movff	ili9341_drawchar@bg_color+1,ili9341_pushcolor@color+1
 13267  003A42  EC91  F028         	call	_ili9341_pushcolor	;wreg free
 13268  003A46                     l11188:
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;Ili9341.c: 444:             }
 13272  003A46  2B80               	incf	ili9341_drawchar@i& (0+255),f,b
 13273                           
 13274                           ; BSR set to: 0
 13275  003A48  0E07               	movlw	7
 13276  003A4A  6580               	cpfsgt	ili9341_drawchar@i& (0+255),b
 13277  003A4C  D7BC               	goto	l11182
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;Ili9341.c: 445:         }
 13281  003A4E  2B7F               	incf	ili9341_drawchar@k& (0+255),f,b
 13282                           
 13283                           ; BSR set to: 0
 13284  003A50  0E01               	movlw	1
 13285  003A52  657F               	cpfsgt	ili9341_drawchar@k& (0+255),b
 13286  003A54  D7B6               	goto	l11176
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;Ili9341.c: 446:     }
 13290  003A56  2B7E               	incf	ili9341_drawchar@j& (0+255),f,b
 13291  003A58                     l11198:
 13292                           
 13293                           ; BSR set to: 0
 13294  003A58  0EC9               	movlw	low _font
 13295  003A5A  2570               	addwf	ili9341_drawchar@fIndex& (0+255),w,b
 13296  003A5C  6EF6               	movwf	tblptrl,c
 13297  003A5E  0E72               	movlw	high _font
 13298  003A60  2171               	addwfc	(ili9341_drawchar@fIndex+1)& (0+255),w,b
 13299  003A62  6EF7               	movwf	tblptrh,c
 13300  003A64                     	if	0	;There are less than 3 active tblptr bytes
 13301  003A64                     	endif
 13302  003A64  0009               	tblrd		*+
 13303  003A66  50F5               	movf	tablat,w,c
 13304  003A68  5D7E               	subwf	ili9341_drawchar@j& (0+255),w,b
 13305  003A6A  B0D8               	btfsc	status,0,c
 13306  003A6C  0012               	return	
 13307  003A6E  D78D               	goto	l11168
 13308  003A70                     __end_of_ili9341_drawchar:
 13309                           	callstack 0
 13310                           
 13311 ;; *************** function _ili9341_setcursor *****************
 13312 ;; Defined at:
 13313 ;;		line 480 in file "Ili9341.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  x               2    8[BANK0 ] int 
 13316 ;;  y               2   10[BANK0 ] int 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0, cstack
 13323 ;; Tracked objects:
 13324 ;;		On entry : 3F/0
 13325 ;;		On exit  : 3F/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13328 ;;      Params:         0       4       0       0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13331 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13332 ;;Total ram usage:        4 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:    8
 13335 ;; This function calls:
 13336 ;;		_ili9341_write_command
 13337 ;;		_ili9341_write_date
 13338 ;; This function is called by:
 13339 ;;		_ili9341_drawchar
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text15
 13344  004F1A                     __ptext15:
 13345                           	callstack 0
 13346  004F1A                     _ili9341_setcursor:
 13347                           	callstack 20
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;Ili9341.c: 480: void ili9341_setcursor(int x,int y);Ili9341.c: 481: {;Ili9341.c: 482:  
      +                             ili9341_write_command(0x2B);
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;incstack = 0
 13354  004F1A  0E2B               	movlw	43
 13355  004F1C  ECBE  F01D         	call	_ili9341_write_command
 13356                           
 13357                           ;Ili9341.c: 483:     ili9341_write_date(x >> 8);
 13358  004F20  5169               	movf	(ili9341_setcursor@x+1)& (0+255),w,b
 13359  004F22  EC42  F01E         	call	_ili9341_write_date
 13360                           
 13361                           ;Ili9341.c: 484:     ili9341_write_date(x & 0xFF);
 13362  004F26  5168               	movf	ili9341_setcursor@x& (0+255),w,b
 13363  004F28  EC42  F01E         	call	_ili9341_write_date
 13364                           
 13365                           ;Ili9341.c: 486:     ili9341_write_command(0x2C);
 13366  004F2C  0E2C               	movlw	44
 13367  004F2E  ECBE  F01D         	call	_ili9341_write_command
 13368                           
 13369                           ;Ili9341.c: 488:     ili9341_write_command(0x2A);
 13370  004F32  0E2A               	movlw	42
 13371  004F34  ECBE  F01D         	call	_ili9341_write_command
 13372                           
 13373                           ;Ili9341.c: 489:     ili9341_write_date(y >> 8);
 13374  004F38  516B               	movf	(ili9341_setcursor@y+1)& (0+255),w,b
 13375  004F3A  EC42  F01E         	call	_ili9341_write_date
 13376                           
 13377                           ;Ili9341.c: 490:     ili9341_write_date(y & 0xFF);
 13378  004F3E  516A               	movf	ili9341_setcursor@y& (0+255),w,b
 13379  004F40  EC42  F01E         	call	_ili9341_write_date
 13380                           
 13381                           ;Ili9341.c: 492:     ili9341_write_command(0x2C);
 13382  004F44  0E2C               	movlw	44
 13383  004F46  ECBE  F01D         	call	_ili9341_write_command
 13384                           
 13385                           ; BSR set to: 0
 13386  004F4A  0012               	return		;funcret
 13387  004F4C                     __end_of_ili9341_setcursor:
 13388                           	callstack 0
 13389                           
 13390 ;; *************** function _ili9341_write_command *****************
 13391 ;; Defined at:
 13392 ;;		line 127 in file "Ili9341.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  cmd             1    wreg     unsigned char 
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  cmd             1    7[BANK0 ] unsigned char 
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		wreg, status,2, status,0
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 3F/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0
 13407 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13408 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13409 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13410 ;;Total ram usage:        3 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:    7
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_ili9341_init
 13417 ;;		_ili9341_setadress
 13418 ;;		_ili9341_setcursor
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text16
 13423  003B7C                     __ptext16:
 13424                           	callstack 0
 13425  003B7C                     _ili9341_write_command:
 13426                           	callstack 22
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;incstack = 0
 13430                           ;ili9341_write_command@cmd stored from wreg
 13431  003B7C  0100               	movlb	0	; () banked
 13432  003B7E  6F67               	movwf	ili9341_write_command@cmd& (0+255),b
 13433                           
 13434                           ;Ili9341.c: 127: void ili9341_write_command(unsigned char cmd);Ili9341.c: 128: {;Ili9341
      +                          .c: 130:     PORTBbits.RB2 = 0;
 13435  003B80  9481               	bcf	129,2,c	;volatile
 13436                           
 13437                           ;Ili9341.c: 131:     TRISBbits.TRISB2 = 0;
 13438  003B82  9493               	bcf	147,2,c	;volatile
 13439                           
 13440                           ;Ili9341.c: 133:     PORTBbits.RB5 = 1;
 13441  003B84  8A81               	bsf	129,5,c	;volatile
 13442                           
 13443                           ;Ili9341.c: 134:     TRISBbits.TRISB5 = 0;
 13444  003B86  9A93               	bcf	147,5,c	;volatile
 13445                           
 13446                           ;Ili9341.c: 136:     PORTBbits.RB1 = 1;
 13447  003B88  8281               	bsf	129,1,c	;volatile
 13448                           
 13449                           ;Ili9341.c: 137:     TRISBbits.TRISB1 = 0;
 13450  003B8A  9293               	bcf	147,1,c	;volatile
 13451                           
 13452                           ;Ili9341.c: 139:     PORTBbits.RB3 = 0;
 13453  003B8C  9681               	bcf	129,3,c	;volatile
 13454                           
 13455                           ;Ili9341.c: 140:     TRISBbits.TRISB3 = 0;
 13456  003B8E  9693               	bcf	147,3,c	;volatile
 13457                           
 13458                           ;Ili9341.c: 142:     PORTBbits.RB4 = 0;
 13459  003B90  9881               	bcf	129,4,c	;volatile
 13460                           
 13461                           ;Ili9341.c: 143:     TRISBbits.TRISB4 = 0;
 13462  003B92  9893               	bcf	147,4,c	;volatile
 13463                           
 13464                           ;Ili9341.c: 146:     PORTDbits.RD0 = (cmd & 0x01);
 13465  003B94  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13466  003B98  0E01               	movlw	1
 13467  003B9A  0100               	movlb	0	; () banked
 13468  003B9C  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13469  003B9E  5083               	movf	131,w,c	;volatile
 13470  003BA0  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13471  003BA2  0BFE               	andlw	-2
 13472  003BA4  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13473  003BA6  6E83               	movwf	131,c	;volatile
 13474                           
 13475                           ;Ili9341.c: 147:     PORTDbits.RD1 = ((cmd >> 1) & 0x01);
 13476  003BA8  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13477  003BAC  90D8               	bcf	status,0,c
 13478  003BAE  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13479  003BB0  0E01               	movlw	1
 13480  003BB2  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13481  003BB4  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13482  003BB6  5083               	movf	131,w,c	;volatile
 13483  003BB8  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13484  003BBA  0BFD               	andlw	-3
 13485  003BBC  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13486  003BBE  6E83               	movwf	131,c	;volatile
 13487                           
 13488                           ;Ili9341.c: 148:     PORTDbits.RD2 = ((cmd >> 2) & 0x01);
 13489  003BC0  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13490  003BC4  90D8               	bcf	status,0,c
 13491  003BC6  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13492  003BC8  90D8               	bcf	status,0,c
 13493  003BCA  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13494  003BCC  0E01               	movlw	1
 13495  003BCE  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13496  003BD0  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13497  003BD2  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13498  003BD4  5083               	movf	131,w,c	;volatile
 13499  003BD6  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13500  003BD8  0BFB               	andlw	-5
 13501  003BDA  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13502  003BDC  6E83               	movwf	131,c	;volatile
 13503                           
 13504                           ;Ili9341.c: 149:     PORTDbits.RD3 = ((cmd >> 3) & 0x01);
 13505  003BDE  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13506  003BE2  90D8               	bcf	status,0,c
 13507  003BE4  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13508  003BE6  90D8               	bcf	status,0,c
 13509  003BE8  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13510  003BEA  90D8               	bcf	status,0,c
 13511  003BEC  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13512  003BEE  0E01               	movlw	1
 13513  003BF0  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13514  003BF2  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13515  003BF4  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13516  003BF6  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13517  003BF8  5083               	movf	131,w,c	;volatile
 13518  003BFA  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13519  003BFC  0BF7               	andlw	-9
 13520  003BFE  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13521  003C00  6E83               	movwf	131,c	;volatile
 13522                           
 13523                           ;Ili9341.c: 150:     PORTDbits.RD4 = ((cmd >> 4) & 0x01);
 13524  003C02  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13525  003C06  3B65               	swapf	??_ili9341_write_command& (0+255),f,b
 13526  003C08  0E0F               	movlw	15
 13527  003C0A  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13528  003C0C  0E01               	movlw	1
 13529  003C0E  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13530  003C10  3B65               	swapf	??_ili9341_write_command& (0+255),f,b
 13531  003C12  5083               	movf	131,w,c	;volatile
 13532  003C14  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13533  003C16  0BEF               	andlw	-17
 13534  003C18  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13535  003C1A  6E83               	movwf	131,c	;volatile
 13536                           
 13537                           ;Ili9341.c: 151:     PORTDbits.RD5 = ((cmd >> 5) & 0x01);
 13538  003C1C  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13539  003C20  0E05               	movlw	5
 13540  003C22  6F66               	movwf	(??_ili9341_write_command+1)& (0+255),b
 13541  003C24                     u6165:
 13542  003C24  90D8               	bcf	status,0,c
 13543  003C26  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13544  003C28  2F66               	decfsz	(??_ili9341_write_command+1)& (0+255),f,b
 13545  003C2A  D7FC               	goto	u6165
 13546  003C2C  0E01               	movlw	1
 13547  003C2E  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13548  003C30  3B65               	swapf	??_ili9341_write_command& (0+255),f,b
 13549  003C32  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13550  003C34  5083               	movf	131,w,c	;volatile
 13551  003C36  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13552  003C38  0BDF               	andlw	-33
 13553  003C3A  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13554  003C3C  6E83               	movwf	131,c	;volatile
 13555                           
 13556                           ;Ili9341.c: 152:     PORTDbits.RD6 = ((cmd >> 6) & 0x01);
 13557  003C3E  C067  F065         	movff	ili9341_write_command@cmd,??_ili9341_write_command
 13558  003C42  0E06               	movlw	6
 13559  003C44  6F66               	movwf	(??_ili9341_write_command+1)& (0+255),b
 13560  003C46                     u6175:
 13561  003C46  90D8               	bcf	status,0,c
 13562  003C48  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13563  003C4A  2F66               	decfsz	(??_ili9341_write_command+1)& (0+255),f,b
 13564  003C4C  D7FC               	goto	u6175
 13565  003C4E  0E01               	movlw	1
 13566  003C50  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13567  003C52  3B65               	swapf	??_ili9341_write_command& (0+255),f,b
 13568  003C54  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13569  003C56  4765               	rlncf	??_ili9341_write_command& (0+255),f,b
 13570  003C58  5083               	movf	131,w,c	;volatile
 13571  003C5A  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13572  003C5C  0BBF               	andlw	-65
 13573  003C5E  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13574  003C60  6E83               	movwf	131,c	;volatile
 13575                           
 13576                           ;Ili9341.c: 153:     PORTDbits.RD7 = ((cmd >> 7) & 0x01);
 13577  003C62  6B65               	clrf	??_ili9341_write_command& (0+255),b
 13578  003C64  AF67               	btfss	ili9341_write_command@cmd& (0+255),7,b
 13579  003C66  D001               	bra	u6185
 13580  003C68  2B65               	incf	??_ili9341_write_command& (0+255),f,b
 13581  003C6A                     u6185:
 13582  003C6A  0E01               	movlw	1
 13583  003C6C  1765               	andwf	??_ili9341_write_command& (0+255),f,b
 13584  003C6E  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13585  003C70  3365               	rrcf	??_ili9341_write_command& (0+255),f,b
 13586  003C72  5083               	movf	131,w,c	;volatile
 13587  003C74  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13588  003C76  0B7F               	andlw	-129
 13589  003C78  1965               	xorwf	??_ili9341_write_command& (0+255),w,b
 13590  003C7A  6E83               	movwf	131,c	;volatile
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;Ili9341.c: 158:     PORTBbits.RB4 = 1;
 13594  003C7C  8881               	bsf	129,4,c	;volatile
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;Ili9341.c: 160:     PORTBbits.RB3 = 1;
 13598  003C7E  8681               	bsf	129,3,c	;volatile
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;Ili9341.c: 162:     PORTBbits.RB2 = 1;
 13602  003C80  8481               	bsf	129,2,c	;volatile
 13603                           
 13604                           ; BSR set to: 0
 13605  003C82  0012               	return		;funcret
 13606  003C84                     __end_of_ili9341_write_command:
 13607                           	callstack 0
 13608                           
 13609 ;; *************** function _ili9341_pushcolor *****************
 13610 ;; Defined at:
 13611 ;;		line 280 in file "Ili9341.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  color           2    8[BANK0 ] int 
 13614 ;; Auto vars:     Size  Location     Type
 13615 ;;		None
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg, status,2, status,0, cstack
 13620 ;; Tracked objects:
 13621 ;;		On entry : 3E/0
 13622 ;;		On exit  : 3F/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13625 ;;      Params:         0       2       0       0       0       0       0       0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13628 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13629 ;;Total ram usage:        2 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:    8
 13632 ;; This function calls:
 13633 ;;		_ili9341_write_date
 13634 ;; This function is called by:
 13635 ;;		_ili9341_fill
 13636 ;;		_ili9341_fillrect
 13637 ;;		_ili9341_drawvline
 13638 ;;		_ili9341_drawhline
 13639 ;;		_ili9341_drawchar
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text17
 13644  005122                     __ptext17:
 13645                           	callstack 0
 13646  005122                     _ili9341_pushcolor:
 13647                           	callstack 21
 13648                           
 13649                           ;Ili9341.c: 280: void ili9341_pushcolor(int color);Ili9341.c: 281: {;Ili9341.c: 282:    
      +                           ili9341_write_date(color >> 8);
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;incstack = 0
 13653  005122  0100               	movlb	0	; () banked
 13654  005124  5169               	movf	(ili9341_pushcolor@color+1)& (0+255),w,b
 13655  005126  EC42  F01E         	call	_ili9341_write_date
 13656                           
 13657                           ;Ili9341.c: 283:     ili9341_write_date(color & 0x00FF);
 13658  00512A  5168               	movf	ili9341_pushcolor@color& (0+255),w,b
 13659  00512C  EC42  F01E         	call	_ili9341_write_date
 13660                           
 13661                           ; BSR set to: 0
 13662  005130  0012               	return		;funcret
 13663  005132                     __end_of_ili9341_pushcolor:
 13664                           	callstack 0
 13665                           
 13666 ;; *************** function _ili9341_write_date *****************
 13667 ;; Defined at:
 13668 ;;		line 171 in file "Ili9341.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  date            1    wreg     unsigned char 
 13671 ;; Auto vars:     Size  Location     Type
 13672 ;;  date            1    7[BANK0 ] unsigned char 
 13673 ;; Return value:  Size  Location     Type
 13674 ;;                  1    wreg      void 
 13675 ;; Registers used:
 13676 ;;		wreg, status,2, status,0
 13677 ;; Tracked objects:
 13678 ;;		On entry : 3F/0
 13679 ;;		On exit  : 3F/0
 13680 ;;		Unchanged: 0/0
 13681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13682 ;;      Params:         0       0       0       0       0       0       0       0       0
 13683 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13684 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13685 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13686 ;;Total ram usage:        3 bytes
 13687 ;; Hardware stack levels used:    1
 13688 ;; Hardware stack levels required when called:    7
 13689 ;; This function calls:
 13690 ;;		Nothing
 13691 ;; This function is called by:
 13692 ;;		_ili9341_init
 13693 ;;		_ili9341_setadress
 13694 ;;		_ili9341_pushcolor
 13695 ;;		_ili9341_setcursor
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text18
 13700  003C84                     __ptext18:
 13701                           	callstack 0
 13702  003C84                     _ili9341_write_date:
 13703                           	callstack 22
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;incstack = 0
 13707                           ;ili9341_write_date@date stored from wreg
 13708  003C84  6F67               	movwf	ili9341_write_date@date& (0+255),b
 13709                           
 13710                           ;Ili9341.c: 171: void ili9341_write_date(unsigned char date);Ili9341.c: 172: {;Ili9341.c
      +                          : 174:     PORTBbits.RB2 = 0;
 13711  003C86  9481               	bcf	129,2,c	;volatile
 13712                           
 13713                           ;Ili9341.c: 175:     TRISBbits.TRISB2 = 0;
 13714  003C88  9493               	bcf	147,2,c	;volatile
 13715                           
 13716                           ;Ili9341.c: 177:     PORTBbits.RB3 = 1;
 13717  003C8A  8681               	bsf	129,3,c	;volatile
 13718                           
 13719                           ;Ili9341.c: 178:     TRISBbits.TRISB3 = 0;
 13720  003C8C  9693               	bcf	147,3,c	;volatile
 13721                           
 13722                           ;Ili9341.c: 180:     PORTBbits.RB5 = 1;
 13723  003C8E  8A81               	bsf	129,5,c	;volatile
 13724                           
 13725                           ;Ili9341.c: 181:     TRISBbits.TRISB5 = 0;
 13726  003C90  9A93               	bcf	147,5,c	;volatile
 13727                           
 13728                           ;Ili9341.c: 183:     PORTBbits.RB1 = 1;
 13729  003C92  8281               	bsf	129,1,c	;volatile
 13730                           
 13731                           ;Ili9341.c: 184:     TRISBbits.TRISB1 = 0;
 13732  003C94  9293               	bcf	147,1,c	;volatile
 13733                           
 13734                           ;Ili9341.c: 186:     PORTBbits.RB4 = 0;
 13735  003C96  9881               	bcf	129,4,c	;volatile
 13736                           
 13737                           ;Ili9341.c: 187:     TRISBbits.TRISB4 = 0;
 13738  003C98  9893               	bcf	147,4,c	;volatile
 13739                           
 13740                           ;Ili9341.c: 190:     PORTDbits.RD0 = (date & 0x01);
 13741  003C9A  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13742  003C9E  0E01               	movlw	1
 13743  003CA0  0100               	movlb	0	; () banked
 13744  003CA2  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13745  003CA4  5083               	movf	131,w,c	;volatile
 13746  003CA6  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13747  003CA8  0BFE               	andlw	-2
 13748  003CAA  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13749  003CAC  6E83               	movwf	131,c	;volatile
 13750                           
 13751                           ;Ili9341.c: 191:     PORTDbits.RD1 = ((date >> 1) & 0x01);
 13752  003CAE  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13753  003CB2  90D8               	bcf	status,0,c
 13754  003CB4  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13755  003CB6  0E01               	movlw	1
 13756  003CB8  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13757  003CBA  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13758  003CBC  5083               	movf	131,w,c	;volatile
 13759  003CBE  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13760  003CC0  0BFD               	andlw	-3
 13761  003CC2  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13762  003CC4  6E83               	movwf	131,c	;volatile
 13763                           
 13764                           ;Ili9341.c: 192:     PORTDbits.RD2 = ((date >> 2) & 0x01);
 13765  003CC6  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13766  003CCA  90D8               	bcf	status,0,c
 13767  003CCC  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13768  003CCE  90D8               	bcf	status,0,c
 13769  003CD0  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13770  003CD2  0E01               	movlw	1
 13771  003CD4  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13772  003CD6  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13773  003CD8  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13774  003CDA  5083               	movf	131,w,c	;volatile
 13775  003CDC  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13776  003CDE  0BFB               	andlw	-5
 13777  003CE0  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13778  003CE2  6E83               	movwf	131,c	;volatile
 13779                           
 13780                           ;Ili9341.c: 193:     PORTDbits.RD3 = ((date >> 3) & 0x01);
 13781  003CE4  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13782  003CE8  90D8               	bcf	status,0,c
 13783  003CEA  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13784  003CEC  90D8               	bcf	status,0,c
 13785  003CEE  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13786  003CF0  90D8               	bcf	status,0,c
 13787  003CF2  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13788  003CF4  0E01               	movlw	1
 13789  003CF6  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13790  003CF8  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13791  003CFA  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13792  003CFC  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13793  003CFE  5083               	movf	131,w,c	;volatile
 13794  003D00  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13795  003D02  0BF7               	andlw	-9
 13796  003D04  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13797  003D06  6E83               	movwf	131,c	;volatile
 13798                           
 13799                           ;Ili9341.c: 194:     PORTDbits.RD4 = ((date >> 4) & 0x01);
 13800  003D08  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13801  003D0C  3B65               	swapf	??_ili9341_write_date& (0+255),f,b
 13802  003D0E  0E0F               	movlw	15
 13803  003D10  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13804  003D12  0E01               	movlw	1
 13805  003D14  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13806  003D16  3B65               	swapf	??_ili9341_write_date& (0+255),f,b
 13807  003D18  5083               	movf	131,w,c	;volatile
 13808  003D1A  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13809  003D1C  0BEF               	andlw	-17
 13810  003D1E  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13811  003D20  6E83               	movwf	131,c	;volatile
 13812                           
 13813                           ;Ili9341.c: 195:     PORTDbits.RD5 = ((date >> 5) & 0x01);
 13814  003D22  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13815  003D26  0E05               	movlw	5
 13816  003D28  6F66               	movwf	(??_ili9341_write_date+1)& (0+255),b
 13817  003D2A                     u6195:
 13818  003D2A  90D8               	bcf	status,0,c
 13819  003D2C  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13820  003D2E  2F66               	decfsz	(??_ili9341_write_date+1)& (0+255),f,b
 13821  003D30  D7FC               	goto	u6195
 13822  003D32  0E01               	movlw	1
 13823  003D34  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13824  003D36  3B65               	swapf	??_ili9341_write_date& (0+255),f,b
 13825  003D38  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13826  003D3A  5083               	movf	131,w,c	;volatile
 13827  003D3C  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13828  003D3E  0BDF               	andlw	-33
 13829  003D40  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13830  003D42  6E83               	movwf	131,c	;volatile
 13831                           
 13832                           ;Ili9341.c: 196:     PORTDbits.RD6 = ((date >> 6) & 0x01);
 13833  003D44  C067  F065         	movff	ili9341_write_date@date,??_ili9341_write_date
 13834  003D48  0E06               	movlw	6
 13835  003D4A  6F66               	movwf	(??_ili9341_write_date+1)& (0+255),b
 13836  003D4C                     u6205:
 13837  003D4C  90D8               	bcf	status,0,c
 13838  003D4E  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13839  003D50  2F66               	decfsz	(??_ili9341_write_date+1)& (0+255),f,b
 13840  003D52  D7FC               	goto	u6205
 13841  003D54  0E01               	movlw	1
 13842  003D56  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13843  003D58  3B65               	swapf	??_ili9341_write_date& (0+255),f,b
 13844  003D5A  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13845  003D5C  4765               	rlncf	??_ili9341_write_date& (0+255),f,b
 13846  003D5E  5083               	movf	131,w,c	;volatile
 13847  003D60  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13848  003D62  0BBF               	andlw	-65
 13849  003D64  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13850  003D66  6E83               	movwf	131,c	;volatile
 13851                           
 13852                           ;Ili9341.c: 197:     PORTDbits.RD7 = ((date >> 7) & 0x01);
 13853  003D68  6B65               	clrf	??_ili9341_write_date& (0+255),b
 13854  003D6A  AF67               	btfss	ili9341_write_date@date& (0+255),7,b
 13855  003D6C  D001               	bra	u6215
 13856  003D6E  2B65               	incf	??_ili9341_write_date& (0+255),f,b
 13857  003D70                     u6215:
 13858  003D70  0E01               	movlw	1
 13859  003D72  1765               	andwf	??_ili9341_write_date& (0+255),f,b
 13860  003D74  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13861  003D76  3365               	rrcf	??_ili9341_write_date& (0+255),f,b
 13862  003D78  5083               	movf	131,w,c	;volatile
 13863  003D7A  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13864  003D7C  0B7F               	andlw	-129
 13865  003D7E  1965               	xorwf	??_ili9341_write_date& (0+255),w,b
 13866  003D80  6E83               	movwf	131,c	;volatile
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;Ili9341.c: 202:     PORTBbits.RB4 = 1;
 13870  003D82  8881               	bsf	129,4,c	;volatile
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;Ili9341.c: 204:     PORTBbits.RB3 = 1;
 13874  003D84  8681               	bsf	129,3,c	;volatile
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;Ili9341.c: 206:     PORTBbits.RB2 = 1;
 13878  003D86  8481               	bsf	129,2,c	;volatile
 13879                           
 13880                           ; BSR set to: 0
 13881  003D88  0012               	return		;funcret
 13882  003D8A                     __end_of_ili9341_write_date:
 13883                           	callstack 0
 13884                           
 13885 ;; *************** function _Set_Pwm *****************
 13886 ;; Defined at:
 13887 ;;		line 203 in file "Main.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;		None
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      void 
 13894 ;; Registers used:
 13895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13896 ;; Tracked objects:
 13897 ;;		On entry : 3F/1
 13898 ;;		On exit  : 3E/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13901 ;;      Params:         0       0       0       0       0       0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13904 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13905 ;;Total ram usage:        0 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:   10
 13908 ;; This function calls:
 13909 ;;		_PWM_1
 13910 ;;		_PWM_Stop_1
 13911 ;; This function is called by:
 13912 ;;		_main
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916                           	psect	text19
 13917  005072                     __ptext19:
 13918                           	callstack 0
 13919  005072                     _Set_Pwm:
 13920                           	callstack 20
 13921                           
 13922                           ; BSR set to: 1
 13923                           ;Main.c: 205:     if(ver)
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;incstack = 0
 13927  005072  504B               	movf	_ver^0,w,c
 13928  005074  B4D8               	btfsc	status,2,c
 13929  005076  0012               	return	
 13930                           
 13931                           ; BSR set to: 1
 13932                           ;Main.c: 206:     {;Main.c: 207:         if(est_m) PWM_1(pwm1);
 13933  005078  512F               	movf	_est_m& (0+255),w,b
 13934  00507A  B4D8               	btfsc	status,2,c
 13935  00507C  D004               	goto	l11542
 13936                           
 13937                           ; BSR set to: 1
 13938  00507E  5129               	movf	_pwm1& (0+255),w,b
 13939  005080  ECE0  F018         	call	_PWM_1
 13940  005084  D009               	goto	l176
 13941  005086                     l11542:
 13942                           
 13943                           ; BSR set to: 1
 13944  005086  0E00               	movlw	0
 13945  005088  6F2A               	movwf	(_pwm1+1)& (0+255),b
 13946  00508A  0E00               	movlw	0
 13947  00508C  6F29               	movwf	_pwm1& (0+255),b
 13948                           
 13949                           ; BSR set to: 1
 13950  00508E  0E01               	movlw	1
 13951  005090  ECE0  F018         	call	_PWM_1
 13952                           
 13953                           ; BSR set to: 0
 13954  005094  EC88  F028         	call	_PWM_Stop_1	;wreg free
 13955  005098                     l176:
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;Main.c: 210:         ver = 0;
 13959  005098  0E00               	movlw	0
 13960  00509A  6E4B               	movwf	_ver^0,c
 13961  00509C  0012               	return		;funcret
 13962  00509E                     __end_of_Set_Pwm:
 13963                           	callstack 0
 13964                           
 13965 ;; *************** function _PWM_Stop_1 *****************
 13966 ;; Defined at:
 13967 ;;		line 66 in file "Pwm_Hard.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;		None
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      void 
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13976 ;; Tracked objects:
 13977 ;;		On entry : 3F/0
 13978 ;;		On exit  : 3F/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13984 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13985 ;;Total ram usage:        0 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    9
 13988 ;; This function calls:
 13989 ;;		_PWM_1
 13990 ;; This function is called by:
 13991 ;;		_Set_Pwm
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text20
 13996  005110                     __ptext20:
 13997                           	callstack 0
 13998  005110                     _PWM_Stop_1:
 13999                           	callstack 20
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;Pwm_Hard.c: 68:     PWM_1(1);
 14003                           
 14004                           ;incstack = 0
 14005  005110  0E01               	movlw	1
 14006  005112  ECE0  F018         	call	_PWM_1
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;Pwm_Hard.c: 69:     T2CONbits.TMR2ON = 0;
 14010  005116  94CA               	bcf	202,2,c	;volatile
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;Pwm_Hard.c: 70:     CCPR1L = 0;
 14014  005118  0E00               	movlw	0
 14015  00511A  6EBE               	movwf	190,c	;volatile
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;Pwm_Hard.c: 71:     CCP1CONbits.DC1B1 = 0;
 14019  00511C  9ABD               	bcf	189,5,c	;volatile
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;Pwm_Hard.c: 72:     CCP1CONbits.DC1B0 = 0;
 14023  00511E  98BD               	bcf	189,4,c	;volatile
 14024                           
 14025                           ; BSR set to: 0
 14026  005120  0012               	return		;funcret
 14027  005122                     __end_of_PWM_Stop_1:
 14028                           	callstack 0
 14029                           
 14030 ;; *************** function _PWM_1 *****************
 14031 ;; Defined at:
 14032 ;;		line 38 in file "Pwm_Hard.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;  duty            1    wreg     unsigned char 
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;  duty            1   93[BANK0 ] unsigned char 
 14037 ;;  aux             4   89[BANK0 ] float 
 14038 ;;  pulso_alto      4   85[BANK0 ] float 
 14039 ;;  per             4   81[BANK0 ] float 
 14040 ;;  pwm             2   94[BANK0 ] unsigned int 
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      void 
 14043 ;; Registers used:
 14044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : 3E/1
 14047 ;;		On exit  : 3F/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0
 14051 ;;      Locals:         0      15       0       0       0       0       0       0       0
 14052 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14053 ;;      Totals:         0      17       0       0       0       0       0       0       0
 14054 ;;Total ram usage:       17 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:    8
 14057 ;; This function calls:
 14058 ;;		___fldiv
 14059 ;;		___flmul
 14060 ;;		___fltol
 14061 ;;		___xxtofl
 14062 ;; This function is called by:
 14063 ;;		_Set_Pwm
 14064 ;;		_PWM_Stop_1
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text21
 14069  0031C0                     __ptext21:
 14070                           	callstack 0
 14071  0031C0                     _PWM_1:
 14072                           	callstack 20
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;incstack = 0
 14076                           ;PWM_1@duty stored from wreg
 14077  0031C0  0100               	movlb	0	; () banked
 14078  0031C2  6FBD               	movwf	PWM_1@duty& (0+255),b
 14079  0031C4  0E00               	movlw	0
 14080  0031C6  0100               	movlb	0	; () banked
 14081  0031C8  6FB5               	movwf	PWM_1@pulso_alto& (0+255),b
 14082  0031CA  0E00               	movlw	0
 14083  0031CC  6FB6               	movwf	(PWM_1@pulso_alto+1)& (0+255),b
 14084  0031CE  0E00               	movlw	0
 14085  0031D0  6FB7               	movwf	(PWM_1@pulso_alto+2)& (0+255),b
 14086  0031D2  0E00               	movlw	0
 14087  0031D4  6FB8               	movwf	(PWM_1@pulso_alto+3)& (0+255),b
 14088  0031D6  0E00               	movlw	0
 14089  0031D8  6FB9               	movwf	PWM_1@aux& (0+255),b
 14090  0031DA  0E00               	movlw	0
 14091  0031DC  6FBA               	movwf	(PWM_1@aux+1)& (0+255),b
 14092  0031DE  0E00               	movlw	0
 14093  0031E0  6FBB               	movwf	(PWM_1@aux+2)& (0+255),b
 14094  0031E2  0E00               	movlw	0
 14095  0031E4  6FBC               	movwf	(PWM_1@aux+3)& (0+255),b
 14096                           
 14097                           ;Pwm_Hard.c: 41:     unsigned int pwm=0;
 14098  0031E6  0E00               	movlw	0
 14099  0031E8  6FBF               	movwf	(PWM_1@pwm+1)& (0+255),b
 14100  0031EA  0E00               	movlw	0
 14101  0031EC  6FBE               	movwf	PWM_1@pwm& (0+255),b
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;Pwm_Hard.c: 43:     TMR2ON = 1;
 14105  0031EE  84CA               	bsf	4042,2,c	;volatile
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;Pwm_Hard.c: 45:     per = 1.0 / freq;
 14109  0031F0  0E00               	movlw	0
 14110  0031F2  6F8C               	movwf	___fldiv@b& (0+255),b
 14111  0031F4  0E00               	movlw	0
 14112  0031F6  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 14113  0031F8  0E80               	movlw	128
 14114  0031FA  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 14115  0031FC  0E3F               	movlw	63
 14116  0031FE  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 14117  003200  C050  F065         	movff	_freq,___xxtofl@val
 14118  003204  C051  F066         	movff	_freq+1,___xxtofl@val+1
 14119  003208  6B67               	clrf	(___xxtofl@val+2)& (0+255),b
 14120  00320A  6B68               	clrf	(___xxtofl@val+3)& (0+255),b
 14121  00320C  0E00               	movlw	0
 14122  00320E  EC3C  F01A         	call	___xxtofl
 14123  003212  C065  F090         	movff	?___xxtofl,___fldiv@a
 14124  003216  C066  F091         	movff	?___xxtofl+1,___fldiv@a+1
 14125  00321A  C067  F092         	movff	?___xxtofl+2,___fldiv@a+2
 14126  00321E  C068  F093         	movff	?___xxtofl+3,___fldiv@a+3
 14127  003222  EC56  F014         	call	___fldiv	;wreg free
 14128  003226  C08C  F0B1         	movff	?___fldiv,PWM_1@per
 14129  00322A  C08D  F0B2         	movff	?___fldiv+1,PWM_1@per+1
 14130  00322E  C08E  F0B3         	movff	?___fldiv+2,PWM_1@per+2
 14131  003232  C08F  F0B4         	movff	?___fldiv+3,PWM_1@per+3
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;Pwm_Hard.c: 46:     if(duty == 100) duty = 95;
 14135  003236  0E64               	movlw	100
 14136  003238  19BD               	xorwf	PWM_1@duty& (0+255),w,b
 14137  00323A  A4D8               	btfss	status,2,c
 14138  00323C  D002               	goto	l11146
 14139                           
 14140                           ; BSR set to: 0
 14141  00323E  0E5F               	movlw	95
 14142  003240  6FBD               	movwf	PWM_1@duty& (0+255),b
 14143  003242                     l11146:
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;Pwm_Hard.c: 47:     pulso_alto = (duty * per) / 100.0;
 14147  003242  C0B1  F077         	movff	PWM_1@per,___flmul@a
 14148  003246  C0B2  F078         	movff	PWM_1@per+1,___flmul@a+1
 14149  00324A  C0B3  F079         	movff	PWM_1@per+2,___flmul@a+2
 14150  00324E  C0B4  F07A         	movff	PWM_1@per+3,___flmul@a+3
 14151  003252  51BD               	movf	PWM_1@duty& (0+255),w,b
 14152  003254  6F65               	movwf	___xxtofl@val& (0+255),b
 14153  003256  6B66               	clrf	(___xxtofl@val+1)& (0+255),b
 14154  003258  6B67               	clrf	(___xxtofl@val+2)& (0+255),b
 14155  00325A  6B68               	clrf	(___xxtofl@val+3)& (0+255),b
 14156  00325C  0E01               	movlw	1
 14157  00325E  EC3C  F01A         	call	___xxtofl
 14158  003262  C065  F073         	movff	?___xxtofl,___flmul@b
 14159  003266  C066  F074         	movff	?___xxtofl+1,___flmul@b+1
 14160  00326A  C067  F075         	movff	?___xxtofl+2,___flmul@b+2
 14161  00326E  C068  F076         	movff	?___xxtofl+3,___flmul@b+3
 14162  003272  ECED  F00F         	call	___flmul	;wreg free
 14163  003276  C073  F08C         	movff	?___flmul,___fldiv@b
 14164  00327A  C074  F08D         	movff	?___flmul+1,___fldiv@b+1
 14165  00327E  C075  F08E         	movff	?___flmul+2,___fldiv@b+2
 14166  003282  C076  F08F         	movff	?___flmul+3,___fldiv@b+3
 14167  003286  0E00               	movlw	0
 14168  003288  6F90               	movwf	___fldiv@a& (0+255),b
 14169  00328A  0E00               	movlw	0
 14170  00328C  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 14171  00328E  0EC8               	movlw	200
 14172  003290  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 14173  003292  0E42               	movlw	66
 14174  003294  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 14175  003296  EC56  F014         	call	___fldiv	;wreg free
 14176  00329A  C08C  F0B5         	movff	?___fldiv,PWM_1@pulso_alto
 14177  00329E  C08D  F0B6         	movff	?___fldiv+1,PWM_1@pulso_alto+1
 14178  0032A2  C08E  F0B7         	movff	?___fldiv+2,PWM_1@pulso_alto+2
 14179  0032A6  C08F  F0B8         	movff	?___fldiv+3,PWM_1@pulso_alto+3
 14180                           
 14181                           ; BSR set to: 0
 14182                           ;Pwm_Hard.c: 51:     aux = ((pulso_alto) / ((1.0/20000000) * 16));
 14183  0032AA  C0B5  F08C         	movff	PWM_1@pulso_alto,___fldiv@b
 14184  0032AE  C0B6  F08D         	movff	PWM_1@pulso_alto+1,___fldiv@b+1
 14185  0032B2  C0B7  F08E         	movff	PWM_1@pulso_alto+2,___fldiv@b+2
 14186  0032B6  C0B8  F08F         	movff	PWM_1@pulso_alto+3,___fldiv@b+3
 14187  0032BA  0E95               	movlw	149
 14188  0032BC  6F90               	movwf	___fldiv@a& (0+255),b
 14189  0032BE  0EBF               	movlw	191
 14190  0032C0  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 14191  0032C2  0E56               	movlw	86
 14192  0032C4  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 14193  0032C6  0E35               	movlw	53
 14194  0032C8  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 14195  0032CA  EC56  F014         	call	___fldiv	;wreg free
 14196  0032CE  C08C  F0B9         	movff	?___fldiv,PWM_1@aux
 14197  0032D2  C08D  F0BA         	movff	?___fldiv+1,PWM_1@aux+1
 14198  0032D6  C08E  F0BB         	movff	?___fldiv+2,PWM_1@aux+2
 14199  0032DA  C08F  F0BC         	movff	?___fldiv+3,PWM_1@aux+3
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;Pwm_Hard.c: 52:     pwm = (int)aux;
 14203  0032DE  C0B9  F0A5         	movff	PWM_1@aux,___fltol@f1
 14204  0032E2  C0BA  F0A6         	movff	PWM_1@aux+1,___fltol@f1+1
 14205  0032E6  C0BB  F0A7         	movff	PWM_1@aux+2,___fltol@f1+2
 14206  0032EA  C0BC  F0A8         	movff	PWM_1@aux+3,___fltol@f1+3
 14207  0032EE  ECDB  F021         	call	___fltol	;wreg free
 14208  0032F2  C0A5  F0BE         	movff	?___fltol,PWM_1@pwm
 14209  0032F6  C0A6  F0BF         	movff	?___fltol+1,PWM_1@pwm+1
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;Pwm_Hard.c: 54:     CCP1CONbits.DC1B = 0b00;
 14213  0032FA  0ECF               	movlw	-49
 14214  0032FC  16BD               	andwf	189,f,c	;volatile
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;Pwm_Hard.c: 56:     CCP1CONbits.DC1B = (pwm & 0x03);
 14218  0032FE  C0BE  F0AF         	movff	PWM_1@pwm,??_PWM_1
 14219  003302  0E03               	movlw	3
 14220  003304  17AF               	andwf	??_PWM_1& (0+255),f,b
 14221  003306  3BAF               	swapf	??_PWM_1& (0+255),f,b
 14222  003308  50BD               	movf	189,w,c	;volatile
 14223  00330A  19AF               	xorwf	??_PWM_1& (0+255),w,b
 14224  00330C  0BCF               	andlw	-49
 14225  00330E  19AF               	xorwf	??_PWM_1& (0+255),w,b
 14226  003310  6EBD               	movwf	189,c	;volatile
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;Pwm_Hard.c: 58:     CCPR1L &= 0x00;
 14230  003312  0E00               	movlw	0
 14231  003314  6EBE               	movwf	190,c	;volatile
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;Pwm_Hard.c: 59:     CCPR1L |= (pwm & 0x3FC) >> 2;
 14235  003316  C0BE  F0AF         	movff	PWM_1@pwm,??_PWM_1
 14236  00331A  C0BF  F0B0         	movff	PWM_1@pwm+1,??_PWM_1+1
 14237  00331E  90D8               	bcf	status,0,c
 14238  003320  33B0               	rrcf	(??_PWM_1+1)& (0+255),f,b
 14239  003322  33AF               	rrcf	??_PWM_1& (0+255),f,b
 14240  003324  90D8               	bcf	status,0,c
 14241  003326  33B0               	rrcf	(??_PWM_1+1)& (0+255),f,b
 14242  003328  33AF               	rrcf	??_PWM_1& (0+255),f,b
 14243  00332A  51AF               	movf	??_PWM_1& (0+255),w,b
 14244  00332C  12BE               	iorwf	190,f,c	;volatile
 14245                           
 14246                           ; BSR set to: 0
 14247  00332E  0012               	return		;funcret
 14248  003330                     __end_of_PWM_1:
 14249                           	callstack 0
 14250                           
 14251 ;; *************** function _Send_Temp *****************
 14252 ;; Defined at:
 14253 ;;		line 277 in file "Main.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;		None
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;  buffer         10  144[BANK0 ] unsigned char [10]
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  1    wreg      void 
 14260 ;; Registers used:
 14261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 3E/1
 14264 ;;		On exit  : 3F/1
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14267 ;;      Params:         0       0       0       0       0       0       0       0       0
 14268 ;;      Locals:         0      10       0       0       0       0       0       0       0
 14269 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14270 ;;      Totals:         0      11       0       0       0       0       0       0       0
 14271 ;;Total ram usage:       11 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:   15
 14274 ;; This function calls:
 14275 ;;		_UART_array
 14276 ;;		_UART_arrayln
 14277 ;;		_sprintf
 14278 ;; This function is called by:
 14279 ;;		_main
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           	psect	text22
 14284  0047FC                     __ptext22:
 14285                           	callstack 0
 14286  0047FC                     _Send_Temp:
 14287                           	callstack 15
 14288                           
 14289                           ;Main.c: 279:     char buffer[10];;Main.c: 281:     if(Most_Temp && vis)
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;incstack = 0
 14293  0047FC  0101               	movlb	1	; () banked
 14294  0047FE  512E               	movf	_Most_Temp& (0+255),w,b
 14295  004800  B4D8               	btfsc	status,2,c
 14296  004802  0012               	return	
 14297                           
 14298                           ; BSR set to: 1
 14299  004804  5130               	movf	_vis& (0+255),w,b
 14300  004806  B4D8               	btfsc	status,2,c
 14301  004808  0012               	return	
 14302                           
 14303                           ; BSR set to: 1
 14304                           ;Main.c: 282:     {;Main.c: 283:         sprintf(buffer,"%3.2f C",temp);
 14305  00480A  0EF0               	movlw	low Send_Temp@buffer
 14306  00480C  6FBE               	movwf	sprintf@s& (0+255),b
 14307  00480E  6BBF               	clrf	(sprintf@s+1)& (0+255),b
 14308  004810  0ECA               	movlw	low STR_25
 14309  004812  6FC0               	movwf	sprintf@fmt& (0+255),b
 14310  004814  0E7F               	movlw	high STR_25
 14311  004816  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
 14312  004818  C11D  F1C2         	movff	_temp,?_sprintf+4
 14313  00481C  C11E  F1C3         	movff	_temp+1,?_sprintf+5
 14314  004820  C11F  F1C4         	movff	_temp+2,?_sprintf+6
 14315  004824  C120  F1C5         	movff	_temp+3,?_sprintf+7
 14316  004828  ECBE  F025         	call	_sprintf	;wreg free
 14317                           
 14318                           ; BSR set to: 1
 14319                           ;Main.c: 284:         UART_array("      "),UART_arrayln(buffer);
 14320  00482C  0ED2               	movlw	low STR_26
 14321  00482E  0100               	movlb	0	; () banked
 14322  004830  6F65               	movwf	UART_array@cadena& (0+255),b
 14323  004832  0E7F               	movlw	high STR_26
 14324  004834  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 14325  004836  EC65  F025         	call	_UART_array	;wreg free
 14326  00483A  0EF0               	movlw	low Send_Temp@buffer
 14327  00483C  0100               	movlb	0	; () banked
 14328  00483E  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 14329  004840  6B68               	clrf	(UART_arrayln@cadena+1)& (0+255),b
 14330  004842  ECC1  F024         	call	_UART_arrayln	;wreg free
 14331                           
 14332                           ;Main.c: 285:         UART_arrayln("");
 14333  004846  0EFB               	movlw	low (STR_64+1)
 14334  004848  0100               	movlb	0	; () banked
 14335  00484A  6F67               	movwf	UART_arrayln@cadena& (0+255),b
 14336  00484C  0E7F               	movlw	high (STR_64+1)
 14337  00484E  6F68               	movwf	(UART_arrayln@cadena+1)& (0+255),b
 14338  004850  ECC1  F024         	call	_UART_arrayln	;wreg free
 14339                           
 14340                           ;Main.c: 286:         UART_array("cmd < ");
 14341  004854  0ED9               	movlw	low STR_18
 14342  004856  0100               	movlb	0	; () banked
 14343  004858  6F65               	movwf	UART_array@cadena& (0+255),b
 14344  00485A  0E7F               	movlw	high STR_18
 14345  00485C  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 14346  00485E  EC65  F025         	call	_UART_array	;wreg free
 14347                           
 14348                           ;Main.c: 287:         _delay((unsigned long)((10)*(20000000/4000.0)));
 14349  004862  0E41               	movlw	65
 14350  004864  0100               	movlb	0	; () banked
 14351  004866  6FEF               	movwf	??_Send_Temp& (0+255),b
 14352  004868  0EEE               	movlw	238
 14353  00486A                     u16457:
 14354  00486A  2EE8               	decfsz	wreg,f,c
 14355  00486C  D7FE               	bra	u16457
 14356  00486E  2FEF               	decfsz	??_Send_Temp& (0+255),f,b
 14357  004870  D7FC               	bra	u16457
 14358  004872  F000               	nop	
 14359                           
 14360                           ;Main.c: 288:         vis = 0;
 14361  004874  0E00               	movlw	0
 14362  004876  0101               	movlb	1	; () banked
 14363  004878  6F30               	movwf	_vis& (0+255),b
 14364                           
 14365                           ; BSR set to: 1
 14366                           ;Main.c: 289:         Most_Temp = 0;
 14367  00487A  0E00               	movlw	0
 14368  00487C  6F2E               	movwf	_Most_Temp& (0+255),b
 14369                           
 14370                           ; BSR set to: 1
 14371  00487E  0012               	return		;funcret
 14372  004880                     __end_of_Send_Temp:
 14373                           	callstack 0
 14374                           
 14375 ;; *************** function _sprintf *****************
 14376 ;; Defined at:
 14377 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\nf_sprintf.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  s               2   60[BANK1 ] PTR unsigned char 
 14380 ;;		 -> Send_Temp@buffer(10), Set_Val@buffer(32), 
 14381 ;;  fmt             2   62[BANK1 ] PTR const unsigned char 
 14382 ;;		 -> STR_25(8), STR_24(31), STR_20(22), 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;  f               6  137[BANK0 ] struct _IO_FILE
 14385 ;;  ap              2  135[BANK0 ] PTR void [1]
 14386 ;;		 -> ?_sprintf(2), 
 14387 ;;  ret             2    0        int 
 14388 ;; Return value:  Size  Location     Type
 14389 ;;                  2   60[BANK1 ] int 
 14390 ;; Registers used:
 14391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14392 ;; Tracked objects:
 14393 ;;		On entry : 3F/1
 14394 ;;		On exit  : 3F/1
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14397 ;;      Params:         0       0       8       0       0       0       0       0       0
 14398 ;;      Locals:         0      10       0       0       0       0       0       0       0
 14399 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14400 ;;      Totals:         0      10       8       0       0       0       0       0       0
 14401 ;;Total ram usage:       18 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; Hardware stack levels required when called:   14
 14404 ;; This function calls:
 14405 ;;		_vfprintf
 14406 ;; This function is called by:
 14407 ;;		_Set_Val
 14408 ;;		_Send_Temp
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412                           	psect	text23
 14413  004B7C                     __ptext23:
 14414                           	callstack 0
 14415  004B7C                     _sprintf:
 14416                           	callstack 15
 14417                           
 14418                           ; BSR set to: 1
 14419                           
 14420                           ; BSR set to: 1
 14421                           ;incstack = 0
 14422  004B7C  0EC2               	movlw	low (?_sprintf+4)
 14423  004B7E  0100               	movlb	0	; () banked
 14424  004B80  6FE7               	movwf	sprintf@ap& (0+255),b
 14425  004B82  0E01               	movlw	high (?_sprintf+4)
 14426  004B84  6FE8               	movwf	(sprintf@ap+1)& (0+255),b
 14427  004B86  C1BE  F0E9         	movff	sprintf@s,sprintf@f
 14428  004B8A  C1BF  F0EA         	movff	sprintf@s+1,sprintf@f+1
 14429                           
 14430                           ; BSR set to: 0
 14431  004B8E  0E00               	movlw	0
 14432  004B90  6FEC               	movwf	(sprintf@f+3)& (0+255),b
 14433  004B92  0E00               	movlw	0
 14434  004B94  6FEB               	movwf	(sprintf@f+2)& (0+255),b
 14435                           
 14436                           ; BSR set to: 0
 14437  004B96  0E00               	movlw	0
 14438  004B98  6FEE               	movwf	(sprintf@f+5)& (0+255),b
 14439  004B9A  0E00               	movlw	0
 14440  004B9C  6FED               	movwf	(sprintf@f+4)& (0+255),b
 14441                           
 14442                           ; BSR set to: 0
 14443  004B9E  0EE9               	movlw	low sprintf@f
 14444  004BA0  0101               	movlb	1	; () banked
 14445  004BA2  6FBA               	movwf	vfprintf@fp& (0+255),b
 14446  004BA4  C1C0  F1BB         	movff	sprintf@fmt,vfprintf@fmt
 14447  004BA8  C1C1  F1BC         	movff	sprintf@fmt+1,vfprintf@fmt+1
 14448  004BAC  0EE7               	movlw	low sprintf@ap
 14449  004BAE  6FBD               	movwf	vfprintf@ap& (0+255),b
 14450  004BB0  ECE7  F025         	call	_vfprintf	;wreg free
 14451                           
 14452                           ; BSR set to: 1
 14453  004BB4  0100               	movlb	0	; () banked
 14454  004BB6  51EB               	movf	(sprintf@f+2)& (0+255),w,b
 14455  004BB8  0101               	movlb	1	; () banked
 14456  004BBA  25BE               	addwf	sprintf@s& (0+255),w,b
 14457  004BBC  6ED9               	movwf	fsr2l,c
 14458  004BBE  0100               	movlb	0	; () banked
 14459  004BC0  51EC               	movf	(sprintf@f+3)& (0+255),w,b
 14460  004BC2  0101               	movlb	1	; () banked
 14461  004BC4  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
 14462  004BC6  6EDA               	movwf	fsr2h,c
 14463  004BC8  0E00               	movlw	0
 14464  004BCA  6EDF               	movwf	indf2,c
 14465                           
 14466                           ; BSR set to: 1
 14467  004BCC  0012               	return		;funcret
 14468  004BCE                     __end_of_sprintf:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function _vfprintf *****************
 14472 ;; Defined at:
 14473 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  fp              1   56[BANK1 ] PTR struct _IO_FILE
 14476 ;;		 -> sprintf@f(6), 
 14477 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
 14478 ;;		 -> STR_25(8), STR_24(31), STR_20(22), 
 14479 ;;  ap              1   59[BANK1 ] PTR PTR void 
 14480 ;;		 -> sprintf@ap(2), 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
 14483 ;;		 -> STR_25(8), STR_24(31), STR_20(22), 
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  2   56[BANK1 ] int 
 14486 ;; Registers used:
 14487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14488 ;; Tracked objects:
 14489 ;;		On entry : 3F/1
 14490 ;;		On exit  : 3F/1
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14493 ;;      Params:         0       0       4       0       0       0       0       0       0
 14494 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14496 ;;      Totals:         0       2       4       0       0       0       0       0       0
 14497 ;;Total ram usage:        6 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:   13
 14500 ;; This function calls:
 14501 ;;		_vfpfcnvrt
 14502 ;; This function is called by:
 14503 ;;		_sprintf
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text24
 14508  004BCE                     __ptext24:
 14509                           	callstack 0
 14510  004BCE                     _vfprintf:
 14511                           	callstack 15
 14512                           
 14513                           ; BSR set to: 1
 14514                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
 14515                           
 14516                           ; BSR set to: 1
 14517                           ;incstack = 0
 14518  004BCE  C1BB  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
 14519  004BD2  C1BC  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 14520                           
 14521                           ; BSR set to: 1
 14522                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
 14523  004BD6  0E00               	movlw	0
 14524  004BD8  6F22               	movwf	(_nout+1)& (0+255),b
 14525  004BDA  0E00               	movlw	0
 14526  004BDC  6F21               	movwf	_nout& (0+255),b
 14527                           
 14528                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
 14529  004BDE  D010               	goto	l11206
 14530  004BE0                     l11204:
 14531                           
 14532                           ; BSR set to: 1
 14533                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 14534  004BE0  C1BA  F0C4         	movff	vfprintf@fp,vfpfcnvrt@fp
 14535  004BE4  0EE3               	movlw	low vfprintf@cfmt
 14536  004BE6  0100               	movlb	0	; () banked
 14537  004BE8  6FC5               	movwf	vfpfcnvrt@fmt& (0+255),b
 14538  004BEA  C1BD  F0C6         	movff	vfprintf@ap,vfpfcnvrt@ap
 14539  004BEE  EC36  F00B         	call	_vfpfcnvrt	;wreg free
 14540  004BF2  51C4               	movf	?_vfpfcnvrt& (0+255),w,b
 14541  004BF4  0101               	movlb	1	; () banked
 14542  004BF6  2721               	addwf	_nout& (0+255),f,b
 14543  004BF8  0100               	movlb	0	; () banked
 14544  004BFA  51C5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 14545  004BFC  0101               	movlb	1	; () banked
 14546  004BFE  2322               	addwfc	(_nout+1)& (0+255),f,b
 14547  004C00                     l11206:
 14548                           
 14549                           ; BSR set to: 1
 14550                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
 14551  004C00  C0E3  FFF6         	movff	vfprintf@cfmt,tblptrl
 14552  004C04  C0E4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 14553  004C08                     	if	0	;tblptru may be non-zero
 14554  004C08                     	endif
 14555  004C08                     	if	0	;tblptru may be non-zero
 14556  004C08                     	endif
 14557  004C08  0008               	tblrd		*
 14558  004C0A  50F5               	movf	tablat,w,c
 14559  004C0C  0900               	iorlw	0
 14560  004C0E  A4D8               	btfss	status,2,c
 14561  004C10  D7E7               	goto	l11204
 14562                           
 14563                           ; BSR set to: 1
 14564                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
 14565  004C12  C121  F1BA         	movff	_nout,?_vfprintf
 14566  004C16  C122  F1BB         	movff	_nout+1,?_vfprintf+1
 14567                           
 14568                           ; BSR set to: 1
 14569  004C1A  0012               	return		;funcret
 14570  004C1C                     __end_of_vfprintf:
 14571                           	callstack 0
 14572                           
 14573 ;; *************** function _vfpfcnvrt *****************
 14574 ;; Defined at:
 14575 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;  fp              1  100[BANK0 ] PTR struct _IO_FILE
 14578 ;;		 -> sprintf@f(6), 
 14579 ;;  fmt             1  101[BANK0 ] PTR PTR unsigned char 
 14580 ;;		 -> vfprintf@cfmt(2), 
 14581 ;;  ap              1  102[BANK0 ] PTR PTR void 
 14582 ;;		 -> sprintf@ap(2), 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;  ll              8  107[BANK0 ] long long 
 14585 ;;  llu             8    0        unsigned long long 
 14586 ;;  f               4  124[BANK0 ] unsigned long long 
 14587 ;;  ct              3  128[BANK0 ] unsigned char [3]
 14588 ;;  vp              3    0        PTR void 
 14589 ;;  cp              3    0        PTR unsigned char 
 14590 ;;  done            2  115[BANK0 ] int 
 14591 ;;  i               2    0        int 
 14592 ;;  c               1  123[BANK0 ] unsigned char 
 14593 ;; Return value:  Size  Location     Type
 14594 ;;                  2  100[BANK0 ] int 
 14595 ;; Registers used:
 14596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14597 ;; Tracked objects:
 14598 ;;		On entry : 3F/0
 14599 ;;		On exit  : 3F/0
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14602 ;;      Params:         0       3       0       0       0       0       0       0       0
 14603 ;;      Locals:         0      24       0       0       0       0       0       0       0
 14604 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14605 ;;      Totals:         0      31       0       0       0       0       0       0       0
 14606 ;;Total ram usage:       31 bytes
 14607 ;; Hardware stack levels used:    1
 14608 ;; Hardware stack levels required when called:   12
 14609 ;; This function calls:
 14610 ;;		_atoi
 14611 ;;		_dtoa
 14612 ;;		_efgtoa
 14613 ;;		_fputc
 14614 ;;		_isdigit
 14615 ;;		_isupper
 14616 ;;		_strncmp
 14617 ;;		_tolower
 14618 ;; This function is called by:
 14619 ;;		_vfprintf
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           	psect	text25
 14624  00166C                     __ptext25:
 14625                           	callstack 0
 14626  00166C                     _vfpfcnvrt:
 14627                           	callstack 15
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Microchip\xc8\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files (x86)\Microchip\xc8\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files (x86)\Microchip\xc
      +                          8\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
 14631                           
 14632                           ; BSR set to: 1
 14633                           ;incstack = 0
 14634  00166C  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14635  00166E  6ED9               	movwf	fsr2l,c
 14636  001670  6ADA               	clrf	fsr2h,c
 14637  001672  CFDE FFF6          	movff	postinc2,tblptrl
 14638  001676  CFDD FFF7          	movff	postdec2,tblptrh
 14639  00167A                     	if	0	;tblptru may be non-zero
 14640  00167A                     	endif
 14641  00167A                     	if	0	;tblptru may be non-zero
 14642  00167A                     	endif
 14643  00167A  0008               	tblrd		*
 14644  00167C  50F5               	movf	tablat,w,c
 14645  00167E  0A25               	xorlw	37
 14646  001680  A4D8               	btfss	status,2,c
 14647  001682  D291               	goto	l11114
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
 14651  001684  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14652  001686  6ED9               	movwf	fsr2l,c
 14653  001688  6ADA               	clrf	fsr2h,c
 14654  00168A  2ADE               	incf	postinc2,f,c
 14655  00168C  0E00               	movlw	0
 14656  00168E  22DD               	addwfc	postdec2,f,c
 14657                           
 14658                           ; BSR set to: 0
 14659                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
 14660  001690  0E00               	movlw	0
 14661  001692  0101               	movlb	1	; () banked
 14662  001694  6F24               	movwf	(_width+1)& (0+255),b
 14663  001696  0E00               	movlw	0
 14664  001698  6F23               	movwf	_width& (0+255),b
 14665  00169A  C123  F127         	movff	_width,_flags
 14666  00169E  C124  F128         	movff	_width+1,_flags+1
 14667                           
 14668                           ; BSR set to: 1
 14669                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
 14670  0016A2  6925               	setf	_prec& (0+255),b
 14671  0016A4  6926               	setf	(_prec+1)& (0+255),b
 14672                           
 14673                           ; BSR set to: 1
 14674                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
 14675  0016A6  0E00               	movlw	0
 14676  0016A8  0100               	movlb	0	; () banked
 14677  0016AA  6FD4               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 14678  0016AC  0E00               	movlw	0
 14679  0016AE  D019               	goto	L1
 14680  0016B0                     l10982:
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
 14684  0016B0  0101               	movlb	1	; () banked
 14685  0016B2  8127               	bsf	_flags& (0+255),0,b
 14686  0016B4                     l10984:
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
 14690  0016B4  0100               	movlb	0	; () banked
 14691  0016B6  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14692  0016B8  6ED9               	movwf	fsr2l,c
 14693  0016BA  6ADA               	clrf	fsr2h,c
 14694  0016BC  2ADE               	incf	postinc2,f,c
 14695  0016BE  0E00               	movlw	0
 14696  0016C0  22DD               	addwfc	postdec2,f,c
 14697                           
 14698                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
 14699  0016C2  D031               	goto	l11008
 14700  0016C4                     l10986:
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
 14704  0016C4  0101               	movlb	1	; () banked
 14705  0016C6  8327               	bsf	_flags& (0+255),1,b
 14706  0016C8  D7F5               	goto	l10984
 14707  0016CA                     l10990:
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
 14711  0016CA  0101               	movlb	1	; () banked
 14712  0016CC  8527               	bsf	_flags& (0+255),2,b
 14713  0016CE  D7F2               	goto	l10984
 14714  0016D0                     l10994:
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
 14718  0016D0  0101               	movlb	1	; () banked
 14719  0016D2  8727               	bsf	_flags& (0+255),3,b
 14720  0016D4  D7EF               	goto	l10984
 14721  0016D6                     l10998:
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
 14725  0016D6  0101               	movlb	1	; () banked
 14726  0016D8  8927               	bsf	_flags& (0+255),4,b
 14727  0016DA  D7EC               	goto	l10984
 14728  0016DC                     l11002:
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
 14732  0016DC  0E00               	movlw	0
 14733  0016DE  6FD4               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 14734  0016E0  0E01               	movlw	1
 14735  0016E2                     L1:
 14736  0016E2  6FD3               	movwf	vfpfcnvrt@done& (0+255),b
 14737                           
 14738                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
 14739  0016E4  D020               	goto	l11008
 14740  0016E6                     l11006:
 14741                           
 14742                           ; BSR set to: 0
 14743  0016E6  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14744  0016E8  6ED9               	movwf	fsr2l,c
 14745  0016EA  6ADA               	clrf	fsr2h,c
 14746  0016EC  CFDE FFF6          	movff	postinc2,tblptrl
 14747  0016F0  CFDD FFF7          	movff	postdec2,tblptrh
 14748  0016F4                     	if	0	;tblptru may be non-zero
 14749  0016F4                     	endif
 14750  0016F4                     	if	0	;tblptru may be non-zero
 14751  0016F4                     	endif
 14752  0016F4  0008               	tblrd		*
 14753  0016F6  50F5               	movf	tablat,w,c
 14754  0016F8  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
 14755  0016FA  6BC8               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 14756                           
 14757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14758                           ; Switch size 1, requested type "simple"
 14759                           ; Number of cases is 1, Range of values is 0 to 0
 14760                           ; switch strategies available:
 14761                           ; Name         Instructions Cycles
 14762                           ; simple_byte            4     3 (average)
 14763                           ;	Chosen strategy is simple_byte
 14764  0016FC  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 14765  0016FE  0A00               	xorlw	0	; case 0
 14766  001700  A4D8               	btfss	status,2,c
 14767  001702  D7EC               	goto	l11002
 14768                           
 14769                           ; BSR set to: 0
 14770                           ; Switch size 1, requested type "simple"
 14771                           ; Number of cases is 5, Range of values is 32 to 48
 14772                           ; switch strategies available:
 14773                           ; Name         Instructions Cycles
 14774                           ; simple_byte           16     9 (average)
 14775                           ;	Chosen strategy is simple_byte
 14776  001704  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
 14777  001706  0A20               	xorlw	32	; case 32
 14778  001708  B4D8               	btfsc	status,2,c
 14779  00170A  D7E2               	goto	l10994
 14780  00170C  0A03               	xorlw	3	; case 35
 14781  00170E  B4D8               	btfsc	status,2,c
 14782  001710  D7E2               	goto	l10998
 14783  001712  0A08               	xorlw	8	; case 43
 14784  001714  B4D8               	btfsc	status,2,c
 14785  001716  D7D9               	goto	l10990
 14786  001718  0A06               	xorlw	6	; case 45
 14787  00171A  B4D8               	btfsc	status,2,c
 14788  00171C  D7C9               	goto	l10982
 14789  00171E  0A1D               	xorlw	29	; case 48
 14790  001720  B4D8               	btfsc	status,2,c
 14791  001722  D7D0               	goto	l10986
 14792  001724  D7DB               	goto	l11002
 14793  001726                     l11008:
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
 14797  001726  51D3               	movf	vfpfcnvrt@done& (0+255),w,b
 14798  001728  11D4               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 14799  00172A  B4D8               	btfsc	status,2,c
 14800  00172C  D7DC               	goto	l11006
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
 14804  00172E  0101               	movlb	1	; () banked
 14805  001730  B127               	btfsc	_flags& (0+255),0,b
 14806                           
 14807                           ; BSR set to: 1
 14808                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
 14809  001732  9327               	bcf	_flags& (0+255),1,b
 14810                           
 14811                           ; BSR set to: 1
 14812                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
 14813  001734  0100               	movlb	0	; () banked
 14814  001736  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14815  001738  6ED9               	movwf	fsr2l,c
 14816  00173A  6ADA               	clrf	fsr2h,c
 14817  00173C  CFDE FFF6          	movff	postinc2,tblptrl
 14818  001740  CFDD FFF7          	movff	postdec2,tblptrh
 14819  001744                     	if	0	;tblptru may be non-zero
 14820  001744                     	endif
 14821  001744                     	if	0	;tblptru may be non-zero
 14822  001744                     	endif
 14823  001744  0008               	tblrd		*
 14824  001746  50F5               	movf	tablat,w,c
 14825  001748  0A2A               	xorlw	42
 14826  00174A  A4D8               	btfss	status,2,c
 14827  00174C  D022               	goto	l11020
 14828                           
 14829                           ; BSR set to: 0
 14830                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
 14831  00174E  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14832  001750  6ED9               	movwf	fsr2l,c
 14833  001752  6ADA               	clrf	fsr2h,c
 14834  001754  2ADE               	incf	postinc2,f,c
 14835  001756  0E00               	movlw	0
 14836  001758  22DD               	addwfc	postdec2,f,c
 14837                           
 14838                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 14839  00175A  51C6               	movf	vfpfcnvrt@ap& (0+255),w,b
 14840  00175C  6ED9               	movwf	fsr2l,c
 14841  00175E  6ADA               	clrf	fsr2h,c
 14842  001760  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
 14843  001764  0E02               	movlw	2
 14844  001766  26DE               	addwf	postinc2,f,c
 14845  001768  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
 14846  00176C  0E00               	movlw	0
 14847  00176E  22DD               	addwfc	postdec2,f,c
 14848  001770  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14849  001774  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14850  001778  CFDE F123          	movff	postinc2,_width
 14851  00177C  CFDD F124          	movff	postdec2,_width+1
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
 14855  001780  0101               	movlb	1	; () banked
 14856  001782  AF24               	btfss	(_width+1)& (0+255),7,b
 14857  001784  D03C               	goto	u15150
 14858                           
 14859                           ; BSR set to: 1
 14860                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
 14861  001786  8127               	bsf	_flags& (0+255),0,b
 14862                           
 14863                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
 14864  001788  6D23               	negf	_width& (0+255),b
 14865  00178A  1F24               	comf	(_width+1)& (0+255),f,b
 14866  00178C  B0D8               	btfsc	status,0,c
 14867  00178E  2B24               	incf	(_width+1)& (0+255),f,b
 14868  001790  D036               	goto	u15150
 14869  001792                     l11020:
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
 14873  001792  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14874  001794  6ED9               	movwf	fsr2l,c
 14875  001796  6ADA               	clrf	fsr2h,c
 14876  001798  CFDE F06C          	movff	postinc2,atoi@s
 14877  00179C  CFDD F06D          	movff	postdec2,atoi@s+1
 14878  0017A0  ECDD  F01A         	call	_atoi	;wreg free
 14879  0017A4  C06C  F123         	movff	?_atoi,_width
 14880  0017A8  C06D  F124         	movff	?_atoi+1,_width+1
 14881                           
 14882                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14883  0017AC  D006               	goto	l11024
 14884  0017AE                     l11022:
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
 14888  0017AE  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14889  0017B0  6ED9               	movwf	fsr2l,c
 14890  0017B2  6ADA               	clrf	fsr2h,c
 14891  0017B4  2ADE               	incf	postinc2,f,c
 14892  0017B6  0E00               	movlw	0
 14893  0017B8  22DD               	addwfc	postdec2,f,c
 14894  0017BA                     l11024:
 14895                           
 14896                           ; BSR set to: 0
 14897  0017BA  0ED0               	movlw	208
 14898  0017BC  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
 14899  0017BE  0EFF               	movlw	255
 14900  0017C0  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 14901  0017C2  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14902  0017C4  6ED9               	movwf	fsr2l,c
 14903  0017C6  6ADA               	clrf	fsr2h,c
 14904  0017C8  CFDE FFF6          	movff	postinc2,tblptrl
 14905  0017CC  CFDD FFF7          	movff	postdec2,tblptrh
 14906  0017D0                     	if	0	;tblptru may be non-zero
 14907  0017D0                     	endif
 14908  0017D0                     	if	0	;tblptru may be non-zero
 14909  0017D0                     	endif
 14910  0017D0  0008               	tblrd		*
 14911  0017D2  50F5               	movf	tablat,w,c
 14912  0017D4  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 14913  0017D6  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 14914  0017D8  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
 14915  0017DA  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 14916  0017DC  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 14917  0017DE  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 14918  0017E0  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 14919  0017E2  E106               	bnz	u15130
 14920  0017E4  0E0A               	movlw	10
 14921  0017E6  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 14922  0017E8  B0D8               	btfsc	status,0,c
 14923  0017EA  D002               	goto	u15130
 14924  0017EC  0E01               	movlw	1
 14925  0017EE  D001               	goto	u15140
 14926  0017F0                     u15130:
 14927  0017F0  0E00               	movlw	0
 14928  0017F2                     u15140:
 14929  0017F2  6FD5               	movwf	_vfpfcnvrt$2017& (0+255),b
 14930  0017F4  6BD6               	clrf	(_vfpfcnvrt$2017+1)& (0+255),b
 14931                           
 14932                           ; BSR set to: 0
 14933  0017F6  51D5               	movf	_vfpfcnvrt$2017& (0+255),w,b
 14934  0017F8  11D6               	iorwf	(_vfpfcnvrt$2017+1)& (0+255),w,b
 14935  0017FA  A4D8               	btfss	status,2,c
 14936  0017FC  D7D8               	goto	l11022
 14937  0017FE                     u15150:
 14938                           
 14939                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
 14940  0017FE  0100               	movlb	0	; () banked
 14941  001800  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14942  001802  6ED9               	movwf	fsr2l,c
 14943  001804  6ADA               	clrf	fsr2h,c
 14944  001806  CFDE FFF6          	movff	postinc2,tblptrl
 14945  00180A  CFDD FFF7          	movff	postdec2,tblptrh
 14946  00180E                     	if	0	;tblptru may be non-zero
 14947  00180E                     	endif
 14948  00180E                     	if	0	;tblptru may be non-zero
 14949  00180E                     	endif
 14950  00180E  0008               	tblrd		*
 14951  001810  50F5               	movf	tablat,w,c
 14952  001812  0A2E               	xorlw	46
 14953  001814  A4D8               	btfss	status,2,c
 14954  001816  D068               	goto	u15200
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
 14958  001818  0E00               	movlw	0
 14959  00181A  0101               	movlb	1	; () banked
 14960  00181C  6F26               	movwf	(_prec+1)& (0+255),b
 14961  00181E  0E00               	movlw	0
 14962  001820  6F25               	movwf	_prec& (0+255),b
 14963                           
 14964                           ; BSR set to: 1
 14965                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
 14966  001822  0100               	movlb	0	; () banked
 14967  001824  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14968  001826  6ED9               	movwf	fsr2l,c
 14969  001828  6ADA               	clrf	fsr2h,c
 14970  00182A  2ADE               	incf	postinc2,f,c
 14971  00182C  0E00               	movlw	0
 14972  00182E  22DD               	addwfc	postdec2,f,c
 14973                           
 14974                           ; BSR set to: 0
 14975                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
 14976  001830  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14977  001832  6ED9               	movwf	fsr2l,c
 14978  001834  6ADA               	clrf	fsr2h,c
 14979  001836  CFDE FFF6          	movff	postinc2,tblptrl
 14980  00183A  CFDD FFF7          	movff	postdec2,tblptrh
 14981  00183E                     	if	0	;tblptru may be non-zero
 14982  00183E                     	endif
 14983  00183E                     	if	0	;tblptru may be non-zero
 14984  00183E                     	endif
 14985  00183E  0008               	tblrd		*
 14986  001840  50F5               	movf	tablat,w,c
 14987  001842  0A2A               	xorlw	42
 14988  001844  A4D8               	btfss	status,2,c
 14989  001846  D01A               	goto	l11040
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
 14993  001848  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 14994  00184A  6ED9               	movwf	fsr2l,c
 14995  00184C  6ADA               	clrf	fsr2h,c
 14996  00184E  2ADE               	incf	postinc2,f,c
 14997  001850  0E00               	movlw	0
 14998  001852  22DD               	addwfc	postdec2,f,c
 14999                           
 15000                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 15001  001854  51C6               	movf	vfpfcnvrt@ap& (0+255),w,b
 15002  001856  6ED9               	movwf	fsr2l,c
 15003  001858  6ADA               	clrf	fsr2h,c
 15004  00185A  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
 15005  00185E  0E02               	movlw	2
 15006  001860  26DE               	addwf	postinc2,f,c
 15007  001862  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
 15008  001866  0E00               	movlw	0
 15009  001868  22DD               	addwfc	postdec2,f,c
 15010  00186A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15011  00186E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15012  001872  CFDE F125          	movff	postinc2,_prec
 15013  001876  CFDD F126          	movff	postdec2,_prec+1
 15014                           
 15015                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
 15016  00187A  D036               	goto	u15200
 15017  00187C                     l11040:
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
 15021  00187C  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15022  00187E  6ED9               	movwf	fsr2l,c
 15023  001880  6ADA               	clrf	fsr2h,c
 15024  001882  CFDE F06C          	movff	postinc2,atoi@s
 15025  001886  CFDD F06D          	movff	postdec2,atoi@s+1
 15026  00188A  ECDD  F01A         	call	_atoi	;wreg free
 15027  00188E  C06C  F125         	movff	?_atoi,_prec
 15028  001892  C06D  F126         	movff	?_atoi+1,_prec+1
 15029                           
 15030                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15031  001896  D006               	goto	l11044
 15032  001898                     l11042:
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
 15036  001898  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15037  00189A  6ED9               	movwf	fsr2l,c
 15038  00189C  6ADA               	clrf	fsr2h,c
 15039  00189E  2ADE               	incf	postinc2,f,c
 15040  0018A0  0E00               	movlw	0
 15041  0018A2  22DD               	addwfc	postdec2,f,c
 15042  0018A4                     l11044:
 15043                           
 15044                           ; BSR set to: 0
 15045  0018A4  0ED0               	movlw	208
 15046  0018A6  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
 15047  0018A8  0EFF               	movlw	255
 15048  0018AA  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 15049  0018AC  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15050  0018AE  6ED9               	movwf	fsr2l,c
 15051  0018B0  6ADA               	clrf	fsr2h,c
 15052  0018B2  CFDE FFF6          	movff	postinc2,tblptrl
 15053  0018B6  CFDD FFF7          	movff	postdec2,tblptrh
 15054  0018BA                     	if	0	;tblptru may be non-zero
 15055  0018BA                     	endif
 15056  0018BA                     	if	0	;tblptru may be non-zero
 15057  0018BA                     	endif
 15058  0018BA  0008               	tblrd		*
 15059  0018BC  50F5               	movf	tablat,w,c
 15060  0018BE  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 15061  0018C0  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 15062  0018C2  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
 15063  0018C4  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 15064  0018C6  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 15065  0018C8  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 15066  0018CA  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 15067  0018CC  E106               	bnz	u15180
 15068  0018CE  0E0A               	movlw	10
 15069  0018D0  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 15070  0018D2  B0D8               	btfsc	status,0,c
 15071  0018D4  D002               	goto	u15180
 15072  0018D6  0E01               	movlw	1
 15073  0018D8  D001               	goto	u15190
 15074  0018DA                     u15180:
 15075  0018DA  0E00               	movlw	0
 15076  0018DC                     u15190:
 15077  0018DC  6FD7               	movwf	_vfpfcnvrt$2018& (0+255),b
 15078  0018DE  6BD8               	clrf	(_vfpfcnvrt$2018+1)& (0+255),b
 15079                           
 15080                           ; BSR set to: 0
 15081  0018E0  51D7               	movf	_vfpfcnvrt$2018& (0+255),w,b
 15082  0018E2  11D8               	iorwf	(_vfpfcnvrt$2018+1)& (0+255),w,b
 15083  0018E4  A4D8               	btfss	status,2,c
 15084  0018E6  D7D8               	goto	l11042
 15085  0018E8                     u15200:
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
 15089  0018E8  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15090  0018EA  6ED9               	movwf	fsr2l,c
 15091  0018EC  6ADA               	clrf	fsr2h,c
 15092  0018EE  CFDE FFF6          	movff	postinc2,tblptrl
 15093  0018F2  CFDD FFF7          	movff	postdec2,tblptrh
 15094  0018F6                     	if	0	;tblptru may be non-zero
 15095  0018F6                     	endif
 15096  0018F6                     	if	0	;tblptru may be non-zero
 15097  0018F6                     	endif
 15098  0018F6  0008               	tblrd		*
 15099  0018F8  50F5               	movf	tablat,w,c
 15100  0018FA  6F6B               	movwf	tolower@c& (0+255),b
 15101  0018FC  6B6C               	clrf	(tolower@c+1)& (0+255),b
 15102  0018FE  EC0E  F026         	call	_tolower	;wreg free
 15103  001902  516B               	movf	?_tolower& (0+255),w,b
 15104  001904  6FE0               	movwf	vfpfcnvrt@ct& (0+255),b
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
 15108  001906  51E0               	movf	vfpfcnvrt@ct& (0+255),w,b
 15109  001908  B4D8               	btfsc	status,2,c
 15110  00190A  D031               	goto	l11060
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
 15114  00190C  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15115  00190E  6ED9               	movwf	fsr2l,c
 15116  001910  6ADA               	clrf	fsr2h,c
 15117  001912  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
 15118  001916  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
 15119  00191A  0E01               	movlw	1
 15120  00191C  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
 15121  00191E  0E00               	movlw	0
 15122  001920  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 15123  001922  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
 15124  001926  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 15125  00192A                     	if	0	;tblptru may be non-zero
 15126  00192A                     	endif
 15127  00192A                     	if	0	;tblptru may be non-zero
 15128  00192A                     	endif
 15129  00192A  0008               	tblrd		*
 15130  00192C  50F5               	movf	tablat,w,c
 15131  00192E  6F6B               	movwf	tolower@c& (0+255),b
 15132  001930  6B6C               	clrf	(tolower@c+1)& (0+255),b
 15133  001932  EC0E  F026         	call	_tolower	;wreg free
 15134  001936  516B               	movf	?_tolower& (0+255),w,b
 15135  001938  6FE1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
 15139  00193A  51E1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
 15140  00193C  B4D8               	btfsc	status,2,c
 15141  00193E  D017               	goto	l11060
 15142                           
 15143                           ; BSR set to: 0
 15144                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
 15145  001940  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15146  001942  6ED9               	movwf	fsr2l,c
 15147  001944  6ADA               	clrf	fsr2h,c
 15148  001946  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
 15149  00194A  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
 15150  00194E  0E02               	movlw	2
 15151  001950  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
 15152  001952  0E00               	movlw	0
 15153  001954  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 15154  001956  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
 15155  00195A  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 15156  00195E                     	if	0	;tblptru may be non-zero
 15157  00195E                     	endif
 15158  00195E                     	if	0	;tblptru may be non-zero
 15159  00195E                     	endif
 15160  00195E  0008               	tblrd		*
 15161  001960  50F5               	movf	tablat,w,c
 15162  001962  6F6B               	movwf	tolower@c& (0+255),b
 15163  001964  6B6C               	clrf	(tolower@c+1)& (0+255),b
 15164  001966  EC0E  F026         	call	_tolower	;wreg free
 15165  00196A  516B               	movf	?_tolower& (0+255),w,b
 15166  00196C  6FE2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
 15167  00196E                     l11060:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15171  00196E  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15172  001970  6ED9               	movwf	fsr2l,c
 15173  001972  6ADA               	clrf	fsr2h,c
 15174  001974  CFDE FFF6          	movff	postinc2,tblptrl
 15175  001978  CFDD FFF7          	movff	postdec2,tblptrh
 15176  00197C                     	if	0	;tblptru may be non-zero
 15177  00197C                     	endif
 15178  00197C                     	if	0	;tblptru may be non-zero
 15179  00197C                     	endif
 15180  00197C  0008               	tblrd		*
 15181  00197E  50F5               	movf	tablat,w,c
 15182  001980  0A64               	xorlw	100
 15183  001982  B4D8               	btfsc	status,2,c
 15184  001984  D00C               	goto	u15240
 15185                           
 15186                           ; BSR set to: 0
 15187  001986  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15188  001988  6ED9               	movwf	fsr2l,c
 15189  00198A  6ADA               	clrf	fsr2h,c
 15190  00198C  CFDE FFF6          	movff	postinc2,tblptrl
 15191  001990  CFDD FFF7          	movff	postdec2,tblptrh
 15192  001994                     	if	0	;tblptru may be non-zero
 15193  001994                     	endif
 15194  001994                     	if	0	;tblptru may be non-zero
 15195  001994                     	endif
 15196  001994  0008               	tblrd		*
 15197  001996  50F5               	movf	tablat,w,c
 15198  001998  0A69               	xorlw	105
 15199  00199A  A4D8               	btfss	status,2,c
 15200  00199C  D03B               	goto	l11070
 15201  00199E                     u15240:
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
 15205  00199E  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15206  0019A0  6ED9               	movwf	fsr2l,c
 15207  0019A2  6ADA               	clrf	fsr2h,c
 15208  0019A4  2ADE               	incf	postinc2,f,c
 15209  0019A6  0E00               	movlw	0
 15210  0019A8  22DD               	addwfc	postdec2,f,c
 15211                           
 15212                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15213  0019AA  51C6               	movf	vfpfcnvrt@ap& (0+255),w,b
 15214  0019AC  6ED9               	movwf	fsr2l,c
 15215  0019AE  6ADA               	clrf	fsr2h,c
 15216  0019B0  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
 15217  0019B4  0E02               	movlw	2
 15218  0019B6  26DE               	addwf	postinc2,f,c
 15219  0019B8  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
 15220  0019BC  0E00               	movlw	0
 15221  0019BE  22DD               	addwfc	postdec2,f,c
 15222  0019C0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15223  0019C4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15224  0019C8  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
 15225  0019CC  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
 15226  0019D0  0E00               	movlw	0
 15227  0019D2  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15228  0019D4  0EFF               	movlw	-1
 15229  0019D6  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15230  0019D8  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15231  0019DA  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15232  0019DC  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15233  0019DE  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15234  0019E0  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
 15238  0019E2  C0C4  F07F         	movff	vfpfcnvrt@fp,dtoa@fp
 15239  0019E6  C0CB  F080         	movff	vfpfcnvrt@ll,dtoa@d
 15240  0019EA  C0CC  F081         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15241  0019EE  C0CD  F082         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15242  0019F2  C0CE  F083         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15243  0019F6  C0CF  F084         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15244  0019FA  C0D0  F085         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15245  0019FE  C0D1  F086         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15246  001A02  C0D2  F087         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15247  001A06  ECDF  F016         	call	_dtoa	;wreg free
 15248  001A0A  C07F  F0C4         	movff	?_dtoa,?_vfpfcnvrt
 15249  001A0E  C080  F0C5         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15250  001A12  0012               	return	
 15251  001A14                     l11070:
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
 15255  001A14  0E66               	movlw	102
 15256  001A16  19E0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
 15257  001A18  A4D8               	btfss	status,2,c
 15258  001A1A  D03A               	goto	l11082
 15259                           
 15260                           ; BSR set to: 0
 15261                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
 15262  001A1C  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15263  001A1E  6ED9               	movwf	fsr2l,c
 15264  001A20  6ADA               	clrf	fsr2h,c
 15265  001A22  CFDE FFF6          	movff	postinc2,tblptrl
 15266  001A26  CFDD FFF7          	movff	postdec2,tblptrh
 15267  001A2A                     	if	0	;tblptru may be non-zero
 15268  001A2A                     	endif
 15269  001A2A                     	if	0	;tblptru may be non-zero
 15270  001A2A                     	endif
 15271  001A2A  0008               	tblrd		*
 15272  001A2C  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
 15273                           
 15274                           ; BSR set to: 0
 15275                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
 15276  001A30  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15277  001A32  6ED9               	movwf	fsr2l,c
 15278  001A34  6ADA               	clrf	fsr2h,c
 15279  001A36  2ADE               	incf	postinc2,f,c
 15280  001A38  0E00               	movlw	0
 15281  001A3A  22DD               	addwfc	postdec2,f,c
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15285  001A3C  51C6               	movf	vfpfcnvrt@ap& (0+255),w,b
 15286  001A3E  6ED9               	movwf	fsr2l,c
 15287  001A40  6ADA               	clrf	fsr2h,c
 15288  001A42  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
 15289  001A46  0E04               	movlw	4
 15290  001A48  26DE               	addwf	postinc2,f,c
 15291  001A4A  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
 15292  001A4E  0E00               	movlw	0
 15293  001A50  22DD               	addwfc	postdec2,f,c
 15294  001A52  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15295  001A56  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15296  001A5A  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f
 15297  001A5E  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+1
 15298  001A62  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+2
 15299  001A66  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+3
 15300  001A6A                     l11078:
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
 15304  001A6A  C0C4  F0B9         	movff	vfpfcnvrt@fp,efgtoa@fp
 15305  001A6E  C0DC  F0BA         	movff	vfpfcnvrt@f,efgtoa@f
 15306  001A72  C0DD  F0BB         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 15307  001A76  C0DE  F0BC         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 15308  001A7A  C0DF  F0BD         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 15309  001A7E  C0DB  F0BE         	movff	vfpfcnvrt@c,efgtoa@c
 15310  001A82  EC3F  F000         	call	_efgtoa	;wreg free
 15311  001A86  C0B9  F0C4         	movff	?_efgtoa,?_vfpfcnvrt
 15312  001A8A  C0BA  F0C5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 15313  001A8E  0012               	return	
 15314  001A90                     l11082:
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 15318  001A90  0EE0               	movlw	low vfpfcnvrt@ct
 15319  001A92  6F65               	movwf	strncmp@_l& (0+255),b
 15320  001A94  0EF7               	movlw	low STR_73
 15321  001A96  6F66               	movwf	strncmp@_r& (0+255),b
 15322  001A98  0E7F               	movlw	high STR_73
 15323  001A9A  6F67               	movwf	(strncmp@_r+1)& (0+255),b
 15324  001A9C  0E00               	movlw	0
 15325  001A9E  6F69               	movwf	(strncmp@n+1)& (0+255),b
 15326  001AA0  0E02               	movlw	2
 15327  001AA2  6F68               	movwf	strncmp@n& (0+255),b
 15328  001AA4  ECDE  F022         	call	_strncmp	;wreg free
 15329  001AA8  5165               	movf	?_strncmp& (0+255),w,b
 15330  001AAA  1166               	iorwf	(?_strncmp+1)& (0+255),w,b
 15331  001AAC  A4D8               	btfss	status,2,c
 15332  001AAE  D051               	goto	l11098
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 15336  001AB0  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15337  001AB2  6ED9               	movwf	fsr2l,c
 15338  001AB4  6ADA               	clrf	fsr2h,c
 15339  001AB6  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
 15340  001ABA  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
 15341  001ABE  0E01               	movlw	1
 15342  001AC0  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
 15343  001AC2  0E00               	movlw	0
 15344  001AC4  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 15345  001AC6  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
 15346  001ACA  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 15347  001ACE                     	if	0	;tblptru may be non-zero
 15348  001ACE                     	endif
 15349  001ACE                     	if	0	;tblptru may be non-zero
 15350  001ACE                     	endif
 15351  001ACE  0008               	tblrd		*
 15352  001AD0  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
 15353  001AD4  0EBF               	movlw	191
 15354  001AD6  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
 15355  001AD8  0EFF               	movlw	255
 15356  001ADA  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 15357  001ADC  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15358  001ADE  6ED9               	movwf	fsr2l,c
 15359  001AE0  6ADA               	clrf	fsr2h,c
 15360  001AE2  CFDE FFF6          	movff	postinc2,tblptrl
 15361  001AE6  CFDD FFF7          	movff	postdec2,tblptrh
 15362  001AEA                     	if	0	;tblptru may be non-zero
 15363  001AEA                     	endif
 15364  001AEA                     	if	0	;tblptru may be non-zero
 15365  001AEA                     	endif
 15366  001AEA  0008               	tblrd		*
 15367  001AEC  50F5               	movf	tablat,w,c
 15368  001AEE  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 15369  001AF0  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 15370  001AF2  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
 15371  001AF4  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 15372  001AF6  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 15373  001AF8  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 15374  001AFA  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 15375  001AFC  E106               	bnz	u15270
 15376  001AFE  0E1A               	movlw	26
 15377  001B00  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 15378  001B02  B0D8               	btfsc	status,0,c
 15379  001B04  D002               	goto	u15270
 15380  001B06  0E01               	movlw	1
 15381  001B08  D001               	goto	u15280
 15382  001B0A                     u15270:
 15383  001B0A  0E00               	movlw	0
 15384  001B0C                     u15280:
 15385  001B0C  6FD9               	movwf	_vfpfcnvrt$2023& (0+255),b
 15386  001B0E  6BDA               	clrf	(_vfpfcnvrt$2023+1)& (0+255),b
 15387                           
 15388                           ; BSR set to: 0
 15389  001B10  51D9               	movf	_vfpfcnvrt$2023& (0+255),w,b
 15390  001B12  11DA               	iorwf	(_vfpfcnvrt$2023+1)& (0+255),w,b
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15394                           
 15395                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 15399  001B14  51C6               	movf	vfpfcnvrt@ap& (0+255),w,b
 15400  001B16  6ED9               	movwf	fsr2l,c
 15401  001B18  6ADA               	clrf	fsr2h,c
 15402  001B1A  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
 15403  001B1E  0E04               	movlw	4
 15404  001B20  26DE               	addwf	postinc2,f,c
 15405  001B22  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
 15406  001B26  0E00               	movlw	0
 15407  001B28  22DD               	addwfc	postdec2,f,c
 15408  001B2A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15409  001B2E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15410  001B32  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f
 15411  001B36  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+1
 15412  001B3A  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+2
 15413  001B3E  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+3
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 15417                           
 15418                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 935:             
      +                          }
 15419  001B42  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15420  001B44  6ED9               	movwf	fsr2l,c
 15421  001B46  6ADA               	clrf	fsr2h,c
 15422  001B48  0E02               	movlw	2
 15423  001B4A  26DE               	addwf	postinc2,f,c
 15424  001B4C  0E00               	movlw	0
 15425  001B4E  22DD               	addwfc	postdec2,f,c
 15426  001B50  D78C               	goto	l11078
 15427  001B52                     l11098:
 15428                           
 15429                           ; BSR set to: 0
 15430                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
 15431  001B52  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15432  001B54  6ED9               	movwf	fsr2l,c
 15433  001B56  6ADA               	clrf	fsr2h,c
 15434  001B58  CFDE FFF6          	movff	postinc2,tblptrl
 15435  001B5C  CFDD FFF7          	movff	postdec2,tblptrh
 15436  001B60                     	if	0	;tblptru may be non-zero
 15437  001B60                     	endif
 15438  001B60                     	if	0	;tblptru may be non-zero
 15439  001B60                     	endif
 15440  001B60  0008               	tblrd		*
 15441  001B62  50F5               	movf	tablat,w,c
 15442  001B64  0A25               	xorlw	37
 15443  001B66  A4D8               	btfss	status,2,c
 15444  001B68  D013               	goto	l11108
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
 15448  001B6A  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15449  001B6C  6ED9               	movwf	fsr2l,c
 15450  001B6E  6ADA               	clrf	fsr2h,c
 15451  001B70  2ADE               	incf	postinc2,f,c
 15452  001B72  0E00               	movlw	0
 15453  001B74  22DD               	addwfc	postdec2,f,c
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
 15457  001B76  0E00               	movlw	0
 15458  001B78  6F66               	movwf	(fputc@c+1)& (0+255),b
 15459  001B7A  0E25               	movlw	37
 15460  001B7C  6F65               	movwf	fputc@c& (0+255),b
 15461  001B7E  C0C4  F067         	movff	vfpfcnvrt@fp,fputc@fp
 15462  001B82  EC71  F023         	call	_fputc	;wreg free
 15463  001B86                     l11104:
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
 15467  001B86  0E00               	movlw	0
 15468  001B88  6FC5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 15469  001B8A  0E01               	movlw	1
 15470  001B8C  6FC4               	movwf	?_vfpfcnvrt& (0+255),b
 15471  001B8E  0012               	return	
 15472  001B90                     l11108:
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
 15476  001B90  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15477  001B92  6ED9               	movwf	fsr2l,c
 15478  001B94  6ADA               	clrf	fsr2h,c
 15479  001B96  2ADE               	incf	postinc2,f,c
 15480  001B98  0E00               	movlw	0
 15481  001B9A  22DD               	addwfc	postdec2,f,c
 15482                           
 15483                           ; BSR set to: 0
 15484                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
 15485  001B9C  0E00               	movlw	0
 15486  001B9E  6FC5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 15487  001BA0  0E00               	movlw	0
 15488  001BA2  6FC4               	movwf	?_vfpfcnvrt& (0+255),b
 15489  001BA4  0012               	return	
 15490  001BA6                     l11114:
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
 15494  001BA6  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15495  001BA8  6ED9               	movwf	fsr2l,c
 15496  001BAA  6ADA               	clrf	fsr2h,c
 15497  001BAC  CFDE FFF6          	movff	postinc2,tblptrl
 15498  001BB0  CFDD FFF7          	movff	postdec2,tblptrh
 15499  001BB4                     	if	0	;tblptru may be non-zero
 15500  001BB4                     	endif
 15501  001BB4                     	if	0	;tblptru may be non-zero
 15502  001BB4                     	endif
 15503  001BB4  0008               	tblrd		*
 15504  001BB6  50F5               	movf	tablat,w,c
 15505  001BB8  6F65               	movwf	fputc@c& (0+255),b
 15506  001BBA  6B66               	clrf	(fputc@c+1)& (0+255),b
 15507  001BBC  C0C4  F067         	movff	vfpfcnvrt@fp,fputc@fp
 15508  001BC0  EC71  F023         	call	_fputc	;wreg free
 15509                           
 15510                           ; BSR set to: 0
 15511                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
 15512  001BC4  51C5               	movf	vfpfcnvrt@fmt& (0+255),w,b
 15513  001BC6  6ED9               	movwf	fsr2l,c
 15514  001BC8  6ADA               	clrf	fsr2h,c
 15515  001BCA  2ADE               	incf	postinc2,f,c
 15516  001BCC  0E00               	movlw	0
 15517  001BCE  22DD               	addwfc	postdec2,f,c
 15518  001BD0  D7DA               	goto	l11104
 15519  001BD2                     __end_of_vfpfcnvrt:
 15520                           	callstack 0
 15521                           
 15522 ;; *************** function _strncmp *****************
 15523 ;; Defined at:
 15524 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\strncmp.c"
 15525 ;; Parameters:    Size  Location     Type
 15526 ;;  _l              1    5[BANK0 ] PTR const unsigned char 
 15527 ;;		 -> vfpfcnvrt@ct(3), 
 15528 ;;  _r              2    6[BANK0 ] PTR const unsigned char 
 15529 ;;		 -> STR_75(3), 
 15530 ;;  n               2    8[BANK0 ] unsigned int 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  r               2   11[BANK0 ] PTR const unsigned char 
 15533 ;;		 -> STR_75(3), 
 15534 ;;  l               1   13[BANK0 ] PTR const unsigned char 
 15535 ;;		 -> vfpfcnvrt@ct(3), 
 15536 ;; Return value:  Size  Location     Type
 15537 ;;                  2    5[BANK0 ] int 
 15538 ;; Registers used:
 15539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15540 ;; Tracked objects:
 15541 ;;		On entry : 3F/0
 15542 ;;		On exit  : 3F/0
 15543 ;;		Unchanged: 0/0
 15544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15545 ;;      Params:         0       5       0       0       0       0       0       0       0
 15546 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15547 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15548 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15549 ;;Total ram usage:        9 bytes
 15550 ;; Hardware stack levels used:    1
 15551 ;; Hardware stack levels required when called:    7
 15552 ;; This function calls:
 15553 ;;		Nothing
 15554 ;; This function is called by:
 15555 ;;		_vfpfcnvrt
 15556 ;; This function uses a non-reentrant model
 15557 ;;
 15558                           
 15559                           	psect	text26
 15560  0045BC                     __ptext26:
 15561                           	callstack 0
 15562  0045BC                     _strncmp:
 15563                           	callstack 19
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;incstack = 0
 15569  0045BC  C065  F06D         	movff	strncmp@_l,strncmp@l
 15570  0045C0  C066  F06B         	movff	strncmp@_r,strncmp@r
 15571  0045C4  C067  F06C         	movff	strncmp@_r+1,strncmp@r+1
 15572  0045C8  0768               	decf	strncmp@n& (0+255),f,b
 15573  0045CA  A0D8               	btfss	status,0,c
 15574  0045CC  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15575  0045CE  2968               	incf	strncmp@n& (0+255),w,b
 15576  0045D0  E10E               	bnz	l10960
 15577  0045D2  2969               	incf	(strncmp@n+1)& (0+255),w,b
 15578  0045D4  A4D8               	btfss	status,2,c
 15579  0045D6  D00B               	goto	l10960
 15580                           
 15581                           ; BSR set to: 0
 15582  0045D8  0E00               	movlw	0
 15583  0045DA  6F66               	movwf	(?_strncmp+1)& (0+255),b
 15584  0045DC  0E00               	movlw	0
 15585  0045DE  6F65               	movwf	?_strncmp& (0+255),b
 15586  0045E0  0012               	return	
 15587  0045E2                     l10958:
 15588                           
 15589                           ; BSR set to: 0
 15590  0045E2  2B6D               	incf	strncmp@l& (0+255),f,b
 15591  0045E4  4B6B               	infsnz	strncmp@r& (0+255),f,b
 15592  0045E6  2B6C               	incf	(strncmp@r+1)& (0+255),f,b
 15593  0045E8  0768               	decf	strncmp@n& (0+255),f,b
 15594  0045EA  A0D8               	btfss	status,0,c
 15595  0045EC  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15596  0045EE                     l10960:
 15597                           
 15598                           ; BSR set to: 0
 15599  0045EE  516D               	movf	strncmp@l& (0+255),w,b
 15600  0045F0  6ED9               	movwf	fsr2l,c
 15601  0045F2  6ADA               	clrf	fsr2h,c
 15602  0045F4  50DF               	movf	indf2,w,c
 15603  0045F6  B4D8               	btfsc	status,2,c
 15604  0045F8  D01B               	goto	u15070
 15605                           
 15606                           ; BSR set to: 0
 15607  0045FA  C06B  FFF6         	movff	strncmp@r,tblptrl
 15608  0045FE  C06C  FFF7         	movff	strncmp@r+1,tblptrh
 15609  004602                     	if	0	;tblptru may be non-zero
 15610  004602                     	endif
 15611  004602                     	if	0	;tblptru may be non-zero
 15612  004602                     	endif
 15613  004602  0008               	tblrd		*
 15614  004604  50F5               	movf	tablat,w,c
 15615  004606  0900               	iorlw	0
 15616  004608  B4D8               	btfsc	status,2,c
 15617  00460A  D012               	goto	u15070
 15618                           
 15619                           ; BSR set to: 0
 15620  00460C  5168               	movf	strncmp@n& (0+255),w,b
 15621  00460E  1169               	iorwf	(strncmp@n+1)& (0+255),w,b
 15622  004610  B4D8               	btfsc	status,2,c
 15623  004612  D00E               	goto	u15070
 15624                           
 15625                           ; BSR set to: 0
 15626  004614  516D               	movf	strncmp@l& (0+255),w,b
 15627  004616  6ED9               	movwf	fsr2l,c
 15628  004618  6ADA               	clrf	fsr2h,c
 15629  00461A  50DF               	movf	indf2,w,c
 15630  00461C  6F6A               	movwf	??_strncmp& (0+255),b
 15631  00461E  C06B  FFF6         	movff	strncmp@r,tblptrl
 15632  004622  C06C  FFF7         	movff	strncmp@r+1,tblptrh
 15633  004626                     	if	0	;tblptru may be non-zero
 15634  004626                     	endif
 15635  004626                     	if	0	;tblptru may be non-zero
 15636  004626                     	endif
 15637  004626  0008               	tblrd		*
 15638  004628  50F5               	movf	tablat,w,c
 15639  00462A  196A               	xorwf	??_strncmp& (0+255),w,b
 15640  00462C  B4D8               	btfsc	status,2,c
 15641  00462E  D7D9               	goto	l10958
 15642  004630                     u15070:
 15643                           
 15644                           ; BSR set to: 0
 15645  004630  516D               	movf	strncmp@l& (0+255),w,b
 15646  004632  6ED9               	movwf	fsr2l,c
 15647  004634  6ADA               	clrf	fsr2h,c
 15648  004636  50DF               	movf	indf2,w,c
 15649  004638  6F6A               	movwf	??_strncmp& (0+255),b
 15650  00463A  C06B  FFF6         	movff	strncmp@r,tblptrl
 15651  00463E  C06C  FFF7         	movff	strncmp@r+1,tblptrh
 15652  004642                     	if	0	;tblptru may be non-zero
 15653  004642                     	endif
 15654  004642                     	if	0	;tblptru may be non-zero
 15655  004642                     	endif
 15656  004642  0008               	tblrd		*
 15657  004644  50F5               	movf	tablat,w,c
 15658  004646  5D6A               	subwf	??_strncmp& (0+255),w,b
 15659  004648  6F65               	movwf	?_strncmp& (0+255),b
 15660  00464A  6B66               	clrf	(?_strncmp+1)& (0+255),b
 15661  00464C  A0D8               	btfss	status,0,c
 15662  00464E  0766               	decf	(?_strncmp+1)& (0+255),f,b
 15663                           
 15664                           ; BSR set to: 0
 15665  004650  0012               	return		;funcret
 15666  004652                     __end_of_strncmp:
 15667                           	callstack 0
 15668                           
 15669 ;; *************** function _efgtoa *****************
 15670 ;; Defined at:
 15671 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;  fp              1   89[BANK0 ] PTR struct _IO_FILE
 15674 ;;		 -> sprintf@f(6), 
 15675 ;;  f               4   90[BANK0 ] PTR struct _IO_FILE
 15676 ;;  c               1   94[BANK0 ] unsigned char 
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;  u               4   52[BANK1 ] unsigned char 
 15679 ;;  g               4   42[BANK1 ] unsigned char 
 15680 ;;  l               4   38[BANK1 ] unsigned char 
 15681 ;;  h               4   34[BANK1 ] unsigned char 
 15682 ;;  ou              4    0[BANK1 ] unsigned char 
 15683 ;;  n               2   50[BANK1 ] int 
 15684 ;;  e               2   48[BANK1 ] int 
 15685 ;;  i               2   46[BANK1 ] int 
 15686 ;;  w               2   31[BANK1 ] int 
 15687 ;;  p               2   28[BANK1 ] int 
 15688 ;;  sign            2   26[BANK1 ] int 
 15689 ;;  d               2   24[BANK1 ] int 
 15690 ;;  ne              2   22[BANK1 ] int 
 15691 ;;  m               2   20[BANK1 ] int 
 15692 ;;  pp              2   18[BANK1 ] int 
 15693 ;;  t               2   16[BANK1 ] int 
 15694 ;;  mode            1   33[BANK1 ] unsigned char 
 15695 ;;  nmode           1   30[BANK1 ] unsigned char 
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  2   89[BANK0 ] int 
 15698 ;; Registers used:
 15699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15700 ;; Tracked objects:
 15701 ;;		On entry : 3F/0
 15702 ;;		On exit  : 3F/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15705 ;;      Params:         0       6       0       0       0       0       0       0       0
 15706 ;;      Locals:         0       0      56       0       0       0       0       0       0
 15707 ;;      Temps:          0       5       0       0       0       0       0       0       0
 15708 ;;      Totals:         0      11      56       0       0       0       0       0       0
 15709 ;;Total ram usage:       67 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:   11
 15712 ;; This function calls:
 15713 ;;		___awdiv
 15714 ;;		___awmod
 15715 ;;		___fladd
 15716 ;;		___fldiv
 15717 ;;		___fleq
 15718 ;;		___flge
 15719 ;;		___flmul
 15720 ;;		___flneg
 15721 ;;		___flsub
 15722 ;;		___fltol
 15723 ;;		___fpclassifyf
 15724 ;;		_floorf
 15725 ;;		_isupper
 15726 ;;		_pad
 15727 ;;		_strcpy
 15728 ;;		_tolower
 15729 ;; This function is called by:
 15730 ;;		_vfpfcnvrt
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text27
 15735  00007E                     __ptext27:
 15736                           	callstack 0
 15737  00007E                     _efgtoa:
 15738                           	callstack 15
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files (
      +                          x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;incstack = 0
 15745  00007E  0E00               	movlw	0
 15746  000080  0101               	movlb	1	; () banked
 15747  000082  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 15748  000084  0E00               	movlw	0
 15749  000086  6F9C               	movwf	efgtoa@sign& (0+255),b
 15750                           
 15751                           ; BSR set to: 1
 15752                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 327:     g = f;
 15753  000088  C0BA  F1AC         	movff	efgtoa@f,efgtoa@g
 15754  00008C  C0BB  F1AD         	movff	efgtoa@f+1,efgtoa@g+1
 15755  000090  C0BC  F1AE         	movff	efgtoa@f+2,efgtoa@g+2
 15756  000094  C0BD  F1AF         	movff	efgtoa@f+3,efgtoa@g+3
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
 15760  000098  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
 15761  00009A  D016               	goto	l10622
 15762                           
 15763                           ; BSR set to: 1
 15764                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
 15765  00009C  0E00               	movlw	0
 15766  00009E  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 15767  0000A0  0E01               	movlw	1
 15768  0000A2  6F9C               	movwf	efgtoa@sign& (0+255),b
 15769                           
 15770                           ; BSR set to: 1
 15771                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
 15772  0000A4  C1AC  F065         	movff	efgtoa@g,___flneg@f1
 15773  0000A8  C1AD  F066         	movff	efgtoa@g+1,___flneg@f1+1
 15774  0000AC  C1AE  F067         	movff	efgtoa@g+2,___flneg@f1+2
 15775  0000B0  C1AF  F068         	movff	efgtoa@g+3,___flneg@f1+3
 15776  0000B4  EC0A  F028         	call	___flneg	;wreg free
 15777  0000B8  C065  F1AC         	movff	?___flneg,efgtoa@g
 15778  0000BC  C066  F1AD         	movff	?___flneg+1,efgtoa@g+1
 15779  0000C0  C067  F1AE         	movff	?___flneg+2,efgtoa@g+2
 15780  0000C4  C068  F1AF         	movff	?___flneg+3,efgtoa@g+3
 15781  0000C8                     l10622:
 15782                           
 15783                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 334:     n = 0;
 15784  0000C8  0E00               	movlw	0
 15785  0000CA  0101               	movlb	1	; () banked
 15786  0000CC  6FB5               	movwf	(efgtoa@n+1)& (0+255),b
 15787  0000CE  0E00               	movlw	0
 15788  0000D0  6FB4               	movwf	efgtoa@n& (0+255),b
 15789                           
 15790                           ; BSR set to: 1
 15791                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
 15792  0000D2  C123  F1A1         	movff	_width,efgtoa@w
 15793  0000D6  C124  F1A2         	movff	_width+1,efgtoa@w+1
 15794                           
 15795                           ; BSR set to: 1
 15796                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
 15797  0000DA  519C               	movf	efgtoa@sign& (0+255),w,b
 15798  0000DC  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 15799  0000DE  A4D8               	btfss	status,2,c
 15800  0000E0  D002               	goto	u14460
 15801                           
 15802                           ; BSR set to: 1
 15803  0000E2  A527               	btfss	_flags& (0+255),2,b
 15804  0000E4  D013               	goto	l10642
 15805  0000E6                     u14460:
 15806                           
 15807                           ; BSR set to: 1
 15808                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
 15809  0000E6  519C               	movf	efgtoa@sign& (0+255),w,b
 15810  0000E8  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 15811  0000EA  A4D8               	btfss	status,2,c
 15812  0000EC  D004               	goto	l10634
 15813                           
 15814                           ; BSR set to: 1
 15815  0000EE  0E00               	movlw	0
 15816  0000F0  6F87               	movwf	(_efgtoa$1992+1)& (0+255),b
 15817  0000F2  0E2B               	movlw	43
 15818  0000F4  D003               	goto	L2
 15819  0000F6                     l10634:
 15820                           
 15821                           ; BSR set to: 1
 15822  0000F6  0E00               	movlw	0
 15823  0000F8  6F87               	movwf	(_efgtoa$1992+1)& (0+255),b
 15824  0000FA  0E2D               	movlw	45
 15825  0000FC                     L2:
 15826  0000FC  6F86               	movwf	_efgtoa$1992& (0+255),b
 15827                           
 15828                           ; BSR set to: 1
 15829  0000FE  C186  F132         	movff	_efgtoa$1992,_dbuf
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 338:         ++n;
 15833  000102  4BB4               	infsnz	efgtoa@n& (0+255),f,b
 15834  000104  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 339:         --w;
 15838  000106  07A1               	decf	efgtoa@w& (0+255),f,b
 15839  000108  A0D8               	btfss	status,0,c
 15840  00010A  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 15841  00010C                     l10642:
 15842                           
 15843                           ; BSR set to: 1
 15844                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15845  00010C  C1AC  F065         	movff	efgtoa@g,___fpclassifyf@x
 15846  000110  C1AD  F066         	movff	efgtoa@g+1,___fpclassifyf@x+1
 15847  000114  C1AE  F067         	movff	efgtoa@g+2,___fpclassifyf@x+2
 15848  000118  C1AF  F068         	movff	efgtoa@g+3,___fpclassifyf@x+3
 15849  00011C  EC0E  F021         	call	___fpclassifyf	;wreg free
 15850  000120  0565               	decf	?___fpclassifyf& (0+255),w,b
 15851  000122  1166               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 15852  000124  A4D8               	btfss	status,2,c
 15853  000126  D051               	goto	l10660
 15854                           
 15855                           ; BSR set to: 0
 15856  000128  0EBF               	movlw	191
 15857  00012A  6FBF               	movwf	??_efgtoa& (0+255),b
 15858  00012C  0EFF               	movlw	255
 15859  00012E  6FC0               	movwf	(??_efgtoa+1)& (0+255),b
 15860  000130  51BE               	movf	efgtoa@c& (0+255),w,b
 15861  000132  6FC1               	movwf	(??_efgtoa+2)& (0+255),b
 15862  000134  6BC2               	clrf	(??_efgtoa+3)& (0+255),b
 15863  000136  51BF               	movf	??_efgtoa& (0+255),w,b
 15864  000138  27C1               	addwf	(??_efgtoa+2)& (0+255),f,b
 15865  00013A  51C0               	movf	(??_efgtoa+1)& (0+255),w,b
 15866  00013C  23C2               	addwfc	(??_efgtoa+3)& (0+255),f,b
 15867  00013E  51C2               	movf	(??_efgtoa+3)& (0+255),w,b
 15868  000140  E106               	bnz	u14490
 15869  000142  0E1A               	movlw	26
 15870  000144  5DC1               	subwf	(??_efgtoa+2)& (0+255),w,b
 15871  000146  B0D8               	btfsc	status,0,c
 15872  000148  D002               	goto	u14490
 15873  00014A  0E01               	movlw	1
 15874  00014C  D001               	goto	u14500
 15875  00014E                     u14490:
 15876  00014E  0E00               	movlw	0
 15877  000150                     u14500:
 15878  000150  0101               	movlb	1	; () banked
 15879  000152  6F88               	movwf	_efgtoa$1993& (0+255),b
 15880  000154  6B89               	clrf	(_efgtoa$1993+1)& (0+255),b
 15881                           
 15882                           ; BSR set to: 1
 15883  000156  5188               	movf	_efgtoa$1993& (0+255),w,b
 15884  000158  1189               	iorwf	(_efgtoa$1993+1)& (0+255),w,b
 15885  00015A  B4D8               	btfsc	status,2,c
 15886  00015C  D010               	goto	l10652
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
 15890  00015E  0E32               	movlw	low _dbuf
 15891  000160  25B4               	addwf	efgtoa@n& (0+255),w,b
 15892  000162  0100               	movlb	0	; () banked
 15893  000164  6F65               	movwf	strcpy@dest& (0+255),b
 15894  000166  0E01               	movlw	high _dbuf
 15895  000168  0101               	movlb	1	; () banked
 15896  00016A  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15897  00016C  0100               	movlb	0	; () banked
 15898  00016E  6F66               	movwf	(strcpy@dest+1)& (0+255),b
 15899  000170  0EE7               	movlw	low STR_65
 15900  000172  6F67               	movwf	strcpy@src& (0+255),b
 15901  000174  0E7F               	movlw	high STR_65
 15902  000176  6F68               	movwf	(strcpy@src+1)& (0+255),b
 15903  000178  EC94  F025         	call	_strcpy	;wreg free
 15904                           
 15905                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
 15906  00017C  D00F               	goto	l10654
 15907  00017E                     l10652:
 15908                           
 15909                           ; BSR set to: 1
 15910                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
 15911  00017E  0E32               	movlw	low _dbuf
 15912  000180  25B4               	addwf	efgtoa@n& (0+255),w,b
 15913  000182  0100               	movlb	0	; () banked
 15914  000184  6F65               	movwf	strcpy@dest& (0+255),b
 15915  000186  0E01               	movlw	high _dbuf
 15916  000188  0101               	movlb	1	; () banked
 15917  00018A  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15918  00018C  0100               	movlb	0	; () banked
 15919  00018E  6F66               	movwf	(strcpy@dest+1)& (0+255),b
 15920  000190  0EEF               	movlw	low STR_66
 15921  000192  6F67               	movwf	strcpy@src& (0+255),b
 15922  000194  0E7F               	movlw	high STR_66
 15923  000196  6F68               	movwf	(strcpy@src+1)& (0+255),b
 15924  000198  EC94  F025         	call	_strcpy	;wreg free
 15925  00019C                     l10654:
 15926                           
 15927                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
 15928  00019C  0101               	movlb	1	; () banked
 15929  00019E  0EFD               	movlw	253
 15930  0001A0  27A1               	addwf	efgtoa@w& (0+255),f,b
 15931  0001A2  0EFF               	movlw	255
 15932  0001A4  23A2               	addwfc	(efgtoa@w+1)& (0+255),f,b
 15933  0001A6                     l10656:
 15934                           
 15935                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
 15936  0001A6  C0B9  F073         	movff	efgtoa@fp,pad@fp
 15937  0001AA  0E32               	movlw	low _dbuf
 15938  0001AC  0100               	movlb	0	; () banked
 15939  0001AE  6F74               	movwf	pad@buf& (0+255),b
 15940  0001B0  0E01               	movlw	high _dbuf
 15941  0001B2  6F75               	movwf	(pad@buf+1)& (0+255),b
 15942  0001B4  C1A1  F076         	movff	efgtoa@w,pad@p
 15943  0001B8  C1A2  F077         	movff	efgtoa@w+1,pad@p+1
 15944  0001BC  EC29  F023         	call	_pad	;wreg free
 15945  0001C0  C073  F0B9         	movff	?_pad,?_efgtoa
 15946  0001C4  C074  F0BA         	movff	?_pad+1,?_efgtoa+1
 15947  0001C8  0012               	return	
 15948  0001CA                     l10660:
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15952  0001CA  C1AC  F065         	movff	efgtoa@g,___fpclassifyf@x
 15953  0001CE  C1AD  F066         	movff	efgtoa@g+1,___fpclassifyf@x+1
 15954  0001D2  C1AE  F067         	movff	efgtoa@g+2,___fpclassifyf@x+2
 15955  0001D6  C1AF  F068         	movff	efgtoa@g+3,___fpclassifyf@x+3
 15956  0001DA  EC0E  F021         	call	___fpclassifyf	;wreg free
 15957  0001DE  5165               	movf	?___fpclassifyf& (0+255),w,b
 15958  0001E0  1166               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 15959  0001E2  A4D8               	btfss	status,2,c
 15960  0001E4  D03B               	goto	l10678
 15961                           
 15962                           ; BSR set to: 0
 15963  0001E6  0EBF               	movlw	191
 15964  0001E8  6FBF               	movwf	??_efgtoa& (0+255),b
 15965  0001EA  0EFF               	movlw	255
 15966  0001EC  6FC0               	movwf	(??_efgtoa+1)& (0+255),b
 15967  0001EE  51BE               	movf	efgtoa@c& (0+255),w,b
 15968  0001F0  6FC1               	movwf	(??_efgtoa+2)& (0+255),b
 15969  0001F2  6BC2               	clrf	(??_efgtoa+3)& (0+255),b
 15970  0001F4  51BF               	movf	??_efgtoa& (0+255),w,b
 15971  0001F6  27C1               	addwf	(??_efgtoa+2)& (0+255),f,b
 15972  0001F8  51C0               	movf	(??_efgtoa+1)& (0+255),w,b
 15973  0001FA  23C2               	addwfc	(??_efgtoa+3)& (0+255),f,b
 15974  0001FC  51C2               	movf	(??_efgtoa+3)& (0+255),w,b
 15975  0001FE  E106               	bnz	u14530
 15976  000200  0E1A               	movlw	26
 15977  000202  5DC1               	subwf	(??_efgtoa+2)& (0+255),w,b
 15978  000204  B0D8               	btfsc	status,0,c
 15979  000206  D002               	goto	u14530
 15980  000208  0E01               	movlw	1
 15981  00020A  D001               	goto	u14540
 15982  00020C                     u14530:
 15983  00020C  0E00               	movlw	0
 15984  00020E                     u14540:
 15985  00020E  0101               	movlb	1	; () banked
 15986  000210  6F8A               	movwf	_efgtoa$1997& (0+255),b
 15987  000212  6B8B               	clrf	(_efgtoa$1997+1)& (0+255),b
 15988                           
 15989                           ; BSR set to: 1
 15990  000214  518A               	movf	_efgtoa$1997& (0+255),w,b
 15991  000216  118B               	iorwf	(_efgtoa$1997+1)& (0+255),w,b
 15992  000218  B4D8               	btfsc	status,2,c
 15993  00021A  D010               	goto	l10670
 15994                           
 15995                           ; BSR set to: 1
 15996                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
 15997  00021C  0E32               	movlw	low _dbuf
 15998  00021E  25B4               	addwf	efgtoa@n& (0+255),w,b
 15999  000220  0100               	movlb	0	; () banked
 16000  000222  6F65               	movwf	strcpy@dest& (0+255),b
 16001  000224  0E01               	movlw	high _dbuf
 16002  000226  0101               	movlb	1	; () banked
 16003  000228  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16004  00022A  0100               	movlb	0	; () banked
 16005  00022C  6F66               	movwf	(strcpy@dest+1)& (0+255),b
 16006  00022E  0EEB               	movlw	low STR_69
 16007  000230  6F67               	movwf	strcpy@src& (0+255),b
 16008  000232  0E7F               	movlw	high STR_69
 16009  000234  6F68               	movwf	(strcpy@src+1)& (0+255),b
 16010  000236  EC94  F025         	call	_strcpy	;wreg free
 16011                           
 16012                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
 16013  00023A  D7B0               	goto	l10654
 16014  00023C                     l10670:
 16015                           
 16016                           ; BSR set to: 1
 16017                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
 16018  00023C  0E32               	movlw	low _dbuf
 16019  00023E  25B4               	addwf	efgtoa@n& (0+255),w,b
 16020  000240  0100               	movlb	0	; () banked
 16021  000242  6F65               	movwf	strcpy@dest& (0+255),b
 16022  000244  0E01               	movlw	high _dbuf
 16023  000246  0101               	movlb	1	; () banked
 16024  000248  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16025  00024A  0100               	movlb	0	; () banked
 16026  00024C  6F66               	movwf	(strcpy@dest+1)& (0+255),b
 16027  00024E  0EF3               	movlw	low STR_70
 16028  000250  6F67               	movwf	strcpy@src& (0+255),b
 16029  000252  0E7F               	movlw	high STR_70
 16030  000254  6F68               	movwf	(strcpy@src+1)& (0+255),b
 16031  000256  EC94  F025         	call	_strcpy	;wreg free
 16032  00025A  D7A0               	goto	l10654
 16033  00025C                     l10678:
 16034                           
 16035                           ; BSR set to: 0
 16036                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
 16037  00025C  0E00               	movlw	0
 16038  00025E  0101               	movlb	1	; () banked
 16039  000260  6FB6               	movwf	efgtoa@u& (0+255),b
 16040  000262  0E00               	movlw	0
 16041  000264  6FB7               	movwf	(efgtoa@u+1)& (0+255),b
 16042  000266  0E80               	movlw	128
 16043  000268  6FB8               	movwf	(efgtoa@u+2)& (0+255),b
 16044  00026A  0E3F               	movlw	63
 16045  00026C  6FB9               	movwf	(efgtoa@u+3)& (0+255),b
 16046                           
 16047                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 364:     e = 0;
 16048  00026E  0E00               	movlw	0
 16049  000270  6FB3               	movwf	(efgtoa@e+1)& (0+255),b
 16050  000272  0E00               	movlw	0
 16051  000274  6FB2               	movwf	efgtoa@e& (0+255),b
 16052                           
 16053                           ; BSR set to: 1
 16054                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
 16055  000276  C1AC  F065         	movff	efgtoa@g,___fleq@ff1
 16056  00027A  C1AD  F066         	movff	efgtoa@g+1,___fleq@ff1+1
 16057  00027E  C1AE  F067         	movff	efgtoa@g+2,___fleq@ff1+2
 16058  000282  C1AF  F068         	movff	efgtoa@g+3,___fleq@ff1+3
 16059  000286  0E00               	movlw	0
 16060  000288  0100               	movlb	0	; () banked
 16061  00028A  6F69               	movwf	___fleq@ff2& (0+255),b
 16062  00028C  0E00               	movlw	0
 16063  00028E  6F6A               	movwf	(___fleq@ff2+1)& (0+255),b
 16064  000290  0E00               	movlw	0
 16065  000292  6F6B               	movwf	(___fleq@ff2+2)& (0+255),b
 16066  000294  0E00               	movlw	0
 16067  000296  6F6C               	movwf	(___fleq@ff2+3)& (0+255),b
 16068  000298  ECB9  F023         	call	___fleq	;wreg free
 16069  00029C  A0D8               	btfss	status,0,c
 16070  00029E  D01E               	goto	l10688
 16071  0002A0  D077               	goto	u14580
 16072  0002A2                     l10684:
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
 16076  0002A2  C1B6  F073         	movff	efgtoa@u,___flmul@b
 16077  0002A6  C1B7  F074         	movff	efgtoa@u+1,___flmul@b+1
 16078  0002AA  C1B8  F075         	movff	efgtoa@u+2,___flmul@b+2
 16079  0002AE  C1B9  F076         	movff	efgtoa@u+3,___flmul@b+3
 16080  0002B2  0E00               	movlw	0
 16081  0002B4  6F77               	movwf	___flmul@a& (0+255),b
 16082  0002B6  0E00               	movlw	0
 16083  0002B8  6F78               	movwf	(___flmul@a+1)& (0+255),b
 16084  0002BA  0E20               	movlw	32
 16085  0002BC  6F79               	movwf	(___flmul@a+2)& (0+255),b
 16086  0002BE  0E41               	movlw	65
 16087  0002C0  6F7A               	movwf	(___flmul@a+3)& (0+255),b
 16088  0002C2  ECED  F00F         	call	___flmul	;wreg free
 16089  0002C6  C073  F1B6         	movff	?___flmul,efgtoa@u
 16090  0002CA  C074  F1B7         	movff	?___flmul+1,efgtoa@u+1
 16091  0002CE  C075  F1B8         	movff	?___flmul+2,efgtoa@u+2
 16092  0002D2  C076  F1B9         	movff	?___flmul+3,efgtoa@u+3
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
 16096  0002D6  0101               	movlb	1	; () banked
 16097  0002D8  4BB2               	infsnz	efgtoa@e& (0+255),f,b
 16098  0002DA  2BB3               	incf	(efgtoa@e+1)& (0+255),f,b
 16099  0002DC                     l10688:
 16100                           
 16101                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
 16102  0002DC  C1AC  F08C         	movff	efgtoa@g,___flge@ff1
 16103  0002E0  C1AD  F08D         	movff	efgtoa@g+1,___flge@ff1+1
 16104  0002E4  C1AE  F08E         	movff	efgtoa@g+2,___flge@ff1+2
 16105  0002E8  C1AF  F08F         	movff	efgtoa@g+3,___flge@ff1+3
 16106  0002EC  0E00               	movlw	0
 16107  0002EE  0100               	movlb	0	; () banked
 16108  0002F0  6F77               	movwf	___flmul@a& (0+255),b
 16109  0002F2  0E00               	movlw	0
 16110  0002F4  6F78               	movwf	(___flmul@a+1)& (0+255),b
 16111  0002F6  0E20               	movlw	32
 16112  0002F8  6F79               	movwf	(___flmul@a+2)& (0+255),b
 16113  0002FA  0E41               	movlw	65
 16114  0002FC  6F7A               	movwf	(___flmul@a+3)& (0+255),b
 16115  0002FE  C1B6  F073         	movff	efgtoa@u,___flmul@b
 16116  000302  C1B7  F074         	movff	efgtoa@u+1,___flmul@b+1
 16117  000306  C1B8  F075         	movff	efgtoa@u+2,___flmul@b+2
 16118  00030A  C1B9  F076         	movff	efgtoa@u+3,___flmul@b+3
 16119  00030E  ECED  F00F         	call	___flmul	;wreg free
 16120  000312  C073  F090         	movff	?___flmul,___flge@ff2
 16121  000316  C074  F091         	movff	?___flmul+1,___flge@ff2+1
 16122  00031A  C075  F092         	movff	?___flmul+2,___flge@ff2+2
 16123  00031E  C076  F093         	movff	?___flmul+3,___flge@ff2+3
 16124  000322  ECA5  F020         	call	___flge	;wreg free
 16125  000326  A0D8               	btfss	status,0,c
 16126  000328  D01F               	goto	l10694
 16127  00032A  D7BB               	goto	l10684
 16128  00032C                     l10690:
 16129                           
 16130                           ; BSR set to: 0
 16131                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
 16132  00032C  C1B6  F08C         	movff	efgtoa@u,___fldiv@b
 16133  000330  C1B7  F08D         	movff	efgtoa@u+1,___fldiv@b+1
 16134  000334  C1B8  F08E         	movff	efgtoa@u+2,___fldiv@b+2
 16135  000338  C1B9  F08F         	movff	efgtoa@u+3,___fldiv@b+3
 16136  00033C  0E00               	movlw	0
 16137  00033E  6F90               	movwf	___fldiv@a& (0+255),b
 16138  000340  0E00               	movlw	0
 16139  000342  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 16140  000344  0E20               	movlw	32
 16141  000346  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 16142  000348  0E41               	movlw	65
 16143  00034A  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 16144  00034C  EC56  F014         	call	___fldiv	;wreg free
 16145  000350  C08C  F1B6         	movff	?___fldiv,efgtoa@u
 16146  000354  C08D  F1B7         	movff	?___fldiv+1,efgtoa@u+1
 16147  000358  C08E  F1B8         	movff	?___fldiv+2,efgtoa@u+2
 16148  00035C  C08F  F1B9         	movff	?___fldiv+3,efgtoa@u+3
 16149                           
 16150                           ; BSR set to: 0
 16151                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
 16152  000360  0101               	movlb	1	; () banked
 16153  000362  07B2               	decf	efgtoa@e& (0+255),f,b
 16154  000364  A0D8               	btfss	status,0,c
 16155  000366  07B3               	decf	(efgtoa@e+1)& (0+255),f,b
 16156  000368                     l10694:
 16157                           
 16158                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
 16159  000368  C1AC  F08C         	movff	efgtoa@g,___flge@ff1
 16160  00036C  C1AD  F08D         	movff	efgtoa@g+1,___flge@ff1+1
 16161  000370  C1AE  F08E         	movff	efgtoa@g+2,___flge@ff1+2
 16162  000374  C1AF  F08F         	movff	efgtoa@g+3,___flge@ff1+3
 16163  000378  C1B6  F090         	movff	efgtoa@u,___flge@ff2
 16164  00037C  C1B7  F091         	movff	efgtoa@u+1,___flge@ff2+1
 16165  000380  C1B8  F092         	movff	efgtoa@u+2,___flge@ff2+2
 16166  000384  C1B9  F093         	movff	efgtoa@u+3,___flge@ff2+3
 16167  000388  ECA5  F020         	call	___flge	;wreg free
 16168  00038C  A0D8               	btfss	status,0,c
 16169  00038E  D7CE               	goto	l10690
 16170  000390                     u14580:
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
 16174  000390  C0BE  F06B         	movff	efgtoa@c,tolower@c
 16175  000394  6B6C               	clrf	(tolower@c+1)& (0+255),b
 16176  000396  EC0E  F026         	call	_tolower	;wreg free
 16177  00039A  516B               	movf	?_tolower& (0+255),w,b
 16178  00039C  0101               	movlb	1	; () banked
 16179  00039E  6FA3               	movwf	efgtoa@mode& (0+255),b
 16180                           
 16181                           ; BSR set to: 1
 16182                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
 16183  0003A0  C1A3  F1A0         	movff	efgtoa@mode,efgtoa@nmode
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
 16187  0003A4  0E67               	movlw	103
 16188  0003A6  19A3               	xorwf	efgtoa@mode& (0+255),w,b
 16189  0003A8  A4D8               	btfss	status,2,c
 16190  0003AA  D019               	goto	l10710
 16191                           
 16192                           ; BSR set to: 1
 16193                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
 16194  0003AC  5125               	movf	_prec& (0+255),w,b
 16195  0003AE  1126               	iorwf	(_prec+1)& (0+255),w,b
 16196  0003B0  A4D8               	btfss	status,2,c
 16197  0003B2  D004               	goto	l10706
 16198                           
 16199                           ; BSR set to: 1
 16200                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
 16201  0003B4  0E00               	movlw	0
 16202  0003B6  6F26               	movwf	(_prec+1)& (0+255),b
 16203  0003B8  0E01               	movlw	1
 16204  0003BA  6F25               	movwf	_prec& (0+255),b
 16205  0003BC                     l10706:
 16206                           
 16207                           ; BSR set to: 1
 16208                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
 16209  0003BC  BF26               	btfsc	(_prec+1)& (0+255),7,b
 16210  0003BE  D005               	goto	u14610
 16211  0003C0  5126               	movf	(_prec+1)& (0+255),w,b
 16212  0003C2  E108               	bnz	l1408
 16213  0003C4  0525               	decf	_prec& (0+255),w,b
 16214  0003C6  B0D8               	btfsc	status,0,c
 16215  0003C8  D005               	goto	l1408
 16216  0003CA                     u14610:
 16217                           
 16218                           ; BSR set to: 1
 16219  0003CA  0E00               	movlw	0
 16220  0003CC  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
 16221  0003CE  0E06               	movlw	6
 16222  0003D0  6F9E               	movwf	efgtoa@p& (0+255),b
 16223  0003D2  D008               	goto	l10716
 16224  0003D4                     l1408:
 16225                           
 16226                           ; BSR set to: 1
 16227  0003D4  C125  F19E         	movff	_prec,efgtoa@p
 16228  0003D8  C126  F19F         	movff	_prec+1,efgtoa@p+1
 16229  0003DC  D003               	goto	l10716
 16230  0003DE                     l10710:
 16231                           
 16232                           ; BSR set to: 1
 16233                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
 16234  0003DE  AF26               	btfss	(_prec+1)& (0+255),7,b
 16235  0003E0  D7F9               	goto	l1408
 16236  0003E2  D7F3               	goto	u14610
 16237  0003E4                     l10716:
 16238                           
 16239                           ; BSR set to: 1
 16240                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
 16241  0003E4  0E67               	movlw	103
 16242  0003E6  19A3               	xorwf	efgtoa@mode& (0+255),w,b
 16243  0003E8  A4D8               	btfss	status,2,c
 16244  0003EA  D028               	goto	l10726
 16245                           
 16246                           ; BSR set to: 1
 16247                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
 16248  0003EC  AFB3               	btfss	(efgtoa@e+1)& (0+255),7,b
 16249  0003EE  D006               	goto	u14640
 16250  0003F0  0EFC               	movlw	252
 16251  0003F2  5DB2               	subwf	efgtoa@e& (0+255),w,b
 16252  0003F4  0EFF               	movlw	255
 16253  0003F6  59B3               	subwfb	(efgtoa@e+1)& (0+255),w,b
 16254  0003F8  A0D8               	btfss	status,0,c
 16255  0003FA  D01D               	goto	l10724
 16256  0003FC                     u14640:
 16257                           
 16258                           ; BSR set to: 1
 16259  0003FC  0EFF               	movlw	255
 16260  0003FE  0100               	movlb	0	; () banked
 16261  000400  6FBF               	movwf	??_efgtoa& (0+255),b
 16262  000402  0EFF               	movlw	255
 16263  000404  6FC0               	movwf	(??_efgtoa+1)& (0+255),b
 16264  000406  C19E  F0C1         	movff	efgtoa@p,??_efgtoa+2
 16265  00040A  C19F  F0C2         	movff	efgtoa@p+1,??_efgtoa+3
 16266  00040E  51BF               	movf	??_efgtoa& (0+255),w,b
 16267  000410  27C1               	addwf	(??_efgtoa+2)& (0+255),f,b
 16268  000412  51C0               	movf	(??_efgtoa+1)& (0+255),w,b
 16269  000414  23C2               	addwfc	(??_efgtoa+3)& (0+255),f,b
 16270  000416  0101               	movlb	1	; () banked
 16271  000418  51B2               	movf	efgtoa@e& (0+255),w,b
 16272  00041A  0100               	movlb	0	; () banked
 16273  00041C  5DC1               	subwf	(??_efgtoa+2)& (0+255),w,b
 16274  00041E  51C2               	movf	(??_efgtoa+3)& (0+255),w,b
 16275  000420  0A80               	xorlw	128
 16276  000422  6FC3               	movwf	(??_efgtoa+4)& (0+255),b
 16277  000424  0101               	movlb	1	; () banked
 16278  000426  51B3               	movf	(efgtoa@e+1)& (0+255),w,b
 16279  000428  0A80               	xorlw	128
 16280  00042A  0100               	movlb	0	; () banked
 16281  00042C  59C3               	subwfb	(??_efgtoa+4)& (0+255),w,b
 16282  00042E  A0D8               	btfss	status,0,c
 16283  000430  D002               	goto	l10724
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
 16287  000432  0E66               	movlw	102
 16288  000434  D001               	goto	L3
 16289  000436                     l10724:
 16290                           
 16291                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
 16292  000436  0E65               	movlw	101
 16293  000438                     L3:
 16294  000438  0101               	movlb	1	; () banked
 16295  00043A  6FA0               	movwf	efgtoa@nmode& (0+255),b
 16296  00043C                     l10726:
 16297                           
 16298                           ; BSR set to: 1
 16299                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 398:     m = p;
 16300  00043C  C19E  F196         	movff	efgtoa@p,efgtoa@m
 16301  000440  C19F  F197         	movff	efgtoa@p+1,efgtoa@m+1
 16302                           
 16303                           ; BSR set to: 1
 16304                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
 16305  000444  0E67               	movlw	103
 16306  000446  19A3               	xorwf	efgtoa@mode& (0+255),w,b
 16307  000448  A4D8               	btfss	status,2,c
 16308  00044A  D005               	goto	u14680
 16309                           
 16310                           ; BSR set to: 1
 16311  00044C  0E66               	movlw	102
 16312  00044E  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
 16313  000450  B4D8               	btfsc	status,2,c
 16314                           
 16315                           ; BSR set to: 1
 16316  000452  AFB3               	btfss	(efgtoa@e+1)& (0+255),7,b
 16317  000454  D002               	goto	l10736
 16318  000456                     u14680:
 16319                           
 16320                           ; BSR set to: 1
 16321                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 400:         ++m;
 16322  000456  4B96               	infsnz	efgtoa@m& (0+255),f,b
 16323  000458  2B97               	incf	(efgtoa@m+1)& (0+255),f,b
 16324  00045A                     l10736:
 16325                           
 16326                           ; BSR set to: 1
 16327                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
 16328  00045A  0E66               	movlw	102
 16329  00045C  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
 16330  00045E  A4D8               	btfss	status,2,c
 16331  000460  D016               	goto	l10746
 16332                           
 16333                           ; BSR set to: 1
 16334                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
 16335  000462  AFB3               	btfss	(efgtoa@e+1)& (0+255),7,b
 16336  000464  D00C               	goto	l10742
 16337                           
 16338                           ; BSR set to: 1
 16339                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
 16340  000466  0E00               	movlw	0
 16341  000468  6FB6               	movwf	efgtoa@u& (0+255),b
 16342  00046A  0E00               	movlw	0
 16343  00046C  6FB7               	movwf	(efgtoa@u+1)& (0+255),b
 16344  00046E  0E80               	movlw	128
 16345  000470  6FB8               	movwf	(efgtoa@u+2)& (0+255),b
 16346  000472  0E3F               	movlw	63
 16347  000474  6FB9               	movwf	(efgtoa@u+3)& (0+255),b
 16348                           
 16349                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
 16350  000476  0E00               	movlw	0
 16351  000478  6FB3               	movwf	(efgtoa@e+1)& (0+255),b
 16352  00047A  0E00               	movlw	0
 16353  00047C  6FB2               	movwf	efgtoa@e& (0+255),b
 16354  00047E                     l10742:
 16355                           
 16356                           ; BSR set to: 1
 16357                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
 16358  00047E  0E67               	movlw	103
 16359  000480  19A3               	xorwf	efgtoa@mode& (0+255),w,b
 16360  000482  B4D8               	btfsc	status,2,c
 16361  000484  D004               	goto	l10746
 16362                           
 16363                           ; BSR set to: 1
 16364                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
 16365  000486  51B2               	movf	efgtoa@e& (0+255),w,b
 16366  000488  2796               	addwf	efgtoa@m& (0+255),f,b
 16367  00048A  51B3               	movf	(efgtoa@e+1)& (0+255),w,b
 16368  00048C  2397               	addwfc	(efgtoa@m+1)& (0+255),f,b
 16369  00048E                     l10746:
 16370                           
 16371                           ; BSR set to: 1
 16372                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 415:     i = 0;
 16373  00048E  0E00               	movlw	0
 16374  000490  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
 16375  000492  0E00               	movlw	0
 16376  000494  6FB0               	movwf	efgtoa@i& (0+255),b
 16377                           
 16378                           ; BSR set to: 1
 16379                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 416:     h = g;
 16380  000496  C1AC  F1A4         	movff	efgtoa@g,efgtoa@h
 16381  00049A  C1AD  F1A5         	movff	efgtoa@g+1,efgtoa@h+1
 16382  00049E  C1AE  F1A6         	movff	efgtoa@g+2,efgtoa@h+2
 16383  0004A2  C1AF  F1A7         	movff	efgtoa@g+3,efgtoa@h+3
 16384                           
 16385                           ; BSR set to: 1
 16386                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 417:     ou = u;
 16387  0004A6  C1B6  F182         	movff	efgtoa@u,efgtoa@ou
 16388  0004AA  C1B7  F183         	movff	efgtoa@u+1,efgtoa@ou+1
 16389  0004AE  C1B8  F184         	movff	efgtoa@u+2,efgtoa@ou+2
 16390  0004B2  C1B9  F185         	movff	efgtoa@u+3,efgtoa@ou+3
 16391                           
 16392                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
 16393  0004B6  D07B               	goto	l10760
 16394  0004B8                     l10752:
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
 16398  0004B8  C1A4  F08C         	movff	efgtoa@h,___fldiv@b
 16399  0004BC  C1A5  F08D         	movff	efgtoa@h+1,___fldiv@b+1
 16400  0004C0  C1A6  F08E         	movff	efgtoa@h+2,___fldiv@b+2
 16401  0004C4  C1A7  F08F         	movff	efgtoa@h+3,___fldiv@b+3
 16402  0004C8  C1B6  F090         	movff	efgtoa@u,___fldiv@a
 16403  0004CC  C1B7  F091         	movff	efgtoa@u+1,___fldiv@a+1
 16404  0004D0  C1B8  F092         	movff	efgtoa@u+2,___fldiv@a+2
 16405  0004D4  C1B9  F093         	movff	efgtoa@u+3,___fldiv@a+3
 16406  0004D8  EC56  F014         	call	___fldiv	;wreg free
 16407  0004DC  C08C  F0A5         	movff	?___fldiv,floorf@x
 16408  0004E0  C08D  F0A6         	movff	?___fldiv+1,floorf@x+1
 16409  0004E4  C08E  F0A7         	movff	?___fldiv+2,floorf@x+2
 16410  0004E8  C08F  F0A8         	movff	?___fldiv+3,floorf@x+3
 16411  0004EC  EC0B  F018         	call	_floorf	;wreg free
 16412  0004F0  C0A5  F1A8         	movff	?_floorf,efgtoa@l
 16413  0004F4  C0A6  F1A9         	movff	?_floorf+1,efgtoa@l+1
 16414  0004F8  C0A7  F1AA         	movff	?_floorf+2,efgtoa@l+2
 16415  0004FC  C0A8  F1AB         	movff	?_floorf+3,efgtoa@l+3
 16416                           
 16417                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
 16418  000500  C1A8  F0A5         	movff	efgtoa@l,___fltol@f1
 16419  000504  C1A9  F0A6         	movff	efgtoa@l+1,___fltol@f1+1
 16420  000508  C1AA  F0A7         	movff	efgtoa@l+2,___fltol@f1+2
 16421  00050C  C1AB  F0A8         	movff	efgtoa@l+3,___fltol@f1+3
 16422  000510  ECDB  F021         	call	___fltol	;wreg free
 16423  000514  C0A5  F19A         	movff	?___fltol,efgtoa@d
 16424  000518  C0A6  F19B         	movff	?___fltol+1,efgtoa@d+1
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
 16428  00051C  C1A4  F08C         	movff	efgtoa@h,___flsub@b
 16429  000520  C1A5  F08D         	movff	efgtoa@h+1,___flsub@b+1
 16430  000524  C1A6  F08E         	movff	efgtoa@h+2,___flsub@b+2
 16431  000528  C1A7  F08F         	movff	efgtoa@h+3,___flsub@b+3
 16432  00052C  C1B6  F077         	movff	efgtoa@u,___flmul@a
 16433  000530  C1B7  F078         	movff	efgtoa@u+1,___flmul@a+1
 16434  000534  C1B8  F079         	movff	efgtoa@u+2,___flmul@a+2
 16435  000538  C1B9  F07A         	movff	efgtoa@u+3,___flmul@a+3
 16436  00053C  C1A8  F073         	movff	efgtoa@l,___flmul@b
 16437  000540  C1A9  F074         	movff	efgtoa@l+1,___flmul@b+1
 16438  000544  C1AA  F075         	movff	efgtoa@l+2,___flmul@b+2
 16439  000548  C1AB  F076         	movff	efgtoa@l+3,___flmul@b+3
 16440  00054C  ECED  F00F         	call	___flmul	;wreg free
 16441  000550  C073  F090         	movff	?___flmul,___flsub@a
 16442  000554  C074  F091         	movff	?___flmul+1,___flsub@a+1
 16443  000558  C075  F092         	movff	?___flmul+2,___flsub@a+2
 16444  00055C  C076  F093         	movff	?___flmul+3,___flsub@a+3
 16445  000560  EC57  F026         	call	___flsub	;wreg free
 16446  000564  C08C  F1A4         	movff	?___flsub,efgtoa@h
 16447  000568  C08D  F1A5         	movff	?___flsub+1,efgtoa@h+1
 16448  00056C  C08E  F1A6         	movff	?___flsub+2,efgtoa@h+2
 16449  000570  C08F  F1A7         	movff	?___flsub+3,efgtoa@h+3
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
 16453  000574  C1B6  F08C         	movff	efgtoa@u,___fldiv@b
 16454  000578  C1B7  F08D         	movff	efgtoa@u+1,___fldiv@b+1
 16455  00057C  C1B8  F08E         	movff	efgtoa@u+2,___fldiv@b+2
 16456  000580  C1B9  F08F         	movff	efgtoa@u+3,___fldiv@b+3
 16457  000584  0E00               	movlw	0
 16458  000586  6F90               	movwf	___fldiv@a& (0+255),b
 16459  000588  0E00               	movlw	0
 16460  00058A  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 16461  00058C  0E20               	movlw	32
 16462  00058E  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 16463  000590  0E41               	movlw	65
 16464  000592  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 16465  000594  EC56  F014         	call	___fldiv	;wreg free
 16466  000598  C08C  F1B6         	movff	?___fldiv,efgtoa@u
 16467  00059C  C08D  F1B7         	movff	?___fldiv+1,efgtoa@u+1
 16468  0005A0  C08E  F1B8         	movff	?___fldiv+2,efgtoa@u+2
 16469  0005A4  C08F  F1B9         	movff	?___fldiv+3,efgtoa@u+3
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 423:         ++i;
 16473  0005A8  0101               	movlb	1	; () banked
 16474  0005AA  4BB0               	infsnz	efgtoa@i& (0+255),f,b
 16475  0005AC  2BB1               	incf	(efgtoa@i+1)& (0+255),f,b
 16476  0005AE                     l10760:
 16477                           
 16478                           ; BSR set to: 1
 16479                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
 16480  0005AE  5196               	movf	efgtoa@m& (0+255),w,b
 16481  0005B0  5DB0               	subwf	efgtoa@i& (0+255),w,b
 16482  0005B2  51B1               	movf	(efgtoa@i+1)& (0+255),w,b
 16483  0005B4  0A80               	xorlw	128
 16484  0005B6  0100               	movlb	0	; () banked
 16485  0005B8  6FBF               	movwf	??_efgtoa& (0+255),b
 16486  0005BA  0101               	movlb	1	; () banked
 16487  0005BC  5197               	movf	(efgtoa@m+1)& (0+255),w,b
 16488  0005BE  0A80               	xorlw	128
 16489  0005C0  0100               	movlb	0	; () banked
 16490  0005C2  59BF               	subwfb	??_efgtoa& (0+255),w,b
 16491  0005C4  A0D8               	btfss	status,0,c
 16492  0005C6  D778               	goto	l10752
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
 16496  0005C8  C1B6  F073         	movff	efgtoa@u,___flmul@b
 16497  0005CC  C1B7  F074         	movff	efgtoa@u+1,___flmul@b+1
 16498  0005D0  C1B8  F075         	movff	efgtoa@u+2,___flmul@b+2
 16499  0005D4  C1B9  F076         	movff	efgtoa@u+3,___flmul@b+3
 16500  0005D8  0E00               	movlw	0
 16501  0005DA  6F77               	movwf	___flmul@a& (0+255),b
 16502  0005DC  0E00               	movlw	0
 16503  0005DE  6F78               	movwf	(___flmul@a+1)& (0+255),b
 16504  0005E0  0EA0               	movlw	160
 16505  0005E2  6F79               	movwf	(___flmul@a+2)& (0+255),b
 16506  0005E4  0E40               	movlw	64
 16507  0005E6  6F7A               	movwf	(___flmul@a+3)& (0+255),b
 16508  0005E8  ECED  F00F         	call	___flmul	;wreg free
 16509  0005EC  C073  F1A8         	movff	?___flmul,efgtoa@l
 16510  0005F0  C074  F1A9         	movff	?___flmul+1,efgtoa@l+1
 16511  0005F4  C075  F1AA         	movff	?___flmul+2,efgtoa@l+2
 16512  0005F8  C076  F1AB         	movff	?___flmul+3,efgtoa@l+3
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
 16516  0005FC  C1A4  F08C         	movff	efgtoa@h,___flge@ff1
 16517  000600  C1A5  F08D         	movff	efgtoa@h+1,___flge@ff1+1
 16518  000604  C1A6  F08E         	movff	efgtoa@h+2,___flge@ff1+2
 16519  000608  C1A7  F08F         	movff	efgtoa@h+3,___flge@ff1+3
 16520  00060C  C1A8  F090         	movff	efgtoa@l,___flge@ff2
 16521  000610  C1A9  F091         	movff	efgtoa@l+1,___flge@ff2+1
 16522  000614  C1AA  F092         	movff	efgtoa@l+2,___flge@ff2+2
 16523  000618  C1AB  F093         	movff	efgtoa@l+3,___flge@ff2+3
 16524  00061C  ECA5  F020         	call	___flge	;wreg free
 16525  000620  B0D8               	btfsc	status,0,c
 16526  000622  D003               	goto	l10768
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
 16530  000624  0E00               	movlw	0
 16531  000626  0101               	movlb	1	; () banked
 16532  000628  D018               	goto	L4
 16533  00062A                     l10768:
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
 16537  00062A  C1A4  F065         	movff	efgtoa@h,___fleq@ff1
 16538  00062E  C1A5  F066         	movff	efgtoa@h+1,___fleq@ff1+1
 16539  000632  C1A6  F067         	movff	efgtoa@h+2,___fleq@ff1+2
 16540  000636  C1A7  F068         	movff	efgtoa@h+3,___fleq@ff1+3
 16541  00063A  C1A8  F069         	movff	efgtoa@l,___fleq@ff2
 16542  00063E  C1A9  F06A         	movff	efgtoa@l+1,___fleq@ff2+1
 16543  000642  C1AA  F06B         	movff	efgtoa@l+2,___fleq@ff2+2
 16544  000646  C1AB  F06C         	movff	efgtoa@l+3,___fleq@ff2+3
 16545  00064A  ECB9  F023         	call	___fleq	;wreg free
 16546  00064E  A0D8               	btfss	status,0,c
 16547  000650  D00B               	goto	l10774
 16548                           
 16549                           ; BSR set to: 0
 16550  000652  0101               	movlb	1	; () banked
 16551  000654  B19A               	btfsc	efgtoa@d& (0+255),0,b
 16552  000656  D008               	goto	l10774
 16553                           
 16554                           ; BSR set to: 1
 16555                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
 16556  000658  0E00               	movlw	0
 16557  00065A                     L4:
 16558  00065A  6FA8               	movwf	efgtoa@l& (0+255),b
 16559  00065C  0E00               	movlw	0
 16560  00065E  6FA9               	movwf	(efgtoa@l+1)& (0+255),b
 16561  000660  0E00               	movlw	0
 16562  000662  6FAA               	movwf	(efgtoa@l+2)& (0+255),b
 16563  000664  0E00               	movlw	0
 16564  000666  6FAB               	movwf	(efgtoa@l+3)& (0+255),b
 16565  000668                     l10774:
 16566                           
 16567                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
 16568  000668  C1AC  F065         	movff	efgtoa@g,___fladd@b
 16569  00066C  C1AD  F066         	movff	efgtoa@g+1,___fladd@b+1
 16570  000670  C1AE  F067         	movff	efgtoa@g+2,___fladd@b+2
 16571  000674  C1AF  F068         	movff	efgtoa@g+3,___fladd@b+3
 16572  000678  C1A8  F069         	movff	efgtoa@l,___fladd@a
 16573  00067C  C1A9  F06A         	movff	efgtoa@l+1,___fladd@a+1
 16574  000680  C1AA  F06B         	movff	efgtoa@l+2,___fladd@a+2
 16575  000684  C1AB  F06C         	movff	efgtoa@l+3,___fladd@a+3
 16576  000688  EC84  F011         	call	___fladd	;wreg free
 16577  00068C  C065  F1A4         	movff	?___fladd,efgtoa@h
 16578  000690  C066  F1A5         	movff	?___fladd+1,efgtoa@h+1
 16579  000694  C067  F1A6         	movff	?___fladd+2,efgtoa@h+2
 16580  000698  C068  F1A7         	movff	?___fladd+3,efgtoa@h+3
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 441:     u = ou;
 16584  00069C  C182  F1B6         	movff	efgtoa@ou,efgtoa@u
 16585  0006A0  C183  F1B7         	movff	efgtoa@ou+1,efgtoa@u+1
 16586  0006A4  C184  F1B8         	movff	efgtoa@ou+2,efgtoa@u+2
 16587  0006A8  C185  F1B9         	movff	efgtoa@ou+3,efgtoa@u+3
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 16591  0006AC  0E65               	movlw	101
 16592  0006AE  0101               	movlb	1	; () banked
 16593  0006B0  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
 16594  0006B2  B4D8               	btfsc	status,2,c
 16595  0006B4  D005               	goto	l10782
 16596                           
 16597                           ; BSR set to: 1
 16598  0006B6  C1B2  F198         	movff	efgtoa@e,efgtoa@ne
 16599  0006BA  C1B3  F199         	movff	efgtoa@e+1,efgtoa@ne+1
 16600  0006BE  D004               	goto	l1434
 16601  0006C0                     l10782:
 16602                           
 16603                           ; BSR set to: 1
 16604  0006C0  0E00               	movlw	0
 16605  0006C2  6F99               	movwf	(efgtoa@ne+1)& (0+255),b
 16606  0006C4  0E00               	movlw	0
 16607  0006C6  6F98               	movwf	efgtoa@ne& (0+255),b
 16608  0006C8                     l1434:
 16609                           
 16610                           ; BSR set to: 1
 16611                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
 16612  0006C8  0E00               	movlw	0
 16613  0006CA  6F95               	movwf	(efgtoa@pp+1)& (0+255),b
 16614  0006CC  0E00               	movlw	0
 16615  0006CE  6F94               	movwf	efgtoa@pp& (0+255),b
 16616                           
 16617                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 444:     t = 0;
 16618  0006D0  0E00               	movlw	0
 16619  0006D2  6F93               	movwf	(efgtoa@t+1)& (0+255),b
 16620  0006D4  0E00               	movlw	0
 16621  0006D6  6F92               	movwf	efgtoa@t& (0+255),b
 16622                           
 16623                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 445:     i = 0;
 16624  0006D8  0E00               	movlw	0
 16625  0006DA  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
 16626  0006DC  0E00               	movlw	0
 16627  0006DE  6FB0               	movwf	efgtoa@i& (0+255),b
 16628                           
 16629                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
 16630  0006E0  D0C6               	goto	l10832
 16631  0006E2                     l10784:
 16632                           
 16633                           ; BSR set to: 1
 16634                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
 16635  0006E2  C1A4  F08C         	movff	efgtoa@h,___fldiv@b
 16636  0006E6  C1A5  F08D         	movff	efgtoa@h+1,___fldiv@b+1
 16637  0006EA  C1A6  F08E         	movff	efgtoa@h+2,___fldiv@b+2
 16638  0006EE  C1A7  F08F         	movff	efgtoa@h+3,___fldiv@b+3
 16639  0006F2  C1B6  F090         	movff	efgtoa@u,___fldiv@a
 16640  0006F6  C1B7  F091         	movff	efgtoa@u+1,___fldiv@a+1
 16641  0006FA  C1B8  F092         	movff	efgtoa@u+2,___fldiv@a+2
 16642  0006FE  C1B9  F093         	movff	efgtoa@u+3,___fldiv@a+3
 16643  000702  EC56  F014         	call	___fldiv	;wreg free
 16644  000706  C08C  F0A5         	movff	?___fldiv,floorf@x
 16645  00070A  C08D  F0A6         	movff	?___fldiv+1,floorf@x+1
 16646  00070E  C08E  F0A7         	movff	?___fldiv+2,floorf@x+2
 16647  000712  C08F  F0A8         	movff	?___fldiv+3,floorf@x+3
 16648  000716  EC0B  F018         	call	_floorf	;wreg free
 16649  00071A  C0A5  F1A8         	movff	?_floorf,efgtoa@l
 16650  00071E  C0A6  F1A9         	movff	?_floorf+1,efgtoa@l+1
 16651  000722  C0A7  F1AA         	movff	?_floorf+2,efgtoa@l+2
 16652  000726  C0A8  F1AB         	movff	?_floorf+3,efgtoa@l+3
 16653                           
 16654                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
 16655  00072A  C1A8  F0A5         	movff	efgtoa@l,___fltol@f1
 16656  00072E  C1A9  F0A6         	movff	efgtoa@l+1,___fltol@f1+1
 16657  000732  C1AA  F0A7         	movff	efgtoa@l+2,___fltol@f1+2
 16658  000736  C1AB  F0A8         	movff	efgtoa@l+3,___fltol@f1+3
 16659  00073A  ECDB  F021         	call	___fltol	;wreg free
 16660  00073E  C0A5  F19A         	movff	?___fltol,efgtoa@d
 16661  000742  C0A6  F19B         	movff	?___fltol+1,efgtoa@d+1
 16662                           
 16663                           ; BSR set to: 0
 16664                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16665  000746  0101               	movlb	1	; () banked
 16666  000748  B927               	btfsc	_flags& (0+255),4,b
 16667  00074A  D00C               	goto	l10796
 16668                           
 16669                           ; BSR set to: 1
 16670  00074C  519A               	movf	efgtoa@d& (0+255),w,b
 16671  00074E  119B               	iorwf	(efgtoa@d+1)& (0+255),w,b
 16672  000750  A4D8               	btfss	status,2,c
 16673  000752  D008               	goto	l10796
 16674                           
 16675                           ; BSR set to: 1
 16676  000754  0E67               	movlw	103
 16677  000756  19A3               	xorwf	efgtoa@mode& (0+255),w,b
 16678  000758  B4D8               	btfsc	status,2,c
 16679                           
 16680                           ; BSR set to: 1
 16681  00075A  AF99               	btfss	(efgtoa@ne+1)& (0+255),7,b
 16682  00075C  D003               	goto	l10796
 16683                           
 16684                           ; BSR set to: 1
 16685                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
 16686  00075E  4B92               	infsnz	efgtoa@t& (0+255),f,b
 16687  000760  2B93               	incf	(efgtoa@t+1)& (0+255),f,b
 16688                           
 16689                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
 16690  000762  D039               	goto	l10824
 16691  000764                     l10796:
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
 16695  000764  5194               	movf	efgtoa@pp& (0+255),w,b
 16696  000766  1195               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 16697  000768  B4D8               	btfsc	status,2,c
 16698                           
 16699                           ; BSR set to: 1
 16700  00076A  AF99               	btfss	(efgtoa@ne+1)& (0+255),7,b
 16701  00076C  D022               	goto	l10816
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
 16705  00076E  0E32               	movlw	low _dbuf
 16706  000770  25B4               	addwf	efgtoa@n& (0+255),w,b
 16707  000772  6ED9               	movwf	fsr2l,c
 16708  000774  0E01               	movlw	high _dbuf
 16709  000776  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16710  000778  6EDA               	movwf	fsr2h,c
 16711  00077A  0E2E               	movlw	46
 16712  00077C  6EDF               	movwf	indf2,c
 16713                           
 16714                           ; BSR set to: 1
 16715  00077E  4BB4               	infsnz	efgtoa@n& (0+255),f,b
 16716  000780  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
 16717                           
 16718                           ; BSR set to: 1
 16719                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
 16720  000782  07A1               	decf	efgtoa@w& (0+255),f,b
 16721  000784  A0D8               	btfss	status,0,c
 16722  000786  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 16723                           
 16724                           ; BSR set to: 1
 16725                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
 16726  000788  0E00               	movlw	0
 16727  00078A  6F95               	movwf	(efgtoa@pp+1)& (0+255),b
 16728  00078C  0E01               	movlw	1
 16729  00078E  6F94               	movwf	efgtoa@pp& (0+255),b
 16730  000790  D010               	goto	l10816
 16731  000792                     l10808:
 16732                           
 16733                           ; BSR set to: 1
 16734                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
 16735  000792  0E32               	movlw	low _dbuf
 16736  000794  25B4               	addwf	efgtoa@n& (0+255),w,b
 16737  000796  6ED9               	movwf	fsr2l,c
 16738  000798  0E01               	movlw	high _dbuf
 16739  00079A  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16740  00079C  6EDA               	movwf	fsr2h,c
 16741  00079E  0E30               	movlw	48
 16742  0007A0  6EDF               	movwf	indf2,c
 16743                           
 16744                           ; BSR set to: 1
 16745  0007A2  4BB4               	infsnz	efgtoa@n& (0+255),f,b
 16746  0007A4  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
 16747                           
 16748                           ; BSR set to: 1
 16749                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
 16750  0007A6  07A1               	decf	efgtoa@w& (0+255),f,b
 16751  0007A8  A0D8               	btfss	status,0,c
 16752  0007AA  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 16753                           
 16754                           ; BSR set to: 1
 16755                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
 16756  0007AC  0792               	decf	efgtoa@t& (0+255),f,b
 16757  0007AE  A0D8               	btfss	status,0,c
 16758  0007B0  0793               	decf	(efgtoa@t+1)& (0+255),f,b
 16759  0007B2                     l10816:
 16760                           
 16761                           ; BSR set to: 1
 16762                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
 16763  0007B2  5192               	movf	efgtoa@t& (0+255),w,b
 16764  0007B4  1193               	iorwf	(efgtoa@t+1)& (0+255),w,b
 16765  0007B6  A4D8               	btfss	status,2,c
 16766  0007B8  D7EC               	goto	l10808
 16767                           
 16768                           ; BSR set to: 1
 16769                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
 16770  0007BA  0E32               	movlw	low _dbuf
 16771  0007BC  25B4               	addwf	efgtoa@n& (0+255),w,b
 16772  0007BE  6ED9               	movwf	fsr2l,c
 16773  0007C0  0E01               	movlw	high _dbuf
 16774  0007C2  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16775  0007C4  6EDA               	movwf	fsr2h,c
 16776  0007C6  519A               	movf	efgtoa@d& (0+255),w,b
 16777  0007C8  0F30               	addlw	48
 16778  0007CA  6EDF               	movwf	indf2,c
 16779                           
 16780                           ; BSR set to: 1
 16781  0007CC  4BB4               	infsnz	efgtoa@n& (0+255),f,b
 16782  0007CE  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
 16786  0007D0  07A1               	decf	efgtoa@w& (0+255),f,b
 16787  0007D2  A0D8               	btfss	status,0,c
 16788  0007D4  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 16789  0007D6                     l10824:
 16790                           
 16791                           ; BSR set to: 1
 16792                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
 16793  0007D6  C1A4  F08C         	movff	efgtoa@h,___flsub@b
 16794  0007DA  C1A5  F08D         	movff	efgtoa@h+1,___flsub@b+1
 16795  0007DE  C1A6  F08E         	movff	efgtoa@h+2,___flsub@b+2
 16796  0007E2  C1A7  F08F         	movff	efgtoa@h+3,___flsub@b+3
 16797  0007E6  C1B6  F077         	movff	efgtoa@u,___flmul@a
 16798  0007EA  C1B7  F078         	movff	efgtoa@u+1,___flmul@a+1
 16799  0007EE  C1B8  F079         	movff	efgtoa@u+2,___flmul@a+2
 16800  0007F2  C1B9  F07A         	movff	efgtoa@u+3,___flmul@a+3
 16801  0007F6  C1A8  F073         	movff	efgtoa@l,___flmul@b
 16802  0007FA  C1A9  F074         	movff	efgtoa@l+1,___flmul@b+1
 16803  0007FE  C1AA  F075         	movff	efgtoa@l+2,___flmul@b+2
 16804  000802  C1AB  F076         	movff	efgtoa@l+3,___flmul@b+3
 16805  000806  ECED  F00F         	call	___flmul	;wreg free
 16806  00080A  C073  F090         	movff	?___flmul,___flsub@a
 16807  00080E  C074  F091         	movff	?___flmul+1,___flsub@a+1
 16808  000812  C075  F092         	movff	?___flmul+2,___flsub@a+2
 16809  000816  C076  F093         	movff	?___flmul+3,___flsub@a+3
 16810  00081A  EC57  F026         	call	___flsub	;wreg free
 16811  00081E  C08C  F1A4         	movff	?___flsub,efgtoa@h
 16812  000822  C08D  F1A5         	movff	?___flsub+1,efgtoa@h+1
 16813  000826  C08E  F1A6         	movff	?___flsub+2,efgtoa@h+2
 16814  00082A  C08F  F1A7         	movff	?___flsub+3,efgtoa@h+3
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
 16818  00082E  C1B6  F08C         	movff	efgtoa@u,___fldiv@b
 16819  000832  C1B7  F08D         	movff	efgtoa@u+1,___fldiv@b+1
 16820  000836  C1B8  F08E         	movff	efgtoa@u+2,___fldiv@b+2
 16821  00083A  C1B9  F08F         	movff	efgtoa@u+3,___fldiv@b+3
 16822  00083E  0E00               	movlw	0
 16823  000840  6F90               	movwf	___fldiv@a& (0+255),b
 16824  000842  0E00               	movlw	0
 16825  000844  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 16826  000846  0E20               	movlw	32
 16827  000848  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 16828  00084A  0E41               	movlw	65
 16829  00084C  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 16830  00084E  EC56  F014         	call	___fldiv	;wreg free
 16831  000852  C08C  F1B6         	movff	?___fldiv,efgtoa@u
 16832  000856  C08D  F1B7         	movff	?___fldiv+1,efgtoa@u+1
 16833  00085A  C08E  F1B8         	movff	?___fldiv+2,efgtoa@u+2
 16834  00085E  C08F  F1B9         	movff	?___fldiv+3,efgtoa@u+3
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
 16838  000862  0101               	movlb	1	; () banked
 16839  000864  0798               	decf	efgtoa@ne& (0+255),f,b
 16840  000866  A0D8               	btfss	status,0,c
 16841  000868  0799               	decf	(efgtoa@ne+1)& (0+255),f,b
 16842                           
 16843                           ; BSR set to: 1
 16844                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 468:         ++i;
 16845  00086A  4BB0               	infsnz	efgtoa@i& (0+255),f,b
 16846  00086C  2BB1               	incf	(efgtoa@i+1)& (0+255),f,b
 16847  00086E                     l10832:
 16848                           
 16849                           ; BSR set to: 1
 16850                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
 16851  00086E  5196               	movf	efgtoa@m& (0+255),w,b
 16852  000870  5DB0               	subwf	efgtoa@i& (0+255),w,b
 16853  000872  51B1               	movf	(efgtoa@i+1)& (0+255),w,b
 16854  000874  0A80               	xorlw	128
 16855  000876  0100               	movlb	0	; () banked
 16856  000878  6FBF               	movwf	??_efgtoa& (0+255),b
 16857  00087A  0101               	movlb	1	; () banked
 16858  00087C  5197               	movf	(efgtoa@m+1)& (0+255),w,b
 16859  00087E  0A80               	xorlw	128
 16860  000880  0100               	movlb	0	; () banked
 16861  000882  59BF               	subwfb	??_efgtoa& (0+255),w,b
 16862  000884  B0D8               	btfsc	status,0,c
 16863  000886  D009               	goto	u14850
 16864                           
 16865                           ; BSR set to: 0
 16866  000888  0101               	movlb	1	; () banked
 16867  00088A  BFB5               	btfsc	(efgtoa@n+1)& (0+255),7,b
 16868  00088C  D72A               	goto	l10784
 16869  00088E  51B5               	movf	(efgtoa@n+1)& (0+255),w,b
 16870  000890  E104               	bnz	u14850
 16871  000892  0E4B               	movlw	75
 16872  000894  5DB4               	subwf	efgtoa@n& (0+255),w,b
 16873  000896  A0D8               	btfss	status,0,c
 16874  000898  D724               	goto	l10784
 16875  00089A                     u14850:
 16876                           
 16877                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
 16878  00089A  0101               	movlb	1	; () banked
 16879  00089C  5194               	movf	efgtoa@pp& (0+255),w,b
 16880  00089E  1195               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 16881  0008A0  B4D8               	btfsc	status,2,c
 16882                           
 16883                           ; BSR set to: 1
 16884  0008A2  A927               	btfss	_flags& (0+255),4,b
 16885  0008A4  D00A               	goto	l10844
 16886                           
 16887                           ; BSR set to: 1
 16888                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
 16889  0008A6  0E32               	movlw	low _dbuf
 16890  0008A8  25B4               	addwf	efgtoa@n& (0+255),w,b
 16891  0008AA  6ED9               	movwf	fsr2l,c
 16892  0008AC  0E01               	movlw	high _dbuf
 16893  0008AE  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16894  0008B0  6EDA               	movwf	fsr2h,c
 16895  0008B2  0E2E               	movlw	46
 16896  0008B4  6EDF               	movwf	indf2,c
 16897                           
 16898                           ; BSR set to: 1
 16899  0008B6  4BB4               	infsnz	efgtoa@n& (0+255),f,b
 16900  0008B8  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
 16901  0008BA                     l10844:
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
 16905  0008BA  0E32               	movlw	low _dbuf
 16906  0008BC  25B4               	addwf	efgtoa@n& (0+255),w,b
 16907  0008BE  6ED9               	movwf	fsr2l,c
 16908  0008C0  0E01               	movlw	high _dbuf
 16909  0008C2  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 16910  0008C4  6EDA               	movwf	fsr2h,c
 16911  0008C6  0E00               	movlw	0
 16912  0008C8  6EDF               	movwf	indf2,c
 16913                           
 16914                           ; BSR set to: 1
 16915                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
 16916  0008CA  0E65               	movlw	101
 16917  0008CC  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
 16918  0008CE  A4D8               	btfss	status,2,c
 16919  0008D0  D46A               	goto	l10656
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
 16923  0008D2  0E00               	movlw	0
 16924  0008D4  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
 16925  0008D6  0E4F               	movlw	79
 16926  0008D8  6FB0               	movwf	efgtoa@i& (0+255),b
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
 16930  0008DA  0E32               	movlw	low _dbuf
 16931  0008DC  25B0               	addwf	efgtoa@i& (0+255),w,b
 16932  0008DE  6ED9               	movwf	fsr2l,c
 16933  0008E0  0E01               	movlw	high _dbuf
 16934  0008E2  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
 16935  0008E4  6EDA               	movwf	fsr2h,c
 16936  0008E6  0E00               	movlw	0
 16937  0008E8  6EDF               	movwf	indf2,c
 16938                           
 16939                           ; BSR set to: 1
 16940                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
 16941  0008EA  0E00               	movlw	0
 16942  0008EC  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 16943  0008EE  0E00               	movlw	0
 16944  0008F0  6F9C               	movwf	efgtoa@sign& (0+255),b
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
 16948  0008F2  AFB3               	btfss	(efgtoa@e+1)& (0+255),7,b
 16949  0008F4  D008               	goto	l10860
 16950                           
 16951                           ; BSR set to: 1
 16952                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
 16953  0008F6  0E00               	movlw	0
 16954  0008F8  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 16955  0008FA  0E01               	movlw	1
 16956  0008FC  6F9C               	movwf	efgtoa@sign& (0+255),b
 16957                           
 16958                           ; BSR set to: 1
 16959                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
 16960  0008FE  6DB2               	negf	efgtoa@e& (0+255),b
 16961  000900  1FB3               	comf	(efgtoa@e+1)& (0+255),f,b
 16962  000902  B0D8               	btfsc	status,0,c
 16963  000904  2BB3               	incf	(efgtoa@e+1)& (0+255),f,b
 16964  000906                     l10860:
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
 16968  000906  0E00               	movlw	0
 16969  000908  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
 16970  00090A  0E02               	movlw	2
 16971  00090C  6F9E               	movwf	efgtoa@p& (0+255),b
 16972                           
 16973                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
 16974  00090E  D02C               	goto	l10872
 16975  000910                     l10862:
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
 16979  000910  07B0               	decf	efgtoa@i& (0+255),f,b
 16980  000912  A0D8               	btfss	status,0,c
 16981  000914  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
 16982                           
 16983                           ; BSR set to: 1
 16984                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
 16985  000916  0E32               	movlw	low _dbuf
 16986  000918  25B0               	addwf	efgtoa@i& (0+255),w,b
 16987  00091A  6ED9               	movwf	fsr2l,c
 16988  00091C  0E01               	movlw	high _dbuf
 16989  00091E  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
 16990  000920  6EDA               	movwf	fsr2h,c
 16991  000922  C1B2  F065         	movff	efgtoa@e,___awmod@dividend
 16992  000926  C1B3  F066         	movff	efgtoa@e+1,___awmod@dividend+1
 16993  00092A  0E00               	movlw	0
 16994  00092C  0100               	movlb	0	; () banked
 16995  00092E  6F68               	movwf	(___awmod@divisor+1)& (0+255),b
 16996  000930  0E0A               	movlw	10
 16997  000932  6F67               	movwf	___awmod@divisor& (0+255),b
 16998  000934  ECFA  F024         	call	___awmod	;wreg free
 16999  000938  5165               	movf	?___awmod& (0+255),w,b
 17000  00093A  0F30               	addlw	48
 17001  00093C  6EDF               	movwf	indf2,c
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
 17005  00093E  C1B2  F065         	movff	efgtoa@e,___awdiv@dividend
 17006  000942  C1B3  F066         	movff	efgtoa@e+1,___awdiv@dividend+1
 17007  000946  0E00               	movlw	0
 17008  000948  6F68               	movwf	(___awdiv@divisor+1)& (0+255),b
 17009  00094A  0E0A               	movlw	10
 17010  00094C  6F67               	movwf	___awdiv@divisor& (0+255),b
 17011  00094E  EC40  F024         	call	___awdiv	;wreg free
 17012  000952  C065  F1B2         	movff	?___awdiv,efgtoa@e
 17013  000956  C066  F1B3         	movff	?___awdiv+1,efgtoa@e+1
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
 17017  00095A  0101               	movlb	1	; () banked
 17018  00095C  079E               	decf	efgtoa@p& (0+255),f,b
 17019  00095E  A0D8               	btfss	status,0,c
 17020  000960  079F               	decf	(efgtoa@p+1)& (0+255),f,b
 17021                           
 17022                           ; BSR set to: 1
 17023                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
 17024  000962  07A1               	decf	efgtoa@w& (0+255),f,b
 17025  000964  A0D8               	btfss	status,0,c
 17026  000966  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 17027  000968                     l10872:
 17028                           
 17029                           ; BSR set to: 1
 17030                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
 17031  000968  51B2               	movf	efgtoa@e& (0+255),w,b
 17032  00096A  11B3               	iorwf	(efgtoa@e+1)& (0+255),w,b
 17033  00096C  A4D8               	btfss	status,2,c
 17034  00096E  D7D0               	goto	l10862
 17035                           
 17036                           ; BSR set to: 1
 17037  000970  BF9F               	btfsc	(efgtoa@p+1)& (0+255),7,b
 17038  000972  D005               	goto	u14910
 17039  000974  519F               	movf	(efgtoa@p+1)& (0+255),w,b
 17040  000976  E1CC               	bnz	l10862
 17041  000978  059E               	decf	efgtoa@p& (0+255),w,b
 17042  00097A  B0D8               	btfsc	status,0,c
 17043  00097C  D7C9               	goto	l10862
 17044  00097E                     u14910:
 17045                           
 17046                           ; BSR set to: 1
 17047                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 492:         --i;
 17048  00097E  07B0               	decf	efgtoa@i& (0+255),f,b
 17049  000980  A0D8               	btfss	status,0,c
 17050  000982  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
 17051                           
 17052                           ; BSR set to: 1
 17053                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
 17054  000984  519C               	movf	efgtoa@sign& (0+255),w,b
 17055  000986  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 17056  000988  A4D8               	btfss	status,2,c
 17057  00098A  D004               	goto	l10882
 17058                           
 17059                           ; BSR set to: 1
 17060  00098C  0E00               	movlw	0
 17061  00098E  6F8D               	movwf	(_efgtoa$2001+1)& (0+255),b
 17062  000990  0E2B               	movlw	43
 17063  000992  D003               	goto	L5
 17064  000994                     l10882:
 17065                           
 17066                           ; BSR set to: 1
 17067  000994  0E00               	movlw	0
 17068  000996  6F8D               	movwf	(_efgtoa$2001+1)& (0+255),b
 17069  000998  0E2D               	movlw	45
 17070  00099A                     L5:
 17071  00099A  6F8C               	movwf	_efgtoa$2001& (0+255),b
 17072                           
 17073                           ; BSR set to: 1
 17074  00099C  0E32               	movlw	low _dbuf
 17075  00099E  25B0               	addwf	efgtoa@i& (0+255),w,b
 17076  0009A0  6ED9               	movwf	fsr2l,c
 17077  0009A2  0E01               	movlw	high _dbuf
 17078  0009A4  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
 17079  0009A6  6EDA               	movwf	fsr2h,c
 17080  0009A8  C18C  FFDF         	movff	_efgtoa$2001,indf2
 17081                           
 17082                           ; BSR set to: 1
 17083                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 494:         --w;
 17084  0009AC  07A1               	decf	efgtoa@w& (0+255),f,b
 17085  0009AE  A0D8               	btfss	status,0,c
 17086  0009B0  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 17087                           
 17088                           ; BSR set to: 1
 17089                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17090  0009B2  07B0               	decf	efgtoa@i& (0+255),f,b
 17091  0009B4  A0D8               	btfss	status,0,c
 17092  0009B6  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
 17093                           
 17094                           ; BSR set to: 1
 17095  0009B8  0EBF               	movlw	191
 17096  0009BA  0100               	movlb	0	; () banked
 17097  0009BC  6FBF               	movwf	??_efgtoa& (0+255),b
 17098  0009BE  0EFF               	movlw	255
 17099  0009C0  6FC0               	movwf	(??_efgtoa+1)& (0+255),b
 17100  0009C2  51BE               	movf	efgtoa@c& (0+255),w,b
 17101  0009C4  6FC1               	movwf	(??_efgtoa+2)& (0+255),b
 17102  0009C6  6BC2               	clrf	(??_efgtoa+3)& (0+255),b
 17103  0009C8  51BF               	movf	??_efgtoa& (0+255),w,b
 17104  0009CA  27C1               	addwf	(??_efgtoa+2)& (0+255),f,b
 17105  0009CC  51C0               	movf	(??_efgtoa+1)& (0+255),w,b
 17106  0009CE  23C2               	addwfc	(??_efgtoa+3)& (0+255),f,b
 17107  0009D0  51C2               	movf	(??_efgtoa+3)& (0+255),w,b
 17108  0009D2  E106               	bnz	u14930
 17109  0009D4  0E1A               	movlw	26
 17110  0009D6  5DC1               	subwf	(??_efgtoa+2)& (0+255),w,b
 17111  0009D8  B0D8               	btfsc	status,0,c
 17112  0009DA  D002               	goto	u14930
 17113  0009DC  0E01               	movlw	1
 17114  0009DE  D001               	goto	u14940
 17115  0009E0                     u14930:
 17116  0009E0  0E00               	movlw	0
 17117  0009E2                     u14940:
 17118  0009E2  0101               	movlb	1	; () banked
 17119  0009E4  6F90               	movwf	_efgtoa$2003& (0+255),b
 17120  0009E6  6B91               	clrf	(_efgtoa$2003+1)& (0+255),b
 17121                           
 17122                           ; BSR set to: 1
 17123  0009E8  5190               	movf	_efgtoa$2003& (0+255),w,b
 17124  0009EA  1191               	iorwf	(_efgtoa$2003+1)& (0+255),w,b
 17125  0009EC  A4D8               	btfss	status,2,c
 17126  0009EE  D004               	goto	l10898
 17127                           
 17128                           ; BSR set to: 1
 17129  0009F0  0E00               	movlw	0
 17130  0009F2  6F8F               	movwf	(_efgtoa$2002+1)& (0+255),b
 17131  0009F4  0E65               	movlw	101
 17132  0009F6  D003               	goto	L6
 17133  0009F8                     l10898:
 17134                           
 17135                           ; BSR set to: 1
 17136  0009F8  0E00               	movlw	0
 17137  0009FA  6F8F               	movwf	(_efgtoa$2002+1)& (0+255),b
 17138  0009FC  0E45               	movlw	69
 17139  0009FE                     L6:
 17140  0009FE  6F8E               	movwf	_efgtoa$2002& (0+255),b
 17141                           
 17142                           ; BSR set to: 1
 17143  000A00  0E32               	movlw	low _dbuf
 17144  000A02  25B0               	addwf	efgtoa@i& (0+255),w,b
 17145  000A04  6ED9               	movwf	fsr2l,c
 17146  000A06  0E01               	movlw	high _dbuf
 17147  000A08  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
 17148  000A0A  6EDA               	movwf	fsr2h,c
 17149  000A0C  C18E  FFDF         	movff	_efgtoa$2002,indf2
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 497:         --w;
 17153  000A10  07A1               	decf	efgtoa@w& (0+255),f,b
 17154  000A12  A0D8               	btfss	status,0,c
 17155  000A14  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 17156                           
 17157                           ; BSR set to: 1
 17158                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
 17159  000A16  0E32               	movlw	low _dbuf
 17160  000A18  25B4               	addwf	efgtoa@n& (0+255),w,b
 17161  000A1A  0100               	movlb	0	; () banked
 17162  000A1C  6F65               	movwf	strcpy@dest& (0+255),b
 17163  000A1E  0E01               	movlw	high _dbuf
 17164  000A20  0101               	movlb	1	; () banked
 17165  000A22  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 17166  000A24  0100               	movlb	0	; () banked
 17167  000A26  6F66               	movwf	(strcpy@dest+1)& (0+255),b
 17168  000A28  0E32               	movlw	low _dbuf
 17169  000A2A  0101               	movlb	1	; () banked
 17170  000A2C  25B0               	addwf	efgtoa@i& (0+255),w,b
 17171  000A2E  0100               	movlb	0	; () banked
 17172  000A30  6F67               	movwf	strcpy@src& (0+255),b
 17173  000A32  0E01               	movlw	high _dbuf
 17174  000A34  0101               	movlb	1	; () banked
 17175  000A36  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
 17176  000A38  0100               	movlb	0	; () banked
 17177  000A3A  6F68               	movwf	(strcpy@src+1)& (0+255),b
 17178  000A3C  EC94  F025         	call	_strcpy	;wreg free
 17179  000A40  EFD3  F000         	goto	l10656
 17180  000A44                     __end_of_efgtoa:
 17181                           	callstack 0
 17182                           
 17183 ;; *************** function _tolower *****************
 17184 ;; Defined at:
 17185 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\tolower.c"
 17186 ;; Parameters:    Size  Location     Type
 17187 ;;  c               2   11[BANK0 ] int 
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;		None
 17190 ;; Return value:  Size  Location     Type
 17191 ;;                  2   11[BANK0 ] int 
 17192 ;; Registers used:
 17193 ;;		wreg, status,2, status,0
 17194 ;; Tracked objects:
 17195 ;;		On entry : 3F/0
 17196 ;;		On exit  : 3F/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17199 ;;      Params:         0       2       0       0       0       0       0       0       0
 17200 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17201 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17202 ;;      Totals:         0       8       0       0       0       0       0       0       0
 17203 ;;Total ram usage:        8 bytes
 17204 ;; Hardware stack levels used:    1
 17205 ;; Hardware stack levels required when called:    8
 17206 ;; This function calls:
 17207 ;;		_isupper
 17208 ;; This function is called by:
 17209 ;;		_efgtoa
 17210 ;;		_vfpfcnvrt
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text28
 17215  004C1C                     __ptext28:
 17216                           	callstack 0
 17217  004C1C                     _tolower:
 17218                           	callstack 18
 17219                           
 17220                           ; BSR set to: 0
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;incstack = 0
 17224  004C1C  0EBF               	movlw	191
 17225  004C1E  6F6D               	movwf	??_tolower& (0+255),b
 17226  004C20  0EFF               	movlw	255
 17227  004C22  6F6E               	movwf	(??_tolower+1)& (0+255),b
 17228  004C24  C06B  F06F         	movff	tolower@c,??_tolower+2
 17229  004C28  C06C  F070         	movff	tolower@c+1,??_tolower+3
 17230  004C2C  516D               	movf	??_tolower& (0+255),w,b
 17231  004C2E  276F               	addwf	(??_tolower+2)& (0+255),f,b
 17232  004C30  516E               	movf	(??_tolower+1)& (0+255),w,b
 17233  004C32  2370               	addwfc	(??_tolower+3)& (0+255),f,b
 17234  004C34  5170               	movf	(??_tolower+3)& (0+255),w,b
 17235  004C36  E106               	bnz	u14120
 17236  004C38  0E1A               	movlw	26
 17237  004C3A  5D6F               	subwf	(??_tolower+2)& (0+255),w,b
 17238  004C3C  B0D8               	btfsc	status,0,c
 17239  004C3E  D002               	goto	u14120
 17240  004C40  0E01               	movlw	1
 17241  004C42  D001               	goto	u14130
 17242  004C44                     u14120:
 17243  004C44  0E00               	movlw	0
 17244  004C46                     u14130:
 17245  004C46  6F71               	movwf	_tolower$2154& (0+255),b
 17246  004C48  6B72               	clrf	(_tolower$2154+1)& (0+255),b
 17247                           
 17248                           ; BSR set to: 0
 17249  004C4A  5171               	movf	_tolower$2154& (0+255),w,b
 17250  004C4C  1172               	iorwf	(_tolower$2154+1)& (0+255),w,b
 17251  004C4E  B4D8               	btfsc	status,2,c
 17252  004C50  D006               	goto	l1650
 17253                           
 17254                           ; BSR set to: 0
 17255  004C52  0E20               	movlw	32
 17256  004C54  116B               	iorwf	tolower@c& (0+255),w,b
 17257  004C56  6F6B               	movwf	?_tolower& (0+255),b
 17258  004C58  516C               	movf	(tolower@c+1)& (0+255),w,b
 17259  004C5A  6F6C               	movwf	(?_tolower+1)& (0+255),b
 17260  004C5C  0012               	return	
 17261  004C5E                     l1650:
 17262                           
 17263                           ; BSR set to: 0
 17264  004C5E  C06B  F06B         	movff	tolower@c,?_tolower
 17265  004C62  C06C  F06C         	movff	tolower@c+1,?_tolower+1
 17266                           
 17267                           ; BSR set to: 0
 17268  004C66  0012               	return		;funcret
 17269  004C68                     __end_of_tolower:
 17270                           	callstack 0
 17271                           
 17272 ;; *************** function _isupper *****************
 17273 ;; Defined at:
 17274 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\isupper.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;  c               2    5[BANK0 ] int 
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  2    5[BANK0 ] int 
 17281 ;; Registers used:
 17282 ;;		wreg, status,2, status,0
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 3F/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17288 ;;      Params:         0       2       0       0       0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17290 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17291 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17292 ;;Total ram usage:        6 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:    7
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_efgtoa
 17299 ;;		_vfpfcnvrt
 17300 ;;		_tolower
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           	psect	text29
 17305  004F4C                     __ptext29:
 17306                           	callstack 0
 17307  004F4C                     _isupper:
 17308                           	callstack 18
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;incstack = 0
 17312  004F4C  0EBF               	movlw	191
 17313  004F4E  0100               	movlb	0	; () banked
 17314  004F50  6F67               	movwf	??_isupper& (0+255),b
 17315  004F52  0EFF               	movlw	255
 17316  004F54  6F68               	movwf	(??_isupper+1)& (0+255),b
 17317  004F56  C065  F069         	movff	isupper@c,??_isupper+2
 17318  004F5A  C066  F06A         	movff	isupper@c+1,??_isupper+3
 17319  004F5E  5167               	movf	??_isupper& (0+255),w,b
 17320  004F60  2769               	addwf	(??_isupper+2)& (0+255),f,b
 17321  004F62  5168               	movf	(??_isupper+1)& (0+255),w,b
 17322  004F64  236A               	addwfc	(??_isupper+3)& (0+255),f,b
 17323  004F66  516A               	movf	(??_isupper+3)& (0+255),w,b
 17324  004F68  E106               	bnz	u13140
 17325  004F6A  0E1A               	movlw	26
 17326  004F6C  5D69               	subwf	(??_isupper+2)& (0+255),w,b
 17327  004F6E  B0D8               	btfsc	status,0,c
 17328  004F70  D002               	goto	u13140
 17329  004F72  0E01               	movlw	1
 17330  004F74  D001               	goto	u13150
 17331  004F76                     u13140:
 17332  004F76  0E00               	movlw	0
 17333  004F78                     u13150:
 17334  004F78  6F65               	movwf	?_isupper& (0+255),b
 17335  004F7A  6B66               	clrf	(?_isupper+1)& (0+255),b
 17336                           
 17337                           ; BSR set to: 0
 17338  004F7C  0012               	return		;funcret
 17339  004F7E                     __end_of_isupper:
 17340                           	callstack 0
 17341                           
 17342 ;; *************** function _strcpy *****************
 17343 ;; Defined at:
 17344 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\strcpy.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;  dest            2    5[BANK0 ] PTR unsigned char 
 17347 ;;		 -> dbuf(80), 
 17348 ;;  src             2    7[BANK0 ] PTR const unsigned char 
 17349 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 17350 ;;		 -> dbuf(80), 
 17351 ;; Auto vars:     Size  Location     Type
 17352 ;;  d               2   13[BANK0 ] PTR unsigned char 
 17353 ;;		 -> dbuf(80), 
 17354 ;;  s               2   11[BANK0 ] PTR const unsigned char 
 17355 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 17356 ;;		 -> dbuf(80), 
 17357 ;; Return value:  Size  Location     Type
 17358 ;;                  2    5[BANK0 ] PTR unsigned char 
 17359 ;; Registers used:
 17360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17361 ;; Tracked objects:
 17362 ;;		On entry : 3F/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17366 ;;      Params:         0       4       0       0       0       0       0       0       0
 17367 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17368 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17369 ;;      Totals:         0      10       0       0       0       0       0       0       0
 17370 ;;Total ram usage:       10 bytes
 17371 ;; Hardware stack levels used:    1
 17372 ;; Hardware stack levels required when called:    7
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_efgtoa
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           	psect	text30
 17381  004B28                     __ptext30:
 17382                           	callstack 0
 17383  004B28                     _strcpy:
 17384                           	callstack 18
 17385                           
 17386                           ; BSR set to: 0
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;incstack = 0
 17390  004B28  C067  F06B         	movff	strcpy@src,strcpy@s
 17391  004B2C  C068  F06C         	movff	strcpy@src+1,strcpy@s+1
 17392  004B30  C065  F06D         	movff	strcpy@dest,strcpy@d
 17393  004B34  C066  F06E         	movff	strcpy@dest+1,strcpy@d+1
 17394  004B38                     l10494:
 17395  004B38  0100               	movlb	0	; () banked
 17396  004B3A  516B               	movf	strcpy@s& (0+255),w,b
 17397  004B3C  6F69               	movwf	??_strcpy& (0+255),b
 17398  004B3E  516C               	movf	(strcpy@s+1)& (0+255),w,b
 17399  004B40  6F6A               	movwf	(??_strcpy+1)& (0+255),b
 17400  004B42  4B6B               	infsnz	strcpy@s& (0+255),f,b
 17401  004B44  2B6C               	incf	(strcpy@s+1)& (0+255),f,b
 17402  004B46  C069  FFF6         	movff	??_strcpy,tblptrl
 17403  004B4A  C06A  FFF7         	movff	??_strcpy+1,tblptrh
 17404  004B4E  6AF8               	clrf	tblptru,c
 17405  004B50  C06D  FFD9         	movff	strcpy@d,fsr2l
 17406  004B54  C06E  FFDA         	movff	strcpy@d+1,fsr2h
 17407  004B58  4B6D               	infsnz	strcpy@d& (0+255),f,b
 17408  004B5A  2B6E               	incf	(strcpy@d+1)& (0+255),f,b
 17409  004B5C  0E07               	movlw	(high __ramtop+-1)
 17410  004B5E  64F7               	cpfsgt	tblptrh,c
 17411  004B60  D003               	bra	u14107
 17412  004B62  0008               	tblrd		*
 17413  004B64  50F5               	movf	tablat,w,c
 17414  004B66  D005               	bra	u14100
 17415  004B68                     u14107:
 17416  004B68  CFF6 FFE1          	movff	tblptrl,fsr1l
 17417  004B6C  CFF7 FFE2          	movff	tblptrh,fsr1h
 17418  004B70  50E7               	movf	indf1,w,c
 17419  004B72                     u14100:
 17420  004B72  6EDF               	movwf	indf2,c
 17421  004B74  50DF               	movf	indf2,w,c
 17422  004B76  B4D8               	btfsc	status,2,c
 17423  004B78  0012               	return	
 17424  004B7A  D7DE               	goto	l10494
 17425  004B7C                     __end_of_strcpy:
 17426                           	callstack 0
 17427                           
 17428 ;; *************** function _floorf *****************
 17429 ;; Defined at:
 17430 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\floorf.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;  x               4   69[BANK0 ] float 
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;  u               4   85[BANK0 ] struct .
 17435 ;;  m               4   79[BANK0 ] unsigned long 
 17436 ;;  e               2   83[BANK0 ] int 
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  4   69[BANK0 ] float 
 17439 ;; Registers used:
 17440 ;;		wreg, status,2, status,0
 17441 ;; Tracked objects:
 17442 ;;		On entry : 3F/0
 17443 ;;		On exit  : 3F/0
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17446 ;;      Params:         0       4       0       0       0       0       0       0       0
 17447 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17448 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17449 ;;      Totals:         0      20       0       0       0       0       0       0       0
 17450 ;;Total ram usage:       20 bytes
 17451 ;; Hardware stack levels used:    1
 17452 ;; Hardware stack levels required when called:    7
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_efgtoa
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           	psect	text31
 17461  003016                     __ptext31:
 17462                           	callstack 0
 17463  003016                     _floorf:
 17464                           	callstack 18
 17465                           
 17466                           ; BSR set to: 0
 17467                           
 17468                           ;incstack = 0
 17469  003016  C119  F0B5         	movff	floorf@F524,floorf@u
 17470  00301A  C11A  F0B6         	movff	floorf@F524+1,floorf@u+1
 17471  00301E  C11B  F0B7         	movff	floorf@F524+2,floorf@u+2
 17472  003022  C11C  F0B8         	movff	floorf@F524+3,floorf@u+3
 17473  003026  C0A5  F0B5         	movff	floorf@x,floorf@u
 17474  00302A  C0A6  F0B6         	movff	floorf@x+1,floorf@u+1
 17475  00302E  C0A7  F0B7         	movff	floorf@x+2,floorf@u+2
 17476  003032  C0A8  F0B8         	movff	floorf@x+3,floorf@u+3
 17477                           
 17478                           ; BSR set to: 0
 17479  003036  0E81               	movlw	129
 17480  003038  6FA9               	movwf	??_floorf& (0+255),b
 17481  00303A  0EFF               	movlw	255
 17482  00303C  6FAA               	movwf	(??_floorf+1)& (0+255),b
 17483  00303E  C0B5  F0AB         	movff	floorf@u,??_floorf+2
 17484  003042  C0B6  F0AC         	movff	floorf@u+1,??_floorf+3
 17485  003046  C0B7  F0AD         	movff	floorf@u+2,??_floorf+4
 17486  00304A  C0B8  F0AE         	movff	floorf@u+3,??_floorf+5
 17487  00304E  0E18               	movlw	24
 17488  003050  D005               	goto	u14150
 17489  003052                     u14155:
 17490  003052  90D8               	bcf	status,0,c
 17491  003054  33AE               	rrcf	(??_floorf+5)& (0+255),f,b
 17492  003056  33AD               	rrcf	(??_floorf+4)& (0+255),f,b
 17493  003058  33AC               	rrcf	(??_floorf+3)& (0+255),f,b
 17494  00305A  33AB               	rrcf	(??_floorf+2)& (0+255),f,b
 17495  00305C                     u14150:
 17496  00305C  2EE8               	decfsz	wreg,f,c
 17497  00305E  D7F9               	goto	u14155
 17498  003060  51AB               	movf	(??_floorf+2)& (0+255),w,b
 17499  003062  25A9               	addwf	??_floorf& (0+255),w,b
 17500  003064  6FB3               	movwf	floorf@e& (0+255),b
 17501  003066  0E00               	movlw	0
 17502  003068  21AA               	addwfc	(??_floorf+1)& (0+255),w,b
 17503  00306A  6FB4               	movwf	(floorf@e+1)& (0+255),b
 17504  00306C  BFB4               	btfsc	(floorf@e+1)& (0+255),7,b
 17505  00306E  D00F               	goto	l10512
 17506  003070  51B4               	movf	(floorf@e+1)& (0+255),w,b
 17507  003072  E104               	bnz	u14160
 17508  003074  0E17               	movlw	23
 17509  003076  5DB3               	subwf	floorf@e& (0+255),w,b
 17510  003078  A0D8               	btfss	status,0,c
 17511  00307A  D009               	goto	l10512
 17512  00307C                     u14160:
 17513                           
 17514                           ; BSR set to: 0
 17515  00307C  C0A5  F0A5         	movff	floorf@x,?_floorf
 17516  003080  C0A6  F0A6         	movff	floorf@x+1,?_floorf+1
 17517  003084  C0A7  F0A7         	movff	floorf@x+2,?_floorf+2
 17518  003088  C0A8  F0A8         	movff	floorf@x+3,?_floorf+3
 17519  00308C  0012               	return	
 17520  00308E                     l10512:
 17521                           
 17522                           ; BSR set to: 0
 17523  00308E  BFB4               	btfsc	(floorf@e+1)& (0+255),7,b
 17524  003090  D05C               	goto	l10522
 17525                           
 17526                           ; BSR set to: 0
 17527  003092  C0B3  F0A9         	movff	floorf@e,??_floorf
 17528  003096  0EFF               	movlw	255
 17529  003098  6FAA               	movwf	(??_floorf+1)& (0+255),b
 17530  00309A  0EFF               	movlw	255
 17531  00309C  6FAB               	movwf	(??_floorf+2)& (0+255),b
 17532  00309E  0E7F               	movlw	127
 17533  0030A0  6FAC               	movwf	(??_floorf+3)& (0+255),b
 17534  0030A2  0E00               	movlw	0
 17535  0030A4  6FAD               	movwf	(??_floorf+4)& (0+255),b
 17536  0030A6                     u14185:
 17537  0030A6  67A9               	tstfsz	??_floorf& (0+255),b
 17538  0030A8  D001               	goto	u14186
 17539  0030AA  D007               	goto	u14187
 17540  0030AC                     u14186:
 17541  0030AC  35AD               	rlcf	(??_floorf+4)& (0+255),w,b
 17542  0030AE  33AD               	rrcf	(??_floorf+4)& (0+255),f,b
 17543  0030B0  33AC               	rrcf	(??_floorf+3)& (0+255),f,b
 17544  0030B2  33AB               	rrcf	(??_floorf+2)& (0+255),f,b
 17545  0030B4  33AA               	rrcf	(??_floorf+1)& (0+255),f,b
 17546  0030B6  2FA9               	decfsz	??_floorf& (0+255),f,b
 17547  0030B8  D7F6               	goto	u14185
 17548  0030BA                     u14187:
 17549  0030BA  C0AA  F0AF         	movff	??_floorf+1,floorf@m
 17550  0030BE  C0AB  F0B0         	movff	??_floorf+2,floorf@m+1
 17551  0030C2  C0AC  F0B1         	movff	??_floorf+3,floorf@m+2
 17552  0030C6  C0AD  F0B2         	movff	??_floorf+4,floorf@m+3
 17553  0030CA  0100               	movlb	0	; () banked
 17554  0030CC  51AF               	movf	floorf@m& (0+255),w,b
 17555  0030CE  15B5               	andwf	floorf@u& (0+255),w,b
 17556  0030D0  6FA9               	movwf	??_floorf& (0+255),b
 17557  0030D2  51B0               	movf	(floorf@m+1)& (0+255),w,b
 17558  0030D4  15B6               	andwf	(floorf@u+1)& (0+255),w,b
 17559  0030D6  6FAA               	movwf	(??_floorf+1)& (0+255),b
 17560  0030D8  51B1               	movf	(floorf@m+2)& (0+255),w,b
 17561  0030DA  15B7               	andwf	(floorf@u+2)& (0+255),w,b
 17562  0030DC  6FAB               	movwf	(??_floorf+2)& (0+255),b
 17563  0030DE  51B2               	movf	(floorf@m+3)& (0+255),w,b
 17564  0030E0  15B8               	andwf	(floorf@u+3)& (0+255),w,b
 17565  0030E2  6FAC               	movwf	(??_floorf+3)& (0+255),b
 17566  0030E4  51A9               	movf	??_floorf& (0+255),w,b
 17567  0030E6  11AA               	iorwf	(??_floorf+1)& (0+255),w,b
 17568  0030E8  11AB               	iorwf	(??_floorf+2)& (0+255),w,b
 17569  0030EA  11AC               	iorwf	(??_floorf+3)& (0+255),w,b
 17570  0030EC  B4D8               	btfsc	status,2,c
 17571  0030EE  D7C6               	goto	u14160
 17572                           
 17573                           ; BSR set to: 0
 17574  0030F0  C0B5  F0A9         	movff	floorf@u,??_floorf
 17575  0030F4  C0B6  F0AA         	movff	floorf@u+1,??_floorf+1
 17576  0030F8  C0B7  F0AB         	movff	floorf@u+2,??_floorf+2
 17577  0030FC  C0B8  F0AC         	movff	floorf@u+3,??_floorf+3
 17578  003100  0E20               	movlw	32
 17579  003102  D005               	goto	u14200
 17580  003104                     u14205:
 17581  003104  90D8               	bcf	status,0,c
 17582  003106  33AC               	rrcf	(??_floorf+3)& (0+255),f,b
 17583  003108  33AB               	rrcf	(??_floorf+2)& (0+255),f,b
 17584  00310A  33AA               	rrcf	(??_floorf+1)& (0+255),f,b
 17585  00310C  33A9               	rrcf	??_floorf& (0+255),f,b
 17586  00310E                     u14200:
 17587  00310E  2EE8               	decfsz	wreg,f,c
 17588  003110  D7F9               	goto	u14205
 17589  003112  51A9               	movf	??_floorf& (0+255),w,b
 17590  003114  B4D8               	btfsc	status,2,c
 17591  003116  D008               	goto	l1577
 17592                           
 17593                           ; BSR set to: 0
 17594  003118  51AF               	movf	floorf@m& (0+255),w,b
 17595  00311A  27B5               	addwf	floorf@u& (0+255),f,b
 17596  00311C  51B0               	movf	(floorf@m+1)& (0+255),w,b
 17597  00311E  23B6               	addwfc	(floorf@u+1)& (0+255),f,b
 17598  003120  51B1               	movf	(floorf@m+2)& (0+255),w,b
 17599  003122  23B7               	addwfc	(floorf@u+2)& (0+255),f,b
 17600  003124  51B2               	movf	(floorf@m+3)& (0+255),w,b
 17601  003126  23B8               	addwfc	(floorf@u+3)& (0+255),f,b
 17602  003128                     l1577:
 17603                           
 17604                           ; BSR set to: 0
 17605  003128  1DAF               	comf	floorf@m& (0+255),w,b
 17606  00312A  6FA9               	movwf	??_floorf& (0+255),b
 17607  00312C  1DB0               	comf	(floorf@m+1)& (0+255),w,b
 17608  00312E  6FAA               	movwf	(??_floorf+1)& (0+255),b
 17609  003130  1DB1               	comf	(floorf@m+2)& (0+255),w,b
 17610  003132  6FAB               	movwf	(??_floorf+2)& (0+255),b
 17611  003134  1DB2               	comf	(floorf@m+3)& (0+255),w,b
 17612  003136  6FAC               	movwf	(??_floorf+3)& (0+255),b
 17613  003138  51A9               	movf	??_floorf& (0+255),w,b
 17614  00313A  17B5               	andwf	floorf@u& (0+255),f,b
 17615  00313C  51AA               	movf	(??_floorf+1)& (0+255),w,b
 17616  00313E  17B6               	andwf	(floorf@u+1)& (0+255),f,b
 17617  003140  51AB               	movf	(??_floorf+2)& (0+255),w,b
 17618  003142  17B7               	andwf	(floorf@u+2)& (0+255),f,b
 17619  003144  51AC               	movf	(??_floorf+3)& (0+255),w,b
 17620  003146  17B8               	andwf	(floorf@u+3)& (0+255),f,b
 17621  003148  D032               	goto	l10530
 17622  00314A                     l10522:
 17623                           
 17624                           ; BSR set to: 0
 17625  00314A  C0B5  F0A9         	movff	floorf@u,??_floorf
 17626  00314E  C0B6  F0AA         	movff	floorf@u+1,??_floorf+1
 17627  003152  C0B7  F0AB         	movff	floorf@u+2,??_floorf+2
 17628  003156  C0B8  F0AC         	movff	floorf@u+3,??_floorf+3
 17629  00315A  0E20               	movlw	32
 17630  00315C  D005               	goto	u14220
 17631  00315E                     u14225:
 17632  00315E  90D8               	bcf	status,0,c
 17633  003160  33AC               	rrcf	(??_floorf+3)& (0+255),f,b
 17634  003162  33AB               	rrcf	(??_floorf+2)& (0+255),f,b
 17635  003164  33AA               	rrcf	(??_floorf+1)& (0+255),f,b
 17636  003166  33A9               	rrcf	??_floorf& (0+255),f,b
 17637  003168                     u14220:
 17638  003168  2EE8               	decfsz	wreg,f,c
 17639  00316A  D7F9               	goto	u14225
 17640  00316C  67A9               	tstfsz	??_floorf& (0+255),b
 17641  00316E  D008               	goto	l10526
 17642                           
 17643                           ; BSR set to: 0
 17644  003170  0E00               	movlw	0
 17645  003172  6FB5               	movwf	floorf@u& (0+255),b
 17646  003174  0E00               	movlw	0
 17647  003176  6FB6               	movwf	(floorf@u+1)& (0+255),b
 17648  003178  0E00               	movlw	0
 17649  00317A  6FB7               	movwf	(floorf@u+2)& (0+255),b
 17650  00317C  0E00               	movlw	0
 17651  00317E  D016               	goto	L7
 17652  003180                     l10526:
 17653                           
 17654                           ; BSR set to: 0
 17655  003180  90D8               	bcf	status,0,c
 17656  003182  35B5               	rlcf	floorf@u& (0+255),w,b
 17657  003184  6FA9               	movwf	??_floorf& (0+255),b
 17658  003186  35B6               	rlcf	(floorf@u+1)& (0+255),w,b
 17659  003188  6FAA               	movwf	(??_floorf+1)& (0+255),b
 17660  00318A  35B7               	rlcf	(floorf@u+2)& (0+255),w,b
 17661  00318C  6FAB               	movwf	(??_floorf+2)& (0+255),b
 17662  00318E  35B8               	rlcf	(floorf@u+3)& (0+255),w,b
 17663  003190  6FAC               	movwf	(??_floorf+3)& (0+255),b
 17664  003192  51A9               	movf	??_floorf& (0+255),w,b
 17665  003194  11AA               	iorwf	(??_floorf+1)& (0+255),w,b
 17666  003196  11AB               	iorwf	(??_floorf+2)& (0+255),w,b
 17667  003198  11AC               	iorwf	(??_floorf+3)& (0+255),w,b
 17668  00319A  B4D8               	btfsc	status,2,c
 17669  00319C  D008               	goto	l10530
 17670                           
 17671                           ; BSR set to: 0
 17672  00319E  0E00               	movlw	0
 17673  0031A0  6FB5               	movwf	floorf@u& (0+255),b
 17674  0031A2  0E00               	movlw	0
 17675  0031A4  6FB6               	movwf	(floorf@u+1)& (0+255),b
 17676  0031A6  0E80               	movlw	128
 17677  0031A8  6FB7               	movwf	(floorf@u+2)& (0+255),b
 17678  0031AA  0EBF               	movlw	191
 17679  0031AC                     L7:
 17680  0031AC  6FB8               	movwf	(floorf@u+3)& (0+255),b
 17681  0031AE                     l10530:
 17682                           
 17683                           ; BSR set to: 0
 17684  0031AE  C0B5  F0A5         	movff	floorf@u,?_floorf
 17685  0031B2  C0B6  F0A6         	movff	floorf@u+1,?_floorf+1
 17686  0031B6  C0B7  F0A7         	movff	floorf@u+2,?_floorf+2
 17687  0031BA  C0B8  F0A8         	movff	floorf@u+3,?_floorf+3
 17688                           
 17689                           ; BSR set to: 0
 17690  0031BE  0012               	return		;funcret
 17691  0031C0                     __end_of_floorf:
 17692                           	callstack 0
 17693                           
 17694 ;; *************** function ___fpclassifyf *****************
 17695 ;; Defined at:
 17696 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\__fpclassifyf.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;  x               4    5[BANK0 ] float 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  u               4   15[BANK0 ] struct .
 17701 ;;  e               2   13[BANK0 ] int 
 17702 ;; Return value:  Size  Location     Type
 17703 ;;                  2    5[BANK0 ] int 
 17704 ;; Registers used:
 17705 ;;		wreg, status,2, status,0
 17706 ;; Tracked objects:
 17707 ;;		On entry : 3E/1
 17708 ;;		On exit  : 3F/0
 17709 ;;		Unchanged: 0/0
 17710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17711 ;;      Params:         0       4       0       0       0       0       0       0       0
 17712 ;;      Locals:         0       6       0       0       0       0       0       0       0
 17713 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17714 ;;      Totals:         0      14       0       0       0       0       0       0       0
 17715 ;;Total ram usage:       14 bytes
 17716 ;; Hardware stack levels used:    1
 17717 ;; Hardware stack levels required when called:    7
 17718 ;; This function calls:
 17719 ;;		Nothing
 17720 ;; This function is called by:
 17721 ;;		_efgtoa
 17722 ;; This function uses a non-reentrant model
 17723 ;;
 17724                           
 17725                           	psect	text32
 17726  00421C                     __ptext32:
 17727                           	callstack 0
 17728  00421C                     ___fpclassifyf:
 17729                           	callstack 18
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;incstack = 0
 17733  00421C  C03B  F06F         	movff	___fpclassifyf@F463,___fpclassifyf@u
 17734  004220  C03C  F070         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 17735  004224  C03D  F071         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 17736  004228  C03E  F072         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 17737  00422C  C065  F06F         	movff	___fpclassifyf@x,___fpclassifyf@u
 17738  004230  C066  F070         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 17739  004234  C067  F071         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 17740  004238  C068  F072         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 17741  00423C  C06F  F069         	movff	___fpclassifyf@u,??___fpclassifyf
 17742  004240  C070  F06A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17743  004244  C071  F06B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17744  004248  C072  F06C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17745  00424C  0E18               	movlw	24
 17746  00424E  D006               	goto	u14030
 17747  004250                     u14035:
 17748  004250  0100               	movlb	0	; () banked
 17749  004252  90D8               	bcf	status,0,c
 17750  004254  336C               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 17751  004256  336B               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 17752  004258  336A               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 17753  00425A  3369               	rrcf	??___fpclassifyf& (0+255),f,b
 17754  00425C                     u14030:
 17755  00425C  2EE8               	decfsz	wreg,f,c
 17756  00425E  D7F8               	goto	u14035
 17757  004260  5169               	movf	??___fpclassifyf& (0+255),w,b
 17758  004262  6F6D               	movwf	___fpclassifyf@e& (0+255),b
 17759  004264  6B6E               	clrf	(___fpclassifyf@e+1)& (0+255),b
 17760  004266  516D               	movf	___fpclassifyf@e& (0+255),w,b
 17761  004268  116E               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 17762  00426A  A4D8               	btfss	status,2,c
 17763  00426C  D019               	goto	l10482
 17764                           
 17765                           ; BSR set to: 0
 17766  00426E  90D8               	bcf	status,0,c
 17767  004270  356F               	rlcf	___fpclassifyf@u& (0+255),w,b
 17768  004272  6F69               	movwf	??___fpclassifyf& (0+255),b
 17769  004274  3570               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 17770  004276  6F6A               	movwf	(??___fpclassifyf+1)& (0+255),b
 17771  004278  3571               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 17772  00427A  6F6B               	movwf	(??___fpclassifyf+2)& (0+255),b
 17773  00427C  3572               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 17774  00427E  6F6C               	movwf	(??___fpclassifyf+3)& (0+255),b
 17775  004280  5169               	movf	??___fpclassifyf& (0+255),w,b
 17776  004282  116A               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 17777  004284  116B               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 17778  004286  116C               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 17779  004288  A4D8               	btfss	status,2,c
 17780  00428A  D005               	goto	l10478
 17781                           
 17782                           ; BSR set to: 0
 17783  00428C  0E00               	movlw	0
 17784  00428E  6F66               	movwf	(?___fpclassifyf+1)& (0+255),b
 17785  004290  0E02               	movlw	2
 17786  004292  6F65               	movwf	?___fpclassifyf& (0+255),b
 17787  004294  0012               	return	
 17788  004296                     l10478:
 17789                           
 17790                           ; BSR set to: 0
 17791  004296  0E00               	movlw	0
 17792  004298  6F66               	movwf	(?___fpclassifyf+1)& (0+255),b
 17793  00429A  0E03               	movlw	3
 17794  00429C  6F65               	movwf	?___fpclassifyf& (0+255),b
 17795  00429E  0012               	return	
 17796  0042A0                     l10482:
 17797                           
 17798                           ; BSR set to: 0
 17799  0042A0  296D               	incf	___fpclassifyf@e& (0+255),w,b
 17800  0042A2  116E               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 17801  0042A4  A4D8               	btfss	status,2,c
 17802  0042A6  D01C               	goto	l10488
 17803                           
 17804                           ; BSR set to: 0
 17805  0042A8  C06F  F069         	movff	___fpclassifyf@u,??___fpclassifyf
 17806  0042AC  C070  F06A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17807  0042B0  C071  F06B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17808  0042B4  C072  F06C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17809  0042B8  0E09               	movlw	9
 17810  0042BA                     u14075:
 17811  0042BA  90D8               	bcf	status,0,c
 17812  0042BC  3769               	rlcf	??___fpclassifyf& (0+255),f,b
 17813  0042BE  376A               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 17814  0042C0  376B               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 17815  0042C2  376C               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 17816  0042C4  2EE8               	decfsz	wreg,f,c
 17817  0042C6  D7F9               	goto	u14075
 17818  0042C8  5169               	movf	??___fpclassifyf& (0+255),w,b
 17819  0042CA  116A               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 17820  0042CC  116B               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 17821  0042CE  116C               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 17822  0042D0  A4D8               	btfss	status,2,c
 17823  0042D2  D002               	goto	u14080
 17824  0042D4  0E01               	movlw	1
 17825  0042D6  D001               	goto	u14090
 17826  0042D8                     u14080:
 17827  0042D8  0E00               	movlw	0
 17828  0042DA                     u14090:
 17829  0042DA  6F65               	movwf	?___fpclassifyf& (0+255),b
 17830  0042DC  6B66               	clrf	(?___fpclassifyf+1)& (0+255),b
 17831  0042DE  0012               	return	
 17832  0042E0                     l10488:
 17833                           
 17834                           ; BSR set to: 0
 17835  0042E0  0E00               	movlw	0
 17836  0042E2  6F66               	movwf	(?___fpclassifyf+1)& (0+255),b
 17837  0042E4  0E04               	movlw	4
 17838  0042E6  6F65               	movwf	?___fpclassifyf& (0+255),b
 17839                           
 17840                           ; BSR set to: 0
 17841  0042E8  0012               	return		;funcret
 17842  0042EA                     __end_of___fpclassifyf:
 17843                           	callstack 0
 17844                           
 17845 ;; *************** function ___flsub *****************
 17846 ;; Defined at:
 17847 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\sprcadd.c"
 17848 ;; Parameters:    Size  Location     Type
 17849 ;;  b               4   44[BANK0 ] int 
 17850 ;;  a               4   48[BANK0 ] int 
 17851 ;; Auto vars:     Size  Location     Type
 17852 ;;		None
 17853 ;; Return value:  Size  Location     Type
 17854 ;;                  4   44[BANK0 ] int 
 17855 ;; Registers used:
 17856 ;;		wreg, status,2, status,0, cstack
 17857 ;; Tracked objects:
 17858 ;;		On entry : 3F/0
 17859 ;;		On exit  : 3F/0
 17860 ;;		Unchanged: 0/0
 17861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17862 ;;      Params:         0       8       0       0       0       0       0       0       0
 17863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17865 ;;      Totals:         0       8       0       0       0       0       0       0       0
 17866 ;;Total ram usage:        8 bytes
 17867 ;; Hardware stack levels used:    1
 17868 ;; Hardware stack levels required when called:    8
 17869 ;; This function calls:
 17870 ;;		___fladd
 17871 ;; This function is called by:
 17872 ;;		_efgtoa
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           	psect	text33
 17877  004CAE                     __ptext33:
 17878                           	callstack 0
 17879  004CAE                     ___flsub:
 17880                           	callstack 17
 17881                           
 17882                           ; BSR set to: 0
 17883                           
 17884                           ; BSR set to: 0
 17885                           ;incstack = 0
 17886  004CAE  0E00               	movlw	0
 17887  004CB0  1B90               	xorwf	___flsub@a& (0+255),f,b
 17888  004CB2  0E00               	movlw	0
 17889  004CB4  1B91               	xorwf	(___flsub@a+1)& (0+255),f,b
 17890  004CB6  0E00               	movlw	0
 17891  004CB8  1B92               	xorwf	(___flsub@a+2)& (0+255),f,b
 17892  004CBA  0E80               	movlw	128
 17893  004CBC  1B93               	xorwf	(___flsub@a+3)& (0+255),f,b
 17894                           
 17895                           ; BSR set to: 0
 17896  004CBE  C08C  F065         	movff	___flsub@b,___fladd@b
 17897  004CC2  C08D  F066         	movff	___flsub@b+1,___fladd@b+1
 17898  004CC6  C08E  F067         	movff	___flsub@b+2,___fladd@b+2
 17899  004CCA  C08F  F068         	movff	___flsub@b+3,___fladd@b+3
 17900  004CCE  C090  F069         	movff	___flsub@a,___fladd@a
 17901  004CD2  C091  F06A         	movff	___flsub@a+1,___fladd@a+1
 17902  004CD6  C092  F06B         	movff	___flsub@a+2,___fladd@a+2
 17903  004CDA  C093  F06C         	movff	___flsub@a+3,___fladd@a+3
 17904  004CDE  EC84  F011         	call	___fladd	;wreg free
 17905  004CE2  C065  F08C         	movff	?___fladd,?___flsub
 17906  004CE6  C066  F08D         	movff	?___fladd+1,?___flsub+1
 17907  004CEA  C067  F08E         	movff	?___fladd+2,?___flsub+2
 17908  004CEE  C068  F08F         	movff	?___fladd+3,?___flsub+3
 17909                           
 17910                           ; BSR set to: 0
 17911  004CF2  0012               	return		;funcret
 17912  004CF4                     __end_of___flsub:
 17913                           	callstack 0
 17914                           
 17915 ;; *************** function ___fladd *****************
 17916 ;; Defined at:
 17917 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\sprcadd.c"
 17918 ;; Parameters:    Size  Location     Type
 17919 ;;  b               4    5[BANK0 ] int 
 17920 ;;  a               4    9[BANK0 ] int 
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;  grs             1   20[BANK0 ] unsigned char 
 17923 ;;  bexp            1   19[BANK0 ] unsigned char 
 17924 ;;  aexp            1   18[BANK0 ] unsigned char 
 17925 ;;  signs           1   17[BANK0 ] unsigned char 
 17926 ;; Return value:  Size  Location     Type
 17927 ;;                  4    5[BANK0 ] unsigned char 
 17928 ;; Registers used:
 17929 ;;		wreg, status,2, status,0
 17930 ;; Tracked objects:
 17931 ;;		On entry : 3E/1
 17932 ;;		On exit  : 3F/0
 17933 ;;		Unchanged: 0/0
 17934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17935 ;;      Params:         0       8       0       0       0       0       0       0       0
 17936 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17937 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17938 ;;      Totals:         0      16       0       0       0       0       0       0       0
 17939 ;;Total ram usage:       16 bytes
 17940 ;; Hardware stack levels used:    1
 17941 ;; Hardware stack levels required when called:    7
 17942 ;; This function calls:
 17943 ;;		Nothing
 17944 ;; This function is called by:
 17945 ;;		___flsub
 17946 ;;		_efgtoa
 17947 ;; This function uses a non-reentrant model
 17948 ;;
 17949                           
 17950                           	psect	text34
 17951  002308                     __ptext34:
 17952                           	callstack 0
 17953  002308                     ___fladd:
 17954                           	callstack 17
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;incstack = 0
 17958  002308  0100               	movlb	0	; () banked
 17959  00230A  5168               	movf	(___fladd@b+3)& (0+255),w,b
 17960  00230C  0B80               	andlw	128
 17961  00230E  6F71               	movwf	___fladd@signs& (0+255),b
 17962  002310  5168               	movf	(___fladd@b+3)& (0+255),w,b
 17963  002312  2568               	addwf	(___fladd@b+3)& (0+255),w,b
 17964  002314  6F73               	movwf	___fladd@bexp& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967  002316  BF67               	btfsc	(___fladd@b+2)& (0+255),7,b
 17968                           
 17969                           ; BSR set to: 0
 17970  002318  8173               	bsf	___fladd@bexp& (0+255),0,b
 17971                           
 17972                           ; BSR set to: 0
 17973  00231A  5173               	movf	___fladd@bexp& (0+255),w,b
 17974  00231C  B4D8               	btfsc	status,2,c
 17975  00231E  D00D               	goto	l9706
 17976                           
 17977                           ; BSR set to: 0
 17978  002320  2973               	incf	___fladd@bexp& (0+255),w,b
 17979  002322  A4D8               	btfss	status,2,c
 17980  002324  D008               	goto	l9702
 17981                           
 17982                           ; BSR set to: 0
 17983  002326  0E00               	movlw	0
 17984  002328  6F65               	movwf	___fladd@b& (0+255),b
 17985  00232A  0E00               	movlw	0
 17986  00232C  6F66               	movwf	(___fladd@b+1)& (0+255),b
 17987  00232E  0E00               	movlw	0
 17988  002330  6F67               	movwf	(___fladd@b+2)& (0+255),b
 17989  002332  0E00               	movlw	0
 17990  002334  6F68               	movwf	(___fladd@b+3)& (0+255),b
 17991  002336                     l9702:
 17992                           
 17993                           ; BSR set to: 0
 17994  002336  8F67               	bsf	(___fladd@b+2)& (0+255),7,b
 17995  002338  D006               	goto	L8
 17996  00233A                     l9706:
 17997                           
 17998                           ; BSR set to: 0
 17999  00233A  0E00               	movlw	0
 18000  00233C  6F65               	movwf	___fladd@b& (0+255),b
 18001  00233E  0E00               	movlw	0
 18002  002340  6F66               	movwf	(___fladd@b+1)& (0+255),b
 18003  002342  0E00               	movlw	0
 18004  002344  6F67               	movwf	(___fladd@b+2)& (0+255),b
 18005  002346                     L8:
 18006  002346  0E00               	movlw	0
 18007  002348  6F68               	movwf	(___fladd@b+3)& (0+255),b
 18008                           
 18009                           ; BSR set to: 0
 18010  00234A  516C               	movf	(___fladd@a+3)& (0+255),w,b
 18011  00234C  0B80               	andlw	128
 18012  00234E  6F72               	movwf	___fladd@aexp& (0+255),b
 18013                           
 18014                           ; BSR set to: 0
 18015  002350  5171               	movf	___fladd@signs& (0+255),w,b
 18016  002352  1972               	xorwf	___fladd@aexp& (0+255),w,b
 18017  002354  A4D8               	btfss	status,2,c
 18018                           
 18019                           ; BSR set to: 0
 18020  002356  8D71               	bsf	___fladd@signs& (0+255),6,b
 18021                           
 18022                           ; BSR set to: 0
 18023  002358  516C               	movf	(___fladd@a+3)& (0+255),w,b
 18024  00235A  256C               	addwf	(___fladd@a+3)& (0+255),w,b
 18025  00235C  6F72               	movwf	___fladd@aexp& (0+255),b
 18026                           
 18027                           ; BSR set to: 0
 18028  00235E  BF6B               	btfsc	(___fladd@a+2)& (0+255),7,b
 18029                           
 18030                           ; BSR set to: 0
 18031  002360  8172               	bsf	___fladd@aexp& (0+255),0,b
 18032                           
 18033                           ; BSR set to: 0
 18034  002362  5172               	movf	___fladd@aexp& (0+255),w,b
 18035  002364  B4D8               	btfsc	status,2,c
 18036  002366  D00D               	goto	l9730
 18037                           
 18038                           ; BSR set to: 0
 18039  002368  2972               	incf	___fladd@aexp& (0+255),w,b
 18040  00236A  A4D8               	btfss	status,2,c
 18041  00236C  D008               	goto	l9726
 18042                           
 18043                           ; BSR set to: 0
 18044  00236E  0E00               	movlw	0
 18045  002370  6F69               	movwf	___fladd@a& (0+255),b
 18046  002372  0E00               	movlw	0
 18047  002374  6F6A               	movwf	(___fladd@a+1)& (0+255),b
 18048  002376  0E00               	movlw	0
 18049  002378  6F6B               	movwf	(___fladd@a+2)& (0+255),b
 18050  00237A  0E00               	movlw	0
 18051  00237C  6F6C               	movwf	(___fladd@a+3)& (0+255),b
 18052  00237E                     l9726:
 18053                           
 18054                           ; BSR set to: 0
 18055  00237E  8F6B               	bsf	(___fladd@a+2)& (0+255),7,b
 18056  002380  D006               	goto	L9
 18057  002382                     l9730:
 18058                           
 18059                           ; BSR set to: 0
 18060  002382  0E00               	movlw	0
 18061  002384  6F69               	movwf	___fladd@a& (0+255),b
 18062  002386  0E00               	movlw	0
 18063  002388  6F6A               	movwf	(___fladd@a+1)& (0+255),b
 18064  00238A  0E00               	movlw	0
 18065  00238C  6F6B               	movwf	(___fladd@a+2)& (0+255),b
 18066  00238E                     L9:
 18067  00238E  0E00               	movlw	0
 18068  002390  6F6C               	movwf	(___fladd@a+3)& (0+255),b
 18069                           
 18070                           ; BSR set to: 0
 18071  002392  5173               	movf	___fladd@bexp& (0+255),w,b
 18072  002394  5D72               	subwf	___fladd@aexp& (0+255),w,b
 18073  002396  B0D8               	btfsc	status,0,c
 18074  002398  D022               	goto	l9768
 18075                           
 18076                           ; BSR set to: 0
 18077  00239A  AD71               	btfss	___fladd@signs& (0+255),6,b
 18078  00239C  D002               	goto	l9738
 18079                           
 18080                           ; BSR set to: 0
 18081  00239E  0E80               	movlw	128
 18082  0023A0  1B71               	xorwf	___fladd@signs& (0+255),f,b
 18083  0023A2                     l9738:
 18084                           
 18085                           ; BSR set to: 0
 18086  0023A2  C073  F074         	movff	___fladd@bexp,___fladd@grs
 18087                           
 18088                           ; BSR set to: 0
 18089  0023A6  C072  F073         	movff	___fladd@aexp,___fladd@bexp
 18090                           
 18091                           ; BSR set to: 0
 18092  0023AA  C074  F072         	movff	___fladd@grs,___fladd@aexp
 18093                           
 18094                           ; BSR set to: 0
 18095  0023AE  C065  F074         	movff	___fladd@b,___fladd@grs
 18096                           
 18097                           ; BSR set to: 0
 18098  0023B2  C069  F065         	movff	___fladd@a,___fladd@b
 18099                           
 18100                           ; BSR set to: 0
 18101  0023B6  C074  F069         	movff	___fladd@grs,___fladd@a
 18102                           
 18103                           ; BSR set to: 0
 18104  0023BA  C066  F074         	movff	___fladd@b+1,___fladd@grs
 18105                           
 18106                           ; BSR set to: 0
 18107  0023BE  C06A  F066         	movff	___fladd@a+1,___fladd@b+1
 18108                           
 18109                           ; BSR set to: 0
 18110  0023C2  C074  F06A         	movff	___fladd@grs,___fladd@a+1
 18111                           
 18112                           ; BSR set to: 0
 18113  0023C6  C067  F074         	movff	___fladd@b+2,___fladd@grs
 18114                           
 18115                           ; BSR set to: 0
 18116  0023CA  C06B  F067         	movff	___fladd@a+2,___fladd@b+2
 18117                           
 18118                           ; BSR set to: 0
 18119  0023CE  C074  F06B         	movff	___fladd@grs,___fladd@a+2
 18120                           
 18121                           ; BSR set to: 0
 18122  0023D2  C068  F074         	movff	___fladd@b+3,___fladd@grs
 18123                           
 18124                           ; BSR set to: 0
 18125  0023D6  C06C  F068         	movff	___fladd@a+3,___fladd@b+3
 18126                           
 18127                           ; BSR set to: 0
 18128  0023DA  C074  F06C         	movff	___fladd@grs,___fladd@a+3
 18129  0023DE                     l9768:
 18130                           
 18131                           ; BSR set to: 0
 18132  0023DE  0E00               	movlw	0
 18133  0023E0  6F74               	movwf	___fladd@grs& (0+255),b
 18134                           
 18135                           ; BSR set to: 0
 18136  0023E2  5173               	movf	___fladd@bexp& (0+255),w,b
 18137  0023E4  C072  F06D         	movff	___fladd@aexp,??___fladd
 18138  0023E8  6B6E               	clrf	(??___fladd+1)& (0+255),b
 18139  0023EA  5F6D               	subwf	??___fladd& (0+255),f,b
 18140  0023EC  0E00               	movlw	0
 18141  0023EE  5B6E               	subwfb	(??___fladd+1)& (0+255),f,b
 18142  0023F0  BF6E               	btfsc	(??___fladd+1)& (0+255),7,b
 18143  0023F2  D02C               	goto	l1149
 18144  0023F4  516E               	movf	(??___fladd+1)& (0+255),w,b
 18145  0023F6  E104               	bnz	u12820
 18146  0023F8  0E1A               	movlw	26
 18147  0023FA  5D6D               	subwf	??___fladd& (0+255),w,b
 18148  0023FC  A0D8               	btfss	status,0,c
 18149  0023FE  D026               	goto	l1149
 18150  002400                     u12820:
 18151                           
 18152                           ; BSR set to: 0
 18153  002400  5165               	movf	___fladd@b& (0+255),w,b
 18154  002402  1166               	iorwf	(___fladd@b+1)& (0+255),w,b
 18155  002404  1167               	iorwf	(___fladd@b+2)& (0+255),w,b
 18156  002406  1168               	iorwf	(___fladd@b+3)& (0+255),w,b
 18157  002408  B4D8               	btfsc	status,2,c
 18158  00240A  D002               	goto	u12830
 18159  00240C  0E01               	movlw	1
 18160  00240E  D001               	goto	u12840
 18161  002410                     u12830:
 18162  002410  0E00               	movlw	0
 18163  002412                     u12840:
 18164  002412  6F74               	movwf	___fladd@grs& (0+255),b
 18165                           
 18166                           ; BSR set to: 0
 18167  002414  0E00               	movlw	0
 18168  002416  6F65               	movwf	___fladd@b& (0+255),b
 18169  002418  0E00               	movlw	0
 18170  00241A  6F66               	movwf	(___fladd@b+1)& (0+255),b
 18171  00241C  0E00               	movlw	0
 18172  00241E  6F67               	movwf	(___fladd@b+2)& (0+255),b
 18173  002420  0E00               	movlw	0
 18174  002422  6F68               	movwf	(___fladd@b+3)& (0+255),b
 18175                           
 18176                           ; BSR set to: 0
 18177  002424  C072  F073         	movff	___fladd@aexp,___fladd@bexp
 18178  002428  D015               	goto	u12870
 18179  00242A                     l1150:
 18180                           
 18181                           ; BSR set to: 0
 18182  00242A  A174               	btfss	___fladd@grs& (0+255),0,b
 18183  00242C  D005               	goto	l9780
 18184                           
 18185                           ; BSR set to: 0
 18186  00242E  90D8               	bcf	status,0,c
 18187  002430  3174               	rrcf	___fladd@grs& (0+255),w,b
 18188  002432  0901               	iorlw	1
 18189  002434  6F74               	movwf	___fladd@grs& (0+255),b
 18190  002436  D002               	goto	l9782
 18191  002438                     l9780:
 18192                           
 18193                           ; BSR set to: 0
 18194  002438  90D8               	bcf	status,0,c
 18195  00243A  3374               	rrcf	___fladd@grs& (0+255),f,b
 18196  00243C                     l9782:
 18197                           
 18198                           ; BSR set to: 0
 18199  00243C  B165               	btfsc	___fladd@b& (0+255),0,b
 18200                           
 18201                           ; BSR set to: 0
 18202  00243E  8F74               	bsf	___fladd@grs& (0+255),7,b
 18203                           
 18204                           ; BSR set to: 0
 18205  002440  3568               	rlcf	(___fladd@b+3)& (0+255),w,b
 18206  002442  3368               	rrcf	(___fladd@b+3)& (0+255),f,b
 18207  002444  3367               	rrcf	(___fladd@b+2)& (0+255),f,b
 18208  002446  3366               	rrcf	(___fladd@b+1)& (0+255),f,b
 18209  002448  3365               	rrcf	___fladd@b& (0+255),f,b
 18210                           
 18211                           ; BSR set to: 0
 18212  00244A  2B73               	incf	___fladd@bexp& (0+255),f,b
 18213  00244C                     l1149:
 18214                           
 18215                           ; BSR set to: 0
 18216  00244C  5172               	movf	___fladd@aexp& (0+255),w,b
 18217  00244E  5D73               	subwf	___fladd@bexp& (0+255),w,b
 18218  002450  A0D8               	btfss	status,0,c
 18219  002452  D7EB               	goto	l1150
 18220  002454                     u12870:
 18221                           
 18222                           ; BSR set to: 0
 18223  002454  BD71               	btfsc	___fladd@signs& (0+255),6,b
 18224  002456  D028               	goto	l9814
 18225                           
 18226                           ; BSR set to: 0
 18227  002458  5173               	movf	___fladd@bexp& (0+255),w,b
 18228  00245A  A4D8               	btfss	status,2,c
 18229  00245C  D009               	goto	l9796
 18230                           
 18231                           ; BSR set to: 0
 18232  00245E  0E00               	movlw	0
 18233  002460  6F65               	movwf	?___fladd& (0+255),b
 18234  002462  0E00               	movlw	0
 18235  002464  6F66               	movwf	(?___fladd+1)& (0+255),b
 18236  002466  0E00               	movlw	0
 18237  002468  6F67               	movwf	(?___fladd+2)& (0+255),b
 18238  00246A  0E00               	movlw	0
 18239  00246C  6F68               	movwf	(?___fladd+3)& (0+255),b
 18240  00246E  0012               	return	
 18241  002470                     l9796:
 18242                           
 18243                           ; BSR set to: 0
 18244  002470  5169               	movf	___fladd@a& (0+255),w,b
 18245  002472  2765               	addwf	___fladd@b& (0+255),f,b
 18246  002474  516A               	movf	(___fladd@a+1)& (0+255),w,b
 18247  002476  2366               	addwfc	(___fladd@b+1)& (0+255),f,b
 18248  002478  516B               	movf	(___fladd@a+2)& (0+255),w,b
 18249  00247A  2367               	addwfc	(___fladd@b+2)& (0+255),f,b
 18250  00247C  516C               	movf	(___fladd@a+3)& (0+255),w,b
 18251  00247E  2368               	addwfc	(___fladd@b+3)& (0+255),f,b
 18252                           
 18253                           ; BSR set to: 0
 18254  002480  A168               	btfss	(___fladd@b+3)& (0+255),0,b
 18255  002482  D071               	goto	u13000
 18256                           
 18257                           ; BSR set to: 0
 18258  002484  A174               	btfss	___fladd@grs& (0+255),0,b
 18259  002486  D005               	goto	l9804
 18260                           
 18261                           ; BSR set to: 0
 18262  002488  90D8               	bcf	status,0,c
 18263  00248A  3174               	rrcf	___fladd@grs& (0+255),w,b
 18264  00248C  0901               	iorlw	1
 18265  00248E  6F74               	movwf	___fladd@grs& (0+255),b
 18266  002490  D002               	goto	l9806
 18267  002492                     l9804:
 18268                           
 18269                           ; BSR set to: 0
 18270  002492  90D8               	bcf	status,0,c
 18271  002494  3374               	rrcf	___fladd@grs& (0+255),f,b
 18272  002496                     l9806:
 18273                           
 18274                           ; BSR set to: 0
 18275  002496  B165               	btfsc	___fladd@b& (0+255),0,b
 18276                           
 18277                           ; BSR set to: 0
 18278  002498  8F74               	bsf	___fladd@grs& (0+255),7,b
 18279                           
 18280                           ; BSR set to: 0
 18281  00249A  3568               	rlcf	(___fladd@b+3)& (0+255),w,b
 18282  00249C  3368               	rrcf	(___fladd@b+3)& (0+255),f,b
 18283  00249E  3367               	rrcf	(___fladd@b+2)& (0+255),f,b
 18284  0024A0  3366               	rrcf	(___fladd@b+1)& (0+255),f,b
 18285  0024A2  3365               	rrcf	___fladd@b& (0+255),f,b
 18286                           
 18287                           ; BSR set to: 0
 18288  0024A4  2B73               	incf	___fladd@bexp& (0+255),f,b
 18289  0024A6  D05F               	goto	u13000
 18290  0024A8                     l9814:
 18291                           
 18292                           ; BSR set to: 0
 18293  0024A8  5169               	movf	___fladd@a& (0+255),w,b
 18294  0024AA  5D65               	subwf	___fladd@b& (0+255),w,b
 18295  0024AC  516A               	movf	(___fladd@a+1)& (0+255),w,b
 18296  0024AE  5966               	subwfb	(___fladd@b+1)& (0+255),w,b
 18297  0024B0  516B               	movf	(___fladd@a+2)& (0+255),w,b
 18298  0024B2  5967               	subwfb	(___fladd@b+2)& (0+255),w,b
 18299  0024B4  5168               	movf	(___fladd@b+3)& (0+255),w,b
 18300  0024B6  0A80               	xorlw	128
 18301  0024B8  6F6D               	movwf	??___fladd& (0+255),b
 18302  0024BA  516C               	movf	(___fladd@a+3)& (0+255),w,b
 18303  0024BC  0A80               	xorlw	128
 18304  0024BE  596D               	subwfb	??___fladd& (0+255),w,b
 18305  0024C0  B0D8               	btfsc	status,0,c
 18306  0024C2  D025               	goto	l9824
 18307                           
 18308                           ; BSR set to: 0
 18309  0024C4  5165               	movf	___fladd@b& (0+255),w,b
 18310  0024C6  5D69               	subwf	___fladd@a& (0+255),w,b
 18311  0024C8  6F6D               	movwf	??___fladd& (0+255),b
 18312  0024CA  5166               	movf	(___fladd@b+1)& (0+255),w,b
 18313  0024CC  596A               	subwfb	(___fladd@a+1)& (0+255),w,b
 18314  0024CE  6F6E               	movwf	(??___fladd+1)& (0+255),b
 18315  0024D0  5167               	movf	(___fladd@b+2)& (0+255),w,b
 18316  0024D2  596B               	subwfb	(___fladd@a+2)& (0+255),w,b
 18317  0024D4  6F6F               	movwf	(??___fladd+2)& (0+255),b
 18318  0024D6  5168               	movf	(___fladd@b+3)& (0+255),w,b
 18319  0024D8  596C               	subwfb	(___fladd@a+3)& (0+255),w,b
 18320  0024DA  6F70               	movwf	(??___fladd+3)& (0+255),b
 18321  0024DC  0EFF               	movlw	255
 18322  0024DE  256D               	addwf	??___fladd& (0+255),w,b
 18323  0024E0  6F65               	movwf	___fladd@b& (0+255),b
 18324  0024E2  0EFF               	movlw	255
 18325  0024E4  216E               	addwfc	(??___fladd+1)& (0+255),w,b
 18326  0024E6  6F66               	movwf	(___fladd@b+1)& (0+255),b
 18327  0024E8  0EFF               	movlw	255
 18328  0024EA  216F               	addwfc	(??___fladd+2)& (0+255),w,b
 18329  0024EC  6F67               	movwf	(___fladd@b+2)& (0+255),b
 18330  0024EE  0EFF               	movlw	255
 18331  0024F0  2170               	addwfc	(??___fladd+3)& (0+255),w,b
 18332  0024F2  6F68               	movwf	(___fladd@b+3)& (0+255),b
 18333  0024F4  0E80               	movlw	128
 18334  0024F6  1B71               	xorwf	___fladd@signs& (0+255),f,b
 18335                           
 18336                           ; BSR set to: 0
 18337  0024F8  6D74               	negf	___fladd@grs& (0+255),b
 18338                           
 18339                           ; BSR set to: 0
 18340  0024FA  5174               	movf	___fladd@grs& (0+255),w,b
 18341  0024FC  A4D8               	btfss	status,2,c
 18342  0024FE  D00F               	goto	l1165
 18343                           
 18344                           ; BSR set to: 0
 18345  002500  0E01               	movlw	1
 18346  002502  2765               	addwf	___fladd@b& (0+255),f,b
 18347  002504  0E00               	movlw	0
 18348  002506  2366               	addwfc	(___fladd@b+1)& (0+255),f,b
 18349  002508  2367               	addwfc	(___fladd@b+2)& (0+255),f,b
 18350  00250A  2368               	addwfc	(___fladd@b+3)& (0+255),f,b
 18351  00250C  D008               	goto	l1165
 18352  00250E                     l9824:
 18353                           
 18354                           ; BSR set to: 0
 18355  00250E  5169               	movf	___fladd@a& (0+255),w,b
 18356  002510  5F65               	subwf	___fladd@b& (0+255),f,b
 18357  002512  516A               	movf	(___fladd@a+1)& (0+255),w,b
 18358  002514  5B66               	subwfb	(___fladd@b+1)& (0+255),f,b
 18359  002516  516B               	movf	(___fladd@a+2)& (0+255),w,b
 18360  002518  5B67               	subwfb	(___fladd@b+2)& (0+255),f,b
 18361  00251A  516C               	movf	(___fladd@a+3)& (0+255),w,b
 18362  00251C  5B68               	subwfb	(___fladd@b+3)& (0+255),f,b
 18363  00251E                     l1165:
 18364                           
 18365                           ; BSR set to: 0
 18366  00251E  5165               	movf	___fladd@b& (0+255),w,b
 18367  002520  1166               	iorwf	(___fladd@b+1)& (0+255),w,b
 18368  002522  1167               	iorwf	(___fladd@b+2)& (0+255),w,b
 18369  002524  1168               	iorwf	(___fladd@b+3)& (0+255),w,b
 18370  002526  A4D8               	btfss	status,2,c
 18371  002528  D01C               	goto	l9848
 18372                           
 18373                           ; BSR set to: 0
 18374  00252A  5174               	movf	___fladd@grs& (0+255),w,b
 18375  00252C  A4D8               	btfss	status,2,c
 18376  00252E  D019               	goto	l9848
 18377                           
 18378                           ; BSR set to: 0
 18379  002530  0E00               	movlw	0
 18380  002532  6F65               	movwf	?___fladd& (0+255),b
 18381  002534  0E00               	movlw	0
 18382  002536  6F66               	movwf	(?___fladd+1)& (0+255),b
 18383  002538  0E00               	movlw	0
 18384  00253A  6F67               	movwf	(?___fladd+2)& (0+255),b
 18385  00253C  0E00               	movlw	0
 18386  00253E  6F68               	movwf	(?___fladd+3)& (0+255),b
 18387  002540  0012               	return	
 18388  002542                     l9832:
 18389                           
 18390                           ; BSR set to: 0
 18391  002542  90D8               	bcf	status,0,c
 18392  002544  3765               	rlcf	___fladd@b& (0+255),f,b
 18393  002546  3766               	rlcf	(___fladd@b+1)& (0+255),f,b
 18394  002548  3767               	rlcf	(___fladd@b+2)& (0+255),f,b
 18395  00254A  3768               	rlcf	(___fladd@b+3)& (0+255),f,b
 18396                           
 18397                           ; BSR set to: 0
 18398  00254C  BF74               	btfsc	___fladd@grs& (0+255),7,b
 18399                           
 18400                           ; BSR set to: 0
 18401  00254E  8165               	bsf	___fladd@b& (0+255),0,b
 18402                           
 18403                           ; BSR set to: 0
 18404  002550  A174               	btfss	___fladd@grs& (0+255),0,b
 18405  002552  D002               	goto	l9842
 18406                           
 18407                           ; BSR set to: 0
 18408  002554  80D8               	bsf	status,0,c
 18409  002556  D001               	goto	L10
 18410  002558                     l9842:
 18411                           
 18412                           ; BSR set to: 0
 18413  002558  90D8               	bcf	status,0,c
 18414  00255A                     L10:
 18415  00255A  3774               	rlcf	___fladd@grs& (0+255),f,b
 18416                           
 18417                           ; BSR set to: 0
 18418  00255C  5173               	movf	___fladd@bexp& (0+255),w,b
 18419  00255E  A4D8               	btfss	status,2,c
 18420                           
 18421                           ; BSR set to: 0
 18422  002560  0773               	decf	___fladd@bexp& (0+255),f,b
 18423  002562                     l9848:
 18424                           
 18425                           ; BSR set to: 0
 18426  002562  AF67               	btfss	(___fladd@b+2)& (0+255),7,b
 18427  002564  D7EE               	goto	l9832
 18428  002566                     u13000:
 18429                           
 18430                           ; BSR set to: 0
 18431  002566  0E00               	movlw	0
 18432  002568  6F72               	movwf	___fladd@aexp& (0+255),b
 18433                           
 18434                           ; BSR set to: 0
 18435  00256A  AF74               	btfss	___fladd@grs& (0+255),7,b
 18436  00256C  D00B               	goto	l1174
 18437                           
 18438                           ; BSR set to: 0
 18439  00256E  C074  F06D         	movff	___fladd@grs,??___fladd
 18440  002572  0E7F               	movlw	127
 18441  002574  176D               	andwf	??___fladd& (0+255),f,b
 18442  002576  B4D8               	btfsc	status,2,c
 18443  002578  D003               	goto	l1175
 18444  00257A                     u13020:
 18445                           
 18446                           ; BSR set to: 0
 18447  00257A  0E01               	movlw	1
 18448  00257C  6F72               	movwf	___fladd@aexp& (0+255),b
 18449  00257E  D002               	goto	l1174
 18450  002580                     l1175:
 18451                           
 18452                           ; BSR set to: 0
 18453  002580  B165               	btfsc	___fladd@b& (0+255),0,b
 18454  002582  D7FB               	goto	u13020
 18455  002584                     l1174:
 18456                           
 18457                           ; BSR set to: 0
 18458  002584  5172               	movf	___fladd@aexp& (0+255),w,b
 18459  002586  B4D8               	btfsc	status,2,c
 18460  002588  D020               	goto	l9868
 18461                           
 18462                           ; BSR set to: 0
 18463  00258A  0E01               	movlw	1
 18464  00258C  2765               	addwf	___fladd@b& (0+255),f,b
 18465  00258E  0E00               	movlw	0
 18466  002590  2366               	addwfc	(___fladd@b+1)& (0+255),f,b
 18467  002592  2367               	addwfc	(___fladd@b+2)& (0+255),f,b
 18468  002594  2368               	addwfc	(___fladd@b+3)& (0+255),f,b
 18469                           
 18470                           ; BSR set to: 0
 18471  002596  A168               	btfss	(___fladd@b+3)& (0+255),0,b
 18472  002598  D018               	goto	l9868
 18473                           
 18474                           ; BSR set to: 0
 18475  00259A  C065  F06D         	movff	___fladd@b,??___fladd
 18476  00259E  C066  F06E         	movff	___fladd@b+1,??___fladd+1
 18477  0025A2  C067  F06F         	movff	___fladd@b+2,??___fladd+2
 18478  0025A6  C068  F070         	movff	___fladd@b+3,??___fladd+3
 18479  0025AA  3570               	rlcf	(??___fladd+3)& (0+255),w,b
 18480  0025AC  3370               	rrcf	(??___fladd+3)& (0+255),f,b
 18481  0025AE  336F               	rrcf	(??___fladd+2)& (0+255),f,b
 18482  0025B0  336E               	rrcf	(??___fladd+1)& (0+255),f,b
 18483  0025B2  336D               	rrcf	??___fladd& (0+255),f,b
 18484  0025B4  C06D  F065         	movff	??___fladd,___fladd@b
 18485  0025B8  C06E  F066         	movff	??___fladd+1,___fladd@b+1
 18486  0025BC  C06F  F067         	movff	??___fladd+2,___fladd@b+2
 18487  0025C0  C070  F068         	movff	??___fladd+3,___fladd@b+3
 18488  0025C4  2973               	incf	___fladd@bexp& (0+255),w,b
 18489  0025C6  A4D8               	btfss	status,2,c
 18490                           
 18491                           ; BSR set to: 0
 18492  0025C8  2B73               	incf	___fladd@bexp& (0+255),f,b
 18493  0025CA                     l9868:
 18494                           
 18495                           ; BSR set to: 0
 18496  0025CA  2973               	incf	___fladd@bexp& (0+255),w,b
 18497  0025CC  B4D8               	btfsc	status,2,c
 18498  0025CE  D003               	goto	u13080
 18499                           
 18500                           ; BSR set to: 0
 18501  0025D0  5173               	movf	___fladd@bexp& (0+255),w,b
 18502  0025D2  A4D8               	btfss	status,2,c
 18503  0025D4  D00D               	goto	l9876
 18504  0025D6                     u13080:
 18505                           
 18506                           ; BSR set to: 0
 18507  0025D6  0E00               	movlw	0
 18508  0025D8  6F65               	movwf	___fladd@b& (0+255),b
 18509  0025DA  0E00               	movlw	0
 18510  0025DC  6F66               	movwf	(___fladd@b+1)& (0+255),b
 18511  0025DE  0E00               	movlw	0
 18512  0025E0  6F67               	movwf	(___fladd@b+2)& (0+255),b
 18513  0025E2  0E00               	movlw	0
 18514  0025E4  6F68               	movwf	(___fladd@b+3)& (0+255),b
 18515  0025E6  5173               	movf	___fladd@bexp& (0+255),w,b
 18516  0025E8  A4D8               	btfss	status,2,c
 18517  0025EA  D002               	goto	l9876
 18518                           
 18519                           ; BSR set to: 0
 18520  0025EC  0E00               	movlw	0
 18521  0025EE  6F71               	movwf	___fladd@signs& (0+255),b
 18522  0025F0                     l9876:
 18523                           
 18524                           ; BSR set to: 0
 18525  0025F0  A173               	btfss	___fladd@bexp& (0+255),0,b
 18526  0025F2  D002               	goto	l9880
 18527                           
 18528                           ; BSR set to: 0
 18529  0025F4  8F67               	bsf	(___fladd@b+2)& (0+255),7,b
 18530  0025F6  D001               	goto	l9882
 18531  0025F8                     l9880:
 18532                           
 18533                           ; BSR set to: 0
 18534  0025F8  9F67               	bcf	(___fladd@b+2)& (0+255),7,b
 18535  0025FA                     l9882:
 18536                           
 18537                           ; BSR set to: 0
 18538  0025FA  90D8               	bcf	status,0,c
 18539  0025FC  3173               	rrcf	___fladd@bexp& (0+255),w,b
 18540  0025FE  6F68               	movwf	(___fladd@b+3)& (0+255),b
 18541                           
 18542                           ; BSR set to: 0
 18543  002600  BF71               	btfsc	___fladd@signs& (0+255),7,b
 18544                           
 18545                           ; BSR set to: 0
 18546  002602  8F68               	bsf	(___fladd@b+3)& (0+255),7,b
 18547                           
 18548                           ; BSR set to: 0
 18549  002604  C065  F065         	movff	___fladd@b,?___fladd
 18550  002608  C066  F066         	movff	___fladd@b+1,?___fladd+1
 18551  00260C  C067  F067         	movff	___fladd@b+2,?___fladd+2
 18552  002610  C068  F068         	movff	___fladd@b+3,?___fladd+3
 18553                           
 18554                           ; BSR set to: 0
 18555  002614  0012               	return		;funcret
 18556  002616                     __end_of___fladd:
 18557                           	callstack 0
 18558                           
 18559 ;; *************** function ___flneg *****************
 18560 ;; Defined at:
 18561 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\flneg.c"
 18562 ;; Parameters:    Size  Location     Type
 18563 ;;  f1              4    5[BANK0 ] unsigned char 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;		None
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  4    5[BANK0 ] unsigned char 
 18568 ;; Registers used:
 18569 ;;		wreg, status,2, status,0
 18570 ;; Tracked objects:
 18571 ;;		On entry : 3F/1
 18572 ;;		On exit  : 3F/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18575 ;;      Params:         0       4       0       0       0       0       0       0       0
 18576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18578 ;;      Totals:         0       4       0       0       0       0       0       0       0
 18579 ;;Total ram usage:        4 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:    7
 18582 ;; This function calls:
 18583 ;;		Nothing
 18584 ;; This function is called by:
 18585 ;;		_efgtoa
 18586 ;; This function uses a non-reentrant model
 18587 ;;
 18588                           
 18589                           	psect	text35
 18590  005014                     __ptext35:
 18591                           	callstack 0
 18592  005014                     ___flneg:
 18593                           	callstack 18
 18594                           
 18595                           ; BSR set to: 1
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;incstack = 0
 18599  005014  0100               	movlb	0	; () banked
 18600  005016  5165               	movf	___flneg@f1& (0+255),w,b
 18601  005018  1166               	iorwf	(___flneg@f1+1)& (0+255),w,b
 18602  00501A  1167               	iorwf	(___flneg@f1+2)& (0+255),w,b
 18603  00501C  1168               	iorwf	(___flneg@f1+3)& (0+255),w,b
 18604  00501E  B4D8               	btfsc	status,2,c
 18605  005020  D008               	goto	l10396
 18606                           
 18607                           ; BSR set to: 0
 18608  005022  0E00               	movlw	0
 18609  005024  1B65               	xorwf	___flneg@f1& (0+255),f,b
 18610  005026  0E00               	movlw	0
 18611  005028  1B66               	xorwf	(___flneg@f1+1)& (0+255),f,b
 18612  00502A  0E00               	movlw	0
 18613  00502C  1B67               	xorwf	(___flneg@f1+2)& (0+255),f,b
 18614  00502E  0E80               	movlw	128
 18615  005030  1B68               	xorwf	(___flneg@f1+3)& (0+255),f,b
 18616  005032                     l10396:
 18617                           
 18618                           ; BSR set to: 0
 18619  005032  C065  F065         	movff	___flneg@f1,?___flneg
 18620  005036  C066  F066         	movff	___flneg@f1+1,?___flneg+1
 18621  00503A  C067  F067         	movff	___flneg@f1+2,?___flneg+2
 18622  00503E  C068  F068         	movff	___flneg@f1+3,?___flneg+3
 18623                           
 18624                           ; BSR set to: 0
 18625  005042  0012               	return		;funcret
 18626  005044                     __end_of___flneg:
 18627                           	callstack 0
 18628                           
 18629 ;; *************** function ___flmul *****************
 18630 ;; Defined at:
 18631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\sprcmul.c"
 18632 ;; Parameters:    Size  Location     Type
 18633 ;;  b               4   19[BANK0 ] unsigned char 
 18634 ;;  a               4   23[BANK0 ] unsigned char 
 18635 ;; Auto vars:     Size  Location     Type
 18636 ;;  prod            4   38[BANK0 ] struct .
 18637 ;;  grs             4   34[BANK0 ] unsigned long 
 18638 ;;  temp            2   42[BANK0 ] struct .
 18639 ;;  bexp            1   33[BANK0 ] unsigned char 
 18640 ;;  aexp            1   32[BANK0 ] unsigned char 
 18641 ;;  sign            1   31[BANK0 ] unsigned char 
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  4   19[BANK0 ] unsigned char 
 18644 ;; Registers used:
 18645 ;;		wreg, status,2, status,0, prodl, prodh
 18646 ;; Tracked objects:
 18647 ;;		On entry : 3E/0
 18648 ;;		On exit  : 3F/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18651 ;;      Params:         0       8       0       0       0       0       0       0       0
 18652 ;;      Locals:         0      13       0       0       0       0       0       0       0
 18653 ;;      Temps:          0       4       0       0       0       0       0       0       0
 18654 ;;      Totals:         0      25       0       0       0       0       0       0       0
 18655 ;;Total ram usage:       25 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:    7
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		_PWM_1
 18662 ;;		_efgtoa
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           	psect	text36
 18667  001FDA                     __ptext36:
 18668                           	callstack 0
 18669  001FDA                     ___flmul:
 18670                           	callstack 18
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;incstack = 0
 18674  001FDA  0100               	movlb	0	; () banked
 18675  001FDC  5176               	movf	(___flmul@b+3)& (0+255),w,b
 18676  001FDE  0B80               	andlw	128
 18677  001FE0  6F7F               	movwf	___flmul@sign& (0+255),b
 18678  001FE2  5176               	movf	(___flmul@b+3)& (0+255),w,b
 18679  001FE4  2576               	addwf	(___flmul@b+3)& (0+255),w,b
 18680  001FE6  6F81               	movwf	___flmul@bexp& (0+255),b
 18681                           
 18682                           ; BSR set to: 0
 18683  001FE8  BF75               	btfsc	(___flmul@b+2)& (0+255),7,b
 18684                           
 18685                           ; BSR set to: 0
 18686  001FEA  8181               	bsf	___flmul@bexp& (0+255),0,b
 18687                           
 18688                           ; BSR set to: 0
 18689  001FEC  5181               	movf	___flmul@bexp& (0+255),w,b
 18690  001FEE  B4D8               	btfsc	status,2,c
 18691  001FF0  D00D               	goto	l10152
 18692                           
 18693                           ; BSR set to: 0
 18694  001FF2  2981               	incf	___flmul@bexp& (0+255),w,b
 18695  001FF4  A4D8               	btfss	status,2,c
 18696  001FF6  D008               	goto	l10150
 18697                           
 18698                           ; BSR set to: 0
 18699  001FF8  0E00               	movlw	0
 18700  001FFA  6F73               	movwf	___flmul@b& (0+255),b
 18701  001FFC  0E00               	movlw	0
 18702  001FFE  6F74               	movwf	(___flmul@b+1)& (0+255),b
 18703  002000  0E00               	movlw	0
 18704  002002  6F75               	movwf	(___flmul@b+2)& (0+255),b
 18705  002004  0E00               	movlw	0
 18706  002006  6F76               	movwf	(___flmul@b+3)& (0+255),b
 18707  002008                     l10150:
 18708                           
 18709                           ; BSR set to: 0
 18710  002008  8F75               	bsf	(___flmul@b+2)& (0+255),7,b
 18711  00200A  D008               	goto	l10154
 18712  00200C                     l10152:
 18713                           
 18714                           ; BSR set to: 0
 18715  00200C  0E00               	movlw	0
 18716  00200E  6F73               	movwf	___flmul@b& (0+255),b
 18717  002010  0E00               	movlw	0
 18718  002012  6F74               	movwf	(___flmul@b+1)& (0+255),b
 18719  002014  0E00               	movlw	0
 18720  002016  6F75               	movwf	(___flmul@b+2)& (0+255),b
 18721  002018  0E00               	movlw	0
 18722  00201A  6F76               	movwf	(___flmul@b+3)& (0+255),b
 18723  00201C                     l10154:
 18724                           
 18725                           ; BSR set to: 0
 18726  00201C  517A               	movf	(___flmul@a+3)& (0+255),w,b
 18727  00201E  0B80               	andlw	128
 18728  002020  1B7F               	xorwf	___flmul@sign& (0+255),f,b
 18729                           
 18730                           ; BSR set to: 0
 18731  002022  517A               	movf	(___flmul@a+3)& (0+255),w,b
 18732  002024  257A               	addwf	(___flmul@a+3)& (0+255),w,b
 18733  002026  6F80               	movwf	___flmul@aexp& (0+255),b
 18734                           
 18735                           ; BSR set to: 0
 18736  002028  BF79               	btfsc	(___flmul@a+2)& (0+255),7,b
 18737                           
 18738                           ; BSR set to: 0
 18739  00202A  8180               	bsf	___flmul@aexp& (0+255),0,b
 18740                           
 18741                           ; BSR set to: 0
 18742  00202C  5180               	movf	___flmul@aexp& (0+255),w,b
 18743  00202E  B4D8               	btfsc	status,2,c
 18744  002030  D00D               	goto	l10170
 18745                           
 18746                           ; BSR set to: 0
 18747  002032  2980               	incf	___flmul@aexp& (0+255),w,b
 18748  002034  A4D8               	btfss	status,2,c
 18749  002036  D008               	goto	l10168
 18750                           
 18751                           ; BSR set to: 0
 18752  002038  0E00               	movlw	0
 18753  00203A  6F77               	movwf	___flmul@a& (0+255),b
 18754  00203C  0E00               	movlw	0
 18755  00203E  6F78               	movwf	(___flmul@a+1)& (0+255),b
 18756  002040  0E00               	movlw	0
 18757  002042  6F79               	movwf	(___flmul@a+2)& (0+255),b
 18758  002044  0E00               	movlw	0
 18759  002046  6F7A               	movwf	(___flmul@a+3)& (0+255),b
 18760  002048                     l10168:
 18761                           
 18762                           ; BSR set to: 0
 18763  002048  8F79               	bsf	(___flmul@a+2)& (0+255),7,b
 18764  00204A  D008               	goto	l1234
 18765  00204C                     l10170:
 18766                           
 18767                           ; BSR set to: 0
 18768  00204C  0E00               	movlw	0
 18769  00204E  6F77               	movwf	___flmul@a& (0+255),b
 18770  002050  0E00               	movlw	0
 18771  002052  6F78               	movwf	(___flmul@a+1)& (0+255),b
 18772  002054  0E00               	movlw	0
 18773  002056  6F79               	movwf	(___flmul@a+2)& (0+255),b
 18774  002058  0E00               	movlw	0
 18775  00205A  6F7A               	movwf	(___flmul@a+3)& (0+255),b
 18776  00205C                     l1234:
 18777                           
 18778                           ; BSR set to: 0
 18779  00205C  5180               	movf	___flmul@aexp& (0+255),w,b
 18780  00205E  B4D8               	btfsc	status,2,c
 18781  002060  D003               	goto	u13590
 18782                           
 18783                           ; BSR set to: 0
 18784  002062  5181               	movf	___flmul@bexp& (0+255),w,b
 18785  002064  A4D8               	btfss	status,2,c
 18786  002066  D009               	goto	l10178
 18787  002068                     u13590:
 18788                           
 18789                           ; BSR set to: 0
 18790  002068  0E00               	movlw	0
 18791  00206A  6F73               	movwf	?___flmul& (0+255),b
 18792  00206C  0E00               	movlw	0
 18793  00206E  6F74               	movwf	(?___flmul+1)& (0+255),b
 18794  002070  0E00               	movlw	0
 18795  002072  6F75               	movwf	(?___flmul+2)& (0+255),b
 18796  002074  0E00               	movlw	0
 18797  002076  6F76               	movwf	(?___flmul+3)& (0+255),b
 18798  002078  0012               	return	
 18799  00207A                     l10178:
 18800                           
 18801                           ; BSR set to: 0
 18802  00207A  5179               	movf	(___flmul@a+2)& (0+255),w,b
 18803  00207C  0373               	mulwf	___flmul@b& (0+255),b
 18804  00207E  CFF3 F08A          	movff	prodl,___flmul@temp
 18805  002082  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18806                           
 18807                           ; BSR set to: 0
 18808  002086  518A               	movf	___flmul@temp& (0+255),w,b
 18809  002088  6F82               	movwf	___flmul@grs& (0+255),b
 18810  00208A  6B83               	clrf	(___flmul@grs+1)& (0+255),b
 18811  00208C  6B84               	clrf	(___flmul@grs+2)& (0+255),b
 18812  00208E  6B85               	clrf	(___flmul@grs+3)& (0+255),b
 18813                           
 18814                           ; BSR set to: 0
 18815  002090  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18816  002092  6F86               	movwf	___flmul@prod& (0+255),b
 18817  002094  6B87               	clrf	(___flmul@prod+1)& (0+255),b
 18818  002096  6B88               	clrf	(___flmul@prod+2)& (0+255),b
 18819  002098  6B89               	clrf	(___flmul@prod+3)& (0+255),b
 18820  00209A  5178               	movf	(___flmul@a+1)& (0+255),w,b
 18821  00209C  0374               	mulwf	(___flmul@b+1)& (0+255),b
 18822  00209E  CFF3 F08A          	movff	prodl,___flmul@temp
 18823  0020A2  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18824                           
 18825                           ; BSR set to: 0
 18826  0020A6  518A               	movf	___flmul@temp& (0+255),w,b
 18827  0020A8  2782               	addwf	___flmul@grs& (0+255),f,b
 18828  0020AA  0E00               	movlw	0
 18829  0020AC  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18830  0020AE  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18831  0020B0  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18832                           
 18833                           ; BSR set to: 0
 18834  0020B2  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18835  0020B4  2786               	addwf	___flmul@prod& (0+255),f,b
 18836  0020B6  0E00               	movlw	0
 18837  0020B8  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18838  0020BA  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18839  0020BC  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18840  0020BE  5177               	movf	___flmul@a& (0+255),w,b
 18841  0020C0  0375               	mulwf	(___flmul@b+2)& (0+255),b
 18842  0020C2  CFF3 F08A          	movff	prodl,___flmul@temp
 18843  0020C6  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18844                           
 18845                           ; BSR set to: 0
 18846  0020CA  518A               	movf	___flmul@temp& (0+255),w,b
 18847  0020CC  2782               	addwf	___flmul@grs& (0+255),f,b
 18848  0020CE  0E00               	movlw	0
 18849  0020D0  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18850  0020D2  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18851  0020D4  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18852                           
 18853                           ; BSR set to: 0
 18854  0020D6  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18855  0020D8  2786               	addwf	___flmul@prod& (0+255),f,b
 18856  0020DA  0E00               	movlw	0
 18857  0020DC  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18858  0020DE  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18859  0020E0  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18860                           
 18861                           ; BSR set to: 0
 18862  0020E2  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 18863  0020E6  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 18864  0020EA  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 18865  0020EE  6B82               	clrf	___flmul@grs& (0+255),b
 18866                           
 18867                           ; BSR set to: 0
 18868  0020F0  5177               	movf	___flmul@a& (0+255),w,b
 18869  0020F2  0374               	mulwf	(___flmul@b+1)& (0+255),b
 18870  0020F4  CFF3 F08A          	movff	prodl,___flmul@temp
 18871  0020F8  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18872                           
 18873                           ; BSR set to: 0
 18874  0020FC  518A               	movf	___flmul@temp& (0+255),w,b
 18875  0020FE  2782               	addwf	___flmul@grs& (0+255),f,b
 18876  002100  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18877  002102  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18878  002104  0E00               	movlw	0
 18879  002106  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18880  002108  0E00               	movlw	0
 18881  00210A  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18882                           
 18883                           ; BSR set to: 0
 18884  00210C  5178               	movf	(___flmul@a+1)& (0+255),w,b
 18885  00210E  0373               	mulwf	___flmul@b& (0+255),b
 18886  002110  CFF3 F08A          	movff	prodl,___flmul@temp
 18887  002114  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18888                           
 18889                           ; BSR set to: 0
 18890  002118  518A               	movf	___flmul@temp& (0+255),w,b
 18891  00211A  2782               	addwf	___flmul@grs& (0+255),f,b
 18892  00211C  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18893  00211E  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18894  002120  0E00               	movlw	0
 18895  002122  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18896  002124  0E00               	movlw	0
 18897  002126  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18898                           
 18899                           ; BSR set to: 0
 18900  002128  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 18901  00212C  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 18902  002130  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 18903  002134  6B82               	clrf	___flmul@grs& (0+255),b
 18904  002136  5177               	movf	___flmul@a& (0+255),w,b
 18905  002138  0373               	mulwf	___flmul@b& (0+255),b
 18906  00213A  CFF3 F08A          	movff	prodl,___flmul@temp
 18907  00213E  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18908                           
 18909                           ; BSR set to: 0
 18910  002142  518A               	movf	___flmul@temp& (0+255),w,b
 18911  002144  2782               	addwf	___flmul@grs& (0+255),f,b
 18912  002146  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18913  002148  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 18914  00214A  0E00               	movlw	0
 18915  00214C  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 18916  00214E  0E00               	movlw	0
 18917  002150  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 18918                           
 18919                           ; BSR set to: 0
 18920  002152  5179               	movf	(___flmul@a+2)& (0+255),w,b
 18921  002154  0374               	mulwf	(___flmul@b+1)& (0+255),b
 18922  002156  CFF3 F08A          	movff	prodl,___flmul@temp
 18923  00215A  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18924  00215E  518A               	movf	___flmul@temp& (0+255),w,b
 18925  002160  2786               	addwf	___flmul@prod& (0+255),f,b
 18926  002162  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18927  002164  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18928  002166  0E00               	movlw	0
 18929  002168  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18930  00216A  0E00               	movlw	0
 18931  00216C  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18932                           
 18933                           ; BSR set to: 0
 18934  00216E  5178               	movf	(___flmul@a+1)& (0+255),w,b
 18935  002170  0375               	mulwf	(___flmul@b+2)& (0+255),b
 18936  002172  CFF3 F08A          	movff	prodl,___flmul@temp
 18937  002176  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18938                           
 18939                           ; BSR set to: 0
 18940  00217A  518A               	movf	___flmul@temp& (0+255),w,b
 18941  00217C  2786               	addwf	___flmul@prod& (0+255),f,b
 18942  00217E  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18943  002180  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18944  002182  0E00               	movlw	0
 18945  002184  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18946  002186  0E00               	movlw	0
 18947  002188  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18948  00218A  5179               	movf	(___flmul@a+2)& (0+255),w,b
 18949  00218C  0375               	mulwf	(___flmul@b+2)& (0+255),b
 18950  00218E  CFF3 F08A          	movff	prodl,___flmul@temp
 18951  002192  CFF4 F08B          	movff	prodh,___flmul@temp+1
 18952                           
 18953                           ; BSR set to: 0
 18954  002196  518A               	movf	___flmul@temp& (0+255),w,b
 18955  002198  6F7B               	movwf	??___flmul& (0+255),b
 18956  00219A  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 18957  00219C  6F7C               	movwf	(??___flmul+1)& (0+255),b
 18958  00219E  6B7D               	clrf	(??___flmul+2)& (0+255),b
 18959  0021A0  6B7E               	clrf	(??___flmul+3)& (0+255),b
 18960  0021A2  C07D  F07E         	movff	??___flmul+2,??___flmul+3
 18961  0021A6  C07C  F07D         	movff	??___flmul+1,??___flmul+2
 18962  0021AA  C07B  F07C         	movff	??___flmul,??___flmul+1
 18963  0021AE  6B7B               	clrf	??___flmul& (0+255),b
 18964  0021B0  517B               	movf	??___flmul& (0+255),w,b
 18965  0021B2  2786               	addwf	___flmul@prod& (0+255),f,b
 18966  0021B4  517C               	movf	(??___flmul+1)& (0+255),w,b
 18967  0021B6  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18968  0021B8  517D               	movf	(??___flmul+2)& (0+255),w,b
 18969  0021BA  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18970  0021BC  517E               	movf	(??___flmul+3)& (0+255),w,b
 18971  0021BE  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18972                           
 18973                           ; BSR set to: 0
 18974  0021C0  5185               	movf	(___flmul@grs+3)& (0+255),w,b
 18975  0021C2  2786               	addwf	___flmul@prod& (0+255),f,b
 18976  0021C4  0E00               	movlw	0
 18977  0021C6  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18978  0021C8  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18979  0021CA  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18980                           
 18981                           ; BSR set to: 0
 18982  0021CC  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 18983  0021D0  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 18984  0021D4  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 18985  0021D8  6B82               	clrf	___flmul@grs& (0+255),b
 18986                           
 18987                           ; BSR set to: 0
 18988  0021DA  5180               	movf	___flmul@aexp& (0+255),w,b
 18989  0021DC  C081  F07B         	movff	___flmul@bexp,??___flmul
 18990  0021E0  6B7C               	clrf	(??___flmul+1)& (0+255),b
 18991  0021E2  277B               	addwf	??___flmul& (0+255),f,b
 18992  0021E4  0E00               	movlw	0
 18993  0021E6  237C               	addwfc	(??___flmul+1)& (0+255),f,b
 18994  0021E8  0E82               	movlw	130
 18995  0021EA  257B               	addwf	??___flmul& (0+255),w,b
 18996  0021EC  6F8A               	movwf	___flmul@temp& (0+255),b
 18997  0021EE  0EFF               	movlw	255
 18998  0021F0  217C               	addwfc	(??___flmul+1)& (0+255),w,b
 18999  0021F2  6F8B               	movwf	(___flmul@temp+1)& (0+255),b
 19000  0021F4  D00F               	goto	l10226
 19001  0021F6                     l10220:
 19002                           
 19003                           ; BSR set to: 0
 19004  0021F6  90D8               	bcf	status,0,c
 19005  0021F8  3786               	rlcf	___flmul@prod& (0+255),f,b
 19006  0021FA  3787               	rlcf	(___flmul@prod+1)& (0+255),f,b
 19007  0021FC  3788               	rlcf	(___flmul@prod+2)& (0+255),f,b
 19008  0021FE  3789               	rlcf	(___flmul@prod+3)& (0+255),f,b
 19009                           
 19010                           ; BSR set to: 0
 19011  002200  BF85               	btfsc	(___flmul@grs+3)& (0+255),7,b
 19012                           
 19013                           ; BSR set to: 0
 19014  002202  8186               	bsf	___flmul@prod& (0+255),0,b
 19015                           
 19016                           ; BSR set to: 0
 19017  002204  90D8               	bcf	status,0,c
 19018  002206  3782               	rlcf	___flmul@grs& (0+255),f,b
 19019  002208  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
 19020  00220A  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
 19021  00220C  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
 19022  00220E  078A               	decf	___flmul@temp& (0+255),f,b
 19023  002210  A0D8               	btfss	status,0,c
 19024  002212  078B               	decf	(___flmul@temp+1)& (0+255),f,b
 19025  002214                     l10226:
 19026                           
 19027                           ; BSR set to: 0
 19028  002214  AF88               	btfss	(___flmul@prod+2)& (0+255),7,b
 19029  002216  D7EF               	goto	l10220
 19030                           
 19031                           ; BSR set to: 0
 19032  002218  0E00               	movlw	0
 19033  00221A  6F80               	movwf	___flmul@aexp& (0+255),b
 19034                           
 19035                           ; BSR set to: 0
 19036  00221C  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 19037  00221E  D017               	goto	l1243
 19038                           
 19039                           ; BSR set to: 0
 19040  002220  0EFF               	movlw	255
 19041  002222  1582               	andwf	___flmul@grs& (0+255),w,b
 19042  002224  6F7B               	movwf	??___flmul& (0+255),b
 19043  002226  0EFF               	movlw	255
 19044  002228  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
 19045  00222A  6F7C               	movwf	(??___flmul+1)& (0+255),b
 19046  00222C  0EFF               	movlw	255
 19047  00222E  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
 19048  002230  6F7D               	movwf	(??___flmul+2)& (0+255),b
 19049  002232  0E7F               	movlw	127
 19050  002234  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
 19051  002236  6F7E               	movwf	(??___flmul+3)& (0+255),b
 19052  002238  517B               	movf	??___flmul& (0+255),w,b
 19053  00223A  117C               	iorwf	(??___flmul+1)& (0+255),w,b
 19054  00223C  117D               	iorwf	(??___flmul+2)& (0+255),w,b
 19055  00223E  117E               	iorwf	(??___flmul+3)& (0+255),w,b
 19056  002240  B4D8               	btfsc	status,2,c
 19057  002242  D003               	goto	l1244
 19058  002244                     u13630:
 19059                           
 19060                           ; BSR set to: 0
 19061  002244  0E01               	movlw	1
 19062  002246  6F80               	movwf	___flmul@aexp& (0+255),b
 19063  002248  D002               	goto	l1243
 19064  00224A                     l1244:
 19065                           
 19066                           ; BSR set to: 0
 19067  00224A  B186               	btfsc	___flmul@prod& (0+255),0,b
 19068  00224C  D7FB               	goto	u13630
 19069  00224E                     l1243:
 19070                           
 19071                           ; BSR set to: 0
 19072  00224E  5180               	movf	___flmul@aexp& (0+255),w,b
 19073  002250  B4D8               	btfsc	status,2,c
 19074  002252  D01F               	goto	l10246
 19075                           
 19076                           ; BSR set to: 0
 19077  002254  0E01               	movlw	1
 19078  002256  2786               	addwf	___flmul@prod& (0+255),f,b
 19079  002258  0E00               	movlw	0
 19080  00225A  2387               	addwfc	(___flmul@prod+1)& (0+255),f,b
 19081  00225C  2388               	addwfc	(___flmul@prod+2)& (0+255),f,b
 19082  00225E  2389               	addwfc	(___flmul@prod+3)& (0+255),f,b
 19083                           
 19084                           ; BSR set to: 0
 19085  002260  A189               	btfss	(___flmul@prod+3)& (0+255),0,b
 19086  002262  D017               	goto	l10246
 19087                           
 19088                           ; BSR set to: 0
 19089  002264  C086  F07B         	movff	___flmul@prod,??___flmul
 19090  002268  C087  F07C         	movff	___flmul@prod+1,??___flmul+1
 19091  00226C  C088  F07D         	movff	___flmul@prod+2,??___flmul+2
 19092  002270  C089  F07E         	movff	___flmul@prod+3,??___flmul+3
 19093  002274  357E               	rlcf	(??___flmul+3)& (0+255),w,b
 19094  002276  337E               	rrcf	(??___flmul+3)& (0+255),f,b
 19095  002278  337D               	rrcf	(??___flmul+2)& (0+255),f,b
 19096  00227A  337C               	rrcf	(??___flmul+1)& (0+255),f,b
 19097  00227C  337B               	rrcf	??___flmul& (0+255),f,b
 19098  00227E  C07B  F086         	movff	??___flmul,___flmul@prod
 19099  002282  C07C  F087         	movff	??___flmul+1,___flmul@prod+1
 19100  002286  C07D  F088         	movff	??___flmul+2,___flmul@prod+2
 19101  00228A  C07E  F089         	movff	??___flmul+3,___flmul@prod+3
 19102                           
 19103                           ; BSR set to: 0
 19104  00228E  4B8A               	infsnz	___flmul@temp& (0+255),f,b
 19105  002290  2B8B               	incf	(___flmul@temp+1)& (0+255),f,b
 19106  002292                     l10246:
 19107                           
 19108                           ; BSR set to: 0
 19109  002292  BF8B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19110  002294  D00D               	goto	l10250
 19111  002296  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 19112  002298  E103               	bnz	u13670
 19113  00229A  298A               	incf	___flmul@temp& (0+255),w,b
 19114  00229C  A0D8               	btfss	status,0,c
 19115  00229E  D008               	goto	l10250
 19116  0022A0                     u13670:
 19117                           
 19118                           ; BSR set to: 0
 19119  0022A0  0E00               	movlw	0
 19120  0022A2  6F86               	movwf	___flmul@prod& (0+255),b
 19121  0022A4  0E00               	movlw	0
 19122  0022A6  6F87               	movwf	(___flmul@prod+1)& (0+255),b
 19123  0022A8  0E80               	movlw	128
 19124  0022AA  6F88               	movwf	(___flmul@prod+2)& (0+255),b
 19125  0022AC  0E7F               	movlw	127
 19126  0022AE  D020               	goto	L11
 19127  0022B0                     l10250:
 19128                           
 19129                           ; BSR set to: 0
 19130  0022B0  BF8B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 19131  0022B2  D005               	goto	u13680
 19132  0022B4  518B               	movf	(___flmul@temp+1)& (0+255),w,b
 19133  0022B6  E10E               	bnz	l1251
 19134  0022B8  058A               	decf	___flmul@temp& (0+255),w,b
 19135  0022BA  B0D8               	btfsc	status,0,c
 19136  0022BC  D00B               	goto	l1251
 19137  0022BE                     u13680:
 19138                           
 19139                           ; BSR set to: 0
 19140  0022BE  0E00               	movlw	0
 19141  0022C0  6F86               	movwf	___flmul@prod& (0+255),b
 19142  0022C2  0E00               	movlw	0
 19143  0022C4  6F87               	movwf	(___flmul@prod+1)& (0+255),b
 19144  0022C6  0E00               	movlw	0
 19145  0022C8  6F88               	movwf	(___flmul@prod+2)& (0+255),b
 19146  0022CA  0E00               	movlw	0
 19147  0022CC  6F89               	movwf	(___flmul@prod+3)& (0+255),b
 19148  0022CE  0E00               	movlw	0
 19149  0022D0  6F7F               	movwf	___flmul@sign& (0+255),b
 19150  0022D2  D00F               	goto	l10262
 19151  0022D4                     l1251:
 19152                           
 19153                           ; BSR set to: 0
 19154  0022D4  C08A  F081         	movff	___flmul@temp,___flmul@bexp
 19155                           
 19156                           ; BSR set to: 0
 19157  0022D8  0EFF               	movlw	255
 19158  0022DA  1786               	andwf	___flmul@prod& (0+255),f,b
 19159  0022DC  0EFF               	movlw	255
 19160  0022DE  1787               	andwf	(___flmul@prod+1)& (0+255),f,b
 19161  0022E0  0E7F               	movlw	127
 19162  0022E2  1788               	andwf	(___flmul@prod+2)& (0+255),f,b
 19163  0022E4  0E00               	movlw	0
 19164  0022E6  1789               	andwf	(___flmul@prod+3)& (0+255),f,b
 19165                           
 19166                           ; BSR set to: 0
 19167  0022E8  B181               	btfsc	___flmul@bexp& (0+255),0,b
 19168                           
 19169                           ; BSR set to: 0
 19170  0022EA  8F88               	bsf	(___flmul@prod+2)& (0+255),7,b
 19171                           
 19172                           ; BSR set to: 0
 19173  0022EC  90D8               	bcf	status,0,c
 19174  0022EE  3181               	rrcf	___flmul@bexp& (0+255),w,b
 19175  0022F0                     L11:
 19176  0022F0  6F89               	movwf	(___flmul@prod+3)& (0+255),b
 19177  0022F2                     l10262:
 19178                           
 19179                           ; BSR set to: 0
 19180  0022F2  517F               	movf	___flmul@sign& (0+255),w,b
 19181  0022F4  1389               	iorwf	(___flmul@prod+3)& (0+255),f,b
 19182                           
 19183                           ; BSR set to: 0
 19184  0022F6  C086  F073         	movff	___flmul@prod,?___flmul
 19185  0022FA  C087  F074         	movff	___flmul@prod+1,?___flmul+1
 19186  0022FE  C088  F075         	movff	___flmul@prod+2,?___flmul+2
 19187  002302  C089  F076         	movff	___flmul@prod+3,?___flmul+3
 19188                           
 19189                           ; BSR set to: 0
 19190  002306  0012               	return		;funcret
 19191  002308                     __end_of___flmul:
 19192                           	callstack 0
 19193                           
 19194 ;; *************** function ___flge *****************
 19195 ;; Defined at:
 19196 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\flge.c"
 19197 ;; Parameters:    Size  Location     Type
 19198 ;;  ff1             4   44[BANK0 ] unsigned char 
 19199 ;;  ff2             4   48[BANK0 ] unsigned char 
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;		None               void
 19204 ;; Registers used:
 19205 ;;		wreg, status,2, status,0
 19206 ;; Tracked objects:
 19207 ;;		On entry : 3E/0
 19208 ;;		On exit  : 3F/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19211 ;;      Params:         0       8       0       0       0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19213 ;;      Temps:          0       4       0       0       0       0       0       0       0
 19214 ;;      Totals:         0      12       0       0       0       0       0       0       0
 19215 ;;Total ram usage:       12 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; Hardware stack levels required when called:    7
 19218 ;; This function calls:
 19219 ;;		Nothing
 19220 ;; This function is called by:
 19221 ;;		_efgtoa
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           	psect	text37
 19226  00414A                     __ptext37:
 19227                           	callstack 0
 19228  00414A                     ___flge:
 19229                           	callstack 18
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;incstack = 0
 19233  00414A  0E00               	movlw	0
 19234  00414C  0100               	movlb	0	; () banked
 19235  00414E  158C               	andwf	___flge@ff1& (0+255),w,b
 19236  004150  6F94               	movwf	??___flge& (0+255),b
 19237  004152  0E00               	movlw	0
 19238  004154  158D               	andwf	(___flge@ff1+1)& (0+255),w,b
 19239  004156  6F95               	movwf	(??___flge+1)& (0+255),b
 19240  004158  0E80               	movlw	128
 19241  00415A  158E               	andwf	(___flge@ff1+2)& (0+255),w,b
 19242  00415C  6F96               	movwf	(??___flge+2)& (0+255),b
 19243  00415E  0E7F               	movlw	127
 19244  004160  158F               	andwf	(___flge@ff1+3)& (0+255),w,b
 19245  004162  6F97               	movwf	(??___flge+3)& (0+255),b
 19246  004164  5194               	movf	??___flge& (0+255),w,b
 19247  004166  1195               	iorwf	(??___flge+1)& (0+255),w,b
 19248  004168  1196               	iorwf	(??___flge+2)& (0+255),w,b
 19249  00416A  1197               	iorwf	(??___flge+3)& (0+255),w,b
 19250  00416C  A4D8               	btfss	status,2,c
 19251  00416E  D008               	goto	l10374
 19252                           
 19253                           ; BSR set to: 0
 19254  004170  0E00               	movlw	0
 19255  004172  6F8C               	movwf	___flge@ff1& (0+255),b
 19256  004174  0E00               	movlw	0
 19257  004176  6F8D               	movwf	(___flge@ff1+1)& (0+255),b
 19258  004178  0E00               	movlw	0
 19259  00417A  6F8E               	movwf	(___flge@ff1+2)& (0+255),b
 19260  00417C  0E00               	movlw	0
 19261  00417E  6F8F               	movwf	(___flge@ff1+3)& (0+255),b
 19262  004180                     l10374:
 19263                           
 19264                           ; BSR set to: 0
 19265  004180  0E00               	movlw	0
 19266  004182  1590               	andwf	___flge@ff2& (0+255),w,b
 19267  004184  6F94               	movwf	??___flge& (0+255),b
 19268  004186  0E00               	movlw	0
 19269  004188  1591               	andwf	(___flge@ff2+1)& (0+255),w,b
 19270  00418A  6F95               	movwf	(??___flge+1)& (0+255),b
 19271  00418C  0E80               	movlw	128
 19272  00418E  1592               	andwf	(___flge@ff2+2)& (0+255),w,b
 19273  004190  6F96               	movwf	(??___flge+2)& (0+255),b
 19274  004192  0E7F               	movlw	127
 19275  004194  1593               	andwf	(___flge@ff2+3)& (0+255),w,b
 19276  004196  6F97               	movwf	(??___flge+3)& (0+255),b
 19277  004198  5194               	movf	??___flge& (0+255),w,b
 19278  00419A  1195               	iorwf	(??___flge+1)& (0+255),w,b
 19279  00419C  1196               	iorwf	(??___flge+2)& (0+255),w,b
 19280  00419E  1197               	iorwf	(??___flge+3)& (0+255),w,b
 19281  0041A0  A4D8               	btfss	status,2,c
 19282  0041A2  D008               	goto	l10378
 19283                           
 19284                           ; BSR set to: 0
 19285  0041A4  0E00               	movlw	0
 19286  0041A6  6F90               	movwf	___flge@ff2& (0+255),b
 19287  0041A8  0E00               	movlw	0
 19288  0041AA  6F91               	movwf	(___flge@ff2+1)& (0+255),b
 19289  0041AC  0E00               	movlw	0
 19290  0041AE  6F92               	movwf	(___flge@ff2+2)& (0+255),b
 19291  0041B0  0E00               	movlw	0
 19292  0041B2  6F93               	movwf	(___flge@ff2+3)& (0+255),b
 19293  0041B4                     l10378:
 19294                           
 19295                           ; BSR set to: 0
 19296  0041B4  AF8F               	btfss	(___flge@ff1+3)& (0+255),7,b
 19297  0041B6  D009               	goto	l10382
 19298                           
 19299                           ; BSR set to: 0
 19300  0041B8  6D8C               	negf	___flge@ff1& (0+255),b
 19301  0041BA  1F8D               	comf	(___flge@ff1+1)& (0+255),f,b
 19302  0041BC  B0D8               	btfsc	status,0,c
 19303  0041BE  2B8D               	incf	(___flge@ff1+1)& (0+255),f,b
 19304  0041C0  1F8E               	comf	(___flge@ff1+2)& (0+255),f,b
 19305  0041C2  B0D8               	btfsc	status,0,c
 19306  0041C4  2B8E               	incf	(___flge@ff1+2)& (0+255),f,b
 19307  0041C6  0E80               	movlw	128
 19308  0041C8  578F               	subfwb	(___flge@ff1+3)& (0+255),f,b
 19309  0041CA                     l10382:
 19310                           
 19311                           ; BSR set to: 0
 19312  0041CA  AF93               	btfss	(___flge@ff2+3)& (0+255),7,b
 19313  0041CC  D009               	goto	l885
 19314                           
 19315                           ; BSR set to: 0
 19316  0041CE  6D90               	negf	___flge@ff2& (0+255),b
 19317  0041D0  1F91               	comf	(___flge@ff2+1)& (0+255),f,b
 19318  0041D2  B0D8               	btfsc	status,0,c
 19319  0041D4  2B91               	incf	(___flge@ff2+1)& (0+255),f,b
 19320  0041D6  1F92               	comf	(___flge@ff2+2)& (0+255),f,b
 19321  0041D8  B0D8               	btfsc	status,0,c
 19322  0041DA  2B92               	incf	(___flge@ff2+2)& (0+255),f,b
 19323  0041DC  0E80               	movlw	128
 19324  0041DE  5793               	subfwb	(___flge@ff2+3)& (0+255),f,b
 19325  0041E0                     l885:
 19326                           
 19327                           ; BSR set to: 0
 19328  0041E0  0E00               	movlw	0
 19329  0041E2  1B8C               	xorwf	___flge@ff1& (0+255),f,b
 19330  0041E4  0E00               	movlw	0
 19331  0041E6  1B8D               	xorwf	(___flge@ff1+1)& (0+255),f,b
 19332  0041E8  0E00               	movlw	0
 19333  0041EA  1B8E               	xorwf	(___flge@ff1+2)& (0+255),f,b
 19334  0041EC  0E80               	movlw	128
 19335  0041EE  1B8F               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19336  0041F0  0E00               	movlw	0
 19337  0041F2  1B90               	xorwf	___flge@ff2& (0+255),f,b
 19338  0041F4  0E00               	movlw	0
 19339  0041F6  1B91               	xorwf	(___flge@ff2+1)& (0+255),f,b
 19340  0041F8  0E00               	movlw	0
 19341  0041FA  1B92               	xorwf	(___flge@ff2+2)& (0+255),f,b
 19342  0041FC  0E80               	movlw	128
 19343  0041FE  1B93               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19344  004200  5190               	movf	___flge@ff2& (0+255),w,b
 19345  004202  5D8C               	subwf	___flge@ff1& (0+255),w,b
 19346  004204  5191               	movf	(___flge@ff2+1)& (0+255),w,b
 19347  004206  598D               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19348  004208  5192               	movf	(___flge@ff2+2)& (0+255),w,b
 19349  00420A  598E               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19350  00420C  5193               	movf	(___flge@ff2+3)& (0+255),w,b
 19351  00420E  598F               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19352  004210  B0D8               	btfsc	status,0,c
 19353  004212  D002               	goto	l10388
 19354                           
 19355                           ; BSR set to: 0
 19356  004214  90D8               	bcf	status,0,c
 19357  004216  0012               	return	
 19358  004218                     l10388:
 19359                           
 19360                           ; BSR set to: 0
 19361  004218  80D8               	bsf	status,0,c
 19362                           
 19363                           ; BSR set to: 0
 19364  00421A  0012               	return		;funcret
 19365  00421C                     __end_of___flge:
 19366                           	callstack 0
 19367                           
 19368 ;; *************** function ___fleq *****************
 19369 ;; Defined at:
 19370 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\fleq.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;  ff1             4    5[BANK0 ] unsigned char 
 19373 ;;  ff2             4    9[BANK0 ] unsigned char 
 19374 ;; Auto vars:     Size  Location     Type
 19375 ;;		None
 19376 ;; Return value:  Size  Location     Type
 19377 ;;		None               void
 19378 ;; Registers used:
 19379 ;;		wreg, status,2, status,0
 19380 ;; Tracked objects:
 19381 ;;		On entry : 3F/0
 19382 ;;		On exit  : 3F/0
 19383 ;;		Unchanged: 0/0
 19384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19385 ;;      Params:         0       8       0       0       0       0       0       0       0
 19386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19387 ;;      Temps:          0       4       0       0       0       0       0       0       0
 19388 ;;      Totals:         0      12       0       0       0       0       0       0       0
 19389 ;;Total ram usage:       12 bytes
 19390 ;; Hardware stack levels used:    1
 19391 ;; Hardware stack levels required when called:    7
 19392 ;; This function calls:
 19393 ;;		Nothing
 19394 ;; This function is called by:
 19395 ;;		_efgtoa
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           
 19399                           	psect	text38
 19400  004772                     __ptext38:
 19401                           	callstack 0
 19402  004772                     ___fleq:
 19403                           	callstack 18
 19404                           
 19405                           ; BSR set to: 0
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;incstack = 0
 19409  004772  0E00               	movlw	0
 19410  004774  1565               	andwf	___fleq@ff1& (0+255),w,b
 19411  004776  6F6D               	movwf	??___fleq& (0+255),b
 19412  004778  0E00               	movlw	0
 19413  00477A  1566               	andwf	(___fleq@ff1+1)& (0+255),w,b
 19414  00477C  6F6E               	movwf	(??___fleq+1)& (0+255),b
 19415  00477E  0E80               	movlw	128
 19416  004780  1567               	andwf	(___fleq@ff1+2)& (0+255),w,b
 19417  004782  6F6F               	movwf	(??___fleq+2)& (0+255),b
 19418  004784  0E7F               	movlw	127
 19419  004786  1568               	andwf	(___fleq@ff1+3)& (0+255),w,b
 19420  004788  6F70               	movwf	(??___fleq+3)& (0+255),b
 19421  00478A  516D               	movf	??___fleq& (0+255),w,b
 19422  00478C  116E               	iorwf	(??___fleq+1)& (0+255),w,b
 19423  00478E  116F               	iorwf	(??___fleq+2)& (0+255),w,b
 19424  004790  1170               	iorwf	(??___fleq+3)& (0+255),w,b
 19425  004792  A4D8               	btfss	status,2,c
 19426  004794  D008               	goto	l10358
 19427                           
 19428                           ; BSR set to: 0
 19429  004796  0E00               	movlw	0
 19430  004798  6F65               	movwf	___fleq@ff1& (0+255),b
 19431  00479A  0E00               	movlw	0
 19432  00479C  6F66               	movwf	(___fleq@ff1+1)& (0+255),b
 19433  00479E  0E00               	movlw	0
 19434  0047A0  6F67               	movwf	(___fleq@ff1+2)& (0+255),b
 19435  0047A2  0E00               	movlw	0
 19436  0047A4  6F68               	movwf	(___fleq@ff1+3)& (0+255),b
 19437  0047A6                     l10358:
 19438                           
 19439                           ; BSR set to: 0
 19440  0047A6  0E00               	movlw	0
 19441  0047A8  1569               	andwf	___fleq@ff2& (0+255),w,b
 19442  0047AA  6F6D               	movwf	??___fleq& (0+255),b
 19443  0047AC  0E00               	movlw	0
 19444  0047AE  156A               	andwf	(___fleq@ff2+1)& (0+255),w,b
 19445  0047B0  6F6E               	movwf	(??___fleq+1)& (0+255),b
 19446  0047B2  0E80               	movlw	128
 19447  0047B4  156B               	andwf	(___fleq@ff2+2)& (0+255),w,b
 19448  0047B6  6F6F               	movwf	(??___fleq+2)& (0+255),b
 19449  0047B8  0E7F               	movlw	127
 19450  0047BA  156C               	andwf	(___fleq@ff2+3)& (0+255),w,b
 19451  0047BC  6F70               	movwf	(??___fleq+3)& (0+255),b
 19452  0047BE  516D               	movf	??___fleq& (0+255),w,b
 19453  0047C0  116E               	iorwf	(??___fleq+1)& (0+255),w,b
 19454  0047C2  116F               	iorwf	(??___fleq+2)& (0+255),w,b
 19455  0047C4  1170               	iorwf	(??___fleq+3)& (0+255),w,b
 19456  0047C6  A4D8               	btfss	status,2,c
 19457  0047C8  D008               	goto	l10362
 19458                           
 19459                           ; BSR set to: 0
 19460  0047CA  0E00               	movlw	0
 19461  0047CC  6F69               	movwf	___fleq@ff2& (0+255),b
 19462  0047CE  0E00               	movlw	0
 19463  0047D0  6F6A               	movwf	(___fleq@ff2+1)& (0+255),b
 19464  0047D2  0E00               	movlw	0
 19465  0047D4  6F6B               	movwf	(___fleq@ff2+2)& (0+255),b
 19466  0047D6  0E00               	movlw	0
 19467  0047D8  6F6C               	movwf	(___fleq@ff2+3)& (0+255),b
 19468  0047DA                     l10362:
 19469                           
 19470                           ; BSR set to: 0
 19471  0047DA  5169               	movf	___fleq@ff2& (0+255),w,b
 19472  0047DC  1965               	xorwf	___fleq@ff1& (0+255),w,b
 19473  0047DE  E10A               	bnz	u13840
 19474  0047E0  516A               	movf	(___fleq@ff2+1)& (0+255),w,b
 19475  0047E2  1966               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 19476  0047E4  E107               	bnz	u13840
 19477  0047E6  516B               	movf	(___fleq@ff2+2)& (0+255),w,b
 19478  0047E8  1967               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 19479  0047EA  E104               	bnz	u13840
 19480  0047EC  516C               	movf	(___fleq@ff2+3)& (0+255),w,b
 19481  0047EE  1968               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 19482  0047F0  B4D8               	btfsc	status,2,c
 19483  0047F2  D002               	goto	l10366
 19484  0047F4                     u13840:
 19485                           
 19486                           ; BSR set to: 0
 19487  0047F4  90D8               	bcf	status,0,c
 19488  0047F6  0012               	return	
 19489  0047F8                     l10366:
 19490                           
 19491                           ; BSR set to: 0
 19492  0047F8  80D8               	bsf	status,0,c
 19493                           
 19494                           ; BSR set to: 0
 19495  0047FA  0012               	return		;funcret
 19496  0047FC                     __end_of___fleq:
 19497                           	callstack 0
 19498                           
 19499 ;; *************** function ___awmod *****************
 19500 ;; Defined at:
 19501 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\awmod.c"
 19502 ;; Parameters:    Size  Location     Type
 19503 ;;  dividend        2    5[BANK0 ] int 
 19504 ;;  divisor         2    7[BANK0 ] int 
 19505 ;; Auto vars:     Size  Location     Type
 19506 ;;  sign            1   10[BANK0 ] unsigned char 
 19507 ;;  counter         1    9[BANK0 ] unsigned char 
 19508 ;; Return value:  Size  Location     Type
 19509 ;;                  2    5[BANK0 ] int 
 19510 ;; Registers used:
 19511 ;;		wreg, status,2, status,0
 19512 ;; Tracked objects:
 19513 ;;		On entry : 3F/0
 19514 ;;		On exit  : 3F/0
 19515 ;;		Unchanged: 0/0
 19516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19517 ;;      Params:         0       4       0       0       0       0       0       0       0
 19518 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19520 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19521 ;;Total ram usage:        6 bytes
 19522 ;; Hardware stack levels used:    1
 19523 ;; Hardware stack levels required when called:    7
 19524 ;; This function calls:
 19525 ;;		Nothing
 19526 ;; This function is called by:
 19527 ;;		_efgtoa
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           
 19531                           	psect	text39
 19532  0049F4                     __ptext39:
 19533                           	callstack 0
 19534  0049F4                     ___awmod:
 19535                           	callstack 18
 19536                           
 19537                           ; BSR set to: 0
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;incstack = 0
 19541  0049F4  0E00               	movlw	0
 19542  0049F6  6F6A               	movwf	___awmod@sign& (0+255),b
 19543                           
 19544                           ; BSR set to: 0
 19545  0049F8  AF66               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19546  0049FA  D006               	goto	l10326
 19547                           
 19548                           ; BSR set to: 0
 19549  0049FC  6D65               	negf	___awmod@dividend& (0+255),b
 19550  0049FE  1F66               	comf	(___awmod@dividend+1)& (0+255),f,b
 19551  004A00  B0D8               	btfsc	status,0,c
 19552  004A02  2B66               	incf	(___awmod@dividend+1)& (0+255),f,b
 19553                           
 19554                           ; BSR set to: 0
 19555  004A04  0E01               	movlw	1
 19556  004A06  6F6A               	movwf	___awmod@sign& (0+255),b
 19557  004A08                     l10326:
 19558                           
 19559                           ; BSR set to: 0
 19560  004A08  AF68               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19561  004A0A  D004               	goto	l10330
 19562                           
 19563                           ; BSR set to: 0
 19564  004A0C  6D67               	negf	___awmod@divisor& (0+255),b
 19565  004A0E  1F68               	comf	(___awmod@divisor+1)& (0+255),f,b
 19566  004A10  B0D8               	btfsc	status,0,c
 19567  004A12  2B68               	incf	(___awmod@divisor+1)& (0+255),f,b
 19568  004A14                     l10330:
 19569                           
 19570                           ; BSR set to: 0
 19571  004A14  5167               	movf	___awmod@divisor& (0+255),w,b
 19572  004A16  1168               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19573  004A18  B4D8               	btfsc	status,2,c
 19574  004A1A  D018               	goto	l10346
 19575                           
 19576                           ; BSR set to: 0
 19577  004A1C  0E01               	movlw	1
 19578  004A1E  6F69               	movwf	___awmod@counter& (0+255),b
 19579  004A20  D004               	goto	l10336
 19580  004A22                     l10334:
 19581                           
 19582                           ; BSR set to: 0
 19583  004A22  90D8               	bcf	status,0,c
 19584  004A24  3767               	rlcf	___awmod@divisor& (0+255),f,b
 19585  004A26  3768               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19586  004A28  2B69               	incf	___awmod@counter& (0+255),f,b
 19587  004A2A                     l10336:
 19588                           
 19589                           ; BSR set to: 0
 19590  004A2A  AF68               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19591  004A2C  D7FA               	goto	l10334
 19592  004A2E                     u13790:
 19593                           
 19594                           ; BSR set to: 0
 19595  004A2E  5167               	movf	___awmod@divisor& (0+255),w,b
 19596  004A30  5D65               	subwf	___awmod@dividend& (0+255),w,b
 19597  004A32  5168               	movf	(___awmod@divisor+1)& (0+255),w,b
 19598  004A34  5966               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19599  004A36  A0D8               	btfss	status,0,c
 19600  004A38  D004               	goto	l10342
 19601                           
 19602                           ; BSR set to: 0
 19603  004A3A  5167               	movf	___awmod@divisor& (0+255),w,b
 19604  004A3C  5F65               	subwf	___awmod@dividend& (0+255),f,b
 19605  004A3E  5168               	movf	(___awmod@divisor+1)& (0+255),w,b
 19606  004A40  5B66               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19607  004A42                     l10342:
 19608                           
 19609                           ; BSR set to: 0
 19610  004A42  90D8               	bcf	status,0,c
 19611  004A44  3368               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19612  004A46  3367               	rrcf	___awmod@divisor& (0+255),f,b
 19613                           
 19614                           ; BSR set to: 0
 19615  004A48  2F69               	decfsz	___awmod@counter& (0+255),f,b
 19616  004A4A  D7F1               	goto	u13790
 19617  004A4C                     l10346:
 19618                           
 19619                           ; BSR set to: 0
 19620  004A4C  516A               	movf	___awmod@sign& (0+255),w,b
 19621  004A4E  B4D8               	btfsc	status,2,c
 19622  004A50  D004               	goto	l10350
 19623                           
 19624                           ; BSR set to: 0
 19625  004A52  6D65               	negf	___awmod@dividend& (0+255),b
 19626  004A54  1F66               	comf	(___awmod@dividend+1)& (0+255),f,b
 19627  004A56  B0D8               	btfsc	status,0,c
 19628  004A58  2B66               	incf	(___awmod@dividend+1)& (0+255),f,b
 19629  004A5A                     l10350:
 19630                           
 19631                           ; BSR set to: 0
 19632  004A5A  C065  F065         	movff	___awmod@dividend,?___awmod
 19633  004A5E  C066  F066         	movff	___awmod@dividend+1,?___awmod+1
 19634                           
 19635                           ; BSR set to: 0
 19636  004A62  0012               	return		;funcret
 19637  004A64                     __end_of___awmod:
 19638                           	callstack 0
 19639                           
 19640 ;; *************** function ___awdiv *****************
 19641 ;; Defined at:
 19642 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\awdiv.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;  dividend        2    5[BANK0 ] int 
 19645 ;;  divisor         2    7[BANK0 ] int 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;  quotient        2   11[BANK0 ] int 
 19648 ;;  sign            1   10[BANK0 ] unsigned char 
 19649 ;;  counter         1    9[BANK0 ] unsigned char 
 19650 ;; Return value:  Size  Location     Type
 19651 ;;                  2    5[BANK0 ] int 
 19652 ;; Registers used:
 19653 ;;		wreg, status,2, status,0
 19654 ;; Tracked objects:
 19655 ;;		On entry : 3F/0
 19656 ;;		On exit  : 3F/0
 19657 ;;		Unchanged: 0/0
 19658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19659 ;;      Params:         0       4       0       0       0       0       0       0       0
 19660 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19661 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19662 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19663 ;;Total ram usage:        8 bytes
 19664 ;; Hardware stack levels used:    1
 19665 ;; Hardware stack levels required when called:    7
 19666 ;; This function calls:
 19667 ;;		Nothing
 19668 ;; This function is called by:
 19669 ;;		_efgtoa
 19670 ;; This function uses a non-reentrant model
 19671 ;;
 19672                           
 19673                           	psect	text40
 19674  004880                     __ptext40:
 19675                           	callstack 0
 19676  004880                     ___awdiv:
 19677                           	callstack 18
 19678                           
 19679                           ; BSR set to: 0
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;incstack = 0
 19683  004880  0E00               	movlw	0
 19684  004882  6F6A               	movwf	___awdiv@sign& (0+255),b
 19685                           
 19686                           ; BSR set to: 0
 19687  004884  AF68               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19688  004886  D006               	goto	l10282
 19689                           
 19690                           ; BSR set to: 0
 19691  004888  6D67               	negf	___awdiv@divisor& (0+255),b
 19692  00488A  1F68               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19693  00488C  B0D8               	btfsc	status,0,c
 19694  00488E  2B68               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19695                           
 19696                           ; BSR set to: 0
 19697  004890  0E01               	movlw	1
 19698  004892  6F6A               	movwf	___awdiv@sign& (0+255),b
 19699  004894                     l10282:
 19700                           
 19701                           ; BSR set to: 0
 19702  004894  AF66               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19703  004896  D006               	goto	l10288
 19704                           
 19705                           ; BSR set to: 0
 19706  004898  6D65               	negf	___awdiv@dividend& (0+255),b
 19707  00489A  1F66               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19708  00489C  B0D8               	btfsc	status,0,c
 19709  00489E  2B66               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19710                           
 19711                           ; BSR set to: 0
 19712  0048A0  0E01               	movlw	1
 19713  0048A2  1B6A               	xorwf	___awdiv@sign& (0+255),f,b
 19714  0048A4                     l10288:
 19715                           
 19716                           ; BSR set to: 0
 19717  0048A4  0E00               	movlw	0
 19718  0048A6  6F6C               	movwf	(___awdiv@quotient+1)& (0+255),b
 19719  0048A8  0E00               	movlw	0
 19720  0048AA  6F6B               	movwf	___awdiv@quotient& (0+255),b
 19721                           
 19722                           ; BSR set to: 0
 19723  0048AC  5167               	movf	___awdiv@divisor& (0+255),w,b
 19724  0048AE  1168               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19725  0048B0  B4D8               	btfsc	status,2,c
 19726  0048B2  D01C               	goto	l10310
 19727                           
 19728                           ; BSR set to: 0
 19729  0048B4  0E01               	movlw	1
 19730  0048B6  6F69               	movwf	___awdiv@counter& (0+255),b
 19731  0048B8  D004               	goto	l10296
 19732  0048BA                     l10294:
 19733                           
 19734                           ; BSR set to: 0
 19735  0048BA  90D8               	bcf	status,0,c
 19736  0048BC  3767               	rlcf	___awdiv@divisor& (0+255),f,b
 19737  0048BE  3768               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19738  0048C0  2B69               	incf	___awdiv@counter& (0+255),f,b
 19739  0048C2                     l10296:
 19740                           
 19741                           ; BSR set to: 0
 19742  0048C2  AF68               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19743  0048C4  D7FA               	goto	l10294
 19744  0048C6                     u13730:
 19745                           
 19746                           ; BSR set to: 0
 19747  0048C6  90D8               	bcf	status,0,c
 19748  0048C8  376B               	rlcf	___awdiv@quotient& (0+255),f,b
 19749  0048CA  376C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19750                           
 19751                           ; BSR set to: 0
 19752  0048CC  5167               	movf	___awdiv@divisor& (0+255),w,b
 19753  0048CE  5D65               	subwf	___awdiv@dividend& (0+255),w,b
 19754  0048D0  5168               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19755  0048D2  5966               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19756  0048D4  A0D8               	btfss	status,0,c
 19757  0048D6  D005               	goto	l10306
 19758                           
 19759                           ; BSR set to: 0
 19760  0048D8  5167               	movf	___awdiv@divisor& (0+255),w,b
 19761  0048DA  5F65               	subwf	___awdiv@dividend& (0+255),f,b
 19762  0048DC  5168               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19763  0048DE  5B66               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19764                           
 19765                           ; BSR set to: 0
 19766  0048E0  816B               	bsf	___awdiv@quotient& (0+255),0,b
 19767  0048E2                     l10306:
 19768                           
 19769                           ; BSR set to: 0
 19770  0048E2  90D8               	bcf	status,0,c
 19771  0048E4  3368               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19772  0048E6  3367               	rrcf	___awdiv@divisor& (0+255),f,b
 19773                           
 19774                           ; BSR set to: 0
 19775  0048E8  2F69               	decfsz	___awdiv@counter& (0+255),f,b
 19776  0048EA  D7ED               	goto	u13730
 19777  0048EC                     l10310:
 19778                           
 19779                           ; BSR set to: 0
 19780  0048EC  516A               	movf	___awdiv@sign& (0+255),w,b
 19781  0048EE  B4D8               	btfsc	status,2,c
 19782  0048F0  D004               	goto	l10314
 19783                           
 19784                           ; BSR set to: 0
 19785  0048F2  6D6B               	negf	___awdiv@quotient& (0+255),b
 19786  0048F4  1F6C               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19787  0048F6  B0D8               	btfsc	status,0,c
 19788  0048F8  2B6C               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19789  0048FA                     l10314:
 19790                           
 19791                           ; BSR set to: 0
 19792  0048FA  C06B  F065         	movff	___awdiv@quotient,?___awdiv
 19793  0048FE  C06C  F066         	movff	___awdiv@quotient+1,?___awdiv+1
 19794                           
 19795                           ; BSR set to: 0
 19796  004902  0012               	return		;funcret
 19797  004904                     __end_of___awdiv:
 19798                           	callstack 0
 19799                           
 19800 ;; *************** function _dtoa *****************
 19801 ;; Defined at:
 19802 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
 19805 ;;		 -> sprintf@f(6), 
 19806 ;;  d               8   32[BANK0 ] long long 
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;  n               8   56[BANK0 ] long long 
 19809 ;;  i               2   64[BANK0 ] int 
 19810 ;;  s               2   54[BANK0 ] int 
 19811 ;;  w               2   52[BANK0 ] int 
 19812 ;;  p               2   50[BANK0 ] int 
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  2   31[BANK0 ] int 
 19815 ;; Registers used:
 19816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19817 ;; Tracked objects:
 19818 ;;		On entry : 3F/0
 19819 ;;		On exit  : 3F/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19822 ;;      Params:         0       9       0       0       0       0       0       0       0
 19823 ;;      Locals:         0      18       0       0       0       0       0       0       0
 19824 ;;      Temps:          0       8       0       0       0       0       0       0       0
 19825 ;;      Totals:         0      35       0       0       0       0       0       0       0
 19826 ;;Total ram usage:       35 bytes
 19827 ;; Hardware stack levels used:    1
 19828 ;; Hardware stack levels required when called:   11
 19829 ;; This function calls:
 19830 ;;		___aodiv
 19831 ;;		___aomod
 19832 ;;		_abs
 19833 ;;		_pad
 19834 ;; This function is called by:
 19835 ;;		_vfpfcnvrt
 19836 ;; This function uses a non-reentrant model
 19837 ;;
 19838                           
 19839                           	psect	text41
 19840  002DBE                     __ptext41:
 19841                           	callstack 0
 19842  002DBE                     _dtoa:
 19843                           	callstack 15
 19844                           
 19845                           ; BSR set to: 0
 19846                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;incstack = 0
 19850  002DBE  C080  F098         	movff	dtoa@d,dtoa@n
 19851  002DC2  C081  F099         	movff	dtoa@d+1,dtoa@n+1
 19852  002DC6  C082  F09A         	movff	dtoa@d+2,dtoa@n+2
 19853  002DCA  C083  F09B         	movff	dtoa@d+3,dtoa@n+3
 19854  002DCE  C084  F09C         	movff	dtoa@d+4,dtoa@n+4
 19855  002DD2  C085  F09D         	movff	dtoa@d+5,dtoa@n+5
 19856  002DD6  C086  F09E         	movff	dtoa@d+6,dtoa@n+6
 19857  002DDA  C087  F09F         	movff	dtoa@d+7,dtoa@n+7
 19858                           
 19859                           ; BSR set to: 0
 19860                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 19861  002DDE  AF9F               	btfss	(dtoa@n+7)& (0+255),7,b
 19862  002DE0  D002               	goto	u14290
 19863  002DE2  0E01               	movlw	1
 19864  002DE4  D001               	goto	u14300
 19865  002DE6                     u14290:
 19866  002DE6  0E00               	movlw	0
 19867  002DE8                     u14300:
 19868  002DE8  6F96               	movwf	dtoa@s& (0+255),b
 19869  002DEA  6B97               	clrf	(dtoa@s+1)& (0+255),b
 19870                           
 19871                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 19872  002DEC  5196               	movf	dtoa@s& (0+255),w,b
 19873  002DEE  1197               	iorwf	(dtoa@s+1)& (0+255),w,b
 19874  002DF0  B4D8               	btfsc	status,2,c
 19875  002DF2  D010               	goto	l10556
 19876                           
 19877                           ; BSR set to: 0
 19878                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 19879  002DF4  1F9F               	comf	(dtoa@n+7)& (0+255),f,b
 19880  002DF6  1F9E               	comf	(dtoa@n+6)& (0+255),f,b
 19881  002DF8  1F9D               	comf	(dtoa@n+5)& (0+255),f,b
 19882  002DFA  1F9C               	comf	(dtoa@n+4)& (0+255),f,b
 19883  002DFC  1F9B               	comf	(dtoa@n+3)& (0+255),f,b
 19884  002DFE  1F9A               	comf	(dtoa@n+2)& (0+255),f,b
 19885  002E00  1F99               	comf	(dtoa@n+1)& (0+255),f,b
 19886  002E02  6D98               	negf	dtoa@n& (0+255),b
 19887  002E04  0E00               	movlw	0
 19888  002E06  2399               	addwfc	(dtoa@n+1)& (0+255),f,b
 19889  002E08  239A               	addwfc	(dtoa@n+2)& (0+255),f,b
 19890  002E0A  239B               	addwfc	(dtoa@n+3)& (0+255),f,b
 19891  002E0C  239C               	addwfc	(dtoa@n+4)& (0+255),f,b
 19892  002E0E  239D               	addwfc	(dtoa@n+5)& (0+255),f,b
 19893  002E10  239E               	addwfc	(dtoa@n+6)& (0+255),f,b
 19894  002E12  239F               	addwfc	(dtoa@n+7)& (0+255),f,b
 19895  002E14                     l10556:
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 19899  002E14  0101               	movlb	1	; () banked
 19900  002E16  AF26               	btfss	(_prec+1)& (0+255),7,b
 19901                           
 19902                           ; BSR set to: 1
 19903                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 19904  002E18  9327               	bcf	_flags& (0+255),1,b
 19905                           
 19906                           ; BSR set to: 1
 19907                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 19908  002E1A  BF26               	btfsc	(_prec+1)& (0+255),7,b
 19909  002E1C  D005               	goto	u14330
 19910  002E1E  5126               	movf	(_prec+1)& (0+255),w,b
 19911  002E20  E109               	bnz	l1352
 19912  002E22  0525               	decf	_prec& (0+255),w,b
 19913  002E24  B0D8               	btfsc	status,0,c
 19914  002E26  D006               	goto	l1352
 19915  002E28                     u14330:
 19916                           
 19917                           ; BSR set to: 1
 19918  002E28  0E00               	movlw	0
 19919  002E2A  0100               	movlb	0	; () banked
 19920  002E2C  6F93               	movwf	(dtoa@p+1)& (0+255),b
 19921  002E2E  0E01               	movlw	1
 19922  002E30  6F92               	movwf	dtoa@p& (0+255),b
 19923  002E32  D004               	goto	l1354
 19924  002E34                     l1352:
 19925                           
 19926                           ; BSR set to: 1
 19927  002E34  C125  F092         	movff	_prec,dtoa@p
 19928  002E38  C126  F093         	movff	_prec+1,dtoa@p+1
 19929  002E3C                     l1354:
 19930                           
 19931                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 19932  002E3C  C123  F094         	movff	_width,dtoa@w
 19933  002E40  C124  F095         	movff	_width+1,dtoa@w+1
 19934                           
 19935                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 19936  002E44  0100               	movlb	0	; () banked
 19937  002E46  5196               	movf	dtoa@s& (0+255),w,b
 19938  002E48  1197               	iorwf	(dtoa@s+1)& (0+255),w,b
 19939  002E4A  A4D8               	btfss	status,2,c
 19940  002E4C  D003               	goto	u14350
 19941                           
 19942                           ; BSR set to: 0
 19943  002E4E  0101               	movlb	1	; () banked
 19944  002E50  A527               	btfss	_flags& (0+255),2,b
 19945  002E52  D004               	goto	l10570
 19946  002E54                     u14350:
 19947                           
 19948                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 293:         --w;
 19949  002E54  0100               	movlb	0	; () banked
 19950  002E56  0794               	decf	dtoa@w& (0+255),f,b
 19951  002E58  A0D8               	btfss	status,0,c
 19952  002E5A  0795               	decf	(dtoa@w+1)& (0+255),f,b
 19953  002E5C                     l10570:
 19954                           
 19955                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 19956  002E5C  0E00               	movlw	0
 19957  002E5E  0100               	movlb	0	; () banked
 19958  002E60  6FA1               	movwf	(dtoa@i+1)& (0+255),b
 19959  002E62  0E4F               	movlw	79
 19960  002E64  6FA0               	movwf	dtoa@i& (0+255),b
 19961                           
 19962                           ; BSR set to: 0
 19963                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 19964  002E66  0E00               	movlw	0
 19965  002E68  0101               	movlb	1	; () banked
 19966  002E6A  6F81               	movwf	(_dbuf+79)& (0+255),b
 19967                           
 19968                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19969  002E6C  D07D               	goto	l10584
 19970  002E6E                     l10574:
 19971                           
 19972                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 300:         --i;
 19973  002E6E  0100               	movlb	0	; () banked
 19974  002E70  07A0               	decf	dtoa@i& (0+255),f,b
 19975  002E72  A0D8               	btfss	status,0,c
 19976  002E74  07A1               	decf	(dtoa@i+1)& (0+255),f,b
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 19980  002E76  0E32               	movlw	low _dbuf
 19981  002E78  25A0               	addwf	dtoa@i& (0+255),w,b
 19982  002E7A  6ED9               	movwf	fsr2l,c
 19983  002E7C  0E01               	movlw	high _dbuf
 19984  002E7E  21A1               	addwfc	(dtoa@i+1)& (0+255),w,b
 19985  002E80  6EDA               	movwf	fsr2h,c
 19986  002E82  C098  F065         	movff	dtoa@n,___aomod@dividend
 19987  002E86  C099  F066         	movff	dtoa@n+1,___aomod@dividend+1
 19988  002E8A  C09A  F067         	movff	dtoa@n+2,___aomod@dividend+2
 19989  002E8E  C09B  F068         	movff	dtoa@n+3,___aomod@dividend+3
 19990  002E92  C09C  F069         	movff	dtoa@n+4,___aomod@dividend+4
 19991  002E96  C09D  F06A         	movff	dtoa@n+5,___aomod@dividend+5
 19992  002E9A  C09E  F06B         	movff	dtoa@n+6,___aomod@dividend+6
 19993  002E9E  C09F  F06C         	movff	dtoa@n+7,___aomod@dividend+7
 19994  002EA2  0E0A               	movlw	10
 19995  002EA4  6F6D               	movwf	___aomod@divisor& (0+255),b
 19996  002EA6  0E00               	movlw	0
 19997  002EA8  6F6E               	movwf	(___aomod@divisor+1)& (0+255),b
 19998  002EAA  0E00               	movlw	0
 19999  002EAC  6F6F               	movwf	(___aomod@divisor+2)& (0+255),b
 20000  002EAE  0E00               	movlw	0
 20001  002EB0  6F70               	movwf	(___aomod@divisor+3)& (0+255),b
 20002  002EB2  0E00               	movlw	0
 20003  002EB4  6F71               	movwf	(___aomod@divisor+4)& (0+255),b
 20004  002EB6  0E00               	movlw	0
 20005  002EB8  6F72               	movwf	(___aomod@divisor+5)& (0+255),b
 20006  002EBA  0E00               	movlw	0
 20007  002EBC  6F73               	movwf	(___aomod@divisor+6)& (0+255),b
 20008  002EBE  0E00               	movlw	0
 20009  002EC0  6F74               	movwf	(___aomod@divisor+7)& (0+255),b
 20010  002EC2  EC1D  F01C         	call	___aomod	;wreg free
 20011  002EC6  C065  F088         	movff	?___aomod,??_dtoa
 20012  002ECA  C066  F089         	movff	?___aomod+1,??_dtoa+1
 20013  002ECE  C067  F08A         	movff	?___aomod+2,??_dtoa+2
 20014  002ED2  C068  F08B         	movff	?___aomod+3,??_dtoa+3
 20015  002ED6  C069  F08C         	movff	?___aomod+4,??_dtoa+4
 20016  002EDA  C06A  F08D         	movff	?___aomod+5,??_dtoa+5
 20017  002EDE  C06B  F08E         	movff	?___aomod+6,??_dtoa+6
 20018  002EE2  C06C  F08F         	movff	?___aomod+7,??_dtoa+7
 20019  002EE6  C088  F077         	movff	??_dtoa,abs@a
 20020  002EEA  C08A  F078         	movff	??_dtoa+2,abs@a+1
 20021  002EEE  ECBF  F027         	call	_abs	;wreg free
 20022  002EF2  5177               	movf	?_abs& (0+255),w,b
 20023  002EF4  0F30               	addlw	48
 20024  002EF6  6EDF               	movwf	indf2,c
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 302:         --p;
 20028  002EF8  0792               	decf	dtoa@p& (0+255),f,b
 20029  002EFA  A0D8               	btfss	status,0,c
 20030  002EFC  0793               	decf	(dtoa@p+1)& (0+255),f,b
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 303:         --w;
 20034  002EFE  0794               	decf	dtoa@w& (0+255),f,b
 20035  002F00  A0D8               	btfss	status,0,c
 20036  002F02  0795               	decf	(dtoa@w+1)& (0+255),f,b
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 20040  002F04  C098  F065         	movff	dtoa@n,___aodiv@dividend
 20041  002F08  C099  F066         	movff	dtoa@n+1,___aodiv@dividend+1
 20042  002F0C  C09A  F067         	movff	dtoa@n+2,___aodiv@dividend+2
 20043  002F10  C09B  F068         	movff	dtoa@n+3,___aodiv@dividend+3
 20044  002F14  C09C  F069         	movff	dtoa@n+4,___aodiv@dividend+4
 20045  002F18  C09D  F06A         	movff	dtoa@n+5,___aodiv@dividend+5
 20046  002F1C  C09E  F06B         	movff	dtoa@n+6,___aodiv@dividend+6
 20047  002F20  C09F  F06C         	movff	dtoa@n+7,___aodiv@dividend+7
 20048  002F24  0E0A               	movlw	10
 20049  002F26  6F6D               	movwf	___aodiv@divisor& (0+255),b
 20050  002F28  0E00               	movlw	0
 20051  002F2A  6F6E               	movwf	(___aodiv@divisor+1)& (0+255),b
 20052  002F2C  0E00               	movlw	0
 20053  002F2E  6F6F               	movwf	(___aodiv@divisor+2)& (0+255),b
 20054  002F30  0E00               	movlw	0
 20055  002F32  6F70               	movwf	(___aodiv@divisor+3)& (0+255),b
 20056  002F34  0E00               	movlw	0
 20057  002F36  6F71               	movwf	(___aodiv@divisor+4)& (0+255),b
 20058  002F38  0E00               	movlw	0
 20059  002F3A  6F72               	movwf	(___aodiv@divisor+5)& (0+255),b
 20060  002F3C  0E00               	movlw	0
 20061  002F3E  6F73               	movwf	(___aodiv@divisor+6)& (0+255),b
 20062  002F40  0E00               	movlw	0
 20063  002F42  6F74               	movwf	(___aodiv@divisor+7)& (0+255),b
 20064  002F44  EC98  F019         	call	___aodiv	;wreg free
 20065  002F48  C065  F098         	movff	?___aodiv,dtoa@n
 20066  002F4C  C066  F099         	movff	?___aodiv+1,dtoa@n+1
 20067  002F50  C067  F09A         	movff	?___aodiv+2,dtoa@n+2
 20068  002F54  C068  F09B         	movff	?___aodiv+3,dtoa@n+3
 20069  002F58  C069  F09C         	movff	?___aodiv+4,dtoa@n+4
 20070  002F5C  C06A  F09D         	movff	?___aodiv+5,dtoa@n+5
 20071  002F60  C06B  F09E         	movff	?___aodiv+6,dtoa@n+6
 20072  002F64  C06C  F09F         	movff	?___aodiv+7,dtoa@n+7
 20073  002F68                     l10584:
 20074                           
 20075                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20076  002F68  0100               	movlb	0	; () banked
 20077  002F6A  BFA1               	btfsc	(dtoa@i+1)& (0+255),7,b
 20078  002F6C  D020               	goto	u14400
 20079  002F6E  51A1               	movf	(dtoa@i+1)& (0+255),w,b
 20080  002F70  E103               	bnz	u14360
 20081  002F72  05A0               	decf	dtoa@i& (0+255),w,b
 20082  002F74  A0D8               	btfss	status,0,c
 20083  002F76  D01B               	goto	u14400
 20084  002F78                     u14360:
 20085                           
 20086                           ; BSR set to: 0
 20087  002F78  5198               	movf	dtoa@n& (0+255),w,b
 20088  002F7A  1199               	iorwf	(dtoa@n+1)& (0+255),w,b
 20089  002F7C  119A               	iorwf	(dtoa@n+2)& (0+255),w,b
 20090  002F7E  119B               	iorwf	(dtoa@n+3)& (0+255),w,b
 20091  002F80  119C               	iorwf	(dtoa@n+4)& (0+255),w,b
 20092  002F82  119D               	iorwf	(dtoa@n+5)& (0+255),w,b
 20093  002F84  119E               	iorwf	(dtoa@n+6)& (0+255),w,b
 20094  002F86  119F               	iorwf	(dtoa@n+7)& (0+255),w,b
 20095  002F88  A4D8               	btfss	status,2,c
 20096  002F8A  D771               	goto	l10574
 20097                           
 20098                           ; BSR set to: 0
 20099  002F8C  BF93               	btfsc	(dtoa@p+1)& (0+255),7,b
 20100  002F8E  D005               	goto	u14380
 20101  002F90  5193               	movf	(dtoa@p+1)& (0+255),w,b
 20102  002F92  E102               	bnz	u14381
 20103  002F94  0592               	decf	dtoa@p& (0+255),w,b
 20104  002F96  B0D8               	btfsc	status,0,c
 20105  002F98                     u14381:
 20106  002F98  D76A               	goto	l10574
 20107  002F9A                     u14380:
 20108                           
 20109                           ; BSR set to: 0
 20110  002F9A  BF95               	btfsc	(dtoa@w+1)& (0+255),7,b
 20111  002F9C  D008               	goto	u14400
 20112  002F9E  5195               	movf	(dtoa@w+1)& (0+255),w,b
 20113  002FA0  E103               	bnz	u14390
 20114  002FA2  0594               	decf	dtoa@w& (0+255),w,b
 20115  002FA4  A0D8               	btfss	status,0,c
 20116  002FA6  D003               	goto	u14400
 20117  002FA8                     u14390:
 20118                           
 20119                           ; BSR set to: 0
 20120  002FA8  0101               	movlb	1	; () banked
 20121  002FAA  B327               	btfsc	_flags& (0+255),1,b
 20122  002FAC  D760               	goto	l10574
 20123  002FAE                     u14400:
 20124                           
 20125                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 20126  002FAE  0100               	movlb	0	; () banked
 20127  002FB0  5196               	movf	dtoa@s& (0+255),w,b
 20128  002FB2  1197               	iorwf	(dtoa@s+1)& (0+255),w,b
 20129  002FB4  A4D8               	btfss	status,2,c
 20130  002FB6  D003               	goto	u14420
 20131                           
 20132                           ; BSR set to: 0
 20133  002FB8  0101               	movlb	1	; () banked
 20134  002FBA  A527               	btfss	_flags& (0+255),2,b
 20135  002FBC  D018               	goto	l10608
 20136  002FBE                     u14420:
 20137                           
 20138                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 309:         --i;
 20139  002FBE  0100               	movlb	0	; () banked
 20140  002FC0  07A0               	decf	dtoa@i& (0+255),f,b
 20141  002FC2  A0D8               	btfss	status,0,c
 20142  002FC4  07A1               	decf	(dtoa@i+1)& (0+255),f,b
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 20146  002FC6  5196               	movf	dtoa@s& (0+255),w,b
 20147  002FC8  1197               	iorwf	(dtoa@s+1)& (0+255),w,b
 20148  002FCA  A4D8               	btfss	status,2,c
 20149  002FCC  D004               	goto	l10604
 20150                           
 20151                           ; BSR set to: 0
 20152  002FCE  0E00               	movlw	0
 20153  002FD0  6F91               	movwf	(_dtoa$1968+1)& (0+255),b
 20154  002FD2  0E2B               	movlw	43
 20155  002FD4  D003               	goto	L12
 20156  002FD6                     l10604:
 20157                           
 20158                           ; BSR set to: 0
 20159  002FD6  0E00               	movlw	0
 20160  002FD8  6F91               	movwf	(_dtoa$1968+1)& (0+255),b
 20161  002FDA  0E2D               	movlw	45
 20162  002FDC                     L12:
 20163  002FDC  6F90               	movwf	_dtoa$1968& (0+255),b
 20164                           
 20165                           ; BSR set to: 0
 20166  002FDE  0E32               	movlw	low _dbuf
 20167  002FE0  25A0               	addwf	dtoa@i& (0+255),w,b
 20168  002FE2  6ED9               	movwf	fsr2l,c
 20169  002FE4  0E01               	movlw	high _dbuf
 20170  002FE6  21A1               	addwfc	(dtoa@i+1)& (0+255),w,b
 20171  002FE8  6EDA               	movwf	fsr2h,c
 20172  002FEA  C090  FFDF         	movff	_dtoa$1968,indf2
 20173  002FEE                     l10608:
 20174                           
 20175                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 20176  002FEE  C07F  F073         	movff	dtoa@fp,pad@fp
 20177  002FF2  0E32               	movlw	low _dbuf
 20178  002FF4  0100               	movlb	0	; () banked
 20179  002FF6  25A0               	addwf	dtoa@i& (0+255),w,b
 20180  002FF8  6F74               	movwf	pad@buf& (0+255),b
 20181  002FFA  0E01               	movlw	high _dbuf
 20182  002FFC  21A1               	addwfc	(dtoa@i+1)& (0+255),w,b
 20183  002FFE  6F75               	movwf	(pad@buf+1)& (0+255),b
 20184  003000  C094  F076         	movff	dtoa@w,pad@p
 20185  003004  C095  F077         	movff	dtoa@w+1,pad@p+1
 20186  003008  EC29  F023         	call	_pad	;wreg free
 20187  00300C  C073  F07F         	movff	?_pad,?_dtoa
 20188  003010  C074  F080         	movff	?_pad+1,?_dtoa+1
 20189                           
 20190                           ; BSR set to: 0
 20191  003014  0012               	return		;funcret
 20192  003016                     __end_of_dtoa:
 20193                           	callstack 0
 20194                           
 20195 ;; *************** function _pad *****************
 20196 ;; Defined at:
 20197 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c"
 20198 ;; Parameters:    Size  Location     Type
 20199 ;;  fp              1   19[BANK0 ] PTR struct _IO_FILE
 20200 ;;		 -> sprintf@f(6), 
 20201 ;;  buf             2   20[BANK0 ] PTR unsigned char 
 20202 ;;		 -> dbuf(80), 
 20203 ;;  p               2   22[BANK0 ] int 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;  w               2   27[BANK0 ] int 
 20206 ;;  i               2   25[BANK0 ] int 
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  2   19[BANK0 ] int 
 20209 ;; Registers used:
 20210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20211 ;; Tracked objects:
 20212 ;;		On entry : 3F/0
 20213 ;;		On exit  : 3F/0
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20216 ;;      Params:         0       5       0       0       0       0       0       0       0
 20217 ;;      Locals:         0       4       0       0       0       0       0       0       0
 20218 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20219 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20220 ;;Total ram usage:       10 bytes
 20221 ;; Hardware stack levels used:    1
 20222 ;; Hardware stack levels required when called:   10
 20223 ;; This function calls:
 20224 ;;		_fputc
 20225 ;;		_fputs
 20226 ;;		_strlen
 20227 ;; This function is called by:
 20228 ;;		_dtoa
 20229 ;;		_efgtoa
 20230 ;; This function uses a non-reentrant model
 20231 ;;
 20232                           
 20233                           	psect	text42
 20234  004652                     __ptext42:
 20235                           	callstack 0
 20236  004652                     _pad:
 20237                           	callstack 15
 20238                           
 20239                           ; BSR set to: 0
 20240                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;incstack = 0
 20244  004652  0101               	movlb	1	; () banked
 20245  004654  A127               	btfss	_flags& (0+255),0,b
 20246  004656  D008               	goto	l10448
 20247                           
 20248                           ; BSR set to: 1
 20249                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 20250  004658  C074  F06D         	movff	pad@buf,fputs@s
 20251  00465C  C075  F06E         	movff	pad@buf+1,fputs@s+1
 20252  004660  C073  F06F         	movff	pad@fp,fputs@fp
 20253  004664  EC58  F027         	call	_fputs	;wreg free
 20254  004668                     l10448:
 20255                           
 20256                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 20257  004668  0100               	movlb	0	; () banked
 20258  00466A  BF77               	btfsc	(pad@p+1)& (0+255),7,b
 20259  00466C  D005               	goto	l10452
 20260                           
 20261                           ; BSR set to: 0
 20262  00466E  C076  F07B         	movff	pad@p,pad@w
 20263  004672  C077  F07C         	movff	pad@p+1,pad@w+1
 20264  004676  D004               	goto	l1341
 20265  004678                     l10452:
 20266                           
 20267                           ; BSR set to: 0
 20268  004678  0E00               	movlw	0
 20269  00467A  6F7C               	movwf	(pad@w+1)& (0+255),b
 20270  00467C  0E00               	movlw	0
 20271  00467E  6F7B               	movwf	pad@w& (0+255),b
 20272  004680                     l1341:
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 20276  004680  0E00               	movlw	0
 20277  004682  6F7A               	movwf	(pad@i+1)& (0+255),b
 20278  004684  0E00               	movlw	0
 20279  004686  6F79               	movwf	pad@i& (0+255),b
 20280                           
 20281                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 20282  004688  D00A               	goto	l10458
 20283  00468A                     l10454:
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 20287  00468A  0E00               	movlw	0
 20288  00468C  6F66               	movwf	(fputc@c+1)& (0+255),b
 20289  00468E  0E20               	movlw	32
 20290  004690  6F65               	movwf	fputc@c& (0+255),b
 20291  004692  C073  F067         	movff	pad@fp,fputc@fp
 20292  004696  EC71  F023         	call	_fputc	;wreg free
 20293                           
 20294                           ; BSR set to: 0
 20295                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 86:         ++i;
 20296  00469A  4B79               	infsnz	pad@i& (0+255),f,b
 20297  00469C  2B7A               	incf	(pad@i+1)& (0+255),f,b
 20298  00469E                     l10458:
 20299                           
 20300                           ; BSR set to: 0
 20301                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 20302  00469E  517B               	movf	pad@w& (0+255),w,b
 20303  0046A0  5D79               	subwf	pad@i& (0+255),w,b
 20304  0046A2  517A               	movf	(pad@i+1)& (0+255),w,b
 20305  0046A4  0A80               	xorlw	128
 20306  0046A6  6F78               	movwf	??_pad& (0+255),b
 20307  0046A8  517C               	movf	(pad@w+1)& (0+255),w,b
 20308  0046AA  0A80               	xorlw	128
 20309  0046AC  5978               	subwfb	??_pad& (0+255),w,b
 20310  0046AE  A0D8               	btfss	status,0,c
 20311  0046B0  D7EC               	goto	l10454
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 20315  0046B2  0101               	movlb	1	; () banked
 20316  0046B4  B127               	btfsc	_flags& (0+255),0,b
 20317  0046B6  D008               	goto	l10462
 20318                           
 20319                           ; BSR set to: 1
 20320                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 20321  0046B8  C074  F06D         	movff	pad@buf,fputs@s
 20322  0046BC  C075  F06E         	movff	pad@buf+1,fputs@s+1
 20323  0046C0  C073  F06F         	movff	pad@fp,fputs@fp
 20324  0046C4  EC58  F027         	call	_fputs	;wreg free
 20325  0046C8                     l10462:
 20326                           
 20327                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 20328  0046C8  C074  F065         	movff	pad@buf,strlen@s
 20329  0046CC  C075  F066         	movff	pad@buf+1,strlen@s+1
 20330  0046D0  EC22  F028         	call	_strlen	;wreg free
 20331  0046D4  517B               	movf	pad@w& (0+255),w,b
 20332  0046D6  2565               	addwf	?_strlen& (0+255),w,b
 20333  0046D8  6F73               	movwf	?_pad& (0+255),b
 20334  0046DA  517C               	movf	(pad@w+1)& (0+255),w,b
 20335  0046DC  2166               	addwfc	(?_strlen+1)& (0+255),w,b
 20336  0046DE  6F74               	movwf	(?_pad+1)& (0+255),b
 20337                           
 20338                           ; BSR set to: 0
 20339  0046E0  0012               	return		;funcret
 20340  0046E2                     __end_of_pad:
 20341                           	callstack 0
 20342                           
 20343 ;; *************** function _strlen *****************
 20344 ;; Defined at:
 20345 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\strlen.c"
 20346 ;; Parameters:    Size  Location     Type
 20347 ;;  s               2    5[BANK0 ] PTR const unsigned char 
 20348 ;;		 -> dbuf(80), 
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;  a               2    7[BANK0 ] PTR const unsigned char 
 20351 ;;		 -> dbuf(80), 
 20352 ;; Return value:  Size  Location     Type
 20353 ;;                  2    5[BANK0 ] unsigned int 
 20354 ;; Registers used:
 20355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20356 ;; Tracked objects:
 20357 ;;		On entry : 3E/1
 20358 ;;		On exit  : 3F/0
 20359 ;;		Unchanged: 0/0
 20360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20361 ;;      Params:         0       2       0       0       0       0       0       0       0
 20362 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20364 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20365 ;;Total ram usage:        4 bytes
 20366 ;; Hardware stack levels used:    1
 20367 ;; Hardware stack levels required when called:    7
 20368 ;; This function calls:
 20369 ;;		Nothing
 20370 ;; This function is called by:
 20371 ;;		_pad
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text43
 20376  005044                     __ptext43:
 20377                           	callstack 0
 20378  005044                     _strlen:
 20379                           	callstack 17
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;incstack = 0
 20383  005044  C065  F067         	movff	strlen@s,strlen@a
 20384  005048  C066  F068         	movff	strlen@s+1,strlen@a+1
 20385  00504C  D003               	goto	l9904
 20386  00504E                     l9902:
 20387  00504E  0100               	movlb	0	; () banked
 20388  005050  4B65               	infsnz	strlen@s& (0+255),f,b
 20389  005052  2B66               	incf	(strlen@s+1)& (0+255),f,b
 20390  005054                     l9904:
 20391  005054  C065  FFD9         	movff	strlen@s,fsr2l
 20392  005058  C066  FFDA         	movff	strlen@s+1,fsr2h
 20393  00505C  50DF               	movf	indf2,w,c
 20394  00505E  A4D8               	btfss	status,2,c
 20395  005060  D7F6               	goto	l9902
 20396  005062  0100               	movlb	0	; () banked
 20397  005064  5167               	movf	strlen@a& (0+255),w,b
 20398  005066  5D65               	subwf	strlen@s& (0+255),w,b
 20399  005068  6F65               	movwf	?_strlen& (0+255),b
 20400  00506A  5168               	movf	(strlen@a+1)& (0+255),w,b
 20401  00506C  5966               	subwfb	(strlen@s+1)& (0+255),w,b
 20402  00506E  6F66               	movwf	(?_strlen+1)& (0+255),b
 20403                           
 20404                           ; BSR set to: 0
 20405  005070  0012               	return		;funcret
 20406  005072                     __end_of_strlen:
 20407                           	callstack 0
 20408                           
 20409 ;; *************** function _fputs *****************
 20410 ;; Defined at:
 20411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\nf_fputs.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 20414 ;;		 -> dbuf(80), 
 20415 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
 20416 ;;		 -> sprintf@f(6), 
 20417 ;; Auto vars:     Size  Location     Type
 20418 ;;  i               2   17[BANK0 ] int 
 20419 ;;  c               1   16[BANK0 ] unsigned char 
 20420 ;; Return value:  Size  Location     Type
 20421 ;;                  2   13[BANK0 ] int 
 20422 ;; Registers used:
 20423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20424 ;; Tracked objects:
 20425 ;;		On entry : 3F/1
 20426 ;;		On exit  : 3F/0
 20427 ;;		Unchanged: 0/0
 20428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20429 ;;      Params:         0       3       0       0       0       0       0       0       0
 20430 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20432 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20433 ;;Total ram usage:        6 bytes
 20434 ;; Hardware stack levels used:    1
 20435 ;; Hardware stack levels required when called:    9
 20436 ;; This function calls:
 20437 ;;		_fputc
 20438 ;; This function is called by:
 20439 ;;		_pad
 20440 ;; This function uses a non-reentrant model
 20441 ;;
 20442                           
 20443                           	psect	text44
 20444  004EB0                     __ptext44:
 20445                           	callstack 0
 20446  004EB0                     _fputs:
 20447                           	callstack 15
 20448                           
 20449                           ; BSR set to: 1
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;incstack = 0
 20453  004EB0  0E00               	movlw	0
 20454  004EB2  0100               	movlb	0	; () banked
 20455  004EB4  6F72               	movwf	(fputs@i+1)& (0+255),b
 20456  004EB6  0E00               	movlw	0
 20457  004EB8  6F71               	movwf	fputs@i& (0+255),b
 20458  004EBA  D009               	goto	l9898
 20459  004EBC                     l9894:
 20460                           
 20461                           ; BSR set to: 0
 20462  004EBC  C070  F065         	movff	fputs@c,fputc@c
 20463  004EC0  6B66               	clrf	(fputc@c+1)& (0+255),b
 20464  004EC2  C06F  F067         	movff	fputs@fp,fputc@fp
 20465  004EC6  EC71  F023         	call	_fputc	;wreg free
 20466                           
 20467                           ; BSR set to: 0
 20468  004ECA  4B71               	infsnz	fputs@i& (0+255),f,b
 20469  004ECC  2B72               	incf	(fputs@i+1)& (0+255),f,b
 20470  004ECE                     l9898:
 20471                           
 20472                           ; BSR set to: 0
 20473  004ECE  5171               	movf	fputs@i& (0+255),w,b
 20474  004ED0  256D               	addwf	fputs@s& (0+255),w,b
 20475  004ED2  6ED9               	movwf	fsr2l,c
 20476  004ED4  5172               	movf	(fputs@i+1)& (0+255),w,b
 20477  004ED6  216E               	addwfc	(fputs@s+1)& (0+255),w,b
 20478  004ED8  6EDA               	movwf	fsr2h,c
 20479  004EDA  50DF               	movf	indf2,w,c
 20480  004EDC  6F70               	movwf	fputs@c& (0+255),b
 20481  004EDE  5170               	movf	fputs@c& (0+255),w,b
 20482  004EE0  B4D8               	btfsc	status,2,c
 20483  004EE2  0012               	return	
 20484  004EE4  D7EB               	goto	l9894
 20485  004EE6                     __end_of_fputs:
 20486                           	callstack 0
 20487                           
 20488 ;; *************** function _fputc *****************
 20489 ;; Defined at:
 20490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\nf_fputc.c"
 20491 ;; Parameters:    Size  Location     Type
 20492 ;;  c               2    5[BANK0 ] int 
 20493 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
 20494 ;;		 -> sprintf@f(6), 
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;		None
 20497 ;; Return value:  Size  Location     Type
 20498 ;;                  2    5[BANK0 ] int 
 20499 ;; Registers used:
 20500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20501 ;; Tracked objects:
 20502 ;;		On entry : 3F/0
 20503 ;;		On exit  : 3F/0
 20504 ;;		Unchanged: 0/0
 20505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20506 ;;      Params:         0       3       0       0       0       0       0       0       0
 20507 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20508 ;;      Temps:          0       5       0       0       0       0       0       0       0
 20509 ;;      Totals:         0       8       0       0       0       0       0       0       0
 20510 ;;Total ram usage:        8 bytes
 20511 ;; Hardware stack levels used:    1
 20512 ;; Hardware stack levels required when called:    8
 20513 ;; This function calls:
 20514 ;;		_putch
 20515 ;; This function is called by:
 20516 ;;		_pad
 20517 ;;		_vfpfcnvrt
 20518 ;;		_fputs
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           	psect	text45
 20523  0046E2                     __ptext45:
 20524                           	callstack 0
 20525  0046E2                     _fputc:
 20526                           	callstack 18
 20527                           
 20528                           ; BSR set to: 0
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;incstack = 0
 20532  0046E2  5167               	movf	fputc@fp& (0+255),w,b
 20533  0046E4  B4D8               	btfsc	status,2,c
 20534  0046E6  D003               	goto	u12700
 20535                           
 20536                           ; BSR set to: 0
 20537  0046E8  5167               	movf	fputc@fp& (0+255),w,b
 20538  0046EA  A4D8               	btfss	status,2,c
 20539  0046EC  D004               	goto	l9682
 20540  0046EE                     u12700:
 20541                           
 20542                           ; BSR set to: 0
 20543  0046EE  5165               	movf	fputc@c& (0+255),w,b
 20544  0046F0  ECB0  F028         	call	_putch
 20545  0046F4  0012               	return	
 20546  0046F6                     l9682:
 20547                           
 20548                           ; BSR set to: 0
 20549  0046F6  5167               	movf	fputc@fp& (0+255),w,b
 20550  0046F8  6ED9               	movwf	fsr2l,c
 20551  0046FA  6ADA               	clrf	fsr2h,c
 20552  0046FC  0E04               	movlw	4
 20553  0046FE  26D9               	addwf	fsr2l,f,c
 20554  004700  50DE               	movf	postinc2,w,c
 20555  004702  10DE               	iorwf	postinc2,w,c
 20556  004704  B4D8               	btfsc	status,2,c
 20557  004706  D014               	goto	u12720
 20558                           
 20559                           ; BSR set to: 0
 20560  004708  5167               	movf	fputc@fp& (0+255),w,b
 20561  00470A  6ED9               	movwf	fsr2l,c
 20562  00470C  6ADA               	clrf	fsr2h,c
 20563  00470E  0E04               	movlw	4
 20564  004710  26D9               	addwf	fsr2l,f,c
 20565  004712  5167               	movf	fputc@fp& (0+255),w,b
 20566  004714  6EE1               	movwf	fsr1l,c
 20567  004716  6AE2               	clrf	fsr1h,c
 20568  004718  0E02               	movlw	2
 20569  00471A  26E1               	addwf	fsr1l,f,c
 20570  00471C  50DE               	movf	postinc2,w,c
 20571  00471E  5CE6               	subwf	postinc1,w,c
 20572  004720  50E6               	movf	postinc1,w,c
 20573  004722  0A80               	xorlw	128
 20574  004724  6F6C               	movwf	(??_fputc+4)& (0+255),b
 20575  004726  50DE               	movf	postinc2,w,c
 20576  004728  0A80               	xorlw	128
 20577  00472A  596C               	subwfb	(??_fputc+4)& (0+255),w,b
 20578  00472C  B0D8               	btfsc	status,0,c
 20579  00472E  0012               	return	
 20580  004730                     u12720:
 20581                           
 20582                           ; BSR set to: 0
 20583  004730  5167               	movf	fputc@fp& (0+255),w,b
 20584  004732  6ED9               	movwf	fsr2l,c
 20585  004734  6ADA               	clrf	fsr2h,c
 20586  004736  0E02               	movlw	2
 20587  004738  26D9               	addwf	fsr2l,f,c
 20588  00473A  CFDE F068          	movff	postinc2,??_fputc
 20589  00473E  CFDD F069          	movff	postdec2,??_fputc+1
 20590  004742  5167               	movf	fputc@fp& (0+255),w,b
 20591  004744  6ED9               	movwf	fsr2l,c
 20592  004746  6ADA               	clrf	fsr2h,c
 20593  004748  CFDE F06A          	movff	postinc2,??_fputc+2
 20594  00474C  CFDD F06B          	movff	postdec2,??_fputc+3
 20595  004750  5168               	movf	??_fputc& (0+255),w,b
 20596  004752  256A               	addwf	(??_fputc+2)& (0+255),w,b
 20597  004754  6ED9               	movwf	fsr2l,c
 20598  004756  5169               	movf	(??_fputc+1)& (0+255),w,b
 20599  004758  216B               	addwfc	(??_fputc+3)& (0+255),w,b
 20600  00475A  6EDA               	movwf	fsr2h,c
 20601  00475C  C065  FFDF         	movff	fputc@c,indf2
 20602  004760  5167               	movf	fputc@fp& (0+255),w,b
 20603  004762  6ED9               	movwf	fsr2l,c
 20604  004764  6ADA               	clrf	fsr2h,c
 20605  004766  0E02               	movlw	2
 20606  004768  26D9               	addwf	fsr2l,f,c
 20607  00476A  2ADE               	incf	postinc2,f,c
 20608  00476C  0E00               	movlw	0
 20609  00476E  22DD               	addwfc	postdec2,f,c
 20610                           
 20611                           ; BSR set to: 0
 20612  004770  0012               	return		;funcret
 20613  004772                     __end_of_fputc:
 20614                           	callstack 0
 20615                           
 20616 ;; *************** function _putch *****************
 20617 ;; Defined at:
 20618 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\putch.c"
 20619 ;; Parameters:    Size  Location     Type
 20620 ;;  c               1    wreg     unsigned char 
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;  c               1    0[COMRAM] unsigned char 
 20623 ;; Return value:  Size  Location     Type
 20624 ;;                  1    wreg      void 
 20625 ;; Registers used:
 20626 ;;		wreg
 20627 ;; Tracked objects:
 20628 ;;		On entry : 3F/0
 20629 ;;		On exit  : 3F/0
 20630 ;;		Unchanged: 3F/0
 20631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20632 ;;      Params:         0       0       0       0       0       0       0       0       0
 20633 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20634 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20635 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20636 ;;Total ram usage:        0 bytes
 20637 ;; Hardware stack levels used:    1
 20638 ;; Hardware stack levels required when called:    7
 20639 ;; This function calls:
 20640 ;;		Nothing
 20641 ;; This function is called by:
 20642 ;;		_fputc
 20643 ;; This function uses a non-reentrant model
 20644 ;;
 20645                           
 20646                           	psect	text46
 20647  005160                     __ptext46:
 20648                           	callstack 0
 20649  005160                     _putch:
 20650                           	callstack 18
 20651                           
 20652                           ; BSR set to: 0
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;incstack = 0
 20656  005160  0012               	return		;funcret
 20657  005162                     __end_of_putch:
 20658                           	callstack 0
 20659                           
 20660 ;; *************** function _abs *****************
 20661 ;; Defined at:
 20662 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\abs.c"
 20663 ;; Parameters:    Size  Location     Type
 20664 ;;  a               2   23[BANK0 ] int 
 20665 ;; Auto vars:     Size  Location     Type
 20666 ;;		None
 20667 ;; Return value:  Size  Location     Type
 20668 ;;                  2   23[BANK0 ] int 
 20669 ;; Registers used:
 20670 ;;		wreg, status,2, status,0
 20671 ;; Tracked objects:
 20672 ;;		On entry : 3F/0
 20673 ;;		On exit  : 3F/0
 20674 ;;		Unchanged: 0/0
 20675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20676 ;;      Params:         0       2       0       0       0       0       0       0       0
 20677 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20678 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20679 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20680 ;;Total ram usage:        4 bytes
 20681 ;; Hardware stack levels used:    1
 20682 ;; Hardware stack levels required when called:    7
 20683 ;; This function calls:
 20684 ;;		Nothing
 20685 ;; This function is called by:
 20686 ;;		_dtoa
 20687 ;; This function uses a non-reentrant model
 20688 ;;
 20689                           
 20690                           	psect	text47
 20691  004F7E                     __ptext47:
 20692                           	callstack 0
 20693  004F7E                     _abs:
 20694                           	callstack 18
 20695                           
 20696                           ; BSR set to: 0
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;incstack = 0
 20700  004F7E  BF78               	btfsc	(abs@a+1)& (0+255),7,b
 20701  004F80  D005               	goto	u14020
 20702  004F82  5178               	movf	(abs@a+1)& (0+255),w,b
 20703  004F84  E110               	bnz	l1534
 20704  004F86  0577               	decf	abs@a& (0+255),w,b
 20705  004F88  B0D8               	btfsc	status,0,c
 20706  004F8A  D00D               	goto	l1534
 20707  004F8C                     u14020:
 20708                           
 20709                           ; BSR set to: 0
 20710  004F8C  C077  F079         	movff	abs@a,??_abs
 20711  004F90  C078  F07A         	movff	abs@a+1,??_abs+1
 20712  004F94  1F79               	comf	??_abs& (0+255),f,b
 20713  004F96  1F7A               	comf	(??_abs+1)& (0+255),f,b
 20714  004F98  4B79               	infsnz	??_abs& (0+255),f,b
 20715  004F9A  2B7A               	incf	(??_abs+1)& (0+255),f,b
 20716  004F9C  C079  F077         	movff	??_abs,?_abs
 20717  004FA0  C07A  F078         	movff	??_abs+1,?_abs+1
 20718  004FA4  0012               	return	
 20719  004FA6                     l1534:
 20720                           
 20721                           ; BSR set to: 0
 20722  004FA6  C077  F077         	movff	abs@a,?_abs
 20723  004FAA  C078  F078         	movff	abs@a+1,?_abs+1
 20724                           
 20725                           ; BSR set to: 0
 20726  004FAE  0012               	return		;funcret
 20727  004FB0                     __end_of_abs:
 20728                           	callstack 0
 20729                           
 20730 ;; *************** function ___aomod *****************
 20731 ;; Defined at:
 20732 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\aomod.c"
 20733 ;; Parameters:    Size  Location     Type
 20734 ;;  dividend        8    5[BANK0 ] long long 
 20735 ;;  divisor         8   13[BANK0 ] long long 
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;  sign            1   22[BANK0 ] unsigned char 
 20738 ;;  counter         1   21[BANK0 ] unsigned char 
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  8    5[BANK0 ] long long 
 20741 ;; Registers used:
 20742 ;;		wreg, status,2, status,0
 20743 ;; Tracked objects:
 20744 ;;		On entry : 3F/0
 20745 ;;		On exit  : 3F/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20748 ;;      Params:         0      16       0       0       0       0       0       0       0
 20749 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20751 ;;      Totals:         0      18       0       0       0       0       0       0       0
 20752 ;;Total ram usage:       18 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    7
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_dtoa
 20759 ;; This function uses a non-reentrant model
 20760 ;;
 20761                           
 20762                           	psect	text48
 20763  00383A                     __ptext48:
 20764                           	callstack 0
 20765  00383A                     ___aomod:
 20766                           	callstack 18
 20767                           
 20768                           ; BSR set to: 0
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;incstack = 0
 20772  00383A  0E00               	movlw	0
 20773  00383C  6F76               	movwf	___aomod@sign& (0+255),b
 20774                           
 20775                           ; BSR set to: 0
 20776  00383E  AF6C               	btfss	(___aomod@dividend+7)& (0+255),7,b
 20777  003840  D012               	goto	l9972
 20778                           
 20779                           ; BSR set to: 0
 20780  003842  1F6C               	comf	(___aomod@dividend+7)& (0+255),f,b
 20781  003844  1F6B               	comf	(___aomod@dividend+6)& (0+255),f,b
 20782  003846  1F6A               	comf	(___aomod@dividend+5)& (0+255),f,b
 20783  003848  1F69               	comf	(___aomod@dividend+4)& (0+255),f,b
 20784  00384A  1F68               	comf	(___aomod@dividend+3)& (0+255),f,b
 20785  00384C  1F67               	comf	(___aomod@dividend+2)& (0+255),f,b
 20786  00384E  1F66               	comf	(___aomod@dividend+1)& (0+255),f,b
 20787  003850  6D65               	negf	___aomod@dividend& (0+255),b
 20788  003852  0E00               	movlw	0
 20789  003854  2366               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 20790  003856  2367               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 20791  003858  2368               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 20792  00385A  2369               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 20793  00385C  236A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 20794  00385E  236B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 20795  003860  236C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 20796                           
 20797                           ; BSR set to: 0
 20798  003862  0E01               	movlw	1
 20799  003864  6F76               	movwf	___aomod@sign& (0+255),b
 20800  003866                     l9972:
 20801                           
 20802                           ; BSR set to: 0
 20803  003866  AF74               	btfss	(___aomod@divisor+7)& (0+255),7,b
 20804  003868  D010               	goto	l9976
 20805                           
 20806                           ; BSR set to: 0
 20807  00386A  1F74               	comf	(___aomod@divisor+7)& (0+255),f,b
 20808  00386C  1F73               	comf	(___aomod@divisor+6)& (0+255),f,b
 20809  00386E  1F72               	comf	(___aomod@divisor+5)& (0+255),f,b
 20810  003870  1F71               	comf	(___aomod@divisor+4)& (0+255),f,b
 20811  003872  1F70               	comf	(___aomod@divisor+3)& (0+255),f,b
 20812  003874  1F6F               	comf	(___aomod@divisor+2)& (0+255),f,b
 20813  003876  1F6E               	comf	(___aomod@divisor+1)& (0+255),f,b
 20814  003878  6D6D               	negf	___aomod@divisor& (0+255),b
 20815  00387A  0E00               	movlw	0
 20816  00387C  236E               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 20817  00387E  236F               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 20818  003880  2370               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 20819  003882  2371               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 20820  003884  2372               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 20821  003886  2373               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 20822  003888  2374               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 20823  00388A                     l9976:
 20824                           
 20825                           ; BSR set to: 0
 20826  00388A  516D               	movf	___aomod@divisor& (0+255),w,b
 20827  00388C  116E               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 20828  00388E  116F               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 20829  003890  1170               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 20830  003892  1171               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 20831  003894  1172               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 20832  003896  1173               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 20833  003898  1174               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 20834  00389A  B4D8               	btfsc	status,2,c
 20835  00389C  D03C               	goto	l9992
 20836                           
 20837                           ; BSR set to: 0
 20838  00389E  0E01               	movlw	1
 20839  0038A0  6F75               	movwf	___aomod@counter& (0+255),b
 20840  0038A2  D00A               	goto	l9982
 20841  0038A4                     l9980:
 20842                           
 20843                           ; BSR set to: 0
 20844  0038A4  90D8               	bcf	status,0,c
 20845  0038A6  376D               	rlcf	___aomod@divisor& (0+255),f,b
 20846  0038A8  376E               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 20847  0038AA  376F               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 20848  0038AC  3770               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 20849  0038AE  3771               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 20850  0038B0  3772               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 20851  0038B2  3773               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 20852  0038B4  3774               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 20853  0038B6  2B75               	incf	___aomod@counter& (0+255),f,b
 20854  0038B8                     l9982:
 20855                           
 20856                           ; BSR set to: 0
 20857  0038B8  AF74               	btfss	(___aomod@divisor+7)& (0+255),7,b
 20858  0038BA  D7F4               	goto	l9980
 20859  0038BC                     u13260:
 20860                           
 20861                           ; BSR set to: 0
 20862  0038BC  516D               	movf	___aomod@divisor& (0+255),w,b
 20863  0038BE  5D65               	subwf	___aomod@dividend& (0+255),w,b
 20864  0038C0  516E               	movf	(___aomod@divisor+1)& (0+255),w,b
 20865  0038C2  5966               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 20866  0038C4  516F               	movf	(___aomod@divisor+2)& (0+255),w,b
 20867  0038C6  5967               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 20868  0038C8  5170               	movf	(___aomod@divisor+3)& (0+255),w,b
 20869  0038CA  5968               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 20870  0038CC  5171               	movf	(___aomod@divisor+4)& (0+255),w,b
 20871  0038CE  5969               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 20872  0038D0  5172               	movf	(___aomod@divisor+5)& (0+255),w,b
 20873  0038D2  596A               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 20874  0038D4  5173               	movf	(___aomod@divisor+6)& (0+255),w,b
 20875  0038D6  596B               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 20876  0038D8  5174               	movf	(___aomod@divisor+7)& (0+255),w,b
 20877  0038DA  596C               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 20878  0038DC  A0D8               	btfss	status,0,c
 20879  0038DE  D010               	goto	l9988
 20880                           
 20881                           ; BSR set to: 0
 20882  0038E0  516D               	movf	___aomod@divisor& (0+255),w,b
 20883  0038E2  5F65               	subwf	___aomod@dividend& (0+255),f,b
 20884  0038E4  516E               	movf	(___aomod@divisor+1)& (0+255),w,b
 20885  0038E6  5B66               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 20886  0038E8  516F               	movf	(___aomod@divisor+2)& (0+255),w,b
 20887  0038EA  5B67               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 20888  0038EC  5170               	movf	(___aomod@divisor+3)& (0+255),w,b
 20889  0038EE  5B68               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 20890  0038F0  5171               	movf	(___aomod@divisor+4)& (0+255),w,b
 20891  0038F2  5B69               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 20892  0038F4  5172               	movf	(___aomod@divisor+5)& (0+255),w,b
 20893  0038F6  5B6A               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 20894  0038F8  5173               	movf	(___aomod@divisor+6)& (0+255),w,b
 20895  0038FA  5B6B               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 20896  0038FC  5174               	movf	(___aomod@divisor+7)& (0+255),w,b
 20897  0038FE  5B6C               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 20898  003900                     l9988:
 20899                           
 20900                           ; BSR set to: 0
 20901  003900  90D8               	bcf	status,0,c
 20902  003902  3374               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 20903  003904  3373               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 20904  003906  3372               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 20905  003908  3371               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 20906  00390A  3370               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 20907  00390C  336F               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 20908  00390E  336E               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 20909  003910  336D               	rrcf	___aomod@divisor& (0+255),f,b
 20910                           
 20911                           ; BSR set to: 0
 20912  003912  2F75               	decfsz	___aomod@counter& (0+255),f,b
 20913  003914  D7D3               	goto	u13260
 20914  003916                     l9992:
 20915                           
 20916                           ; BSR set to: 0
 20917  003916  5176               	movf	___aomod@sign& (0+255),w,b
 20918  003918  B4D8               	btfsc	status,2,c
 20919  00391A  D010               	goto	l9996
 20920                           
 20921                           ; BSR set to: 0
 20922  00391C  1F6C               	comf	(___aomod@dividend+7)& (0+255),f,b
 20923  00391E  1F6B               	comf	(___aomod@dividend+6)& (0+255),f,b
 20924  003920  1F6A               	comf	(___aomod@dividend+5)& (0+255),f,b
 20925  003922  1F69               	comf	(___aomod@dividend+4)& (0+255),f,b
 20926  003924  1F68               	comf	(___aomod@dividend+3)& (0+255),f,b
 20927  003926  1F67               	comf	(___aomod@dividend+2)& (0+255),f,b
 20928  003928  1F66               	comf	(___aomod@dividend+1)& (0+255),f,b
 20929  00392A  6D65               	negf	___aomod@dividend& (0+255),b
 20930  00392C  0E00               	movlw	0
 20931  00392E  2366               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 20932  003930  2367               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 20933  003932  2368               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 20934  003934  2369               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 20935  003936  236A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 20936  003938  236B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 20937  00393A  236C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 20938  00393C                     l9996:
 20939                           
 20940                           ; BSR set to: 0
 20941  00393C  C065  F065         	movff	___aomod@dividend,?___aomod
 20942  003940  C066  F066         	movff	___aomod@dividend+1,?___aomod+1
 20943  003944  C067  F067         	movff	___aomod@dividend+2,?___aomod+2
 20944  003948  C068  F068         	movff	___aomod@dividend+3,?___aomod+3
 20945  00394C  C069  F069         	movff	___aomod@dividend+4,?___aomod+4
 20946  003950  C06A  F06A         	movff	___aomod@dividend+5,?___aomod+5
 20947  003954  C06B  F06B         	movff	___aomod@dividend+6,?___aomod+6
 20948  003958  C06C  F06C         	movff	___aomod@dividend+7,?___aomod+7
 20949                           
 20950                           ; BSR set to: 0
 20951  00395C  0012               	return		;funcret
 20952  00395E                     __end_of___aomod:
 20953                           	callstack 0
 20954                           
 20955 ;; *************** function ___aodiv *****************
 20956 ;; Defined at:
 20957 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\aodiv.c"
 20958 ;; Parameters:    Size  Location     Type
 20959 ;;  dividend        8    5[BANK0 ] long long 
 20960 ;;  divisor         8   13[BANK0 ] long long 
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;  quotient        8   23[BANK0 ] long long 
 20963 ;;  sign            1   22[BANK0 ] unsigned char 
 20964 ;;  counter         1   21[BANK0 ] unsigned char 
 20965 ;; Return value:  Size  Location     Type
 20966 ;;                  8    5[BANK0 ] long long 
 20967 ;; Registers used:
 20968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20969 ;; Tracked objects:
 20970 ;;		On entry : 3F/0
 20971 ;;		On exit  : 3F/0
 20972 ;;		Unchanged: 0/0
 20973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20974 ;;      Params:         0      16       0       0       0       0       0       0       0
 20975 ;;      Locals:         0      10       0       0       0       0       0       0       0
 20976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20977 ;;      Totals:         0      26       0       0       0       0       0       0       0
 20978 ;;Total ram usage:       26 bytes
 20979 ;; Hardware stack levels used:    1
 20980 ;; Hardware stack levels required when called:    7
 20981 ;; This function calls:
 20982 ;;		Nothing
 20983 ;; This function is called by:
 20984 ;;		_dtoa
 20985 ;; This function uses a non-reentrant model
 20986 ;;
 20987                           
 20988                           	psect	text49
 20989  003330                     __ptext49:
 20990                           	callstack 0
 20991  003330                     ___aodiv:
 20992                           	callstack 18
 20993                           
 20994                           ; BSR set to: 0
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;incstack = 0
 20998  003330  0E00               	movlw	0
 20999  003332  6F76               	movwf	___aodiv@sign& (0+255),b
 21000                           
 21001                           ; BSR set to: 0
 21002  003334  AF74               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 21003  003336  D012               	goto	l9928
 21004                           
 21005                           ; BSR set to: 0
 21006  003338  1F74               	comf	(___aodiv@divisor+7)& (0+255),f,b
 21007  00333A  1F73               	comf	(___aodiv@divisor+6)& (0+255),f,b
 21008  00333C  1F72               	comf	(___aodiv@divisor+5)& (0+255),f,b
 21009  00333E  1F71               	comf	(___aodiv@divisor+4)& (0+255),f,b
 21010  003340  1F70               	comf	(___aodiv@divisor+3)& (0+255),f,b
 21011  003342  1F6F               	comf	(___aodiv@divisor+2)& (0+255),f,b
 21012  003344  1F6E               	comf	(___aodiv@divisor+1)& (0+255),f,b
 21013  003346  6D6D               	negf	___aodiv@divisor& (0+255),b
 21014  003348  0E00               	movlw	0
 21015  00334A  236E               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 21016  00334C  236F               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 21017  00334E  2370               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 21018  003350  2371               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 21019  003352  2372               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 21020  003354  2373               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 21021  003356  2374               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 21022                           
 21023                           ; BSR set to: 0
 21024  003358  0E01               	movlw	1
 21025  00335A  6F76               	movwf	___aodiv@sign& (0+255),b
 21026  00335C                     l9928:
 21027                           
 21028                           ; BSR set to: 0
 21029  00335C  AF6C               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 21030  00335E  D012               	goto	l9934
 21031                           
 21032                           ; BSR set to: 0
 21033  003360  1F6C               	comf	(___aodiv@dividend+7)& (0+255),f,b
 21034  003362  1F6B               	comf	(___aodiv@dividend+6)& (0+255),f,b
 21035  003364  1F6A               	comf	(___aodiv@dividend+5)& (0+255),f,b
 21036  003366  1F69               	comf	(___aodiv@dividend+4)& (0+255),f,b
 21037  003368  1F68               	comf	(___aodiv@dividend+3)& (0+255),f,b
 21038  00336A  1F67               	comf	(___aodiv@dividend+2)& (0+255),f,b
 21039  00336C  1F66               	comf	(___aodiv@dividend+1)& (0+255),f,b
 21040  00336E  6D65               	negf	___aodiv@dividend& (0+255),b
 21041  003370  0E00               	movlw	0
 21042  003372  2366               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 21043  003374  2367               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 21044  003376  2368               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 21045  003378  2369               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 21046  00337A  236A               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 21047  00337C  236B               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 21048  00337E  236C               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 21049                           
 21050                           ; BSR set to: 0
 21051  003380  0E01               	movlw	1
 21052  003382  1B76               	xorwf	___aodiv@sign& (0+255),f,b
 21053  003384                     l9934:
 21054                           
 21055                           ; BSR set to: 0
 21056  003384  EE20  F077         	lfsr	2,___aodiv@quotient
 21057  003388  0E07               	movlw	7
 21058  00338A                     u13181:
 21059  00338A  6ADE               	clrf	postinc2,c
 21060  00338C  06E8               	decf	wreg,f,c
 21061  00338E  E2FD               	bc	u13181
 21062                           
 21063                           ; BSR set to: 0
 21064  003390  516D               	movf	___aodiv@divisor& (0+255),w,b
 21065  003392  116E               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 21066  003394  116F               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 21067  003396  1170               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 21068  003398  1171               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 21069  00339A  1172               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 21070  00339C  1173               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 21071  00339E  1174               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 21072  0033A0  B4D8               	btfsc	status,2,c
 21073  0033A2  D046               	goto	l9956
 21074                           
 21075                           ; BSR set to: 0
 21076  0033A4  0E01               	movlw	1
 21077  0033A6  6F75               	movwf	___aodiv@counter& (0+255),b
 21078  0033A8  D00A               	goto	l9942
 21079  0033AA                     l9940:
 21080                           
 21081                           ; BSR set to: 0
 21082  0033AA  90D8               	bcf	status,0,c
 21083  0033AC  376D               	rlcf	___aodiv@divisor& (0+255),f,b
 21084  0033AE  376E               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 21085  0033B0  376F               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 21086  0033B2  3770               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 21087  0033B4  3771               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 21088  0033B6  3772               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 21089  0033B8  3773               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 21090  0033BA  3774               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 21091  0033BC  2B75               	incf	___aodiv@counter& (0+255),f,b
 21092  0033BE                     l9942:
 21093                           
 21094                           ; BSR set to: 0
 21095  0033BE  AF74               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 21096  0033C0  D7F4               	goto	l9940
 21097  0033C2                     u13200:
 21098                           
 21099                           ; BSR set to: 0
 21100  0033C2  90D8               	bcf	status,0,c
 21101  0033C4  3777               	rlcf	___aodiv@quotient& (0+255),f,b
 21102  0033C6  3778               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 21103  0033C8  3779               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 21104  0033CA  377A               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 21105  0033CC  377B               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 21106  0033CE  377C               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 21107  0033D0  377D               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 21108  0033D2  377E               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 0
 21111  0033D4  516D               	movf	___aodiv@divisor& (0+255),w,b
 21112  0033D6  5D65               	subwf	___aodiv@dividend& (0+255),w,b
 21113  0033D8  516E               	movf	(___aodiv@divisor+1)& (0+255),w,b
 21114  0033DA  5966               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 21115  0033DC  516F               	movf	(___aodiv@divisor+2)& (0+255),w,b
 21116  0033DE  5967               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 21117  0033E0  5170               	movf	(___aodiv@divisor+3)& (0+255),w,b
 21118  0033E2  5968               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 21119  0033E4  5171               	movf	(___aodiv@divisor+4)& (0+255),w,b
 21120  0033E6  5969               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 21121  0033E8  5172               	movf	(___aodiv@divisor+5)& (0+255),w,b
 21122  0033EA  596A               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 21123  0033EC  5173               	movf	(___aodiv@divisor+6)& (0+255),w,b
 21124  0033EE  596B               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 21125  0033F0  5174               	movf	(___aodiv@divisor+7)& (0+255),w,b
 21126  0033F2  596C               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 21127  0033F4  A0D8               	btfss	status,0,c
 21128  0033F6  D011               	goto	l9952
 21129                           
 21130                           ; BSR set to: 0
 21131  0033F8  516D               	movf	___aodiv@divisor& (0+255),w,b
 21132  0033FA  5F65               	subwf	___aodiv@dividend& (0+255),f,b
 21133  0033FC  516E               	movf	(___aodiv@divisor+1)& (0+255),w,b
 21134  0033FE  5B66               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 21135  003400  516F               	movf	(___aodiv@divisor+2)& (0+255),w,b
 21136  003402  5B67               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 21137  003404  5170               	movf	(___aodiv@divisor+3)& (0+255),w,b
 21138  003406  5B68               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 21139  003408  5171               	movf	(___aodiv@divisor+4)& (0+255),w,b
 21140  00340A  5B69               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 21141  00340C  5172               	movf	(___aodiv@divisor+5)& (0+255),w,b
 21142  00340E  5B6A               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 21143  003410  5173               	movf	(___aodiv@divisor+6)& (0+255),w,b
 21144  003412  5B6B               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 21145  003414  5174               	movf	(___aodiv@divisor+7)& (0+255),w,b
 21146  003416  5B6C               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 21147                           
 21148                           ; BSR set to: 0
 21149  003418  8177               	bsf	___aodiv@quotient& (0+255),0,b
 21150  00341A                     l9952:
 21151                           
 21152                           ; BSR set to: 0
 21153  00341A  90D8               	bcf	status,0,c
 21154  00341C  3374               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 21155  00341E  3373               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 21156  003420  3372               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 21157  003422  3371               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 21158  003424  3370               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 21159  003426  336F               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 21160  003428  336E               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 21161  00342A  336D               	rrcf	___aodiv@divisor& (0+255),f,b
 21162                           
 21163                           ; BSR set to: 0
 21164  00342C  2F75               	decfsz	___aodiv@counter& (0+255),f,b
 21165  00342E  D7C9               	goto	u13200
 21166  003430                     l9956:
 21167                           
 21168                           ; BSR set to: 0
 21169  003430  5176               	movf	___aodiv@sign& (0+255),w,b
 21170  003432  B4D8               	btfsc	status,2,c
 21171  003434  D010               	goto	l9960
 21172                           
 21173                           ; BSR set to: 0
 21174  003436  1F7E               	comf	(___aodiv@quotient+7)& (0+255),f,b
 21175  003438  1F7D               	comf	(___aodiv@quotient+6)& (0+255),f,b
 21176  00343A  1F7C               	comf	(___aodiv@quotient+5)& (0+255),f,b
 21177  00343C  1F7B               	comf	(___aodiv@quotient+4)& (0+255),f,b
 21178  00343E  1F7A               	comf	(___aodiv@quotient+3)& (0+255),f,b
 21179  003440  1F79               	comf	(___aodiv@quotient+2)& (0+255),f,b
 21180  003442  1F78               	comf	(___aodiv@quotient+1)& (0+255),f,b
 21181  003444  6D77               	negf	___aodiv@quotient& (0+255),b
 21182  003446  0E00               	movlw	0
 21183  003448  2378               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 21184  00344A  2379               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 21185  00344C  237A               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 21186  00344E  237B               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 21187  003450  237C               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 21188  003452  237D               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 21189  003454  237E               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 21190  003456                     l9960:
 21191                           
 21192                           ; BSR set to: 0
 21193  003456  C077  F065         	movff	___aodiv@quotient,?___aodiv
 21194  00345A  C078  F066         	movff	___aodiv@quotient+1,?___aodiv+1
 21195  00345E  C079  F067         	movff	___aodiv@quotient+2,?___aodiv+2
 21196  003462  C07A  F068         	movff	___aodiv@quotient+3,?___aodiv+3
 21197  003466  C07B  F069         	movff	___aodiv@quotient+4,?___aodiv+4
 21198  00346A  C07C  F06A         	movff	___aodiv@quotient+5,?___aodiv+5
 21199  00346E  C07D  F06B         	movff	___aodiv@quotient+6,?___aodiv+6
 21200  003472  C07E  F06C         	movff	___aodiv@quotient+7,?___aodiv+7
 21201                           
 21202                           ; BSR set to: 0
 21203  003476  0012               	return		;funcret
 21204  003478                     __end_of___aodiv:
 21205                           	callstack 0
 21206                           
 21207 ;; *************** function _atoi *****************
 21208 ;; Defined at:
 21209 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\atoi.c"
 21210 ;; Parameters:    Size  Location     Type
 21211 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 21212 ;;		 -> STR_25(8), STR_24(31), STR_20(22), 
 21213 ;; Auto vars:     Size  Location     Type
 21214 ;;  n               2   25[BANK0 ] int 
 21215 ;;  neg             2   18[BANK0 ] int 
 21216 ;; Return value:  Size  Location     Type
 21217 ;;                  2   12[BANK0 ] int 
 21218 ;; Registers used:
 21219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21220 ;; Tracked objects:
 21221 ;;		On entry : 3F/0
 21222 ;;		On exit  : 3F/0
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21225 ;;      Params:         0       2       0       0       0       0       0       0       0
 21226 ;;      Locals:         0       9       0       0       0       0       0       0       0
 21227 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21228 ;;      Totals:         0      15       0       0       0       0       0       0       0
 21229 ;;Total ram usage:       15 bytes
 21230 ;; Hardware stack levels used:    1
 21231 ;; Hardware stack levels required when called:    8
 21232 ;; This function calls:
 21233 ;;		___wmul
 21234 ;;		_isdigit
 21235 ;;		_isspace
 21236 ;; This function is called by:
 21237 ;;		_vfpfcnvrt
 21238 ;; This function uses a non-reentrant model
 21239 ;;
 21240                           
 21241                           	psect	text50
 21242  0035BA                     __ptext50:
 21243                           	callstack 0
 21244  0035BA                     _atoi:
 21245                           	callstack 18
 21246                           
 21247                           ; BSR set to: 0
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;incstack = 0
 21251  0035BA  0E00               	movlw	0
 21252  0035BC  6F7A               	movwf	(atoi@n+1)& (0+255),b
 21253  0035BE  0E00               	movlw	0
 21254  0035C0  6F79               	movwf	atoi@n& (0+255),b
 21255  0035C2  0E00               	movlw	0
 21256  0035C4  6F73               	movwf	(atoi@neg+1)& (0+255),b
 21257  0035C6  0E00               	movlw	0
 21258  0035C8  6F72               	movwf	atoi@neg& (0+255),b
 21259  0035CA  D002               	goto	l10914
 21260  0035CC                     l10912:
 21261                           
 21262                           ; BSR set to: 0
 21263  0035CC  4B6C               	infsnz	atoi@s& (0+255),f,b
 21264  0035CE  2B6D               	incf	(atoi@s+1)& (0+255),f,b
 21265  0035D0                     l10914:
 21266                           
 21267                           ; BSR set to: 0
 21268  0035D0  0E01               	movlw	1
 21269  0035D2  6F78               	movwf	_atoi$2060& (0+255),b
 21270                           
 21271                           ; BSR set to: 0
 21272  0035D4  C06C  FFF6         	movff	atoi@s,tblptrl
 21273  0035D8  C06D  FFF7         	movff	atoi@s+1,tblptrh
 21274  0035DC                     	if	0	;tblptru may be non-zero
 21275  0035DC                     	endif
 21276  0035DC                     	if	0	;tblptru may be non-zero
 21277  0035DC                     	endif
 21278  0035DC  0008               	tblrd		*
 21279  0035DE  50F5               	movf	tablat,w,c
 21280  0035E0  0A20               	xorlw	32
 21281  0035E2  B4D8               	btfsc	status,2,c
 21282  0035E4  D018               	goto	l10922
 21283                           
 21284                           ; BSR set to: 0
 21285  0035E6  0EF7               	movlw	247
 21286  0035E8  6F6E               	movwf	??_atoi& (0+255),b
 21287  0035EA  0EFF               	movlw	255
 21288  0035EC  6F6F               	movwf	(??_atoi+1)& (0+255),b
 21289  0035EE  C06C  FFF6         	movff	atoi@s,tblptrl
 21290  0035F2  C06D  FFF7         	movff	atoi@s+1,tblptrh
 21291  0035F6                     	if	0	;tblptru may be non-zero
 21292  0035F6                     	endif
 21293  0035F6                     	if	0	;tblptru may be non-zero
 21294  0035F6                     	endif
 21295  0035F6  0008               	tblrd		*
 21296  0035F8  50F5               	movf	tablat,w,c
 21297  0035FA  6F70               	movwf	(??_atoi+2)& (0+255),b
 21298  0035FC  6B71               	clrf	(??_atoi+3)& (0+255),b
 21299  0035FE  516E               	movf	??_atoi& (0+255),w,b
 21300  003600  2770               	addwf	(??_atoi+2)& (0+255),f,b
 21301  003602  516F               	movf	(??_atoi+1)& (0+255),w,b
 21302  003604  2371               	addwfc	(??_atoi+3)& (0+255),f,b
 21303  003606  5171               	movf	(??_atoi+3)& (0+255),w,b
 21304  003608  E104               	bnz	u14970
 21305  00360A  0E05               	movlw	5
 21306  00360C  5D70               	subwf	(??_atoi+2)& (0+255),w,b
 21307  00360E  A0D8               	btfss	status,0,c
 21308  003610  D002               	goto	l10922
 21309  003612                     u14970:
 21310                           
 21311                           ; BSR set to: 0
 21312  003612  0E00               	movlw	0
 21313  003614  6F78               	movwf	_atoi$2060& (0+255),b
 21314  003616                     l10922:
 21315                           
 21316                           ; BSR set to: 0
 21317  003616  C078  F074         	movff	_atoi$2060,_atoi$2059
 21318  00361A  6B75               	clrf	(_atoi$2059+1)& (0+255),b
 21319                           
 21320                           ; BSR set to: 0
 21321  00361C  5174               	movf	_atoi$2059& (0+255),w,b
 21322  00361E  1175               	iorwf	(_atoi$2059+1)& (0+255),w,b
 21323  003620  B4D8               	btfsc	status,2,c
 21324  003622  D008               	goto	l10932
 21325  003624  D7D3               	goto	l10912
 21326  003626                     l10928:
 21327                           
 21328                           ; BSR set to: 0
 21329  003626  0E00               	movlw	0
 21330  003628  6F73               	movwf	(atoi@neg+1)& (0+255),b
 21331  00362A  0E01               	movlw	1
 21332  00362C  6F72               	movwf	atoi@neg& (0+255),b
 21333  00362E                     l10930:
 21334                           
 21335                           ; BSR set to: 0
 21336  00362E  4B6C               	infsnz	atoi@s& (0+255),f,b
 21337  003630  2B6D               	incf	(atoi@s+1)& (0+255),f,b
 21338  003632  D02E               	goto	l10938
 21339  003634                     l10932:
 21340                           
 21341                           ; BSR set to: 0
 21342  003634  C06C  FFF6         	movff	atoi@s,tblptrl
 21343  003638  C06D  FFF7         	movff	atoi@s+1,tblptrh
 21344  00363C                     	if	0	;tblptru may be non-zero
 21345  00363C                     	endif
 21346  00363C                     	if	0	;tblptru may be non-zero
 21347  00363C                     	endif
 21348  00363C  0008               	tblrd		*
 21349  00363E  50F5               	movf	tablat,w,c
 21350  003640  6F6E               	movwf	??_atoi& (0+255),b
 21351  003642  6B6F               	clrf	(??_atoi+1)& (0+255),b
 21352                           
 21353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21354                           ; Switch size 1, requested type "simple"
 21355                           ; Number of cases is 1, Range of values is 0 to 0
 21356                           ; switch strategies available:
 21357                           ; Name         Instructions Cycles
 21358                           ; simple_byte            4     3 (average)
 21359                           ;	Chosen strategy is simple_byte
 21360  003644  516F               	movf	(??_atoi+1)& (0+255),w,b
 21361  003646  0A00               	xorlw	0	; case 0
 21362  003648  A4D8               	btfss	status,2,c
 21363  00364A  D022               	goto	l10938
 21364                           
 21365                           ; BSR set to: 0
 21366                           ; Switch size 1, requested type "simple"
 21367                           ; Number of cases is 2, Range of values is 43 to 45
 21368                           ; switch strategies available:
 21369                           ; Name         Instructions Cycles
 21370                           ; simple_byte            7     4 (average)
 21371                           ;	Chosen strategy is simple_byte
 21372  00364C  516E               	movf	??_atoi& (0+255),w,b
 21373  00364E  0A2B               	xorlw	43	; case 43
 21374  003650  B4D8               	btfsc	status,2,c
 21375  003652  D7ED               	goto	l10930
 21376  003654  0A06               	xorlw	6	; case 45
 21377  003656  B4D8               	btfsc	status,2,c
 21378  003658  D7E6               	goto	l10928
 21379  00365A  D01A               	goto	l10938
 21380  00365C                     l10934:
 21381                           
 21382                           ; BSR set to: 0
 21383  00365C  C079  F065         	movff	atoi@n,___wmul@multiplier
 21384  003660  C07A  F066         	movff	atoi@n+1,___wmul@multiplier+1
 21385  003664  0E00               	movlw	0
 21386  003666  6F68               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21387  003668  0E0A               	movlw	10
 21388  00366A  6F67               	movwf	___wmul@multiplicand& (0+255),b
 21389  00366C  EC64  F028         	call	___wmul	;wreg free
 21390  003670  C06C  FFF6         	movff	atoi@s,tblptrl
 21391  003674  C06D  FFF7         	movff	atoi@s+1,tblptrh
 21392  003678                     	if	0	;tblptru may be non-zero
 21393  003678                     	endif
 21394  003678                     	if	0	;tblptru may be non-zero
 21395  003678                     	endif
 21396  003678  0008               	tblrd		*
 21397  00367A  50F5               	movf	tablat,w,c
 21398  00367C  5F65               	subwf	?___wmul& (0+255),f,b
 21399  00367E  0E00               	movlw	0
 21400  003680  5B66               	subwfb	(?___wmul+1)& (0+255),f,b
 21401  003682  0E30               	movlw	48
 21402  003684  2565               	addwf	?___wmul& (0+255),w,b
 21403  003686  6F79               	movwf	atoi@n& (0+255),b
 21404  003688  0E00               	movlw	0
 21405  00368A  2166               	addwfc	(?___wmul+1)& (0+255),w,b
 21406  00368C  6F7A               	movwf	(atoi@n+1)& (0+255),b
 21407  00368E  D7CF               	goto	l10930
 21408  003690                     l10938:
 21409                           
 21410                           ; BSR set to: 0
 21411  003690  0ED0               	movlw	208
 21412  003692  6F6E               	movwf	??_atoi& (0+255),b
 21413  003694  0EFF               	movlw	255
 21414  003696  6F6F               	movwf	(??_atoi+1)& (0+255),b
 21415  003698  C06C  FFF6         	movff	atoi@s,tblptrl
 21416  00369C  C06D  FFF7         	movff	atoi@s+1,tblptrh
 21417  0036A0                     	if	0	;tblptru may be non-zero
 21418  0036A0                     	endif
 21419  0036A0                     	if	0	;tblptru may be non-zero
 21420  0036A0                     	endif
 21421  0036A0  0008               	tblrd		*
 21422  0036A2  50F5               	movf	tablat,w,c
 21423  0036A4  6F70               	movwf	(??_atoi+2)& (0+255),b
 21424  0036A6  6B71               	clrf	(??_atoi+3)& (0+255),b
 21425  0036A8  516E               	movf	??_atoi& (0+255),w,b
 21426  0036AA  2770               	addwf	(??_atoi+2)& (0+255),f,b
 21427  0036AC  516F               	movf	(??_atoi+1)& (0+255),w,b
 21428  0036AE  2371               	addwfc	(??_atoi+3)& (0+255),f,b
 21429  0036B0  5171               	movf	(??_atoi+3)& (0+255),w,b
 21430  0036B2  E106               	bnz	u14990
 21431  0036B4  0E0A               	movlw	10
 21432  0036B6  5D70               	subwf	(??_atoi+2)& (0+255),w,b
 21433  0036B8  B0D8               	btfsc	status,0,c
 21434  0036BA  D002               	goto	u14990
 21435  0036BC  0E01               	movlw	1
 21436  0036BE  D001               	goto	u15000
 21437  0036C0                     u14990:
 21438  0036C0  0E00               	movlw	0
 21439  0036C2                     u15000:
 21440  0036C2  6F76               	movwf	_atoi$2061& (0+255),b
 21441  0036C4  6B77               	clrf	(_atoi$2061+1)& (0+255),b
 21442                           
 21443                           ; BSR set to: 0
 21444  0036C6  5176               	movf	_atoi$2061& (0+255),w,b
 21445  0036C8  1177               	iorwf	(_atoi$2061+1)& (0+255),w,b
 21446  0036CA  A4D8               	btfss	status,2,c
 21447  0036CC  D7C7               	goto	l10934
 21448                           
 21449                           ; BSR set to: 0
 21450  0036CE  5172               	movf	atoi@neg& (0+255),w,b
 21451  0036D0  1173               	iorwf	(atoi@neg+1)& (0+255),w,b
 21452  0036D2  A4D8               	btfss	status,2,c
 21453  0036D4  D00D               	goto	l1565
 21454                           
 21455                           ; BSR set to: 0
 21456  0036D6  C079  F06E         	movff	atoi@n,??_atoi
 21457  0036DA  C07A  F06F         	movff	atoi@n+1,??_atoi+1
 21458  0036DE  1F6E               	comf	??_atoi& (0+255),f,b
 21459  0036E0  1F6F               	comf	(??_atoi+1)& (0+255),f,b
 21460  0036E2  4B6E               	infsnz	??_atoi& (0+255),f,b
 21461  0036E4  2B6F               	incf	(??_atoi+1)& (0+255),f,b
 21462  0036E6  C06E  F06C         	movff	??_atoi,?_atoi
 21463  0036EA  C06F  F06D         	movff	??_atoi+1,?_atoi+1
 21464  0036EE  0012               	return	
 21465  0036F0                     l1565:
 21466                           
 21467                           ; BSR set to: 0
 21468  0036F0  C079  F06C         	movff	atoi@n,?_atoi
 21469  0036F4  C07A  F06D         	movff	atoi@n+1,?_atoi+1
 21470                           
 21471                           ; BSR set to: 0
 21472  0036F8  0012               	return		;funcret
 21473  0036FA                     __end_of_atoi:
 21474                           	callstack 0
 21475                           
 21476 ;; *************** function _isspace *****************
 21477 ;; Defined at:
 21478 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\isspace.c"
 21479 ;; Parameters:    Size  Location     Type
 21480 ;;  c               2    5[BANK0 ] int 
 21481 ;; Auto vars:     Size  Location     Type
 21482 ;;		None
 21483 ;; Return value:  Size  Location     Type
 21484 ;;                  2    5[BANK0 ] int 
 21485 ;; Registers used:
 21486 ;;		wreg, status,2, status,0
 21487 ;; Tracked objects:
 21488 ;;		On entry : 0/0
 21489 ;;		On exit  : 3F/0
 21490 ;;		Unchanged: 0/0
 21491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21492 ;;      Params:         0       2       0       0       0       0       0       0       0
 21493 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21494 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21495 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21496 ;;Total ram usage:        7 bytes
 21497 ;; Hardware stack levels used:    1
 21498 ;; Hardware stack levels required when called:    7
 21499 ;; This function calls:
 21500 ;;		Nothing
 21501 ;; This function is called by:
 21502 ;;		_atoi
 21503 ;; This function uses a non-reentrant model
 21504 ;;
 21505                           
 21506                           	psect	text51
 21507  004D7E                     __ptext51:
 21508                           	callstack 0
 21509  004D7E                     _isspace:
 21510                           	callstack 18
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;incstack = 0
 21514  004D7E  0E01               	movlw	1
 21515  004D80  0100               	movlb	0	; () banked
 21516  004D82  6F6B               	movwf	_isspace$2090& (0+255),b
 21517                           
 21518                           ; BSR set to: 0
 21519  004D84  0E20               	movlw	32
 21520  004D86  1965               	xorwf	isspace@c& (0+255),w,b
 21521  004D88  1166               	iorwf	(isspace@c+1)& (0+255),w,b
 21522  004D8A  B4D8               	btfsc	status,2,c
 21523  004D8C  D014               	goto	l10546
 21524                           
 21525                           ; BSR set to: 0
 21526  004D8E  0EF7               	movlw	247
 21527  004D90  6F67               	movwf	??_isspace& (0+255),b
 21528  004D92  0EFF               	movlw	255
 21529  004D94  6F68               	movwf	(??_isspace+1)& (0+255),b
 21530  004D96  C065  F069         	movff	isspace@c,??_isspace+2
 21531  004D9A  C066  F06A         	movff	isspace@c+1,??_isspace+3
 21532  004D9E  5167               	movf	??_isspace& (0+255),w,b
 21533  004DA0  2769               	addwf	(??_isspace+2)& (0+255),f,b
 21534  004DA2  5168               	movf	(??_isspace+1)& (0+255),w,b
 21535  004DA4  236A               	addwfc	(??_isspace+3)& (0+255),f,b
 21536  004DA6  516A               	movf	(??_isspace+3)& (0+255),w,b
 21537  004DA8  E104               	bnz	u14280
 21538  004DAA  0E05               	movlw	5
 21539  004DAC  5D69               	subwf	(??_isspace+2)& (0+255),w,b
 21540  004DAE  A0D8               	btfss	status,0,c
 21541  004DB0  D002               	goto	l10546
 21542  004DB2                     u14280:
 21543                           
 21544                           ; BSR set to: 0
 21545  004DB2  0E00               	movlw	0
 21546  004DB4  6F6B               	movwf	_isspace$2090& (0+255),b
 21547  004DB6                     l10546:
 21548                           
 21549                           ; BSR set to: 0
 21550  004DB6  C06B  F065         	movff	_isspace$2090,?_isspace
 21551  004DBA  6B66               	clrf	(?_isspace+1)& (0+255),b
 21552                           
 21553                           ; BSR set to: 0
 21554  004DBC  0012               	return		;funcret
 21555  004DBE                     __end_of_isspace:
 21556                           	callstack 0
 21557                           
 21558 ;; *************** function _isdigit *****************
 21559 ;; Defined at:
 21560 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\isdigit.c"
 21561 ;; Parameters:    Size  Location     Type
 21562 ;;  c               2    5[BANK0 ] int 
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  2    5[BANK0 ] int 
 21567 ;; Registers used:
 21568 ;;		wreg, status,2, status,0
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 3F/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21574 ;;      Params:         0       2       0       0       0       0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21576 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21577 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21578 ;;Total ram usage:        6 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:    7
 21581 ;; This function calls:
 21582 ;;		Nothing
 21583 ;; This function is called by:
 21584 ;;		_vfpfcnvrt
 21585 ;;		_atoi
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text52
 21590  004FB0                     __ptext52:
 21591                           	callstack 0
 21592  004FB0                     _isdigit:
 21593                           	callstack 19
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;incstack = 0
 21597  004FB0  0ED0               	movlw	208
 21598  004FB2  0100               	movlb	0	; () banked
 21599  004FB4  6F67               	movwf	??_isdigit& (0+255),b
 21600  004FB6  0EFF               	movlw	255
 21601  004FB8  6F68               	movwf	(??_isdigit+1)& (0+255),b
 21602  004FBA  C065  F069         	movff	isdigit@c,??_isdigit+2
 21603  004FBE  C066  F06A         	movff	isdigit@c+1,??_isdigit+3
 21604  004FC2  5167               	movf	??_isdigit& (0+255),w,b
 21605  004FC4  2769               	addwf	(??_isdigit+2)& (0+255),f,b
 21606  004FC6  5168               	movf	(??_isdigit+1)& (0+255),w,b
 21607  004FC8  236A               	addwfc	(??_isdigit+3)& (0+255),f,b
 21608  004FCA  516A               	movf	(??_isdigit+3)& (0+255),w,b
 21609  004FCC  E106               	bnz	u14250
 21610  004FCE  0E0A               	movlw	10
 21611  004FD0  5D69               	subwf	(??_isdigit+2)& (0+255),w,b
 21612  004FD2  B0D8               	btfsc	status,0,c
 21613  004FD4  D002               	goto	u14250
 21614  004FD6  0E01               	movlw	1
 21615  004FD8  D001               	goto	u14260
 21616  004FDA                     u14250:
 21617  004FDA  0E00               	movlw	0
 21618  004FDC                     u14260:
 21619  004FDC  6F65               	movwf	?_isdigit& (0+255),b
 21620  004FDE  6B66               	clrf	(?_isdigit+1)& (0+255),b
 21621                           
 21622                           ; BSR set to: 0
 21623  004FE0  0012               	return		;funcret
 21624  004FE2                     __end_of_isdigit:
 21625                           	callstack 0
 21626                           
 21627 ;; *************** function ___wmul *****************
 21628 ;; Defined at:
 21629 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\Umul16.c"
 21630 ;; Parameters:    Size  Location     Type
 21631 ;;  multiplier      2    5[BANK0 ] unsigned int 
 21632 ;;  multiplicand    2    7[BANK0 ] unsigned int 
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;  product         2    9[BANK0 ] unsigned int 
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  2    5[BANK0 ] unsigned int 
 21637 ;; Registers used:
 21638 ;;		wreg, status,2, status,0, prodl, prodh
 21639 ;; Tracked objects:
 21640 ;;		On entry : 3F/0
 21641 ;;		On exit  : 3F/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21644 ;;      Params:         0       4       0       0       0       0       0       0       0
 21645 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21647 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21648 ;;Total ram usage:        6 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:    7
 21651 ;; This function calls:
 21652 ;;		Nothing
 21653 ;; This function is called by:
 21654 ;;		_Task_Com
 21655 ;;		_ili9341_drawchar
 21656 ;;		_atoi
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text53
 21661  0050C8                     __ptext53:
 21662                           	callstack 0
 21663  0050C8                     ___wmul:
 21664                           	callstack 21
 21665                           
 21666                           ; BSR set to: 0
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;incstack = 0
 21670  0050C8  5165               	movf	___wmul@multiplier& (0+255),w,b
 21671  0050CA  0367               	mulwf	___wmul@multiplicand& (0+255),b
 21672  0050CC  CFF3 F069          	movff	prodl,___wmul@product
 21673  0050D0  CFF4 F06A          	movff	prodh,___wmul@product+1
 21674  0050D4  5165               	movf	___wmul@multiplier& (0+255),w,b
 21675  0050D6  0368               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21676  0050D8  50F3               	movf	243,w,c
 21677  0050DA  276A               	addwf	(___wmul@product+1)& (0+255),f,b
 21678  0050DC  5166               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21679  0050DE  0367               	mulwf	___wmul@multiplicand& (0+255),b
 21680  0050E0  50F3               	movf	243,w,c
 21681  0050E2  276A               	addwf	(___wmul@product+1)& (0+255),f,b
 21682                           
 21683                           ; BSR set to: 0
 21684  0050E4  C069  F065         	movff	___wmul@product,?___wmul
 21685  0050E8  C06A  F066         	movff	___wmul@product+1,?___wmul+1
 21686                           
 21687                           ; BSR set to: 0
 21688  0050EC  0012               	return		;funcret
 21689  0050EE                     __end_of___wmul:
 21690                           	callstack 0
 21691                           
 21692 ;; *************** function _UART_arrayln *****************
 21693 ;; Defined at:
 21694 ;;		line 101 in file "Uart_Hard.c"
 21695 ;; Parameters:    Size  Location     Type
 21696 ;;  cadena          2    7[BANK0 ] PTR const unsigned char 
 21697 ;;		 -> STR_62(1), setreset(9), gettmp(7), STR_59(10), 
 21698 ;;		 -> STR_57(10), STR_55(33), STR_53(36), STR_51(1), 
 21699 ;;		 -> STR_50(16), STR_49(1), STR_48(26), STR_45(1), 
 21700 ;;		 -> STR_44(21), STR_43(20), STR_42(26), STR_39(1), 
 21701 ;;		 -> STR_38(22), STR_36(2), STR_34(19), STR_31(1), 
 21702 ;;		 -> STR_30(21), STR_27(1), Send_Temp@buffer(10), STR_19(2), 
 21703 ;;		 -> STR_17(1), STR_16(9), STR_5(35), STR_4(40), 
 21704 ;;		 -> STR_3(29), STR_2(1), STR_1(1), 
 21705 ;; Auto vars:     Size  Location     Type
 21706 ;;		None
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1    wreg      void 
 21709 ;; Registers used:
 21710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21711 ;; Tracked objects:
 21712 ;;		On entry : 3F/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21716 ;;      Params:         0       2       0       0       0       0       0       0       0
 21717 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21719 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21720 ;;Total ram usage:        2 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; Hardware stack levels required when called:    8
 21723 ;; This function calls:
 21724 ;;		_UART_array
 21725 ;;		_UART_write
 21726 ;; This function is called by:
 21727 ;;		_main
 21728 ;;		_Send_Temp
 21729 ;;		_Task_Com
 21730 ;; This function uses a non-reentrant model
 21731 ;;
 21732                           
 21733                           	psect	text54
 21734  004982                     __ptext54:
 21735                           	callstack 0
 21736  004982                     _UART_arrayln:
 21737                           	callstack 22
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;Uart_Hard.c: 101: void UART_arrayln(const char *cadena);Uart_Hard.c: 102: {;Uart_Hard.c
      +                          : 103:     while(*cadena)
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;incstack = 0
 21744  004982  D01A               	goto	l11216
 21745  004984                     l11210:
 21746                           
 21747                           ;Uart_Hard.c: 104:     {;Uart_Hard.c: 105:         TXREG = *cadena;
 21748  004984  C067  FFF6         	movff	UART_arrayln@cadena,tblptrl
 21749  004988  C068  FFF7         	movff	UART_arrayln@cadena+1,tblptrh
 21750  00498C  6AF8               	clrf	tblptru,c
 21751  00498E  0E07               	movlw	(high __ramtop+-1)
 21752  004990  64F7               	cpfsgt	tblptrh,c
 21753  004992  D003               	bra	u15437
 21754  004994  0008               	tblrd		*
 21755  004996  50F5               	movf	tablat,w,c
 21756  004998  D005               	bra	u15430
 21757  00499A                     u15437:
 21758  00499A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21759  00499E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21760  0049A2  50E7               	movf	indf1,w,c
 21761  0049A4                     u15430:
 21762  0049A4  6EAD               	movwf	173,c	;volatile
 21763                           
 21764                           ;Uart_Hard.c: 106:         _delay((unsigned long)((50)*(20000000/4000000.0)));
 21765  0049A6  0E53               	movlw	83
 21766  0049A8                     u16467:
 21767  0049A8  2EE8               	decfsz	wreg,f,c
 21768  0049AA  D7FE               	bra	u16467
 21769  0049AC  F000               	nop	
 21770  0049AE                     l350:
 21771  0049AE  A2AC               	btfss	172,1,c	;volatile
 21772  0049B0  D7FE               	goto	l350
 21773                           
 21774                           ;Uart_Hard.c: 108:         cadena++;
 21775  0049B2  0100               	movlb	0	; () banked
 21776  0049B4  4B67               	infsnz	UART_arrayln@cadena& (0+255),f,b
 21777  0049B6  2B68               	incf	(UART_arrayln@cadena+1)& (0+255),f,b
 21778  0049B8                     l11216:
 21779                           
 21780                           ; BSR set to: 0
 21781                           ;Uart_Hard.c: 103:     while(*cadena)
 21782  0049B8  C067  FFF6         	movff	UART_arrayln@cadena,tblptrl
 21783  0049BC  C068  FFF7         	movff	UART_arrayln@cadena+1,tblptrh
 21784  0049C0  6AF8               	clrf	tblptru,c
 21785  0049C2  0E07               	movlw	(high __ramtop+-1)
 21786  0049C4  64F7               	cpfsgt	tblptrh,c
 21787  0049C6  D003               	bra	u15457
 21788  0049C8  0008               	tblrd		*
 21789  0049CA  50F5               	movf	tablat,w,c
 21790  0049CC  D005               	bra	u15450
 21791  0049CE                     u15457:
 21792  0049CE  CFF6 FFE1          	movff	tblptrl,fsr1l
 21793  0049D2  CFF7 FFE2          	movff	tblptrh,fsr1h
 21794  0049D6  50E7               	movf	indf1,w,c
 21795  0049D8                     u15450:
 21796  0049D8  0900               	iorlw	0
 21797  0049DA  A4D8               	btfss	status,2,c
 21798  0049DC  D7D3               	goto	l11210
 21799                           
 21800                           ;Uart_Hard.c: 111:     UART_array("\n");
 21801  0049DE  0EFA               	movlw	low STR_64
 21802  0049E0  0100               	movlb	0	; () banked
 21803  0049E2  6F65               	movwf	UART_array@cadena& (0+255),b
 21804  0049E4  0E7F               	movlw	high STR_64
 21805  0049E6  6F66               	movwf	(UART_array@cadena+1)& (0+255),b
 21806  0049E8  EC65  F025         	call	_UART_array	;wreg free
 21807                           
 21808                           ;Uart_Hard.c: 112:     UART_write(13);
 21809  0049EC  0E0D               	movlw	13
 21810  0049EE  EC99  F028         	call	_UART_write
 21811  0049F2  0012               	return		;funcret
 21812  0049F4                     __end_of_UART_arrayln:
 21813                           	callstack 0
 21814                           
 21815 ;; *************** function _UART_write *****************
 21816 ;; Defined at:
 21817 ;;		line 76 in file "Uart_Hard.c"
 21818 ;; Parameters:    Size  Location     Type
 21819 ;;  dato            1    wreg     unsigned char 
 21820 ;; Auto vars:     Size  Location     Type
 21821 ;;  dato            1    5[BANK0 ] unsigned char 
 21822 ;; Return value:  Size  Location     Type
 21823 ;;                  1    wreg      void 
 21824 ;; Registers used:
 21825 ;;		wreg
 21826 ;; Tracked objects:
 21827 ;;		On entry : 0/0
 21828 ;;		On exit  : 0/0
 21829 ;;		Unchanged: 0/0
 21830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21831 ;;      Params:         0       0       0       0       0       0       0       0       0
 21832 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21834 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21835 ;;Total ram usage:        1 bytes
 21836 ;; Hardware stack levels used:    1
 21837 ;; Hardware stack levels required when called:    7
 21838 ;; This function calls:
 21839 ;;		Nothing
 21840 ;; This function is called by:
 21841 ;;		_UART_arrayln
 21842 ;; This function uses a non-reentrant model
 21843 ;;
 21844                           
 21845                           	psect	text55
 21846  005132                     __ptext55:
 21847                           	callstack 0
 21848  005132                     _UART_write:
 21849                           	callstack 22
 21850                           
 21851                           ;incstack = 0
 21852                           ;UART_write@dato stored from wreg
 21853  005132  0100               	movlb	0	; () banked
 21854  005134  6F65               	movwf	UART_write@dato& (0+255),b
 21855                           
 21856                           ;Uart_Hard.c: 76: void UART_write(char dato);Uart_Hard.c: 77: {;Uart_Hard.c: 78:     TXR
      +                          EG = dato;
 21857  005136  C065  FFAD         	movff	UART_write@dato,4013	;volatile
 21858  00513A                     l333:
 21859  00513A  B2AC               	btfsc	172,1,c	;volatile
 21860  00513C  0012               	return	
 21861  00513E  D7FD               	goto	l333
 21862  005140                     __end_of_UART_write:
 21863                           	callstack 0
 21864                           
 21865 ;; *************** function _UART_array *****************
 21866 ;; Defined at:
 21867 ;;		line 86 in file "Uart_Hard.c"
 21868 ;; Parameters:    Size  Location     Type
 21869 ;;  cadena          2    5[BANK0 ] PTR const unsigned char 
 21870 ;;		 -> STR_64(2), STR_63(7), STR_61(7), STR_60(7), 
 21871 ;;		 -> STR_58(7), setpwm(8), STR_56(7), setest(8), 
 21872 ;;		 -> STR_54(7), STR_52(7), STR_47(7), STR_46(7), 
 21873 ;;		 -> STR_41(7), STR_40(7), STR_37(7), STR_35(11), 
 21874 ;;		 -> STR_33(7), STR_32(7), STR_29(7), Task_Com@buffer_val(3), 
 21875 ;;		 -> STR_28(7), STR_26(7), STR_18(7), 
 21876 ;; Auto vars:     Size  Location     Type
 21877 ;;		None
 21878 ;; Return value:  Size  Location     Type
 21879 ;;                  1    wreg      void 
 21880 ;; Registers used:
 21881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21882 ;; Tracked objects:
 21883 ;;		On entry : 3F/0
 21884 ;;		On exit  : 0/0
 21885 ;;		Unchanged: 0/0
 21886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21887 ;;      Params:         0       2       0       0       0       0       0       0       0
 21888 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21889 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21890 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21891 ;;Total ram usage:        2 bytes
 21892 ;; Hardware stack levels used:    1
 21893 ;; Hardware stack levels required when called:    7
 21894 ;; This function calls:
 21895 ;;		Nothing
 21896 ;; This function is called by:
 21897 ;;		_main
 21898 ;;		_Send_Temp
 21899 ;;		_Task_Com
 21900 ;;		_UART_arrayln
 21901 ;; This function uses a non-reentrant model
 21902 ;;
 21903                           
 21904                           	psect	text56
 21905  004ACA                     __ptext56:
 21906                           	callstack 0
 21907  004ACA                     _UART_array:
 21908                           	callstack 22
 21909                           
 21910                           ; BSR set to: 0
 21911                           ;Uart_Hard.c: 86: void UART_array(const char* cadena);Uart_Hard.c: 87: {;Uart_Hard.c: 88
      +                          :     while(*cadena)
 21912                           
 21913                           ;incstack = 0
 21914  004ACA  D01A               	goto	l11134
 21915  004ACC                     l11128:
 21916                           
 21917                           ;Uart_Hard.c: 89:     {;Uart_Hard.c: 90:         TXREG = *cadena;
 21918  004ACC  C065  FFF6         	movff	UART_array@cadena,tblptrl
 21919  004AD0  C066  FFF7         	movff	UART_array@cadena+1,tblptrh
 21920  004AD4  6AF8               	clrf	tblptru,c
 21921  004AD6  0E07               	movlw	(high __ramtop+-1)
 21922  004AD8  64F7               	cpfsgt	tblptrh,c
 21923  004ADA  D003               	bra	u15317
 21924  004ADC  0008               	tblrd		*
 21925  004ADE  50F5               	movf	tablat,w,c
 21926  004AE0  D005               	bra	u15310
 21927  004AE2                     u15317:
 21928  004AE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21929  004AE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21930  004AEA  50E7               	movf	indf1,w,c
 21931  004AEC                     u15310:
 21932  004AEC  6EAD               	movwf	173,c	;volatile
 21933                           
 21934                           ;Uart_Hard.c: 91:         _delay((unsigned long)((50)*(20000000/4000000.0)));
 21935  004AEE  0E53               	movlw	83
 21936  004AF0                     u16477:
 21937  004AF0  2EE8               	decfsz	wreg,f,c
 21938  004AF2  D7FE               	bra	u16477
 21939  004AF4  F000               	nop	
 21940  004AF6                     l341:
 21941  004AF6  A2AC               	btfss	172,1,c	;volatile
 21942  004AF8  D7FE               	goto	l341
 21943                           
 21944                           ;Uart_Hard.c: 93:         cadena++;
 21945  004AFA  0100               	movlb	0	; () banked
 21946  004AFC  4B65               	infsnz	UART_array@cadena& (0+255),f,b
 21947  004AFE  2B66               	incf	(UART_array@cadena+1)& (0+255),f,b
 21948  004B00                     l11134:
 21949                           
 21950                           ; BSR set to: 0
 21951                           ;Uart_Hard.c: 88:     while(*cadena)
 21952  004B00  C065  FFF6         	movff	UART_array@cadena,tblptrl
 21953  004B04  C066  FFF7         	movff	UART_array@cadena+1,tblptrh
 21954  004B08  6AF8               	clrf	tblptru,c
 21955  004B0A  0E07               	movlw	(high __ramtop+-1)
 21956  004B0C  64F7               	cpfsgt	tblptrh,c
 21957  004B0E  D003               	bra	u15337
 21958  004B10  0008               	tblrd		*
 21959  004B12  50F5               	movf	tablat,w,c
 21960  004B14  D005               	bra	u15330
 21961  004B16                     u15337:
 21962  004B16  CFF6 FFE1          	movff	tblptrl,fsr1l
 21963  004B1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21964  004B1E  50E7               	movf	indf1,w,c
 21965  004B20                     u15330:
 21966  004B20  0900               	iorlw	0
 21967  004B22  B4D8               	btfsc	status,2,c
 21968  004B24  0012               	return	
 21969  004B26  D7D2               	goto	l11128
 21970  004B28                     __end_of_UART_array:
 21971                           	callstack 0
 21972                           
 21973 ;; *************** function _PWM_init_1 *****************
 21974 ;; Defined at:
 21975 ;;		line 6 in file "Pwm_Hard.c"
 21976 ;; Parameters:    Size  Location     Type
 21977 ;;  frecuencia      2   79[BANK0 ] unsigned int 
 21978 ;; Auto vars:     Size  Location     Type
 21979 ;;  per             4   81[BANK0 ] float 
 21980 ;; Return value:  Size  Location     Type
 21981 ;;                  1    wreg      void 
 21982 ;; Registers used:
 21983 ;;		wreg, status,2, status,0, cstack
 21984 ;; Tracked objects:
 21985 ;;		On entry : 3F/0
 21986 ;;		On exit  : 3F/0
 21987 ;;		Unchanged: 0/0
 21988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21989 ;;      Params:         0       2       0       0       0       0       0       0       0
 21990 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21992 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21993 ;;Total ram usage:        6 bytes
 21994 ;; Hardware stack levels used:    1
 21995 ;; Hardware stack levels required when called:    8
 21996 ;; This function calls:
 21997 ;;		___fldiv
 21998 ;;		___fltol
 21999 ;;		___xxtofl
 22000 ;; This function is called by:
 22001 ;;		_main
 22002 ;; This function uses a non-reentrant model
 22003 ;;
 22004                           
 22005                           	psect	text57
 22006  004470                     __ptext57:
 22007                           	callstack 0
 22008  004470                     _PWM_init_1:
 22009                           	callstack 22
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;Pwm_Hard.c: 11:     per = 1.0 / frecuencia;
 22013                           
 22014                           ; BSR set to: 0
 22015                           
 22016                           ;incstack = 0
 22017  004470  0E00               	movlw	0
 22018  004472  6F8C               	movwf	___fldiv@b& (0+255),b
 22019  004474  0E00               	movlw	0
 22020  004476  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22021  004478  0E80               	movlw	128
 22022  00447A  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22023  00447C  0E3F               	movlw	63
 22024  00447E  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 22025  004480  C0AF  F065         	movff	PWM_init_1@frecuencia,___xxtofl@val
 22026  004484  C0B0  F066         	movff	PWM_init_1@frecuencia+1,___xxtofl@val+1
 22027  004488  6B67               	clrf	(___xxtofl@val+2)& (0+255),b
 22028  00448A  6B68               	clrf	(___xxtofl@val+3)& (0+255),b
 22029  00448C  0E00               	movlw	0
 22030  00448E  EC3C  F01A         	call	___xxtofl
 22031  004492  C065  F090         	movff	?___xxtofl,___fldiv@a
 22032  004496  C066  F091         	movff	?___xxtofl+1,___fldiv@a+1
 22033  00449A  C067  F092         	movff	?___xxtofl+2,___fldiv@a+2
 22034  00449E  C068  F093         	movff	?___xxtofl+3,___fldiv@a+3
 22035  0044A2  EC56  F014         	call	___fldiv	;wreg free
 22036  0044A6  C08C  F0B1         	movff	?___fldiv,PWM_init_1@per
 22037  0044AA  C08D  F0B2         	movff	?___fldiv+1,PWM_init_1@per+1
 22038  0044AE  C08E  F0B3         	movff	?___fldiv+2,PWM_init_1@per+2
 22039  0044B2  C08F  F0B4         	movff	?___fldiv+3,PWM_init_1@per+3
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;Pwm_Hard.c: 12:     freq = frecuencia;
 22043  0044B6  C0AF  F050         	movff	PWM_init_1@frecuencia,_freq
 22044  0044BA  C0B0  F051         	movff	PWM_init_1@frecuencia+1,_freq+1
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;Pwm_Hard.c: 15:     CCP1CONbits.CCP1M = 0b1100;
 22048  0044BE  50BD               	movf	189,w,c	;volatile
 22049  0044C0  0BF0               	andlw	-16
 22050  0044C2  090C               	iorlw	12
 22051  0044C4  6EBD               	movwf	189,c	;volatile
 22052                           
 22053                           ;Pwm_Hard.c: 18:     PR2 = (int) (per / (4 * (1.0 / 20000000) * 16)) - 1;
 22054  0044C6  0E95               	movlw	149
 22055  0044C8  6F90               	movwf	___fldiv@a& (0+255),b
 22056  0044CA  0EBF               	movlw	191
 22057  0044CC  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 22058  0044CE  0E56               	movlw	86
 22059  0044D0  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 22060  0044D2  0E36               	movlw	54
 22061  0044D4  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 22062  0044D6  C0B1  F08C         	movff	PWM_init_1@per,___fldiv@b
 22063  0044DA  C0B2  F08D         	movff	PWM_init_1@per+1,___fldiv@b+1
 22064  0044DE  C0B3  F08E         	movff	PWM_init_1@per+2,___fldiv@b+2
 22065  0044E2  C0B4  F08F         	movff	PWM_init_1@per+3,___fldiv@b+3
 22066  0044E6  EC56  F014         	call	___fldiv	;wreg free
 22067  0044EA  C08C  F0A5         	movff	?___fldiv,___fltol@f1
 22068  0044EE  C08D  F0A6         	movff	?___fldiv+1,___fltol@f1+1
 22069  0044F2  C08E  F0A7         	movff	?___fldiv+2,___fltol@f1+2
 22070  0044F6  C08F  F0A8         	movff	?___fldiv+3,___fltol@f1+3
 22071  0044FA  ECDB  F021         	call	___fltol	;wreg free
 22072  0044FE  05A5               	decf	?___fltol& (0+255),w,b
 22073  004500  6ECB               	movwf	203,c	;volatile
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;Pwm_Hard.c: 19:     pr2 = PR2;
 22077  004502  CFCB F049          	movff	4043,_pr2	;volatile
 22078  004506  6A4A               	clrf	(_pr2+1)^0,c
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;Pwm_Hard.c: 20:     CCPR1L = 0;
 22082  004508  0E00               	movlw	0
 22083  00450A  6EBE               	movwf	190,c	;volatile
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;Pwm_Hard.c: 21:     CCP1CONbits.DC1B1 = 0;
 22087  00450C  9ABD               	bcf	189,5,c	;volatile
 22088                           
 22089                           ; BSR set to: 0
 22090                           ;Pwm_Hard.c: 22:     CCP1CONbits.DC1B0 = 0;
 22091  00450E  98BD               	bcf	189,4,c	;volatile
 22092                           
 22093                           ; BSR set to: 0
 22094                           ;Pwm_Hard.c: 25:     T2CONbits.TOUTPS = 0b0000;
 22095  004510  0E87               	movlw	-121
 22096  004512  16CA               	andwf	202,f,c	;volatile
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;Pwm_Hard.c: 26:     T2CONbits.T2CKPS = 0b11;
 22100  004514  0E03               	movlw	3
 22101  004516  12CA               	iorwf	202,f,c	;volatile
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;Pwm_Hard.c: 27:     TMR2 = 0;
 22105  004518  0E00               	movlw	0
 22106  00451A  6ECC               	movwf	204,c	;volatile
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;Pwm_Hard.c: 28:     T2CONbits.TMR2ON = 1;
 22110  00451C  84CA               	bsf	202,2,c	;volatile
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;Pwm_Hard.c: 31:     TRISCbits.TRISC2 = 0;
 22114  00451E  9494               	bcf	148,2,c	;volatile
 22115                           
 22116                           ; BSR set to: 0
 22117  004520  0012               	return		;funcret
 22118  004522                     __end_of_PWM_init_1:
 22119                           	callstack 0
 22120                           
 22121 ;; *************** function ___xxtofl *****************
 22122 ;; Defined at:
 22123 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\xxtofl.c"
 22124 ;; Parameters:    Size  Location     Type
 22125 ;;  sign            1    wreg     unsigned char 
 22126 ;;  val             4    5[BANK0 ] long 
 22127 ;; Auto vars:     Size  Location     Type
 22128 ;;  sign            1   13[BANK0 ] unsigned char 
 22129 ;;  arg             4   15[BANK0 ] unsigned long 
 22130 ;;  exp             1   14[BANK0 ] unsigned char 
 22131 ;; Return value:  Size  Location     Type
 22132 ;;                  4    5[BANK0 ] unsigned char 
 22133 ;; Registers used:
 22134 ;;		wreg, status,2, status,0
 22135 ;; Tracked objects:
 22136 ;;		On entry : 3F/0
 22137 ;;		On exit  : 3F/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22140 ;;      Params:         0       4       0       0       0       0       0       0       0
 22141 ;;      Locals:         0       6       0       0       0       0       0       0       0
 22142 ;;      Temps:          0       4       0       0       0       0       0       0       0
 22143 ;;      Totals:         0      14       0       0       0       0       0       0       0
 22144 ;;Total ram usage:       14 bytes
 22145 ;; Hardware stack levels used:    1
 22146 ;; Hardware stack levels required when called:    7
 22147 ;; This function calls:
 22148 ;;		Nothing
 22149 ;; This function is called by:
 22150 ;;		_PWM_init_1
 22151 ;;		_PWM_1
 22152 ;; This function uses a non-reentrant model
 22153 ;;
 22154                           
 22155                           	psect	text58
 22156  003478                     __ptext58:
 22157                           	callstack 0
 22158  003478                     ___xxtofl:
 22159                           	callstack 20
 22160                           
 22161                           ; BSR set to: 0
 22162                           ;incstack = 0
 22163                           ;___xxtofl@sign stored from wreg
 22164  003478  6F6D               	movwf	___xxtofl@sign& (0+255),b
 22165  00347A  0100               	movlb	0	; () banked
 22166  00347C  516D               	movf	___xxtofl@sign& (0+255),w,b
 22167  00347E  A4D8               	btfss	status,2,c
 22168                           
 22169                           ; BSR set to: 0
 22170  003480  AF68               	btfss	(___xxtofl@val+3)& (0+255),7,b
 22171  003482  D01A               	goto	l1275
 22172                           
 22173                           ; BSR set to: 0
 22174  003484  C065  F069         	movff	___xxtofl@val,??___xxtofl
 22175  003488  C066  F06A         	movff	___xxtofl@val+1,??___xxtofl+1
 22176  00348C  C067  F06B         	movff	___xxtofl@val+2,??___xxtofl+2
 22177  003490  C068  F06C         	movff	___xxtofl@val+3,??___xxtofl+3
 22178  003494  1F69               	comf	??___xxtofl& (0+255),f,b
 22179  003496  1F6A               	comf	(??___xxtofl+1)& (0+255),f,b
 22180  003498  1F6B               	comf	(??___xxtofl+2)& (0+255),f,b
 22181  00349A  1F6C               	comf	(??___xxtofl+3)& (0+255),f,b
 22182  00349C  2B69               	incf	??___xxtofl& (0+255),f,b
 22183  00349E  0E00               	movlw	0
 22184  0034A0  236A               	addwfc	(??___xxtofl+1)& (0+255),f,b
 22185  0034A2  236B               	addwfc	(??___xxtofl+2)& (0+255),f,b
 22186  0034A4  236C               	addwfc	(??___xxtofl+3)& (0+255),f,b
 22187  0034A6  C069  F06F         	movff	??___xxtofl,___xxtofl@arg
 22188  0034AA  C06A  F070         	movff	??___xxtofl+1,___xxtofl@arg+1
 22189  0034AE  C06B  F071         	movff	??___xxtofl+2,___xxtofl@arg+2
 22190  0034B2  C06C  F072         	movff	??___xxtofl+3,___xxtofl@arg+3
 22191  0034B6  D008               	goto	l5918
 22192  0034B8                     l1275:
 22193                           
 22194                           ; BSR set to: 0
 22195  0034B8  C065  F06F         	movff	___xxtofl@val,___xxtofl@arg
 22196  0034BC  C066  F070         	movff	___xxtofl@val+1,___xxtofl@arg+1
 22197  0034C0  C067  F071         	movff	___xxtofl@val+2,___xxtofl@arg+2
 22198  0034C4  C068  F072         	movff	___xxtofl@val+3,___xxtofl@arg+3
 22199  0034C8                     l5918:
 22200                           
 22201                           ; BSR set to: 0
 22202  0034C8  5165               	movf	___xxtofl@val& (0+255),w,b
 22203  0034CA  1166               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 22204  0034CC  1167               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 22205  0034CE  1168               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 22206  0034D0  A4D8               	btfss	status,2,c
 22207  0034D2  D009               	goto	l5924
 22208                           
 22209                           ; BSR set to: 0
 22210  0034D4  0E00               	movlw	0
 22211  0034D6  6F65               	movwf	?___xxtofl& (0+255),b
 22212  0034D8  0E00               	movlw	0
 22213  0034DA  6F66               	movwf	(?___xxtofl+1)& (0+255),b
 22214  0034DC  0E00               	movlw	0
 22215  0034DE  6F67               	movwf	(?___xxtofl+2)& (0+255),b
 22216  0034E0  0E00               	movlw	0
 22217  0034E2  6F68               	movwf	(?___xxtofl+3)& (0+255),b
 22218  0034E4  0012               	return	
 22219  0034E6                     l5924:
 22220                           
 22221                           ; BSR set to: 0
 22222  0034E6  0E96               	movlw	150
 22223  0034E8  6F6E               	movwf	___xxtofl@exp& (0+255),b
 22224  0034EA  D006               	goto	l5928
 22225  0034EC                     l5926:
 22226                           
 22227                           ; BSR set to: 0
 22228  0034EC  2B6E               	incf	___xxtofl@exp& (0+255),f,b
 22229  0034EE  90D8               	bcf	status,0,c
 22230  0034F0  3372               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 22231  0034F2  3371               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 22232  0034F4  3370               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 22233  0034F6  336F               	rrcf	___xxtofl@arg& (0+255),f,b
 22234  0034F8                     l5928:
 22235                           
 22236                           ; BSR set to: 0
 22237  0034F8  0E00               	movlw	0
 22238  0034FA  156F               	andwf	___xxtofl@arg& (0+255),w,b
 22239  0034FC  6F69               	movwf	??___xxtofl& (0+255),b
 22240  0034FE  0E00               	movlw	0
 22241  003500  1570               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 22242  003502  6F6A               	movwf	(??___xxtofl+1)& (0+255),b
 22243  003504  0E00               	movlw	0
 22244  003506  1571               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 22245  003508  6F6B               	movwf	(??___xxtofl+2)& (0+255),b
 22246  00350A  0EFE               	movlw	254
 22247  00350C  1572               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 22248  00350E  6F6C               	movwf	(??___xxtofl+3)& (0+255),b
 22249  003510  5169               	movf	??___xxtofl& (0+255),w,b
 22250  003512  116A               	iorwf	(??___xxtofl+1)& (0+255),w,b
 22251  003514  116B               	iorwf	(??___xxtofl+2)& (0+255),w,b
 22252  003516  116C               	iorwf	(??___xxtofl+3)& (0+255),w,b
 22253  003518  B4D8               	btfsc	status,2,c
 22254  00351A  D00D               	goto	l1282
 22255  00351C  D7E7               	goto	l5926
 22256  00351E                     l5930:
 22257                           
 22258                           ; BSR set to: 0
 22259  00351E  2B6E               	incf	___xxtofl@exp& (0+255),f,b
 22260                           
 22261                           ; BSR set to: 0
 22262  003520  0E01               	movlw	1
 22263  003522  276F               	addwf	___xxtofl@arg& (0+255),f,b
 22264  003524  0E00               	movlw	0
 22265  003526  2370               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 22266  003528  2371               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 22267  00352A  2372               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 22268                           
 22269                           ; BSR set to: 0
 22270  00352C  90D8               	bcf	status,0,c
 22271  00352E  3372               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 22272  003530  3371               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 22273  003532  3370               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 22274  003534  336F               	rrcf	___xxtofl@arg& (0+255),f,b
 22275  003536                     l1282:
 22276                           
 22277                           ; BSR set to: 0
 22278  003536  0E00               	movlw	0
 22279  003538  156F               	andwf	___xxtofl@arg& (0+255),w,b
 22280  00353A  6F69               	movwf	??___xxtofl& (0+255),b
 22281  00353C  0E00               	movlw	0
 22282  00353E  1570               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 22283  003540  6F6A               	movwf	(??___xxtofl+1)& (0+255),b
 22284  003542  0E00               	movlw	0
 22285  003544  1571               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 22286  003546  6F6B               	movwf	(??___xxtofl+2)& (0+255),b
 22287  003548  0EFF               	movlw	255
 22288  00354A  1572               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 22289  00354C  6F6C               	movwf	(??___xxtofl+3)& (0+255),b
 22290  00354E  5169               	movf	??___xxtofl& (0+255),w,b
 22291  003550  116A               	iorwf	(??___xxtofl+1)& (0+255),w,b
 22292  003552  116B               	iorwf	(??___xxtofl+2)& (0+255),w,b
 22293  003554  116C               	iorwf	(??___xxtofl+3)& (0+255),w,b
 22294  003556  B4D8               	btfsc	status,2,c
 22295  003558  D007               	goto	l5938
 22296  00355A  D7E1               	goto	l5930
 22297  00355C                     l5936:
 22298                           
 22299                           ; BSR set to: 0
 22300  00355C  076E               	decf	___xxtofl@exp& (0+255),f,b
 22301  00355E  90D8               	bcf	status,0,c
 22302  003560  376F               	rlcf	___xxtofl@arg& (0+255),f,b
 22303  003562  3770               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 22304  003564  3771               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 22305  003566  3772               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 22306  003568                     l5938:
 22307                           
 22308                           ; BSR set to: 0
 22309  003568  BF71               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 22310  00356A  D003               	goto	u7090
 22311                           
 22312                           ; BSR set to: 0
 22313  00356C  0E02               	movlw	2
 22314  00356E  616E               	cpfslt	___xxtofl@exp& (0+255),b
 22315  003570  D7F5               	goto	l5936
 22316  003572                     u7090:
 22317                           
 22318                           ; BSR set to: 0
 22319  003572  A16E               	btfss	___xxtofl@exp& (0+255),0,b
 22320                           
 22321                           ; BSR set to: 0
 22322  003574  9F71               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 22323                           
 22324                           ; BSR set to: 0
 22325  003576  90D8               	bcf	status,0,c
 22326  003578  336E               	rrcf	___xxtofl@exp& (0+255),f,b
 22327                           
 22328                           ; BSR set to: 0
 22329  00357A  C06E  F069         	movff	___xxtofl@exp,??___xxtofl
 22330  00357E  6B6A               	clrf	(??___xxtofl+1)& (0+255),b
 22331  003580  6B6B               	clrf	(??___xxtofl+2)& (0+255),b
 22332  003582  6B6C               	clrf	(??___xxtofl+3)& (0+255),b
 22333  003584  C069  F06C         	movff	??___xxtofl,??___xxtofl+3
 22334  003588  6B6B               	clrf	(??___xxtofl+2)& (0+255),b
 22335  00358A  6B6A               	clrf	(??___xxtofl+1)& (0+255),b
 22336  00358C  6B69               	clrf	??___xxtofl& (0+255),b
 22337  00358E  5169               	movf	??___xxtofl& (0+255),w,b
 22338  003590  136F               	iorwf	___xxtofl@arg& (0+255),f,b
 22339  003592  516A               	movf	(??___xxtofl+1)& (0+255),w,b
 22340  003594  1370               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 22341  003596  516B               	movf	(??___xxtofl+2)& (0+255),w,b
 22342  003598  1371               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 22343  00359A  516C               	movf	(??___xxtofl+3)& (0+255),w,b
 22344  00359C  1372               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 22345                           
 22346                           ; BSR set to: 0
 22347  00359E  516D               	movf	___xxtofl@sign& (0+255),w,b
 22348  0035A0  A4D8               	btfss	status,2,c
 22349                           
 22350                           ; BSR set to: 0
 22351  0035A2  AF68               	btfss	(___xxtofl@val+3)& (0+255),7,b
 22352  0035A4  D001               	goto	l5954
 22353                           
 22354                           ; BSR set to: 0
 22355  0035A6  8F72               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 22356  0035A8                     l5954:
 22357                           
 22358                           ; BSR set to: 0
 22359  0035A8  C06F  F065         	movff	___xxtofl@arg,?___xxtofl
 22360  0035AC  C070  F066         	movff	___xxtofl@arg+1,?___xxtofl+1
 22361  0035B0  C071  F067         	movff	___xxtofl@arg+2,?___xxtofl+2
 22362  0035B4  C072  F068         	movff	___xxtofl@arg+3,?___xxtofl+3
 22363                           
 22364                           ; BSR set to: 0
 22365  0035B8  0012               	return		;funcret
 22366  0035BA                     __end_of___xxtofl:
 22367                           	callstack 0
 22368                           
 22369 ;; *************** function ___fltol *****************
 22370 ;; Defined at:
 22371 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\fltol.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;  f1              4   69[BANK0 ] unsigned char 
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;  exp1            1   78[BANK0 ] unsigned char 
 22376 ;;  sign1           1   77[BANK0 ] unsigned char 
 22377 ;; Return value:  Size  Location     Type
 22378 ;;                  4   69[BANK0 ] long 
 22379 ;; Registers used:
 22380 ;;		wreg, status,2, status,0
 22381 ;; Tracked objects:
 22382 ;;		On entry : 3F/0
 22383 ;;		On exit  : 3F/0
 22384 ;;		Unchanged: 0/0
 22385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22386 ;;      Params:         0       4       0       0       0       0       0       0       0
 22387 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22388 ;;      Temps:          0       4       0       0       0       0       0       0       0
 22389 ;;      Totals:         0      10       0       0       0       0       0       0       0
 22390 ;;Total ram usage:       10 bytes
 22391 ;; Hardware stack levels used:    1
 22392 ;; Hardware stack levels required when called:    7
 22393 ;; This function calls:
 22394 ;;		Nothing
 22395 ;; This function is called by:
 22396 ;;		_PWM_init_1
 22397 ;;		_PWM_1
 22398 ;;		_efgtoa
 22399 ;; This function uses a non-reentrant model
 22400 ;;
 22401                           
 22402                           	psect	text59
 22403  0043B6                     __ptext59:
 22404                           	callstack 0
 22405  0043B6                     ___fltol:
 22406                           	callstack 18
 22407                           
 22408                           ; BSR set to: 0
 22409                           
 22410                           ; BSR set to: 0
 22411                           ;incstack = 0
 22412  0043B6  35A7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 22413  0043B8  35A8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 22414  0043BA  6FAE               	movwf	___fltol@exp1& (0+255),b
 22415  0043BC  51AE               	movf	___fltol@exp1& (0+255),w,b
 22416  0043BE  A4D8               	btfss	status,2,c
 22417  0043C0  D009               	goto	l10406
 22418  0043C2                     u13910:
 22419                           
 22420                           ; BSR set to: 0
 22421  0043C2  0E00               	movlw	0
 22422  0043C4  6FA5               	movwf	?___fltol& (0+255),b
 22423  0043C6  0E00               	movlw	0
 22424  0043C8  6FA6               	movwf	(?___fltol+1)& (0+255),b
 22425  0043CA  0E00               	movlw	0
 22426  0043CC  6FA7               	movwf	(?___fltol+2)& (0+255),b
 22427  0043CE  0E00               	movlw	0
 22428  0043D0  6FA8               	movwf	(?___fltol+3)& (0+255),b
 22429  0043D2  0012               	return	
 22430  0043D4                     l10406:
 22431                           
 22432                           ; BSR set to: 0
 22433  0043D4  C0A5  F0A9         	movff	___fltol@f1,??___fltol
 22434  0043D8  C0A6  F0AA         	movff	___fltol@f1+1,??___fltol+1
 22435  0043DC  C0A7  F0AB         	movff	___fltol@f1+2,??___fltol+2
 22436  0043E0  C0A8  F0AC         	movff	___fltol@f1+3,??___fltol+3
 22437  0043E4  0E20               	movlw	32
 22438  0043E6  D005               	goto	u13920
 22439  0043E8                     u13925:
 22440  0043E8  90D8               	bcf	status,0,c
 22441  0043EA  33AC               	rrcf	(??___fltol+3)& (0+255),f,b
 22442  0043EC  33AB               	rrcf	(??___fltol+2)& (0+255),f,b
 22443  0043EE  33AA               	rrcf	(??___fltol+1)& (0+255),f,b
 22444  0043F0  33A9               	rrcf	??___fltol& (0+255),f,b
 22445  0043F2                     u13920:
 22446  0043F2  2EE8               	decfsz	wreg,f,c
 22447  0043F4  D7F9               	goto	u13925
 22448  0043F6  51A9               	movf	??___fltol& (0+255),w,b
 22449  0043F8  6FAD               	movwf	___fltol@sign1& (0+255),b
 22450                           
 22451                           ; BSR set to: 0
 22452  0043FA  8FA7               	bsf	(___fltol@f1+2)& (0+255),7,b
 22453                           
 22454                           ; BSR set to: 0
 22455  0043FC  0EFF               	movlw	255
 22456  0043FE  17A5               	andwf	___fltol@f1& (0+255),f,b
 22457  004400  0EFF               	movlw	255
 22458  004402  17A6               	andwf	(___fltol@f1+1)& (0+255),f,b
 22459  004404  0EFF               	movlw	255
 22460  004406  17A7               	andwf	(___fltol@f1+2)& (0+255),f,b
 22461  004408  0E00               	movlw	0
 22462  00440A  17A8               	andwf	(___fltol@f1+3)& (0+255),f,b
 22463                           
 22464                           ; BSR set to: 0
 22465  00440C  0E96               	movlw	150
 22466  00440E  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 22467                           
 22468                           ; BSR set to: 0
 22469  004410  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 22470  004412  D00D               	goto	l10426
 22471                           
 22472                           ; BSR set to: 0
 22473  004414  51AE               	movf	___fltol@exp1& (0+255),w,b
 22474  004416  0A80               	xorlw	128
 22475  004418  0F97               	addlw	151
 22476  00441A  A0D8               	btfss	status,0,c
 22477  00441C  D7D2               	goto	u13910
 22478  00441E                     l10422:
 22479                           
 22480                           ; BSR set to: 0
 22481  00441E  90D8               	bcf	status,0,c
 22482  004420  33A8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 22483  004422  33A7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 22484  004424  33A6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 22485  004426  33A5               	rrcf	___fltol@f1& (0+255),f,b
 22486                           
 22487                           ; BSR set to: 0
 22488  004428  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 22489  00442A  D7F9               	goto	l10422
 22490  00442C  D00D               	goto	u13960
 22491  00442E                     l10426:
 22492                           
 22493                           ; BSR set to: 0
 22494  00442E  0E1F               	movlw	31
 22495  004430  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 22496  004432  D007               	goto	l10434
 22497  004434  D7C6               	goto	u13910
 22498  004436                     l10432:
 22499                           
 22500                           ; BSR set to: 0
 22501  004436  90D8               	bcf	status,0,c
 22502  004438  37A5               	rlcf	___fltol@f1& (0+255),f,b
 22503  00443A  37A6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 22504  00443C  37A7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 22505  00443E  37A8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 22506  004440  07AE               	decf	___fltol@exp1& (0+255),f,b
 22507  004442                     l10434:
 22508                           
 22509                           ; BSR set to: 0
 22510  004442  51AE               	movf	___fltol@exp1& (0+255),w,b
 22511  004444  A4D8               	btfss	status,2,c
 22512  004446  D7F7               	goto	l10432
 22513  004448                     u13960:
 22514                           
 22515                           ; BSR set to: 0
 22516  004448  51AD               	movf	___fltol@sign1& (0+255),w,b
 22517  00444A  B4D8               	btfsc	status,2,c
 22518  00444C  D008               	goto	l10440
 22519                           
 22520                           ; BSR set to: 0
 22521  00444E  1FA8               	comf	(___fltol@f1+3)& (0+255),f,b
 22522  004450  1FA7               	comf	(___fltol@f1+2)& (0+255),f,b
 22523  004452  1FA6               	comf	(___fltol@f1+1)& (0+255),f,b
 22524  004454  6DA5               	negf	___fltol@f1& (0+255),b
 22525  004456  0E00               	movlw	0
 22526  004458  23A6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 22527  00445A  23A7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 22528  00445C  23A8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 22529  00445E                     l10440:
 22530                           
 22531                           ; BSR set to: 0
 22532  00445E  C0A5  F0A5         	movff	___fltol@f1,?___fltol
 22533  004462  C0A6  F0A6         	movff	___fltol@f1+1,?___fltol+1
 22534  004466  C0A7  F0A7         	movff	___fltol@f1+2,?___fltol+2
 22535  00446A  C0A8  F0A8         	movff	___fltol@f1+3,?___fltol+3
 22536                           
 22537                           ; BSR set to: 0
 22538  00446E  0012               	return		;funcret
 22539  004470                     __end_of___fltol:
 22540                           	callstack 0
 22541                           
 22542 ;; *************** function ___fldiv *****************
 22543 ;; Defined at:
 22544 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\sprcdiv.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;  b               4   44[BANK0 ] long 
 22547 ;;  a               4   48[BANK0 ] long 
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;  grs             4   63[BANK0 ] unsigned long 
 22550 ;;  rem             4   56[BANK0 ] unsigned long 
 22551 ;;  new_exp         2   61[BANK0 ] short 
 22552 ;;  aexp            1   68[BANK0 ] unsigned char 
 22553 ;;  bexp            1   67[BANK0 ] unsigned char 
 22554 ;;  sign            1   60[BANK0 ] unsigned char 
 22555 ;; Return value:  Size  Location     Type
 22556 ;;                  4   44[BANK0 ] unsigned char 
 22557 ;; Registers used:
 22558 ;;		wreg, status,2, status,0
 22559 ;; Tracked objects:
 22560 ;;		On entry : 3E/0
 22561 ;;		On exit  : 3F/0
 22562 ;;		Unchanged: 0/0
 22563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22564 ;;      Params:         0       8       0       0       0       0       0       0       0
 22565 ;;      Locals:         0      13       0       0       0       0       0       0       0
 22566 ;;      Temps:          0       4       0       0       0       0       0       0       0
 22567 ;;      Totals:         0      25       0       0       0       0       0       0       0
 22568 ;;Total ram usage:       25 bytes
 22569 ;; Hardware stack levels used:    1
 22570 ;; Hardware stack levels required when called:    7
 22571 ;; This function calls:
 22572 ;;		Nothing
 22573 ;; This function is called by:
 22574 ;;		_PWM_init_1
 22575 ;;		_PWM_1
 22576 ;;		_efgtoa
 22577 ;; This function uses a non-reentrant model
 22578 ;;
 22579                           
 22580                           	psect	text60
 22581  0028AC                     __ptext60:
 22582                           	callstack 0
 22583  0028AC                     ___fldiv:
 22584                           	callstack 18
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;incstack = 0
 22588  0028AC  0100               	movlb	0	; () banked
 22589  0028AE  518F               	movf	(___fldiv@b+3)& (0+255),w,b
 22590  0028B0  0B80               	andlw	128
 22591  0028B2  6F9C               	movwf	___fldiv@sign& (0+255),b
 22592  0028B4  518F               	movf	(___fldiv@b+3)& (0+255),w,b
 22593  0028B6  258F               	addwf	(___fldiv@b+3)& (0+255),w,b
 22594  0028B8  6FA3               	movwf	___fldiv@bexp& (0+255),b
 22595                           
 22596                           ; BSR set to: 0
 22597  0028BA  BF8E               	btfsc	(___fldiv@b+2)& (0+255),7,b
 22598                           
 22599                           ; BSR set to: 0
 22600  0028BC  81A3               	bsf	___fldiv@bexp& (0+255),0,b
 22601                           
 22602                           ; BSR set to: 0
 22603  0028BE  51A3               	movf	___fldiv@bexp& (0+255),w,b
 22604  0028C0  B4D8               	btfsc	status,2,c
 22605  0028C2  D00D               	goto	l10016
 22606                           
 22607                           ; BSR set to: 0
 22608  0028C4  29A3               	incf	___fldiv@bexp& (0+255),w,b
 22609  0028C6  A4D8               	btfss	status,2,c
 22610  0028C8  D008               	goto	l10012
 22611                           
 22612                           ; BSR set to: 0
 22613  0028CA  0E00               	movlw	0
 22614  0028CC  6F8C               	movwf	___fldiv@b& (0+255),b
 22615  0028CE  0E00               	movlw	0
 22616  0028D0  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22617  0028D2  0E00               	movlw	0
 22618  0028D4  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22619  0028D6  0E00               	movlw	0
 22620  0028D8  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 22621  0028DA                     l10012:
 22622                           
 22623                           ; BSR set to: 0
 22624  0028DA  8F8E               	bsf	(___fldiv@b+2)& (0+255),7,b
 22625  0028DC  D006               	goto	L13
 22626  0028DE                     l10016:
 22627                           
 22628                           ; BSR set to: 0
 22629  0028DE  0E00               	movlw	0
 22630  0028E0  6F8C               	movwf	___fldiv@b& (0+255),b
 22631  0028E2  0E00               	movlw	0
 22632  0028E4  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22633  0028E6  0E00               	movlw	0
 22634  0028E8  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22635  0028EA                     L13:
 22636  0028EA  0E00               	movlw	0
 22637  0028EC  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 22638                           
 22639                           ; BSR set to: 0
 22640  0028EE  5193               	movf	(___fldiv@a+3)& (0+255),w,b
 22641  0028F0  0B80               	andlw	128
 22642  0028F2  1B9C               	xorwf	___fldiv@sign& (0+255),f,b
 22643                           
 22644                           ; BSR set to: 0
 22645  0028F4  5193               	movf	(___fldiv@a+3)& (0+255),w,b
 22646  0028F6  2593               	addwf	(___fldiv@a+3)& (0+255),w,b
 22647  0028F8  6FA4               	movwf	___fldiv@aexp& (0+255),b
 22648                           
 22649                           ; BSR set to: 0
 22650  0028FA  BF92               	btfsc	(___fldiv@a+2)& (0+255),7,b
 22651                           
 22652                           ; BSR set to: 0
 22653  0028FC  81A4               	bsf	___fldiv@aexp& (0+255),0,b
 22654                           
 22655                           ; BSR set to: 0
 22656  0028FE  51A4               	movf	___fldiv@aexp& (0+255),w,b
 22657  002900  B4D8               	btfsc	status,2,c
 22658  002902  D00D               	goto	l10036
 22659                           
 22660                           ; BSR set to: 0
 22661  002904  29A4               	incf	___fldiv@aexp& (0+255),w,b
 22662  002906  A4D8               	btfss	status,2,c
 22663  002908  D008               	goto	l10032
 22664                           
 22665                           ; BSR set to: 0
 22666  00290A  0E00               	movlw	0
 22667  00290C  6F90               	movwf	___fldiv@a& (0+255),b
 22668  00290E  0E00               	movlw	0
 22669  002910  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 22670  002912  0E00               	movlw	0
 22671  002914  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 22672  002916  0E00               	movlw	0
 22673  002918  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 22674  00291A                     l10032:
 22675                           
 22676                           ; BSR set to: 0
 22677  00291A  8F92               	bsf	(___fldiv@a+2)& (0+255),7,b
 22678  00291C  D006               	goto	L14
 22679  00291E                     l10036:
 22680                           
 22681                           ; BSR set to: 0
 22682  00291E  0E00               	movlw	0
 22683  002920  6F90               	movwf	___fldiv@a& (0+255),b
 22684  002922  0E00               	movlw	0
 22685  002924  6F91               	movwf	(___fldiv@a+1)& (0+255),b
 22686  002926  0E00               	movlw	0
 22687  002928  6F92               	movwf	(___fldiv@a+2)& (0+255),b
 22688  00292A                     L14:
 22689  00292A  0E00               	movlw	0
 22690  00292C  6F93               	movwf	(___fldiv@a+3)& (0+255),b
 22691                           
 22692                           ; BSR set to: 0
 22693  00292E  5190               	movf	___fldiv@a& (0+255),w,b
 22694  002930  1191               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22695  002932  1192               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22696  002934  1193               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22697  002936  A4D8               	btfss	status,2,c
 22698  002938  D017               	goto	l10050
 22699                           
 22700                           ; BSR set to: 0
 22701  00293A  0E00               	movlw	0
 22702  00293C  6F8C               	movwf	___fldiv@b& (0+255),b
 22703  00293E  0E00               	movlw	0
 22704  002940  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22705  002942  0E00               	movlw	0
 22706  002944  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22707  002946  0E00               	movlw	0
 22708  002948  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 22709                           
 22710                           ; BSR set to: 0
 22711  00294A  0E80               	movlw	128
 22712  00294C  138E               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22713  00294E  0E7F               	movlw	127
 22714  002950  138F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22715  002952                     l10044:
 22716                           
 22717                           ; BSR set to: 0
 22718  002952  519C               	movf	___fldiv@sign& (0+255),w,b
 22719  002954  138F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22720                           
 22721                           ; BSR set to: 0
 22722  002956  C08C  F08C         	movff	___fldiv@b,?___fldiv
 22723  00295A  C08D  F08D         	movff	___fldiv@b+1,?___fldiv+1
 22724  00295E  C08E  F08E         	movff	___fldiv@b+2,?___fldiv+2
 22725  002962  C08F  F08F         	movff	___fldiv@b+3,?___fldiv+3
 22726  002966  0012               	return	
 22727  002968                     l10050:
 22728                           
 22729                           ; BSR set to: 0
 22730  002968  51A3               	movf	___fldiv@bexp& (0+255),w,b
 22731  00296A  A4D8               	btfss	status,2,c
 22732  00296C  D009               	goto	l10058
 22733                           
 22734                           ; BSR set to: 0
 22735                           
 22736                           ; BSR set to: 0
 22737  00296E  0E00               	movlw	0
 22738  002970  6F8C               	movwf	?___fldiv& (0+255),b
 22739  002972  0E00               	movlw	0
 22740  002974  6F8D               	movwf	(?___fldiv+1)& (0+255),b
 22741  002976  0E00               	movlw	0
 22742  002978  6F8E               	movwf	(?___fldiv+2)& (0+255),b
 22743  00297A  0E00               	movlw	0
 22744  00297C  6F8F               	movwf	(?___fldiv+3)& (0+255),b
 22745  00297E  0012               	return	
 22746  002980                     l10058:
 22747                           
 22748                           ; BSR set to: 0
 22749  002980  51A4               	movf	___fldiv@aexp& (0+255),w,b
 22750  002982  C0A3  F094         	movff	___fldiv@bexp,??___fldiv
 22751  002986  6B95               	clrf	(??___fldiv+1)& (0+255),b
 22752  002988  5F94               	subwf	??___fldiv& (0+255),f,b
 22753  00298A  0E00               	movlw	0
 22754  00298C  5B95               	subwfb	(??___fldiv+1)& (0+255),f,b
 22755  00298E  0E7F               	movlw	127
 22756  002990  2594               	addwf	??___fldiv& (0+255),w,b
 22757  002992  6F9D               	movwf	___fldiv@new_exp& (0+255),b
 22758  002994  0E00               	movlw	0
 22759  002996  2195               	addwfc	(??___fldiv+1)& (0+255),w,b
 22760  002998  6F9E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22761                           
 22762                           ; BSR set to: 0
 22763  00299A  C08C  F098         	movff	___fldiv@b,___fldiv@rem
 22764  00299E  C08D  F099         	movff	___fldiv@b+1,___fldiv@rem+1
 22765  0029A2  C08E  F09A         	movff	___fldiv@b+2,___fldiv@rem+2
 22766  0029A6  C08F  F09B         	movff	___fldiv@b+3,___fldiv@rem+3
 22767                           
 22768                           ; BSR set to: 0
 22769  0029AA  0E00               	movlw	0
 22770  0029AC  6F8C               	movwf	___fldiv@b& (0+255),b
 22771  0029AE  0E00               	movlw	0
 22772  0029B0  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22773  0029B2  0E00               	movlw	0
 22774  0029B4  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22775  0029B6  0E00               	movlw	0
 22776  0029B8  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 22777                           
 22778                           ; BSR set to: 0
 22779  0029BA  0E00               	movlw	0
 22780  0029BC  6F9F               	movwf	___fldiv@grs& (0+255),b
 22781  0029BE  0E00               	movlw	0
 22782  0029C0  6FA0               	movwf	(___fldiv@grs+1)& (0+255),b
 22783  0029C2  0E00               	movlw	0
 22784  0029C4  6FA1               	movwf	(___fldiv@grs+2)& (0+255),b
 22785  0029C6  0E00               	movlw	0
 22786  0029C8  6FA2               	movwf	(___fldiv@grs+3)& (0+255),b
 22787                           
 22788                           ; BSR set to: 0
 22789  0029CA  0E00               	movlw	0
 22790  0029CC  6FA4               	movwf	___fldiv@aexp& (0+255),b
 22791  0029CE  D028               	goto	l1204
 22792  0029D0                     l10068:
 22793                           
 22794                           ; BSR set to: 0
 22795  0029D0  51A4               	movf	___fldiv@aexp& (0+255),w,b
 22796  0029D2  B4D8               	btfsc	status,2,c
 22797  0029D4  D011               	goto	l10076
 22798                           
 22799                           ; BSR set to: 0
 22800  0029D6  90D8               	bcf	status,0,c
 22801  0029D8  3798               	rlcf	___fldiv@rem& (0+255),f,b
 22802  0029DA  3799               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22803  0029DC  379A               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22804  0029DE  379B               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22805  0029E0  90D8               	bcf	status,0,c
 22806  0029E2  378C               	rlcf	___fldiv@b& (0+255),f,b
 22807  0029E4  378D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22808  0029E6  378E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22809  0029E8  378F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22810                           
 22811                           ; BSR set to: 0
 22812  0029EA  BFA2               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22813                           
 22814                           ; BSR set to: 0
 22815  0029EC  818C               	bsf	___fldiv@b& (0+255),0,b
 22816                           
 22817                           ; BSR set to: 0
 22818  0029EE  90D8               	bcf	status,0,c
 22819  0029F0  379F               	rlcf	___fldiv@grs& (0+255),f,b
 22820  0029F2  37A0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22821  0029F4  37A1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22822  0029F6  37A2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22823  0029F8                     l10076:
 22824                           
 22825                           ; BSR set to: 0
 22826  0029F8  5190               	movf	___fldiv@a& (0+255),w,b
 22827  0029FA  5D98               	subwf	___fldiv@rem& (0+255),w,b
 22828  0029FC  5191               	movf	(___fldiv@a+1)& (0+255),w,b
 22829  0029FE  5999               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22830  002A00  5192               	movf	(___fldiv@a+2)& (0+255),w,b
 22831  002A02  599A               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22832  002A04  5193               	movf	(___fldiv@a+3)& (0+255),w,b
 22833  002A06  599B               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22834  002A08  A0D8               	btfss	status,0,c
 22835  002A0A  D009               	goto	l10082
 22836                           
 22837                           ; BSR set to: 0
 22838  002A0C  8DA2               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22839                           
 22840                           ; BSR set to: 0
 22841  002A0E  5190               	movf	___fldiv@a& (0+255),w,b
 22842  002A10  5F98               	subwf	___fldiv@rem& (0+255),f,b
 22843  002A12  5191               	movf	(___fldiv@a+1)& (0+255),w,b
 22844  002A14  5B99               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22845  002A16  5192               	movf	(___fldiv@a+2)& (0+255),w,b
 22846  002A18  5B9A               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22847  002A1A  5193               	movf	(___fldiv@a+3)& (0+255),w,b
 22848  002A1C  5B9B               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22849  002A1E                     l10082:
 22850                           
 22851                           ; BSR set to: 0
 22852  002A1E  2BA4               	incf	___fldiv@aexp& (0+255),f,b
 22853  002A20                     l1204:
 22854                           
 22855                           ; BSR set to: 0
 22856  002A20  0E19               	movlw	25
 22857  002A22  65A4               	cpfsgt	___fldiv@aexp& (0+255),b
 22858  002A24  D7D5               	goto	l10068
 22859                           
 22860                           ; BSR set to: 0
 22861  002A26  5198               	movf	___fldiv@rem& (0+255),w,b
 22862  002A28  1199               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22863  002A2A  119A               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22864  002A2C  119B               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22865  002A2E  B4D8               	btfsc	status,2,c
 22866  002A30  D011               	goto	l10094
 22867                           
 22868                           ; BSR set to: 0
 22869  002A32  819F               	bsf	___fldiv@grs& (0+255),0,b
 22870  002A34  D00F               	goto	l10094
 22871  002A36                     l10088:
 22872                           
 22873                           ; BSR set to: 0
 22874  002A36  90D8               	bcf	status,0,c
 22875  002A38  378C               	rlcf	___fldiv@b& (0+255),f,b
 22876  002A3A  378D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22877  002A3C  378E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22878  002A3E  378F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22879                           
 22880                           ; BSR set to: 0
 22881  002A40  BFA2               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22882                           
 22883                           ; BSR set to: 0
 22884  002A42  818C               	bsf	___fldiv@b& (0+255),0,b
 22885                           
 22886                           ; BSR set to: 0
 22887  002A44  90D8               	bcf	status,0,c
 22888  002A46  379F               	rlcf	___fldiv@grs& (0+255),f,b
 22889  002A48  37A0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22890  002A4A  37A1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22891  002A4C  37A2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22892  002A4E  079D               	decf	___fldiv@new_exp& (0+255),f,b
 22893  002A50  A0D8               	btfss	status,0,c
 22894  002A52  079E               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22895  002A54                     l10094:
 22896                           
 22897                           ; BSR set to: 0
 22898  002A54  AF8E               	btfss	(___fldiv@b+2)& (0+255),7,b
 22899  002A56  D7EF               	goto	l10088
 22900                           
 22901                           ; BSR set to: 0
 22902  002A58  0E00               	movlw	0
 22903  002A5A  6FA4               	movwf	___fldiv@aexp& (0+255),b
 22904                           
 22905                           ; BSR set to: 0
 22906  002A5C  AFA2               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22907  002A5E  D017               	goto	l1215
 22908                           
 22909                           ; BSR set to: 0
 22910  002A60  0EFF               	movlw	255
 22911  002A62  159F               	andwf	___fldiv@grs& (0+255),w,b
 22912  002A64  6F94               	movwf	??___fldiv& (0+255),b
 22913  002A66  0EFF               	movlw	255
 22914  002A68  15A0               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22915  002A6A  6F95               	movwf	(??___fldiv+1)& (0+255),b
 22916  002A6C  0EFF               	movlw	255
 22917  002A6E  15A1               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22918  002A70  6F96               	movwf	(??___fldiv+2)& (0+255),b
 22919  002A72  0E7F               	movlw	127
 22920  002A74  15A2               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22921  002A76  6F97               	movwf	(??___fldiv+3)& (0+255),b
 22922  002A78  5194               	movf	??___fldiv& (0+255),w,b
 22923  002A7A  1195               	iorwf	(??___fldiv+1)& (0+255),w,b
 22924  002A7C  1196               	iorwf	(??___fldiv+2)& (0+255),w,b
 22925  002A7E  1197               	iorwf	(??___fldiv+3)& (0+255),w,b
 22926  002A80  B4D8               	btfsc	status,2,c
 22927  002A82  D003               	goto	l1216
 22928  002A84                     u13450:
 22929                           
 22930                           ; BSR set to: 0
 22931  002A84  0E01               	movlw	1
 22932  002A86  6FA4               	movwf	___fldiv@aexp& (0+255),b
 22933  002A88  D002               	goto	l1215
 22934  002A8A                     l1216:
 22935                           
 22936                           ; BSR set to: 0
 22937  002A8A  B18C               	btfsc	___fldiv@b& (0+255),0,b
 22938  002A8C  D7FB               	goto	u13450
 22939  002A8E                     l1215:
 22940                           
 22941                           ; BSR set to: 0
 22942  002A8E  51A4               	movf	___fldiv@aexp& (0+255),w,b
 22943  002A90  B4D8               	btfsc	status,2,c
 22944  002A92  D01F               	goto	l10114
 22945                           
 22946                           ; BSR set to: 0
 22947  002A94  0E01               	movlw	1
 22948  002A96  278C               	addwf	___fldiv@b& (0+255),f,b
 22949  002A98  0E00               	movlw	0
 22950  002A9A  238D               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22951  002A9C  238E               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22952  002A9E  238F               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22953                           
 22954                           ; BSR set to: 0
 22955  002AA0  A18F               	btfss	(___fldiv@b+3)& (0+255),0,b
 22956  002AA2  D017               	goto	l10114
 22957                           
 22958                           ; BSR set to: 0
 22959  002AA4  C08C  F094         	movff	___fldiv@b,??___fldiv
 22960  002AA8  C08D  F095         	movff	___fldiv@b+1,??___fldiv+1
 22961  002AAC  C08E  F096         	movff	___fldiv@b+2,??___fldiv+2
 22962  002AB0  C08F  F097         	movff	___fldiv@b+3,??___fldiv+3
 22963  002AB4  3597               	rlcf	(??___fldiv+3)& (0+255),w,b
 22964  002AB6  3397               	rrcf	(??___fldiv+3)& (0+255),f,b
 22965  002AB8  3396               	rrcf	(??___fldiv+2)& (0+255),f,b
 22966  002ABA  3395               	rrcf	(??___fldiv+1)& (0+255),f,b
 22967  002ABC  3394               	rrcf	??___fldiv& (0+255),f,b
 22968  002ABE  C094  F08C         	movff	??___fldiv,___fldiv@b
 22969  002AC2  C095  F08D         	movff	??___fldiv+1,___fldiv@b+1
 22970  002AC6  C096  F08E         	movff	??___fldiv+2,___fldiv@b+2
 22971  002ACA  C097  F08F         	movff	??___fldiv+3,___fldiv@b+3
 22972                           
 22973                           ; BSR set to: 0
 22974  002ACE  4B9D               	infsnz	___fldiv@new_exp& (0+255),f,b
 22975  002AD0  2B9E               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22976  002AD2                     l10114:
 22977                           
 22978                           ; BSR set to: 0
 22979  002AD2  BF9E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22980  002AD4  D010               	goto	l10118
 22981  002AD6  519E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22982  002AD8  E103               	bnz	u13490
 22983  002ADA  299D               	incf	___fldiv@new_exp& (0+255),w,b
 22984  002ADC  A0D8               	btfss	status,0,c
 22985  002ADE  D00B               	goto	l10118
 22986  002AE0                     u13490:
 22987                           
 22988                           ; BSR set to: 0
 22989  002AE0  0E00               	movlw	0
 22990  002AE2  6F9E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22991  002AE4  699D               	setf	___fldiv@new_exp& (0+255),b
 22992  002AE6  0E00               	movlw	0
 22993  002AE8  6F8C               	movwf	___fldiv@b& (0+255),b
 22994  002AEA  0E00               	movlw	0
 22995  002AEC  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 22996  002AEE  0E00               	movlw	0
 22997  002AF0  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 22998  002AF2  0E00               	movlw	0
 22999  002AF4  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 23000  002AF6                     l10118:
 23001                           
 23002                           ; BSR set to: 0
 23003  002AF6  BF9E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 23004  002AF8  D005               	goto	u13500
 23005  002AFA  519E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 23006  002AFC  E111               	bnz	l10122
 23007  002AFE  059D               	decf	___fldiv@new_exp& (0+255),w,b
 23008  002B00  B0D8               	btfsc	status,0,c
 23009  002B02  D00E               	goto	l10122
 23010  002B04                     u13500:
 23011                           
 23012                           ; BSR set to: 0
 23013  002B04  0E00               	movlw	0
 23014  002B06  6F9E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23015  002B08  0E00               	movlw	0
 23016  002B0A  6F9D               	movwf	___fldiv@new_exp& (0+255),b
 23017  002B0C  0E00               	movlw	0
 23018  002B0E  6F8C               	movwf	___fldiv@b& (0+255),b
 23019  002B10  0E00               	movlw	0
 23020  002B12  6F8D               	movwf	(___fldiv@b+1)& (0+255),b
 23021  002B14  0E00               	movlw	0
 23022  002B16  6F8E               	movwf	(___fldiv@b+2)& (0+255),b
 23023  002B18  0E00               	movlw	0
 23024  002B1A  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 23025  002B1C  0E00               	movlw	0
 23026  002B1E  6F9C               	movwf	___fldiv@sign& (0+255),b
 23027  002B20                     l10122:
 23028                           
 23029                           ; BSR set to: 0
 23030  002B20  C09D  F0A3         	movff	___fldiv@new_exp,___fldiv@bexp
 23031                           
 23032                           ; BSR set to: 0
 23033  002B24  A1A3               	btfss	___fldiv@bexp& (0+255),0,b
 23034  002B26  D002               	goto	l10128
 23035                           
 23036                           ; BSR set to: 0
 23037  002B28  8F8E               	bsf	(___fldiv@b+2)& (0+255),7,b
 23038  002B2A  D001               	goto	l10130
 23039  002B2C                     l10128:
 23040                           
 23041                           ; BSR set to: 0
 23042  002B2C  9F8E               	bcf	(___fldiv@b+2)& (0+255),7,b
 23043  002B2E                     l10130:
 23044                           
 23045                           ; BSR set to: 0
 23046  002B2E  90D8               	bcf	status,0,c
 23047  002B30  31A3               	rrcf	___fldiv@bexp& (0+255),w,b
 23048  002B32  6F8F               	movwf	(___fldiv@b+3)& (0+255),b
 23049  002B34  D70E               	goto	l10044
 23050  002B36                     __end_of___fldiv:
 23051                           	callstack 0
 23052                           
 23053 ;; *************** function _ISRL *****************
 23054 ;; Defined at:
 23055 ;;		line 442 in file "Main.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;		None
 23058 ;; Auto vars:     Size  Location     Type
 23059 ;;		None
 23060 ;; Return value:  Size  Location     Type
 23061 ;;                  1    wreg      void 
 23062 ;; Registers used:
 23063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23064 ;; Tracked objects:
 23065 ;;		On entry : 0/0
 23066 ;;		On exit  : 0/0
 23067 ;;		Unchanged: 0/0
 23068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23069 ;;      Params:         0       0       0       0       0       0       0       0       0
 23070 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23071 ;;      Temps:          0       5       0       0       0       0       0       0       0
 23072 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23073 ;;Total ram usage:        5 bytes
 23074 ;; Hardware stack levels used:    1
 23075 ;; Hardware stack levels required when called:    6
 23076 ;; This function calls:
 23077 ;;		_Timers
 23078 ;; This function is called by:
 23079 ;;		Interrupt level 1
 23080 ;; This function uses a non-reentrant model
 23081 ;;
 23082                           
 23083                           	psect	intcodelo
 23084  000018                     __pintcodelo:
 23085                           	callstack 0
 23086  000018                     _ISRL:
 23087                           	callstack 15
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;incstack = 0
 23091  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23092  00001A  CFD8 F060          	movff	status,??_ISRL
 23093  00001E  CFE8 F061          	movff	wreg,??_ISRL+1
 23094  000022  CFE0 F062          	movff	bsr,??_ISRL+2
 23095  000026  CFD9 F063          	movff	fsr2l,??_ISRL+3
 23096  00002A  CFDA F064          	movff	fsr2h,??_ISRL+4
 23097                           
 23098                           ;Main.c: 444:     if(INTCONbits.TMR0IF == 1)
 23099  00002E  A4F2               	btfss	242,2,c	;volatile
 23100  000030  D018               	goto	i1l247
 23101                           
 23102                           ;Main.c: 445:     {;Main.c: 446:         if(Timer_Lect_Temp != 0) Timer_Lect_Temp--;
 23103  000032  5058               	movf	_Timer_Lect_Temp^0,w,c
 23104  000034  A4D8               	btfss	status,2,c
 23105  000036  0658               	decf	_Timer_Lect_Temp^0,f,c
 23106                           
 23107                           ;Main.c: 447:         if(Timer_Most_Pant_Temp != 0) Timer_Most_Pant_Temp--;
 23108  000038  5056               	movf	_Timer_Most_Pant_Temp^0,w,c
 23109  00003A  1057               	iorwf	(_Timer_Most_Pant_Temp+1)^0,w,c
 23110  00003C  B4D8               	btfsc	status,2,c
 23111  00003E  D003               	goto	i1l9592
 23112  000040  0656               	decf	_Timer_Most_Pant_Temp^0,f,c
 23113  000042  A0D8               	btfss	status,0,c
 23114  000044  0657               	decf	(_Timer_Most_Pant_Temp+1)^0,f,c
 23115  000046                     i1l9592:
 23116                           
 23117                           ;Main.c: 449:         if(Timer_Lect_Temp == 0 || Timer_Most_Pant_Temp == 0) Timers();
 23118  000046  5058               	movf	_Timer_Lect_Temp^0,w,c
 23119  000048  B4D8               	btfsc	status,2,c
 23120  00004A  D003               	goto	i1u1268_20
 23121  00004C  5056               	movf	_Timer_Most_Pant_Temp^0,w,c
 23122  00004E  1057               	iorwf	(_Timer_Most_Pant_Temp+1)^0,w,c
 23123  000050  B4D8               	btfsc	status,2,c
 23124  000052                     i1u1268_20:
 23125  000052  ECDF  F026         	call	_Timers	;wreg free
 23126                           
 23127                           ;Main.c: 451:         TMR0 = 59;
 23128  000056  0E00               	movlw	0
 23129  000058  6ED7               	movwf	215,c	;volatile
 23130  00005A  0E3B               	movlw	59
 23131  00005C  6ED6               	movwf	214,c	;volatile
 23132                           
 23133                           ;Main.c: 452:         T0CONbits.TMR0ON = 1;
 23134  00005E  8ED5               	bsf	213,7,c	;volatile
 23135                           
 23136                           ;Main.c: 453:         INTCONbits.TMR0IF = 0;
 23137  000060  94F2               	bcf	242,2,c	;volatile
 23138  000062                     i1l247:
 23139  000062  C064  FFDA         	movff	??_ISRL+4,fsr2h
 23140  000066  C063  FFD9         	movff	??_ISRL+3,fsr2l
 23141  00006A  C062  FFE0         	movff	??_ISRL+2,bsr
 23142  00006E  C061  FFE8         	movff	??_ISRL+1,wreg
 23143  000072  C060  FFD8         	movff	??_ISRL,status
 23144  000076  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23145  000078  0010               	retfie	
 23146  00007A                     __end_of_ISRL:
 23147                           	callstack 0
 23148                           
 23149 ;; *************** function _Timers *****************
 23150 ;; Defined at:
 23151 ;;		line 459 in file "Main.c"
 23152 ;; Parameters:    Size  Location     Type
 23153 ;;		None
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;		None
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1    wreg      void 
 23158 ;; Registers used:
 23159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23165 ;;      Params:         0       0       0       0       0       0       0       0       0
 23166 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23168 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23169 ;;Total ram usage:        0 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:    5
 23172 ;; This function calls:
 23173 ;;		_Convert_Temperature
 23174 ;;		_Read_Temperature_DS18B20
 23175 ;; This function is called by:
 23176 ;;		_ISRL
 23177 ;; This function uses a non-reentrant model
 23178 ;;
 23179                           
 23180                           	psect	text62
 23181  004DBE                     __ptext62:
 23182                           	callstack 0
 23183  004DBE                     _Timers:
 23184                           	callstack 15
 23185                           
 23186                           ;Main.c: 461:     if(Timer_Lect_Temp == 0)
 23187                           
 23188                           ;incstack = 0
 23189  004DBE  5058               	movf	_Timer_Lect_Temp^0,w,c
 23190  004DC0  A4D8               	btfss	status,2,c
 23191  004DC2  D011               	goto	i1l7052
 23192                           
 23193                           ;Main.c: 462:     {;Main.c: 463:         Convert_Temperature();
 23194  004DC4  EC77  F028         	call	_Convert_Temperature	;wreg free
 23195                           
 23196                           ;Main.c: 464:         temp = Read_Temperature_DS18B20();
 23197  004DC8  ECC5  F01E         	call	_Read_Temperature_DS18B20	;wreg free
 23198  004DCC  C01F  F11D         	movff	?_Read_Temperature_DS18B20,_temp
 23199  004DD0  C020  F11E         	movff	?_Read_Temperature_DS18B20+1,_temp+1
 23200  004DD4  C021  F11F         	movff	?_Read_Temperature_DS18B20+2,_temp+2
 23201  004DD8  C022  F120         	movff	?_Read_Temperature_DS18B20+3,_temp+3
 23202                           
 23203                           ;Main.c: 465:         Most_Temp = 1;
 23204  004DDC  0E01               	movlw	1
 23205  004DDE  0101               	movlb	1	; () banked
 23206  004DE0  6F2E               	movwf	_Most_Temp& (0+255),b
 23207                           
 23208                           ; BSR set to: 1
 23209                           ;Main.c: 466:         Timer_Lect_Temp = 100;
 23210  004DE2  0E64               	movlw	100
 23211  004DE4  6E58               	movwf	_Timer_Lect_Temp^0,c
 23212  004DE6                     i1l7052:
 23213                           
 23214                           ;Main.c: 468:     if(Timer_Most_Pant_Temp == 0)
 23215  004DE6  5056               	movf	_Timer_Most_Pant_Temp^0,w,c
 23216  004DE8  1057               	iorwf	(_Timer_Most_Pant_Temp+1)^0,w,c
 23217  004DEA  A4D8               	btfss	status,2,c
 23218  004DEC  0012               	return	
 23219                           
 23220                           ;Main.c: 469:     {;Main.c: 470:         vis_p_temp = 1;
 23221  004DEE  0E01               	movlw	1
 23222  004DF0  0101               	movlb	1	; () banked
 23223  004DF2  6F2C               	movwf	_vis_p_temp& (0+255),b
 23224                           
 23225                           ;Main.c: 472:         Timer_Most_Pant_Temp = 250;
 23226  004DF4  0E00               	movlw	0
 23227  004DF6  6E57               	movwf	(_Timer_Most_Pant_Temp+1)^0,c
 23228  004DF8  0EFA               	movlw	250
 23229  004DFA  6E56               	movwf	_Timer_Most_Pant_Temp^0,c
 23230  004DFC  0012               	return		;funcret
 23231  004DFE                     __end_of_Timers:
 23232                           	callstack 0
 23233                           
 23234 ;; *************** function _Read_Temperature_DS18B20 *****************
 23235 ;; Defined at:
 23236 ;;		line 171 in file "Ds18b20.c"
 23237 ;; Parameters:    Size  Location     Type
 23238 ;;		None
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;  get            10   38[COMRAM] unsigned char [10]
 23241 ;;  temp            4   54[COMRAM] long 
 23242 ;;  ftemp           4   48[COMRAM] float 
 23243 ;;  k               2   52[COMRAM] int 
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  4   30[COMRAM] float 
 23246 ;; Registers used:
 23247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23253 ;;      Params:         4       0       0       0       0       0       0       0       0
 23254 ;;      Locals:        20       0       0       0       0       0       0       0       0
 23255 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23256 ;;      Totals:        28       0       0       0       0       0       0       0       0
 23257 ;;Total ram usage:       28 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:    4
 23260 ;; This function calls:
 23261 ;;		_OWReadByte
 23262 ;;		_OWWriteByte
 23263 ;;		i1___fldiv
 23264 ;;		i1___xxtofl
 23265 ;; This function is called by:
 23266 ;;		_Timers
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           	psect	text63
 23271  003D8A                     __ptext63:
 23272                           	callstack 0
 23273  003D8A                     _Read_Temperature_DS18B20:
 23274                           	callstack 15
 23275                           
 23276                           ;Ds18b20.c: 180:  unsigned char get[10];;Ds18b20.c: 181:  int k;;Ds18b20.c: 182:  long t
      +                          emp;;Ds18b20.c: 183:  float ftemp;;Ds18b20.c: 185:  OWWriteByte(0xCC);
 23277                           
 23278                           ;incstack = 0
 23279  003D8A  0E00               	movlw	0
 23280  003D8C  6E09               	movwf	(OWWriteByte@data+1)^0,c
 23281  003D8E  0ECC               	movlw	204
 23282  003D90  6E08               	movwf	OWWriteByte@data^0,c
 23283  003D92  ECF1  F027         	call	_OWWriteByte	;wreg free
 23284                           
 23285                           ;Ds18b20.c: 186:  OWWriteByte(0xBE);
 23286  003D96  0E00               	movlw	0
 23287  003D98  6E09               	movwf	(OWWriteByte@data+1)^0,c
 23288  003D9A  0EBE               	movlw	190
 23289  003D9C  6E08               	movwf	OWWriteByte@data^0,c
 23290  003D9E  ECF1  F027         	call	_OWWriteByte	;wreg free
 23291                           
 23292                           ;Ds18b20.c: 188:  for (k=0; k<9; k++)
 23293  003DA2  0E00               	movlw	0
 23294  003DA4  6E36               	movwf	(Read_Temperature_DS18B20@k+1)^0,c
 23295  003DA6  0E00               	movlw	0
 23296  003DA8  6E35               	movwf	Read_Temperature_DS18B20@k^0,c
 23297  003DAA                     i1l6528:
 23298                           
 23299                           ;Ds18b20.c: 189:   get[k]=OWReadByte();
 23300  003DAA  5035               	movf	Read_Temperature_DS18B20@k^0,w,c
 23301  003DAC  0F27               	addlw	low Read_Temperature_DS18B20@get
 23302  003DAE  6ED9               	movwf	fsr2l,c
 23303  003DB0  6ADA               	clrf	fsr2h,c
 23304  003DB2  ECFF  F026         	call	_OWReadByte	;wreg free
 23305  003DB6  500B               	movf	?_OWReadByte^0,w,c
 23306  003DB8  6EDF               	movwf	indf2,c
 23307  003DBA  4A35               	infsnz	Read_Temperature_DS18B20@k^0,f,c
 23308  003DBC  2A36               	incf	(Read_Temperature_DS18B20@k+1)^0,f,c
 23309  003DBE  BE36               	btfsc	(Read_Temperature_DS18B20@k+1)^0,7,c
 23310  003DC0  D7F4               	goto	i1l6528
 23311  003DC2  5036               	movf	(Read_Temperature_DS18B20@k+1)^0,w,c
 23312  003DC4  E104               	bnz	i1u798_20
 23313  003DC6  0E09               	movlw	9
 23314  003DC8  5C35               	subwf	Read_Temperature_DS18B20@k^0,w,c
 23315  003DCA  A0D8               	btfss	status,0,c
 23316  003DCC  D7EE               	goto	i1l6528
 23317  003DCE                     i1u798_20:
 23318                           
 23319                           ;Ds18b20.c: 191:  temp = get[1] & 0x7;
 23320  003DCE  C028  F023         	movff	Read_Temperature_DS18B20@get+1,??_Read_Temperature_DS18B20
 23321  003DD2  0E07               	movlw	7
 23322  003DD4  1623               	andwf	??_Read_Temperature_DS18B20^0,f,c
 23323  003DD6  5023               	movf	??_Read_Temperature_DS18B20^0,w,c
 23324  003DD8  6E37               	movwf	Read_Temperature_DS18B20@temp^0,c
 23325  003DDA  6A38               	clrf	(Read_Temperature_DS18B20@temp+1)^0,c
 23326  003DDC  6A39               	clrf	(Read_Temperature_DS18B20@temp+2)^0,c
 23327  003DDE  6A3A               	clrf	(Read_Temperature_DS18B20@temp+3)^0,c
 23328                           
 23329                           ;Ds18b20.c: 192:  temp = temp << 8;
 23330  003DE0  C037  F024         	movff	Read_Temperature_DS18B20@temp,??_Read_Temperature_DS18B20+1
 23331  003DE4  C038  F025         	movff	Read_Temperature_DS18B20@temp+1,??_Read_Temperature_DS18B20+2
 23332  003DE8  C039  F026         	movff	Read_Temperature_DS18B20@temp+2,??_Read_Temperature_DS18B20+3
 23333  003DEC  6A23               	clrf	??_Read_Temperature_DS18B20^0,c
 23334  003DEE  C023  F037         	movff	??_Read_Temperature_DS18B20,Read_Temperature_DS18B20@temp
 23335  003DF2  C024  F038         	movff	??_Read_Temperature_DS18B20+1,Read_Temperature_DS18B20@temp+1
 23336  003DF6  C025  F039         	movff	??_Read_Temperature_DS18B20+2,Read_Temperature_DS18B20@temp+2
 23337  003DFA  C026  F03A         	movff	??_Read_Temperature_DS18B20+3,Read_Temperature_DS18B20@temp+3
 23338                           
 23339                           ;Ds18b20.c: 193:  temp = (temp | get[0]);
 23340  003DFE  5037               	movf	Read_Temperature_DS18B20@temp^0,w,c
 23341  003E00  1027               	iorwf	Read_Temperature_DS18B20@get^0,w,c
 23342  003E02  6E37               	movwf	Read_Temperature_DS18B20@temp^0,c
 23343  003E04  5038               	movf	(Read_Temperature_DS18B20@temp+1)^0,w,c
 23344  003E06  6E38               	movwf	(Read_Temperature_DS18B20@temp+1)^0,c
 23345  003E08  5039               	movf	(Read_Temperature_DS18B20@temp+2)^0,w,c
 23346  003E0A  6E39               	movwf	(Read_Temperature_DS18B20@temp+2)^0,c
 23347  003E0C  503A               	movf	(Read_Temperature_DS18B20@temp+3)^0,w,c
 23348  003E0E  6E3A               	movwf	(Read_Temperature_DS18B20@temp+3)^0,c
 23349                           
 23350                           ;Ds18b20.c: 195:  if (get[1] > 0x80)
 23351  003E10  0E80               	movlw	128
 23352  003E12  6428               	cpfsgt	(Read_Temperature_DS18B20@get+1)^0,c
 23353  003E14  D008               	goto	i1l6544
 23354                           
 23355                           ;Ds18b20.c: 196:   temp = temp * -1;
 23356  003E16  1E3A               	comf	(Read_Temperature_DS18B20@temp+3)^0,f,c
 23357  003E18  1E39               	comf	(Read_Temperature_DS18B20@temp+2)^0,f,c
 23358  003E1A  1E38               	comf	(Read_Temperature_DS18B20@temp+1)^0,f,c
 23359  003E1C  6C37               	negf	Read_Temperature_DS18B20@temp^0,c
 23360  003E1E  0E00               	movlw	0
 23361  003E20  2238               	addwfc	(Read_Temperature_DS18B20@temp+1)^0,f,c
 23362  003E22  2239               	addwfc	(Read_Temperature_DS18B20@temp+2)^0,f,c
 23363  003E24  223A               	addwfc	(Read_Temperature_DS18B20@temp+3)^0,f,c
 23364  003E26                     i1l6544:
 23365                           
 23366                           ;Ds18b20.c: 198:  ftemp = temp;
 23367  003E26  C037  F006         	movff	Read_Temperature_DS18B20@temp,i1___xxtofl@val
 23368  003E2A  C038  F007         	movff	Read_Temperature_DS18B20@temp+1,i1___xxtofl@val+1
 23369  003E2E  C039  F008         	movff	Read_Temperature_DS18B20@temp+2,i1___xxtofl@val+2
 23370  003E32  C03A  F009         	movff	Read_Temperature_DS18B20@temp+3,i1___xxtofl@val+3
 23371  003E36  0E01               	movlw	1
 23372  003E38  EC7D  F01B         	call	i1___xxtofl
 23373  003E3C  C006  F031         	movff	?i1___xxtofl,Read_Temperature_DS18B20@ftemp
 23374  003E40  C007  F032         	movff	?i1___xxtofl+1,Read_Temperature_DS18B20@ftemp+1
 23375  003E44  C008  F033         	movff	?i1___xxtofl+2,Read_Temperature_DS18B20@ftemp+2
 23376  003E48  C009  F034         	movff	?i1___xxtofl+3,Read_Temperature_DS18B20@ftemp+3
 23377                           
 23378                           ;Ds18b20.c: 199:     return (ftemp/16);
 23379  003E4C  C031  F006         	movff	Read_Temperature_DS18B20@ftemp,i1___fldiv@b
 23380  003E50  C032  F007         	movff	Read_Temperature_DS18B20@ftemp+1,i1___fldiv@b+1
 23381  003E54  C033  F008         	movff	Read_Temperature_DS18B20@ftemp+2,i1___fldiv@b+2
 23382  003E58  C034  F009         	movff	Read_Temperature_DS18B20@ftemp+3,i1___fldiv@b+3
 23383  003E5C  0E00               	movlw	0
 23384  003E5E  6E0A               	movwf	i1___fldiv@a^0,c
 23385  003E60  0E00               	movlw	0
 23386  003E62  6E0B               	movwf	(i1___fldiv@a+1)^0,c
 23387  003E64  0E80               	movlw	128
 23388  003E66  6E0C               	movwf	(i1___fldiv@a+2)^0,c
 23389  003E68  0E41               	movlw	65
 23390  003E6A  6E0D               	movwf	(i1___fldiv@a+3)^0,c
 23391  003E6C  EC9B  F015         	call	i1___fldiv	;wreg free
 23392  003E70  C006  F01F         	movff	?i1___fldiv,?_Read_Temperature_DS18B20
 23393  003E74  C007  F020         	movff	?i1___fldiv+1,?_Read_Temperature_DS18B20+1
 23394  003E78  C008  F021         	movff	?i1___fldiv+2,?_Read_Temperature_DS18B20+2
 23395  003E7C  C009  F022         	movff	?i1___fldiv+3,?_Read_Temperature_DS18B20+3
 23396  003E80  0012               	return		;funcret
 23397  003E82                     __end_of_Read_Temperature_DS18B20:
 23398                           	callstack 0
 23399                           
 23400 ;; *************** function i1___xxtofl *****************
 23401 ;; Defined at:
 23402 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\xxtofl.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  sign            1    wreg     unsigned char 
 23405 ;;  val             4    5[COMRAM] long 
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;  sign            1   13[COMRAM] unsigned char 
 23408 ;;  arg             4   15[COMRAM] unsigned long 
 23409 ;;  exp             1   14[COMRAM] unsigned char 
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  4    5[COMRAM] unsigned char 
 23412 ;; Registers used:
 23413 ;;		wreg, status,2, status,0
 23414 ;; Tracked objects:
 23415 ;;		On entry : 0/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23419 ;;      Params:         4       0       0       0       0       0       0       0       0
 23420 ;;      Locals:         6       0       0       0       0       0       0       0       0
 23421 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23422 ;;      Totals:        14       0       0       0       0       0       0       0       0
 23423 ;;Total ram usage:       14 bytes
 23424 ;; Hardware stack levels used:    1
 23425 ;; Hardware stack levels required when called:    2
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_Read_Temperature_DS18B20
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text64
 23434  0036FA                     __ptext64:
 23435                           	callstack 0
 23436  0036FA                     i1___xxtofl:
 23437                           	callstack 16
 23438                           
 23439                           ;incstack = 0
 23440                           ;i1___xxtofl@sign stored from wreg
 23441  0036FA  6E0E               	movwf	i1___xxtofl@sign^0,c
 23442  0036FC  500E               	movf	i1___xxtofl@sign^0,w,c
 23443  0036FE  A4D8               	btfss	status,2,c
 23444  003700  AE09               	btfss	(i1___xxtofl@val+3)^0,7,c
 23445  003702  D01A               	goto	i1l1275
 23446  003704  C006  F00A         	movff	i1___xxtofl@val,??i1___xxtofl
 23447  003708  C007  F00B         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 23448  00370C  C008  F00C         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 23449  003710  C009  F00D         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 23450  003714  1E0A               	comf	??i1___xxtofl^0,f,c
 23451  003716  1E0B               	comf	(??i1___xxtofl+1)^0,f,c
 23452  003718  1E0C               	comf	(??i1___xxtofl+2)^0,f,c
 23453  00371A  1E0D               	comf	(??i1___xxtofl+3)^0,f,c
 23454  00371C  2A0A               	incf	??i1___xxtofl^0,f,c
 23455  00371E  0E00               	movlw	0
 23456  003720  220B               	addwfc	(??i1___xxtofl+1)^0,f,c
 23457  003722  220C               	addwfc	(??i1___xxtofl+2)^0,f,c
 23458  003724  220D               	addwfc	(??i1___xxtofl+3)^0,f,c
 23459  003726  C00A  F010         	movff	??i1___xxtofl,i1___xxtofl@arg
 23460  00372A  C00B  F011         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 23461  00372E  C00C  F012         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 23462  003732  C00D  F013         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 23463  003736  D008               	goto	i1l6384
 23464  003738                     i1l1275:
 23465  003738  C006  F010         	movff	i1___xxtofl@val,i1___xxtofl@arg
 23466  00373C  C007  F011         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 23467  003740  C008  F012         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 23468  003744  C009  F013         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 23469  003748                     i1l6384:
 23470  003748  5006               	movf	i1___xxtofl@val^0,w,c
 23471  00374A  1007               	iorwf	(i1___xxtofl@val+1)^0,w,c
 23472  00374C  1008               	iorwf	(i1___xxtofl@val+2)^0,w,c
 23473  00374E  1009               	iorwf	(i1___xxtofl@val+3)^0,w,c
 23474  003750  A4D8               	btfss	status,2,c
 23475  003752  D009               	goto	i1l6390
 23476  003754  0E00               	movlw	0
 23477  003756  6E06               	movwf	?i1___xxtofl^0,c
 23478  003758  0E00               	movlw	0
 23479  00375A  6E07               	movwf	(?i1___xxtofl+1)^0,c
 23480  00375C  0E00               	movlw	0
 23481  00375E  6E08               	movwf	(?i1___xxtofl+2)^0,c
 23482  003760  0E00               	movlw	0
 23483  003762  6E09               	movwf	(?i1___xxtofl+3)^0,c
 23484  003764  0012               	return	
 23485  003766                     i1l6390:
 23486  003766  0E96               	movlw	150
 23487  003768  6E0F               	movwf	i1___xxtofl@exp^0,c
 23488  00376A  D006               	goto	i1l6394
 23489  00376C                     i1l6392:
 23490  00376C  2A0F               	incf	i1___xxtofl@exp^0,f,c
 23491  00376E  90D8               	bcf	status,0,c
 23492  003770  3213               	rrcf	(i1___xxtofl@arg+3)^0,f,c
 23493  003772  3212               	rrcf	(i1___xxtofl@arg+2)^0,f,c
 23494  003774  3211               	rrcf	(i1___xxtofl@arg+1)^0,f,c
 23495  003776  3210               	rrcf	i1___xxtofl@arg^0,f,c
 23496  003778                     i1l6394:
 23497  003778  0E00               	movlw	0
 23498  00377A  1410               	andwf	i1___xxtofl@arg^0,w,c
 23499  00377C  6E0A               	movwf	??i1___xxtofl^0,c
 23500  00377E  0E00               	movlw	0
 23501  003780  1411               	andwf	(i1___xxtofl@arg+1)^0,w,c
 23502  003782  6E0B               	movwf	(??i1___xxtofl+1)^0,c
 23503  003784  0E00               	movlw	0
 23504  003786  1412               	andwf	(i1___xxtofl@arg+2)^0,w,c
 23505  003788  6E0C               	movwf	(??i1___xxtofl+2)^0,c
 23506  00378A  0EFE               	movlw	254
 23507  00378C  1413               	andwf	(i1___xxtofl@arg+3)^0,w,c
 23508  00378E  6E0D               	movwf	(??i1___xxtofl+3)^0,c
 23509  003790  500A               	movf	??i1___xxtofl^0,w,c
 23510  003792  100B               	iorwf	(??i1___xxtofl+1)^0,w,c
 23511  003794  100C               	iorwf	(??i1___xxtofl+2)^0,w,c
 23512  003796  100D               	iorwf	(??i1___xxtofl+3)^0,w,c
 23513  003798  B4D8               	btfsc	status,2,c
 23514  00379A  D00D               	goto	i1l1282
 23515  00379C  D7E7               	goto	i1l6392
 23516  00379E                     i1l6396:
 23517  00379E  2A0F               	incf	i1___xxtofl@exp^0,f,c
 23518  0037A0  0E01               	movlw	1
 23519  0037A2  2610               	addwf	i1___xxtofl@arg^0,f,c
 23520  0037A4  0E00               	movlw	0
 23521  0037A6  2211               	addwfc	(i1___xxtofl@arg+1)^0,f,c
 23522  0037A8  2212               	addwfc	(i1___xxtofl@arg+2)^0,f,c
 23523  0037AA  2213               	addwfc	(i1___xxtofl@arg+3)^0,f,c
 23524  0037AC  90D8               	bcf	status,0,c
 23525  0037AE  3213               	rrcf	(i1___xxtofl@arg+3)^0,f,c
 23526  0037B0  3212               	rrcf	(i1___xxtofl@arg+2)^0,f,c
 23527  0037B2  3211               	rrcf	(i1___xxtofl@arg+1)^0,f,c
 23528  0037B4  3210               	rrcf	i1___xxtofl@arg^0,f,c
 23529  0037B6                     i1l1282:
 23530  0037B6  0E00               	movlw	0
 23531  0037B8  1410               	andwf	i1___xxtofl@arg^0,w,c
 23532  0037BA  6E0A               	movwf	??i1___xxtofl^0,c
 23533  0037BC  0E00               	movlw	0
 23534  0037BE  1411               	andwf	(i1___xxtofl@arg+1)^0,w,c
 23535  0037C0  6E0B               	movwf	(??i1___xxtofl+1)^0,c
 23536  0037C2  0E00               	movlw	0
 23537  0037C4  1412               	andwf	(i1___xxtofl@arg+2)^0,w,c
 23538  0037C6  6E0C               	movwf	(??i1___xxtofl+2)^0,c
 23539  0037C8  0EFF               	movlw	255
 23540  0037CA  1413               	andwf	(i1___xxtofl@arg+3)^0,w,c
 23541  0037CC  6E0D               	movwf	(??i1___xxtofl+3)^0,c
 23542  0037CE  500A               	movf	??i1___xxtofl^0,w,c
 23543  0037D0  100B               	iorwf	(??i1___xxtofl+1)^0,w,c
 23544  0037D2  100C               	iorwf	(??i1___xxtofl+2)^0,w,c
 23545  0037D4  100D               	iorwf	(??i1___xxtofl+3)^0,w,c
 23546  0037D6  B4D8               	btfsc	status,2,c
 23547  0037D8  D007               	goto	i1l6404
 23548  0037DA  D7E1               	goto	i1l6396
 23549  0037DC                     i1l6402:
 23550  0037DC  060F               	decf	i1___xxtofl@exp^0,f,c
 23551  0037DE  90D8               	bcf	status,0,c
 23552  0037E0  3610               	rlcf	i1___xxtofl@arg^0,f,c
 23553  0037E2  3611               	rlcf	(i1___xxtofl@arg+1)^0,f,c
 23554  0037E4  3612               	rlcf	(i1___xxtofl@arg+2)^0,f,c
 23555  0037E6  3613               	rlcf	(i1___xxtofl@arg+3)^0,f,c
 23556  0037E8                     i1l6404:
 23557  0037E8  BE12               	btfsc	(i1___xxtofl@arg+2)^0,7,c
 23558  0037EA  D003               	goto	i1u780_20
 23559  0037EC  0E02               	movlw	2
 23560  0037EE  600F               	cpfslt	i1___xxtofl@exp^0,c
 23561  0037F0  D7F5               	goto	i1l6402
 23562  0037F2                     i1u780_20:
 23563  0037F2  A00F               	btfss	i1___xxtofl@exp^0,0,c
 23564  0037F4  9E12               	bcf	(i1___xxtofl@arg+2)^0,7,c
 23565  0037F6  90D8               	bcf	status,0,c
 23566  0037F8  320F               	rrcf	i1___xxtofl@exp^0,f,c
 23567  0037FA  C00F  F00A         	movff	i1___xxtofl@exp,??i1___xxtofl
 23568  0037FE  6A0B               	clrf	(??i1___xxtofl+1)^0,c
 23569  003800  6A0C               	clrf	(??i1___xxtofl+2)^0,c
 23570  003802  6A0D               	clrf	(??i1___xxtofl+3)^0,c
 23571  003804  C00A  F00D         	movff	??i1___xxtofl,??i1___xxtofl+3
 23572  003808  6A0C               	clrf	(??i1___xxtofl+2)^0,c
 23573  00380A  6A0B               	clrf	(??i1___xxtofl+1)^0,c
 23574  00380C  6A0A               	clrf	??i1___xxtofl^0,c
 23575  00380E  500A               	movf	??i1___xxtofl^0,w,c
 23576  003810  1210               	iorwf	i1___xxtofl@arg^0,f,c
 23577  003812  500B               	movf	(??i1___xxtofl+1)^0,w,c
 23578  003814  1211               	iorwf	(i1___xxtofl@arg+1)^0,f,c
 23579  003816  500C               	movf	(??i1___xxtofl+2)^0,w,c
 23580  003818  1212               	iorwf	(i1___xxtofl@arg+2)^0,f,c
 23581  00381A  500D               	movf	(??i1___xxtofl+3)^0,w,c
 23582  00381C  1213               	iorwf	(i1___xxtofl@arg+3)^0,f,c
 23583  00381E  500E               	movf	i1___xxtofl@sign^0,w,c
 23584  003820  A4D8               	btfss	status,2,c
 23585  003822  AE09               	btfss	(i1___xxtofl@val+3)^0,7,c
 23586  003824  D001               	goto	i1l6420
 23587  003826  8E13               	bsf	(i1___xxtofl@arg+3)^0,7,c
 23588  003828                     i1l6420:
 23589  003828  C010  F006         	movff	i1___xxtofl@arg,?i1___xxtofl
 23590  00382C  C011  F007         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 23591  003830  C012  F008         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 23592  003834  C013  F009         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 23593  003838  0012               	return		;funcret
 23594  00383A                     __end_ofi1___xxtofl:
 23595                           	callstack 0
 23596                           
 23597 ;; *************** function i1___fldiv *****************
 23598 ;; Defined at:
 23599 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c99\common\sprcdiv.c"
 23600 ;; Parameters:    Size  Location     Type
 23601 ;;  b               4    5[COMRAM] unsigned char 
 23602 ;;  a               4    9[COMRAM] unsigned char 
 23603 ;; Auto vars:     Size  Location     Type
 23604 ;;  grs             4   24[COMRAM] unsigned long 
 23605 ;;  rem             4   17[COMRAM] unsigned long 
 23606 ;;  new_exp         2   22[COMRAM] short 
 23607 ;;  aexp            1   29[COMRAM] unsigned char 
 23608 ;;  bexp            1   28[COMRAM] unsigned char 
 23609 ;;  sign            1   21[COMRAM] unsigned char 
 23610 ;; Return value:  Size  Location     Type
 23611 ;;                  4    5[COMRAM] unsigned char 
 23612 ;; Registers used:
 23613 ;;		wreg, status,2, status,0
 23614 ;; Tracked objects:
 23615 ;;		On entry : 0/0
 23616 ;;		On exit  : 0/0
 23617 ;;		Unchanged: 0/0
 23618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23619 ;;      Params:         8       0       0       0       0       0       0       0       0
 23620 ;;      Locals:        13       0       0       0       0       0       0       0       0
 23621 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23622 ;;      Totals:        25       0       0       0       0       0       0       0       0
 23623 ;;Total ram usage:       25 bytes
 23624 ;; Hardware stack levels used:    1
 23625 ;; Hardware stack levels required when called:    2
 23626 ;; This function calls:
 23627 ;;		Nothing
 23628 ;; This function is called by:
 23629 ;;		_Read_Temperature_DS18B20
 23630 ;; This function uses a non-reentrant model
 23631 ;;
 23632                           
 23633                           	psect	text65
 23634  002B36                     __ptext65:
 23635                           	callstack 0
 23636  002B36                     i1___fldiv:
 23637                           	callstack 16
 23638                           
 23639                           ;incstack = 0
 23640  002B36  5009               	movf	(i1___fldiv@b+3)^0,w,c
 23641  002B38  0B80               	andlw	128
 23642  002B3A  6E16               	movwf	i1___fldiv@sign^0,c
 23643  002B3C  5009               	movf	(i1___fldiv@b+3)^0,w,c
 23644  002B3E  2409               	addwf	(i1___fldiv@b+3)^0,w,c
 23645  002B40  6E1D               	movwf	i1___fldiv@bexp^0,c
 23646  002B42  BE08               	btfsc	(i1___fldiv@b+2)^0,7,c
 23647  002B44  801D               	bsf	i1___fldiv@bexp^0,0,c
 23648  002B46  501D               	movf	i1___fldiv@bexp^0,w,c
 23649  002B48  B4D8               	btfsc	status,2,c
 23650  002B4A  D00D               	goto	i1l6256
 23651  002B4C  281D               	incf	i1___fldiv@bexp^0,w,c
 23652  002B4E  A4D8               	btfss	status,2,c
 23653  002B50  D008               	goto	i1l6252
 23654  002B52  0E00               	movlw	0
 23655  002B54  6E06               	movwf	i1___fldiv@b^0,c
 23656  002B56  0E00               	movlw	0
 23657  002B58  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23658  002B5A  0E00               	movlw	0
 23659  002B5C  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23660  002B5E  0E00               	movlw	0
 23661  002B60  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23662  002B62                     i1l6252:
 23663  002B62  8E08               	bsf	(i1___fldiv@b+2)^0,7,c
 23664  002B64  D006               	goto	L15
 23665  002B66                     i1l6256:
 23666  002B66  0E00               	movlw	0
 23667  002B68  6E06               	movwf	i1___fldiv@b^0,c
 23668  002B6A  0E00               	movlw	0
 23669  002B6C  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23670  002B6E  0E00               	movlw	0
 23671  002B70  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23672  002B72                     L15:
 23673  002B72  0E00               	movlw	0
 23674  002B74  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23675  002B76  500D               	movf	(i1___fldiv@a+3)^0,w,c
 23676  002B78  0B80               	andlw	128
 23677  002B7A  1A16               	xorwf	i1___fldiv@sign^0,f,c
 23678  002B7C  500D               	movf	(i1___fldiv@a+3)^0,w,c
 23679  002B7E  240D               	addwf	(i1___fldiv@a+3)^0,w,c
 23680  002B80  6E1E               	movwf	i1___fldiv@aexp^0,c
 23681  002B82  BE0C               	btfsc	(i1___fldiv@a+2)^0,7,c
 23682  002B84  801E               	bsf	i1___fldiv@aexp^0,0,c
 23683  002B86  501E               	movf	i1___fldiv@aexp^0,w,c
 23684  002B88  B4D8               	btfsc	status,2,c
 23685  002B8A  D00D               	goto	i1l6276
 23686  002B8C  281E               	incf	i1___fldiv@aexp^0,w,c
 23687  002B8E  A4D8               	btfss	status,2,c
 23688  002B90  D008               	goto	i1l6272
 23689  002B92  0E00               	movlw	0
 23690  002B94  6E0A               	movwf	i1___fldiv@a^0,c
 23691  002B96  0E00               	movlw	0
 23692  002B98  6E0B               	movwf	(i1___fldiv@a+1)^0,c
 23693  002B9A  0E00               	movlw	0
 23694  002B9C  6E0C               	movwf	(i1___fldiv@a+2)^0,c
 23695  002B9E  0E00               	movlw	0
 23696  002BA0  6E0D               	movwf	(i1___fldiv@a+3)^0,c
 23697  002BA2                     i1l6272:
 23698  002BA2  8E0C               	bsf	(i1___fldiv@a+2)^0,7,c
 23699  002BA4  D006               	goto	L16
 23700  002BA6                     i1l6276:
 23701  002BA6  0E00               	movlw	0
 23702  002BA8  6E0A               	movwf	i1___fldiv@a^0,c
 23703  002BAA  0E00               	movlw	0
 23704  002BAC  6E0B               	movwf	(i1___fldiv@a+1)^0,c
 23705  002BAE  0E00               	movlw	0
 23706  002BB0  6E0C               	movwf	(i1___fldiv@a+2)^0,c
 23707  002BB2                     L16:
 23708  002BB2  0E00               	movlw	0
 23709  002BB4  6E0D               	movwf	(i1___fldiv@a+3)^0,c
 23710  002BB6  500A               	movf	i1___fldiv@a^0,w,c
 23711  002BB8  100B               	iorwf	(i1___fldiv@a+1)^0,w,c
 23712  002BBA  100C               	iorwf	(i1___fldiv@a+2)^0,w,c
 23713  002BBC  100D               	iorwf	(i1___fldiv@a+3)^0,w,c
 23714  002BBE  A4D8               	btfss	status,2,c
 23715  002BC0  D017               	goto	i1l6290
 23716  002BC2  0E00               	movlw	0
 23717  002BC4  6E06               	movwf	i1___fldiv@b^0,c
 23718  002BC6  0E00               	movlw	0
 23719  002BC8  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23720  002BCA  0E00               	movlw	0
 23721  002BCC  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23722  002BCE  0E00               	movlw	0
 23723  002BD0  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23724  002BD2  0E80               	movlw	128
 23725  002BD4  1208               	iorwf	(i1___fldiv@b+2)^0,f,c
 23726  002BD6  0E7F               	movlw	127
 23727  002BD8  1209               	iorwf	(i1___fldiv@b+3)^0,f,c
 23728  002BDA                     i1l6284:
 23729  002BDA  5016               	movf	i1___fldiv@sign^0,w,c
 23730  002BDC  1209               	iorwf	(i1___fldiv@b+3)^0,f,c
 23731  002BDE  C006  F006         	movff	i1___fldiv@b,?i1___fldiv
 23732  002BE2  C007  F007         	movff	i1___fldiv@b+1,?i1___fldiv+1
 23733  002BE6  C008  F008         	movff	i1___fldiv@b+2,?i1___fldiv+2
 23734  002BEA  C009  F009         	movff	i1___fldiv@b+3,?i1___fldiv+3
 23735  002BEE  0012               	return	
 23736  002BF0                     i1l6290:
 23737  002BF0  501D               	movf	i1___fldiv@bexp^0,w,c
 23738  002BF2  A4D8               	btfss	status,2,c
 23739  002BF4  D009               	goto	i1l6298
 23740  002BF6  0E00               	movlw	0
 23741  002BF8  6E06               	movwf	?i1___fldiv^0,c
 23742  002BFA  0E00               	movlw	0
 23743  002BFC  6E07               	movwf	(?i1___fldiv+1)^0,c
 23744  002BFE  0E00               	movlw	0
 23745  002C00  6E08               	movwf	(?i1___fldiv+2)^0,c
 23746  002C02  0E00               	movlw	0
 23747  002C04  6E09               	movwf	(?i1___fldiv+3)^0,c
 23748  002C06  0012               	return	
 23749  002C08                     i1l6298:
 23750  002C08  501E               	movf	i1___fldiv@aexp^0,w,c
 23751  002C0A  C01D  F00E         	movff	i1___fldiv@bexp,??i1___fldiv
 23752  002C0E  6A0F               	clrf	(??i1___fldiv+1)^0,c
 23753  002C10  5E0E               	subwf	??i1___fldiv^0,f,c
 23754  002C12  0E00               	movlw	0
 23755  002C14  5A0F               	subwfb	(??i1___fldiv+1)^0,f,c
 23756  002C16  0E7F               	movlw	127
 23757  002C18  240E               	addwf	??i1___fldiv^0,w,c
 23758  002C1A  6E17               	movwf	i1___fldiv@new_exp^0,c
 23759  002C1C  0E00               	movlw	0
 23760  002C1E  200F               	addwfc	(??i1___fldiv+1)^0,w,c
 23761  002C20  6E18               	movwf	(i1___fldiv@new_exp+1)^0,c
 23762  002C22  C006  F012         	movff	i1___fldiv@b,i1___fldiv@rem
 23763  002C26  C007  F013         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 23764  002C2A  C008  F014         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 23765  002C2E  C009  F015         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 23766  002C32  0E00               	movlw	0
 23767  002C34  6E06               	movwf	i1___fldiv@b^0,c
 23768  002C36  0E00               	movlw	0
 23769  002C38  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23770  002C3A  0E00               	movlw	0
 23771  002C3C  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23772  002C3E  0E00               	movlw	0
 23773  002C40  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23774  002C42  0E00               	movlw	0
 23775  002C44  6E19               	movwf	i1___fldiv@grs^0,c
 23776  002C46  0E00               	movlw	0
 23777  002C48  6E1A               	movwf	(i1___fldiv@grs+1)^0,c
 23778  002C4A  0E00               	movlw	0
 23779  002C4C  6E1B               	movwf	(i1___fldiv@grs+2)^0,c
 23780  002C4E  0E00               	movlw	0
 23781  002C50  6E1C               	movwf	(i1___fldiv@grs+3)^0,c
 23782  002C52  0E00               	movlw	0
 23783  002C54  6E1E               	movwf	i1___fldiv@aexp^0,c
 23784  002C56  D028               	goto	i1l1204
 23785  002C58                     i1l6308:
 23786  002C58  501E               	movf	i1___fldiv@aexp^0,w,c
 23787  002C5A  B4D8               	btfsc	status,2,c
 23788  002C5C  D011               	goto	i1l6316
 23789  002C5E  90D8               	bcf	status,0,c
 23790  002C60  3612               	rlcf	i1___fldiv@rem^0,f,c
 23791  002C62  3613               	rlcf	(i1___fldiv@rem+1)^0,f,c
 23792  002C64  3614               	rlcf	(i1___fldiv@rem+2)^0,f,c
 23793  002C66  3615               	rlcf	(i1___fldiv@rem+3)^0,f,c
 23794  002C68  90D8               	bcf	status,0,c
 23795  002C6A  3606               	rlcf	i1___fldiv@b^0,f,c
 23796  002C6C  3607               	rlcf	(i1___fldiv@b+1)^0,f,c
 23797  002C6E  3608               	rlcf	(i1___fldiv@b+2)^0,f,c
 23798  002C70  3609               	rlcf	(i1___fldiv@b+3)^0,f,c
 23799  002C72  BE1C               	btfsc	(i1___fldiv@grs+3)^0,7,c
 23800  002C74  8006               	bsf	i1___fldiv@b^0,0,c
 23801  002C76  90D8               	bcf	status,0,c
 23802  002C78  3619               	rlcf	i1___fldiv@grs^0,f,c
 23803  002C7A  361A               	rlcf	(i1___fldiv@grs+1)^0,f,c
 23804  002C7C  361B               	rlcf	(i1___fldiv@grs+2)^0,f,c
 23805  002C7E  361C               	rlcf	(i1___fldiv@grs+3)^0,f,c
 23806  002C80                     i1l6316:
 23807  002C80  500A               	movf	i1___fldiv@a^0,w,c
 23808  002C82  5C12               	subwf	i1___fldiv@rem^0,w,c
 23809  002C84  500B               	movf	(i1___fldiv@a+1)^0,w,c
 23810  002C86  5813               	subwfb	(i1___fldiv@rem+1)^0,w,c
 23811  002C88  500C               	movf	(i1___fldiv@a+2)^0,w,c
 23812  002C8A  5814               	subwfb	(i1___fldiv@rem+2)^0,w,c
 23813  002C8C  500D               	movf	(i1___fldiv@a+3)^0,w,c
 23814  002C8E  5815               	subwfb	(i1___fldiv@rem+3)^0,w,c
 23815  002C90  A0D8               	btfss	status,0,c
 23816  002C92  D009               	goto	i1l6322
 23817  002C94  8C1C               	bsf	(i1___fldiv@grs+3)^0,6,c
 23818  002C96  500A               	movf	i1___fldiv@a^0,w,c
 23819  002C98  5E12               	subwf	i1___fldiv@rem^0,f,c
 23820  002C9A  500B               	movf	(i1___fldiv@a+1)^0,w,c
 23821  002C9C  5A13               	subwfb	(i1___fldiv@rem+1)^0,f,c
 23822  002C9E  500C               	movf	(i1___fldiv@a+2)^0,w,c
 23823  002CA0  5A14               	subwfb	(i1___fldiv@rem+2)^0,f,c
 23824  002CA2  500D               	movf	(i1___fldiv@a+3)^0,w,c
 23825  002CA4  5A15               	subwfb	(i1___fldiv@rem+3)^0,f,c
 23826  002CA6                     i1l6322:
 23827  002CA6  2A1E               	incf	i1___fldiv@aexp^0,f,c
 23828  002CA8                     i1l1204:
 23829  002CA8  0E19               	movlw	25
 23830  002CAA  641E               	cpfsgt	i1___fldiv@aexp^0,c
 23831  002CAC  D7D5               	goto	i1l6308
 23832  002CAE  5012               	movf	i1___fldiv@rem^0,w,c
 23833  002CB0  1013               	iorwf	(i1___fldiv@rem+1)^0,w,c
 23834  002CB2  1014               	iorwf	(i1___fldiv@rem+2)^0,w,c
 23835  002CB4  1015               	iorwf	(i1___fldiv@rem+3)^0,w,c
 23836  002CB6  B4D8               	btfsc	status,2,c
 23837  002CB8  D011               	goto	i1l6334
 23838  002CBA  8019               	bsf	i1___fldiv@grs^0,0,c
 23839  002CBC  D00F               	goto	i1l6334
 23840  002CBE                     i1l6328:
 23841  002CBE  90D8               	bcf	status,0,c
 23842  002CC0  3606               	rlcf	i1___fldiv@b^0,f,c
 23843  002CC2  3607               	rlcf	(i1___fldiv@b+1)^0,f,c
 23844  002CC4  3608               	rlcf	(i1___fldiv@b+2)^0,f,c
 23845  002CC6  3609               	rlcf	(i1___fldiv@b+3)^0,f,c
 23846  002CC8  BE1C               	btfsc	(i1___fldiv@grs+3)^0,7,c
 23847  002CCA  8006               	bsf	i1___fldiv@b^0,0,c
 23848  002CCC  90D8               	bcf	status,0,c
 23849  002CCE  3619               	rlcf	i1___fldiv@grs^0,f,c
 23850  002CD0  361A               	rlcf	(i1___fldiv@grs+1)^0,f,c
 23851  002CD2  361B               	rlcf	(i1___fldiv@grs+2)^0,f,c
 23852  002CD4  361C               	rlcf	(i1___fldiv@grs+3)^0,f,c
 23853  002CD6  0617               	decf	i1___fldiv@new_exp^0,f,c
 23854  002CD8  A0D8               	btfss	status,0,c
 23855  002CDA  0618               	decf	(i1___fldiv@new_exp+1)^0,f,c
 23856  002CDC                     i1l6334:
 23857  002CDC  AE08               	btfss	(i1___fldiv@b+2)^0,7,c
 23858  002CDE  D7EF               	goto	i1l6328
 23859  002CE0  0E00               	movlw	0
 23860  002CE2  6E1E               	movwf	i1___fldiv@aexp^0,c
 23861  002CE4  AE1C               	btfss	(i1___fldiv@grs+3)^0,7,c
 23862  002CE6  D017               	goto	i1l1215
 23863  002CE8  0EFF               	movlw	255
 23864  002CEA  1419               	andwf	i1___fldiv@grs^0,w,c
 23865  002CEC  6E0E               	movwf	??i1___fldiv^0,c
 23866  002CEE  0EFF               	movlw	255
 23867  002CF0  141A               	andwf	(i1___fldiv@grs+1)^0,w,c
 23868  002CF2  6E0F               	movwf	(??i1___fldiv+1)^0,c
 23869  002CF4  0EFF               	movlw	255
 23870  002CF6  141B               	andwf	(i1___fldiv@grs+2)^0,w,c
 23871  002CF8  6E10               	movwf	(??i1___fldiv+2)^0,c
 23872  002CFA  0E7F               	movlw	127
 23873  002CFC  141C               	andwf	(i1___fldiv@grs+3)^0,w,c
 23874  002CFE  6E11               	movwf	(??i1___fldiv+3)^0,c
 23875  002D00  500E               	movf	??i1___fldiv^0,w,c
 23876  002D02  100F               	iorwf	(??i1___fldiv+1)^0,w,c
 23877  002D04  1010               	iorwf	(??i1___fldiv+2)^0,w,c
 23878  002D06  1011               	iorwf	(??i1___fldiv+3)^0,w,c
 23879  002D08  B4D8               	btfsc	status,2,c
 23880  002D0A  D003               	goto	i1l1216
 23881  002D0C                     i1u767_20:
 23882  002D0C  0E01               	movlw	1
 23883  002D0E  6E1E               	movwf	i1___fldiv@aexp^0,c
 23884  002D10  D002               	goto	i1l1215
 23885  002D12                     i1l1216:
 23886  002D12  B006               	btfsc	i1___fldiv@b^0,0,c
 23887  002D14  D7FB               	goto	i1u767_20
 23888  002D16                     i1l1215:
 23889  002D16  501E               	movf	i1___fldiv@aexp^0,w,c
 23890  002D18  B4D8               	btfsc	status,2,c
 23891  002D1A  D01F               	goto	i1l6354
 23892  002D1C  0E01               	movlw	1
 23893  002D1E  2606               	addwf	i1___fldiv@b^0,f,c
 23894  002D20  0E00               	movlw	0
 23895  002D22  2207               	addwfc	(i1___fldiv@b+1)^0,f,c
 23896  002D24  2208               	addwfc	(i1___fldiv@b+2)^0,f,c
 23897  002D26  2209               	addwfc	(i1___fldiv@b+3)^0,f,c
 23898  002D28  A009               	btfss	(i1___fldiv@b+3)^0,0,c
 23899  002D2A  D017               	goto	i1l6354
 23900  002D2C  C006  F00E         	movff	i1___fldiv@b,??i1___fldiv
 23901  002D30  C007  F00F         	movff	i1___fldiv@b+1,??i1___fldiv+1
 23902  002D34  C008  F010         	movff	i1___fldiv@b+2,??i1___fldiv+2
 23903  002D38  C009  F011         	movff	i1___fldiv@b+3,??i1___fldiv+3
 23904  002D3C  3411               	rlcf	(??i1___fldiv+3)^0,w,c
 23905  002D3E  3211               	rrcf	(??i1___fldiv+3)^0,f,c
 23906  002D40  3210               	rrcf	(??i1___fldiv+2)^0,f,c
 23907  002D42  320F               	rrcf	(??i1___fldiv+1)^0,f,c
 23908  002D44  320E               	rrcf	??i1___fldiv^0,f,c
 23909  002D46  C00E  F006         	movff	??i1___fldiv,i1___fldiv@b
 23910  002D4A  C00F  F007         	movff	??i1___fldiv+1,i1___fldiv@b+1
 23911  002D4E  C010  F008         	movff	??i1___fldiv+2,i1___fldiv@b+2
 23912  002D52  C011  F009         	movff	??i1___fldiv+3,i1___fldiv@b+3
 23913  002D56  4A17               	infsnz	i1___fldiv@new_exp^0,f,c
 23914  002D58  2A18               	incf	(i1___fldiv@new_exp+1)^0,f,c
 23915  002D5A                     i1l6354:
 23916  002D5A  BE18               	btfsc	(i1___fldiv@new_exp+1)^0,7,c
 23917  002D5C  D010               	goto	i1l6358
 23918  002D5E  5018               	movf	(i1___fldiv@new_exp+1)^0,w,c
 23919  002D60  E103               	bnz	i1u771_20
 23920  002D62  2817               	incf	i1___fldiv@new_exp^0,w,c
 23921  002D64  A0D8               	btfss	status,0,c
 23922  002D66  D00B               	goto	i1l6358
 23923  002D68                     i1u771_20:
 23924  002D68  0E00               	movlw	0
 23925  002D6A  6E18               	movwf	(i1___fldiv@new_exp+1)^0,c
 23926  002D6C  6817               	setf	i1___fldiv@new_exp^0,c
 23927  002D6E  0E00               	movlw	0
 23928  002D70  6E06               	movwf	i1___fldiv@b^0,c
 23929  002D72  0E00               	movlw	0
 23930  002D74  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23931  002D76  0E00               	movlw	0
 23932  002D78  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23933  002D7A  0E00               	movlw	0
 23934  002D7C  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23935  002D7E                     i1l6358:
 23936  002D7E  BE18               	btfsc	(i1___fldiv@new_exp+1)^0,7,c
 23937  002D80  D005               	goto	i1u772_20
 23938  002D82  5018               	movf	(i1___fldiv@new_exp+1)^0,w,c
 23939  002D84  E111               	bnz	i1l6362
 23940  002D86  0417               	decf	i1___fldiv@new_exp^0,w,c
 23941  002D88  B0D8               	btfsc	status,0,c
 23942  002D8A  D00E               	goto	i1l6362
 23943  002D8C                     i1u772_20:
 23944  002D8C  0E00               	movlw	0
 23945  002D8E  6E18               	movwf	(i1___fldiv@new_exp+1)^0,c
 23946  002D90  0E00               	movlw	0
 23947  002D92  6E17               	movwf	i1___fldiv@new_exp^0,c
 23948  002D94  0E00               	movlw	0
 23949  002D96  6E06               	movwf	i1___fldiv@b^0,c
 23950  002D98  0E00               	movlw	0
 23951  002D9A  6E07               	movwf	(i1___fldiv@b+1)^0,c
 23952  002D9C  0E00               	movlw	0
 23953  002D9E  6E08               	movwf	(i1___fldiv@b+2)^0,c
 23954  002DA0  0E00               	movlw	0
 23955  002DA2  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23956  002DA4  0E00               	movlw	0
 23957  002DA6  6E16               	movwf	i1___fldiv@sign^0,c
 23958  002DA8                     i1l6362:
 23959  002DA8  C017  F01D         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 23960  002DAC  A01D               	btfss	i1___fldiv@bexp^0,0,c
 23961  002DAE  D002               	goto	i1l6368
 23962  002DB0  8E08               	bsf	(i1___fldiv@b+2)^0,7,c
 23963  002DB2  D001               	goto	i1l6370
 23964  002DB4                     i1l6368:
 23965  002DB4  9E08               	bcf	(i1___fldiv@b+2)^0,7,c
 23966  002DB6                     i1l6370:
 23967  002DB6  90D8               	bcf	status,0,c
 23968  002DB8  301D               	rrcf	i1___fldiv@bexp^0,w,c
 23969  002DBA  6E09               	movwf	(i1___fldiv@b+3)^0,c
 23970  002DBC  D70E               	goto	i1l6284
 23971  002DBE                     __end_ofi1___fldiv:
 23972                           	callstack 0
 23973                           
 23974 ;; *************** function _OWReadByte *****************
 23975 ;; Defined at:
 23976 ;;		line 93 in file "Ds18b20.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;		None
 23979 ;; Auto vars:     Size  Location     Type
 23980 ;;  loop            2   14[COMRAM] int 
 23981 ;;  result          2   12[COMRAM] int 
 23982 ;; Return value:  Size  Location     Type
 23983 ;;                  2   10[COMRAM] int 
 23984 ;; Registers used:
 23985 ;;		wreg, status,2, status,0, cstack
 23986 ;; Tracked objects:
 23987 ;;		On entry : 0/0
 23988 ;;		On exit  : 0/0
 23989 ;;		Unchanged: 0/0
 23990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23991 ;;      Params:         2       0       0       0       0       0       0       0       0
 23992 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23993 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23994 ;;      Totals:         6       0       0       0       0       0       0       0       0
 23995 ;;Total ram usage:        6 bytes
 23996 ;; Hardware stack levels used:    1
 23997 ;; Hardware stack levels required when called:    3
 23998 ;; This function calls:
 23999 ;;		_OWReadBit
 24000 ;; This function is called by:
 24001 ;;		_Read_Temperature_DS18B20
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           
 24005                           	psect	text66
 24006  004DFE                     __ptext66:
 24007                           	callstack 0
 24008  004DFE                     _OWReadByte:
 24009                           	callstack 15
 24010                           
 24011                           ;Ds18b20.c: 95:   int loop, result=0;
 24012                           
 24013                           ;incstack = 0
 24014  004DFE  0E00               	movlw	0
 24015  004E00  6E0E               	movwf	(OWReadByte@result+1)^0,c
 24016  004E02  0E00               	movlw	0
 24017  004E04  6E0D               	movwf	OWReadByte@result^0,c
 24018                           
 24019                           ;Ds18b20.c: 96:  for (loop = 0; loop < 8; loop++)
 24020  004E06  0E00               	movlw	0
 24021  004E08  6E10               	movwf	(OWReadByte@loop+1)^0,c
 24022  004E0A  0E00               	movlw	0
 24023  004E0C  6E0F               	movwf	OWReadByte@loop^0,c
 24024  004E0E                     i1l6184:
 24025                           
 24026                           ;Ds18b20.c: 97:  {;Ds18b20.c: 98:     result >>= 1;
 24027  004E0E  340E               	rlcf	(OWReadByte@result+1)^0,w,c
 24028  004E10  320E               	rrcf	(OWReadByte@result+1)^0,f,c
 24029  004E12  320D               	rrcf	OWReadByte@result^0,f,c
 24030                           
 24031                           ;Ds18b20.c: 99:      if (OWReadBit())
 24032  004E14  EC3C  F027         	call	_OWReadBit	;wreg free
 24033  004E18  5006               	movf	?_OWReadBit^0,w,c
 24034  004E1A  1007               	iorwf	(?_OWReadBit+1)^0,w,c
 24035  004E1C  A4D8               	btfss	status,2,c
 24036                           
 24037                           ;Ds18b20.c: 100:   result |= 0x80;
 24038  004E1E  8E0D               	bsf	OWReadByte@result^0,7,c
 24039                           
 24040                           ;Ds18b20.c: 101:  }
 24041  004E20  4A0F               	infsnz	OWReadByte@loop^0,f,c
 24042  004E22  2A10               	incf	(OWReadByte@loop+1)^0,f,c
 24043  004E24  BE10               	btfsc	(OWReadByte@loop+1)^0,7,c
 24044  004E26  D7F3               	goto	i1l6184
 24045  004E28  5010               	movf	(OWReadByte@loop+1)^0,w,c
 24046  004E2A  E104               	bnz	i1u744_20
 24047  004E2C  0E08               	movlw	8
 24048  004E2E  5C0F               	subwf	OWReadByte@loop^0,w,c
 24049  004E30  A0D8               	btfss	status,0,c
 24050  004E32  D7ED               	goto	i1l6184
 24051  004E34                     i1u744_20:
 24052                           
 24053                           ;Ds18b20.c: 102:  return result;
 24054  004E34  C00D  F00B         	movff	OWReadByte@result,?_OWReadByte
 24055  004E38  C00E  F00C         	movff	OWReadByte@result+1,?_OWReadByte+1
 24056  004E3C  0012               	return		;funcret
 24057  004E3E                     __end_of_OWReadByte:
 24058                           	callstack 0
 24059                           
 24060 ;; *************** function _OWReadBit *****************
 24061 ;; Defined at:
 24062 ;;		line 71 in file "Ds18b20.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;		None
 24065 ;; Auto vars:     Size  Location     Type
 24066 ;;  result          2    8[COMRAM] int 
 24067 ;; Return value:  Size  Location     Type
 24068 ;;                  2    5[COMRAM] int 
 24069 ;; Registers used:
 24070 ;;		wreg, status,2
 24071 ;; Tracked objects:
 24072 ;;		On entry : 0/0
 24073 ;;		On exit  : 0/0
 24074 ;;		Unchanged: 0/0
 24075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24076 ;;      Params:         2       0       0       0       0       0       0       0       0
 24077 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24078 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24079 ;;      Totals:         5       0       0       0       0       0       0       0       0
 24080 ;;Total ram usage:        5 bytes
 24081 ;; Hardware stack levels used:    1
 24082 ;; Hardware stack levels required when called:    2
 24083 ;; This function calls:
 24084 ;;		Nothing
 24085 ;; This function is called by:
 24086 ;;		_OWReadByte
 24087 ;; This function uses a non-reentrant model
 24088 ;;
 24089                           
 24090                           	psect	text67
 24091  004E78                     __ptext67:
 24092                           	callstack 0
 24093  004E78                     _OWReadBit:
 24094                           	callstack 15
 24095                           
 24096                           ;Ds18b20.c: 74:  PORTBbits.RB7=0; TRISB = 0b00000000;
 24097                           
 24098                           ;incstack = 0
 24099  004E78  9E81               	bcf	129,7,c	;volatile
 24100  004E7A  0E00               	movlw	0
 24101  004E7C  6E93               	movwf	147,c	;volatile
 24102                           
 24103                           ;Ds18b20.c: 75:  _delay((unsigned long)((6)*(20000000/4000000.0)));
 24104  004E7E  0E0A               	movlw	10
 24105  004E80                     i1u1648_27:
 24106  004E80  2EE8               	decfsz	wreg,f,c
 24107  004E82  D7FE               	bra	i1u1648_27
 24108                           
 24109                           ;Ds18b20.c: 76:  TRISB = 0b10000000;
 24110  004E84  0E80               	movlw	128
 24111  004E86  6E93               	movwf	147,c	;volatile
 24112                           
 24113                           ;Ds18b20.c: 77:  _delay((unsigned long)((6)*(20000000/4000000.0)));
 24114  004E88  0E0A               	movlw	10
 24115  004E8A                     i1u1649_27:
 24116  004E8A  2EE8               	decfsz	wreg,f,c
 24117  004E8C  D7FE               	bra	i1u1649_27
 24118                           
 24119                           ;Ds18b20.c: 78:  result = (int)PORTBbits.RB7;
 24120  004E8E  AE81               	btfss	129,7,c	;volatile
 24121  004E90  D003               	goto	i1u702_20
 24122  004E92  6A08               	clrf	??_OWReadBit^0,c
 24123  004E94  2A08               	incf	??_OWReadBit^0,f,c
 24124  004E96  D001               	goto	i1u702_28
 24125  004E98                     i1u702_20:
 24126  004E98  6A08               	clrf	??_OWReadBit^0,c
 24127  004E9A                     i1u702_28:
 24128  004E9A  5008               	movf	??_OWReadBit^0,w,c
 24129  004E9C  6E09               	movwf	OWReadBit@result^0,c
 24130  004E9E  6A0A               	clrf	(OWReadBit@result+1)^0,c
 24131                           
 24132                           ;Ds18b20.c: 79:  _delay((unsigned long)((60)*(20000000/4000000.0)));
 24133  004EA0  0E64               	movlw	100
 24134  004EA2                     i1u1650_27:
 24135  004EA2  2EE8               	decfsz	wreg,f,c
 24136  004EA4  D7FE               	bra	i1u1650_27
 24137                           
 24138                           ;Ds18b20.c: 80:   return (result);
 24139  004EA6  C009  F006         	movff	OWReadBit@result,?_OWReadBit
 24140  004EAA  C00A  F007         	movff	OWReadBit@result+1,?_OWReadBit+1
 24141  004EAE  0012               	return		;funcret
 24142  004EB0                     __end_of_OWReadBit:
 24143                           	callstack 0
 24144                           
 24145 ;; *************** function _Convert_Temperature *****************
 24146 ;; Defined at:
 24147 ;;		line 134 in file "Ds18b20.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1    wreg      void 
 24154 ;; Registers used:
 24155 ;;		wreg, status,2, status,0, cstack
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/0
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:    4
 24168 ;; This function calls:
 24169 ;;		_OWReset
 24170 ;;		_OWWriteByte
 24171 ;; This function is called by:
 24172 ;;		_Timers
 24173 ;; This function uses a non-reentrant model
 24174 ;;
 24175                           
 24176                           	psect	text68
 24177  0050EE                     __ptext68:
 24178                           	callstack 0
 24179  0050EE                     _Convert_Temperature:
 24180                           	callstack 15
 24181                           
 24182                           ;Ds18b20.c: 136:  OWReset();
 24183                           
 24184                           ;incstack = 0
 24185  0050EE  EC4F  F028         	call	_OWReset	;wreg free
 24186                           
 24187                           ;Ds18b20.c: 137:  OWWriteByte(0xCC);
 24188  0050F2  0E00               	movlw	0
 24189  0050F4  6E09               	movwf	(OWWriteByte@data+1)^0,c
 24190  0050F6  0ECC               	movlw	204
 24191  0050F8  6E08               	movwf	OWWriteByte@data^0,c
 24192  0050FA  ECF1  F027         	call	_OWWriteByte	;wreg free
 24193                           
 24194                           ;Ds18b20.c: 138:  OWWriteByte(0x44);
 24195  0050FE  0E00               	movlw	0
 24196  005100  6E09               	movwf	(OWWriteByte@data+1)^0,c
 24197  005102  0E44               	movlw	68
 24198  005104  6E08               	movwf	OWWriteByte@data^0,c
 24199  005106  ECF1  F027         	call	_OWWriteByte	;wreg free
 24200                           
 24201                           ;Ds18b20.c: 139:  OWReset();
 24202  00510A  EC4F  F028         	call	_OWReset	;wreg free
 24203  00510E  0012               	return		;funcret
 24204  005110                     __end_of_Convert_Temperature:
 24205                           	callstack 0
 24206                           
 24207 ;; *************** function _OWWriteByte *****************
 24208 ;; Defined at:
 24209 ;;		line 83 in file "Ds18b20.c"
 24210 ;; Parameters:    Size  Location     Type
 24211 ;;  data            2    7[COMRAM] int 
 24212 ;; Auto vars:     Size  Location     Type
 24213 ;;  loop            2    9[COMRAM] int 
 24214 ;; Return value:  Size  Location     Type
 24215 ;;                  1    wreg      void 
 24216 ;; Registers used:
 24217 ;;		wreg, status,2, status,0, cstack
 24218 ;; Tracked objects:
 24219 ;;		On entry : 0/0
 24220 ;;		On exit  : 0/0
 24221 ;;		Unchanged: 0/0
 24222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24223 ;;      Params:         2       0       0       0       0       0       0       0       0
 24224 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24225 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24226 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24227 ;;Total ram usage:        4 bytes
 24228 ;; Hardware stack levels used:    1
 24229 ;; Hardware stack levels required when called:    3
 24230 ;; This function calls:
 24231 ;;		_OWWriteBit
 24232 ;; This function is called by:
 24233 ;;		_Convert_Temperature
 24234 ;;		_Read_Temperature_DS18B20
 24235 ;; This function uses a non-reentrant model
 24236 ;;
 24237                           
 24238                           	psect	text69
 24239  004FE2                     __ptext69:
 24240                           	callstack 0
 24241  004FE2                     _OWWriteByte:
 24242                           	callstack 15
 24243                           
 24244                           ;Ds18b20.c: 83: void OWWriteByte(int data);Ds18b20.c: 84: {;Ds18b20.c: 85:  int loop;;Ds
      +                          18b20.c: 86:  for (loop = 0; loop < 8; loop++)
 24245                           
 24246                           ;incstack = 0
 24247  004FE2  0E00               	movlw	0
 24248  004FE4  6E0B               	movwf	(OWWriteByte@loop+1)^0,c
 24249  004FE6  0E00               	movlw	0
 24250  004FE8  6E0A               	movwf	OWWriteByte@loop^0,c
 24251  004FEA                     i1l6170:
 24252                           
 24253                           ;Ds18b20.c: 87:  {;Ds18b20.c: 88:      OWWriteBit(data & 0x01);
 24254  004FEA  0E01               	movlw	1
 24255  004FEC  1408               	andwf	OWWriteByte@data^0,w,c
 24256  004FEE  6E06               	movwf	OWWriteBit@x^0,c
 24257  004FF0  6A07               	clrf	(OWWriteBit@x+1)^0,c
 24258  004FF2  EC1F  F027         	call	_OWWriteBit	;wreg free
 24259                           
 24260                           ;Ds18b20.c: 89:   data >>= 1;
 24261  004FF6  3409               	rlcf	(OWWriteByte@data+1)^0,w,c
 24262  004FF8  3209               	rrcf	(OWWriteByte@data+1)^0,f,c
 24263  004FFA  3208               	rrcf	OWWriteByte@data^0,f,c
 24264                           
 24265                           ;Ds18b20.c: 90:  }
 24266  004FFC  4A0A               	infsnz	OWWriteByte@loop^0,f,c
 24267  004FFE  2A0B               	incf	(OWWriteByte@loop+1)^0,f,c
 24268  005000  BE0B               	btfsc	(OWWriteByte@loop+1)^0,7,c
 24269  005002  D7F3               	goto	i1l6170
 24270  005004  500B               	movf	(OWWriteByte@loop+1)^0,w,c
 24271  005006  E105               	bnz	i1u742_20
 24272  005008  0E08               	movlw	8
 24273  00500A  5C0A               	subwf	OWWriteByte@loop^0,w,c
 24274  00500C  B0D8               	btfsc	status,0,c
 24275  00500E  0012               	return	
 24276  005010  D7EC               	goto	i1l6170
 24277  005012                     i1u742_20:
 24278  005012  0012               	return		;funcret
 24279  005014                     __end_of_OWWriteByte:
 24280                           	callstack 0
 24281                           
 24282 ;; *************** function _OWWriteBit *****************
 24283 ;; Defined at:
 24284 ;;		line 51 in file "Ds18b20.c"
 24285 ;; Parameters:    Size  Location     Type
 24286 ;;  x               2    5[COMRAM] int 
 24287 ;; Auto vars:     Size  Location     Type
 24288 ;;		None
 24289 ;; Return value:  Size  Location     Type
 24290 ;;                  1    wreg      void 
 24291 ;; Registers used:
 24292 ;;		wreg, status,2, status,0
 24293 ;; Tracked objects:
 24294 ;;		On entry : 0/0
 24295 ;;		On exit  : 0/0
 24296 ;;		Unchanged: 0/0
 24297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24298 ;;      Params:         2       0       0       0       0       0       0       0       0
 24299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24301 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24302 ;;Total ram usage:        2 bytes
 24303 ;; Hardware stack levels used:    1
 24304 ;; Hardware stack levels required when called:    2
 24305 ;; This function calls:
 24306 ;;		Nothing
 24307 ;; This function is called by:
 24308 ;;		_OWWriteByte
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text70
 24313  004E3E                     __ptext70:
 24314                           	callstack 0
 24315  004E3E                     _OWWriteBit:
 24316                           	callstack 15
 24317                           
 24318                           ;Ds18b20.c: 51: void OWWriteBit(int x);Ds18b20.c: 52: {;Ds18b20.c: 53:  if (x)
 24319                           
 24320                           ;incstack = 0
 24321  004E3E  5006               	movf	OWWriteBit@x^0,w,c
 24322  004E40  1007               	iorwf	(OWWriteBit@x+1)^0,w,c
 24323  004E42  B4D8               	btfsc	status,2,c
 24324  004E44  D00C               	goto	i1l371
 24325                           
 24326                           ;Ds18b20.c: 54:  {;Ds18b20.c: 56:   PORTBbits.RB7=0; TRISB = 0b00000000;
 24327  004E46  9E81               	bcf	129,7,c	;volatile
 24328  004E48  0E00               	movlw	0
 24329  004E4A  6E93               	movwf	147,c	;volatile
 24330                           
 24331                           ;Ds18b20.c: 57:   _delay((unsigned long)((6)*(20000000/4000000.0)));
 24332  004E4C  0E0A               	movlw	10
 24333  004E4E                     i1u1651_27:
 24334  004E4E  2EE8               	decfsz	wreg,f,c
 24335  004E50  D7FE               	bra	i1u1651_27
 24336                           
 24337                           ;Ds18b20.c: 58:   TRISB = 0b10000000;
 24338  004E52  0E80               	movlw	128
 24339  004E54  6E93               	movwf	147,c	;volatile
 24340                           
 24341                           ;Ds18b20.c: 59:   _delay((unsigned long)((60)*(20000000/4000000.0)));
 24342  004E56  0E64               	movlw	100
 24343  004E58                     i1u1652_27:
 24344  004E58  2EE8               	decfsz	wreg,f,c
 24345  004E5A  D7FE               	bra	i1u1652_27
 24346                           
 24347                           ;Ds18b20.c: 60:  }
 24348  004E5C  D008               	goto	i1l372
 24349  004E5E                     i1l371:
 24350                           
 24351                           ;Ds18b20.c: 62:  {;Ds18b20.c: 64:   PORTBbits.RB7=0; TRISB = 0b00000000;
 24352  004E5E  9E81               	bcf	129,7,c	;volatile
 24353  004E60  0E00               	movlw	0
 24354  004E62  6E93               	movwf	147,c	;volatile
 24355                           
 24356                           ;Ds18b20.c: 65:   _delay((unsigned long)((60)*(20000000/4000000.0)));
 24357  004E64  0E64               	movlw	100
 24358  004E66                     i1u1653_27:
 24359  004E66  2EE8               	decfsz	wreg,f,c
 24360  004E68  D7FE               	bra	i1u1653_27
 24361                           
 24362                           ;Ds18b20.c: 66:   TRISB = 0b10000000;
 24363  004E6A  0E80               	movlw	128
 24364  004E6C  6E93               	movwf	147,c	;volatile
 24365  004E6E                     i1l372:
 24366                           
 24367                           ;Ds18b20.c: 68: _delay((unsigned long)((10)*(20000000/4000000.0)));
 24368  004E6E  0E10               	movlw	16
 24369  004E70                     i1u1654_27:
 24370  004E70  2EE8               	decfsz	wreg,f,c
 24371  004E72  D7FE               	bra	i1u1654_27
 24372  004E74  D000               	nop2	
 24373  004E76  0012               	return		;funcret
 24374  004E78                     __end_of_OWWriteBit:
 24375                           	callstack 0
 24376                           
 24377 ;; *************** function _OWReset *****************
 24378 ;; Defined at:
 24379 ;;		line 39 in file "Ds18b20.c"
 24380 ;; Parameters:    Size  Location     Type
 24381 ;;		None
 24382 ;; Auto vars:     Size  Location     Type
 24383 ;;  result          2    0        int 
 24384 ;; Return value:  Size  Location     Type
 24385 ;;                  2  367[None  ] int 
 24386 ;; Registers used:
 24387 ;;		wreg, status,2
 24388 ;; Tracked objects:
 24389 ;;		On entry : 0/0
 24390 ;;		On exit  : 0/0
 24391 ;;		Unchanged: 0/0
 24392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24393 ;;      Params:         0       0       0       0       0       0       0       0       0
 24394 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24395 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24396 ;;      Totals:         3       0       0       0       0       0       0       0       0
 24397 ;;Total ram usage:        3 bytes
 24398 ;; Hardware stack levels used:    1
 24399 ;; Hardware stack levels required when called:    2
 24400 ;; This function calls:
 24401 ;;		Nothing
 24402 ;; This function is called by:
 24403 ;;		_Convert_Temperature
 24404 ;; This function uses a non-reentrant model
 24405 ;;
 24406                           
 24407                           	psect	text71
 24408  00509E                     __ptext71:
 24409                           	callstack 0
 24410  00509E                     _OWReset:
 24411                           	callstack 16
 24412                           
 24413                           ;Ds18b20.c: 42:  PORTBbits.RB7=0; TRISB = 0b00000000;
 24414                           
 24415                           ;incstack = 0
 24416  00509E  9E81               	bcf	129,7,c	;volatile
 24417  0050A0  0E00               	movlw	0
 24418  0050A2  6E93               	movwf	147,c	;volatile
 24419                           
 24420                           ;Ds18b20.c: 43:         _delay((unsigned long)((500)*(20000000/4000000.0)));
 24421  0050A4  0E04               	movlw	4
 24422  0050A6  6E06               	movwf	??_OWReset^0,c
 24423  0050A8  0E3E               	movlw	62
 24424  0050AA                     i1u1655_27:
 24425  0050AA  2EE8               	decfsz	wreg,f,c
 24426  0050AC  D7FE               	bra	i1u1655_27
 24427  0050AE  2E06               	decfsz	??_OWReset^0,f,c
 24428  0050B0  D7FC               	bra	i1u1655_27
 24429                           
 24430                           ;Ds18b20.c: 44:  TRISB = 0b10000000;;
 24431  0050B2  0E80               	movlw	128
 24432  0050B4  6E93               	movwf	147,c	;volatile
 24433                           
 24434                           ;Ds18b20.c: 45:  _delay((unsigned long)((60)*(20000000/4000000.0)));
 24435  0050B6  0E64               	movlw	100
 24436  0050B8                     i1u1656_27:
 24437  0050B8  2EE8               	decfsz	wreg,f,c
 24438  0050BA  D7FE               	bra	i1u1656_27
 24439  0050BC  5081               	movf	129,w,c	;volatile
 24440                           
 24441                           ;Ds18b20.c: 47:  _delay((unsigned long)((240)*(20000000/4000000.0)));
 24442  0050BE  0EF0               	movlw	240
 24443  0050C0                     i1u1657_27:
 24444  0050C0  D000               	nop2	
 24445  0050C2  2EE8               	decfsz	wreg,f,c
 24446  0050C4  D7FD               	bra	i1u1657_27
 24447  0050C6  0012               	return		;funcret
 24448  0050C8                     __end_of_OWReset:
 24449                           	callstack 0
 24450                           
 24451 ;; *************** function _ISRH *****************
 24452 ;; Defined at:
 24453 ;;		line 422 in file "Main.c"
 24454 ;; Parameters:    Size  Location     Type
 24455 ;;		None
 24456 ;; Auto vars:     Size  Location     Type
 24457 ;;  aux             2    3[COMRAM] unsigned char [2]
 24458 ;; Return value:  Size  Location     Type
 24459 ;;                  1    wreg      void 
 24460 ;; Registers used:
 24461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24462 ;; Tracked objects:
 24463 ;;		On entry : 0/0
 24464 ;;		On exit  : 0/0
 24465 ;;		Unchanged: 0/0
 24466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24467 ;;      Params:         0       0       0       0       0       0       0       0       0
 24468 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24469 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24470 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24471 ;;Total ram usage:        4 bytes
 24472 ;; Hardware stack levels used:    1
 24473 ;; Hardware stack levels required when called:    1
 24474 ;; This function calls:
 24475 ;;		_UART_read
 24476 ;;		i2_UART_write
 24477 ;; This function is called by:
 24478 ;;		Interrupt level 2
 24479 ;; This function uses a non-reentrant model
 24480 ;;
 24481                           
 24482                           	psect	intcode
 24483  000008                     __pintcode:
 24484                           	callstack 0
 24485  000008                     _ISRH:
 24486                           	callstack 15
 24487                           
 24488                           ;incstack = 0
 24489  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24490  00000A  ED7A  F026         	call	int_func,f	;refresh shadow registers
 24491                           
 24492                           	psect	intcode_body
 24493  004CF4                     __pintcode_body:
 24494                           	callstack 15
 24495  004CF4                     int_func:
 24496                           	callstack 15
 24497  004CF4  0006               	pop		; remove dummy address from shadow register refresh
 24498  004CF6  CFD9 F002          	movff	fsr2l,??_ISRH
 24499  004CFA  CFDA F003          	movff	fsr2h,??_ISRH+1
 24500                           
 24501                           ;Main.c: 424:     if(PIR1bits.RCIF == 1)
 24502  004CFE  AA9E               	btfss	158,5,c	;volatile
 24503  004D00  D016               	goto	i2l236
 24504                           
 24505                           ;Main.c: 425:     {;Main.c: 426:         char aux[2];;Main.c: 431:         cmd[long_cad]
      +                           = UART_read();
 24506  004D02  0E00               	movlw	low _cmd
 24507  004D04  244F               	addwf	_long_cad^0,w,c
 24508  004D06  6ED9               	movwf	fsr2l,c
 24509  004D08  6ADA               	clrf	fsr2h,c
 24510  004D0A  0E01               	movlw	high _cmd
 24511  004D0C  22DA               	addwfc	fsr2h,f,c
 24512  004D0E  ECA6  F028         	call	_UART_read	;wreg free
 24513  004D12  6EDF               	movwf	indf2,c
 24514                           
 24515                           ;Main.c: 433:         if(aux[0] != 13) long_cad++,UART_write(aux[0]);
 24516  004D14  0E0D               	movlw	13
 24517  004D16  1804               	xorwf	ISRH@aux^0,w,c
 24518  004D18  B4D8               	btfsc	status,2,c
 24519  004D1A  D005               	goto	i2l7342
 24520  004D1C  2A4F               	incf	_long_cad^0,f,c
 24521  004D1E  5004               	movf	ISRH@aux^0,w,c
 24522  004D20  ECA0  F028         	call	i2_UART_write
 24523  004D24  D003               	goto	i2l7344
 24524  004D26                     i2l7342:
 24525  004D26  0E01               	movlw	1
 24526  004D28  0101               	movlb	1	; () banked
 24527  004D2A  6F31               	movwf	_fin_carro& (0+255),b
 24528  004D2C                     i2l7344:
 24529                           
 24530                           ;Main.c: 436:         PIR1bits.RCIF = 0;
 24531  004D2C  9A9E               	bcf	158,5,c	;volatile
 24532  004D2E                     i2l236:
 24533  004D2E  C003  FFDA         	movff	??_ISRH+1,fsr2h
 24534  004D32  C002  FFD9         	movff	??_ISRH,fsr2l
 24535  004D36  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24536  004D38  0011               	retfie		f
 24537  004D3A                     __end_of_ISRH:
 24538                           	callstack 0
 24539                           
 24540 ;; *************** function i2_UART_write *****************
 24541 ;; Defined at:
 24542 ;;		line 76 in file "Uart_Hard.c"
 24543 ;; Parameters:    Size  Location     Type
 24544 ;;  dato            1    wreg     unsigned char 
 24545 ;; Auto vars:     Size  Location     Type
 24546 ;;  dato            1    0[COMRAM] unsigned char 
 24547 ;; Return value:  Size  Location     Type
 24548 ;;                  1    wreg      void 
 24549 ;; Registers used:
 24550 ;;		wreg
 24551 ;; Tracked objects:
 24552 ;;		On entry : 0/0
 24553 ;;		On exit  : 0/0
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24556 ;;      Params:         0       0       0       0       0       0       0       0       0
 24557 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24559 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24560 ;;Total ram usage:        1 bytes
 24561 ;; Hardware stack levels used:    1
 24562 ;; This function calls:
 24563 ;;		Nothing
 24564 ;; This function is called by:
 24565 ;;		_ISRH
 24566 ;; This function uses a non-reentrant model
 24567 ;;
 24568                           
 24569                           	psect	text73
 24570  005140                     __ptext73:
 24571                           	callstack 0
 24572  005140                     i2_UART_write:
 24573                           	callstack 15
 24574                           
 24575                           ;incstack = 0
 24576                           ;i2UART_write@dato stored from wreg
 24577  005140  6E01               	movwf	i2UART_write@dato^0,c
 24578                           
 24579                           ;Uart_Hard.c: 76: void UART_write(char dato);Uart_Hard.c: 77: {;Uart_Hard.c: 78:     TXR
      +                          EG = dato;
 24580  005142  C001  FFAD         	movff	i2UART_write@dato,4013	;volatile
 24581  005146                     i2l333:
 24582  005146  B2AC               	btfsc	172,1,c	;volatile
 24583  005148  0012               	return	
 24584  00514A  D7FD               	goto	i2l333
 24585  00514C                     __end_ofi2_UART_write:
 24586                           	callstack 0
 24587                           
 24588 ;; *************** function _UART_read *****************
 24589 ;; Defined at:
 24590 ;;		line 119 in file "Uart_Hard.c"
 24591 ;; Parameters:    Size  Location     Type
 24592 ;;		None
 24593 ;; Auto vars:     Size  Location     Type
 24594 ;;		None
 24595 ;; Return value:  Size  Location     Type
 24596 ;;                  1    wreg      unsigned char 
 24597 ;; Registers used:
 24598 ;;		wreg, status,2
 24599 ;; Tracked objects:
 24600 ;;		On entry : 0/0
 24601 ;;		On exit  : 0/0
 24602 ;;		Unchanged: 0/0
 24603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24604 ;;      Params:         0       0       0       0       0       0       0       0       0
 24605 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24607 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24608 ;;Total ram usage:        0 bytes
 24609 ;; Hardware stack levels used:    1
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		_ISRH
 24614 ;; This function uses a non-reentrant model
 24615 ;;
 24616                           
 24617                           	psect	text74
 24618  00514C                     __ptext74:
 24619                           	callstack 0
 24620  00514C                     _UART_read:
 24621                           	callstack 15
 24622                           
 24623                           ;Uart_Hard.c: 121:     if(PIR1bits.RCIF == 1) return RCREG;
 24624                           
 24625                           ;incstack = 0
 24626  00514C  AA9E               	btfss	158,5,c	;volatile
 24627  00514E  D002               	goto	i2l7038
 24628  005150  50AE               	movf	174,w,c	;volatile
 24629  005152  0012               	return	
 24630  005154                     i2l7038:
 24631  005154  0E00               	movlw	0
 24632  005156  0012               	return		;funcret
 24633  005158                     __end_of_UART_read:
 24634                           	callstack 0
 24635                           
 24636                           	psect	rparam
 24637  0000                     
 24638                           	psect	temp
 24639  000059                     btemp:
 24640                           	callstack 0
 24641  000059                     	ds	1
 24642  0000                     int$flags	set	btemp
 24643  0000                     wtemp8	set	btemp+1
 24644  0000                     ttemp5	set	btemp+1
 24645  0000                     ttemp6	set	btemp+4
 24646  0000                     ttemp7	set	btemp+8
 24647                           
 24648                           	psect	idloc
 24649                           
 24650                           ;Config register IDLOC0 @ 0x200000
 24651                           ;	unspecified, using default values
 24652  200000                     	org	2097152
 24653  200000  FF                 	db	255
 24654                           
 24655                           ;Config register IDLOC1 @ 0x200001
 24656                           ;	unspecified, using default values
 24657  200001                     	org	2097153
 24658  200001  FF                 	db	255
 24659                           
 24660                           ;Config register IDLOC2 @ 0x200002
 24661                           ;	unspecified, using default values
 24662  200002                     	org	2097154
 24663  200002  FF                 	db	255
 24664                           
 24665                           ;Config register IDLOC3 @ 0x200003
 24666                           ;	unspecified, using default values
 24667  200003                     	org	2097155
 24668  200003  FF                 	db	255
 24669                           
 24670                           ;Config register IDLOC4 @ 0x200004
 24671                           ;	unspecified, using default values
 24672  200004                     	org	2097156
 24673  200004  FF                 	db	255
 24674                           
 24675                           ;Config register IDLOC5 @ 0x200005
 24676                           ;	unspecified, using default values
 24677  200005                     	org	2097157
 24678  200005  FF                 	db	255
 24679                           
 24680                           ;Config register IDLOC6 @ 0x200006
 24681                           ;	unspecified, using default values
 24682  200006                     	org	2097158
 24683  200006  FF                 	db	255
 24684                           
 24685                           ;Config register IDLOC7 @ 0x200007
 24686                           ;	unspecified, using default values
 24687  200007                     	org	2097159
 24688  200007  FF                 	db	255
 24689                           
 24690                           	psect	config
 24691                           
 24692                           ;Config register CONFIG1L @ 0x300000
 24693                           ;	PLL Prescaler Selection bits
 24694                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
 24695                           ;	System Clock Postscaler Selection bits
 24696                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 24697                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 24698                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 24699  300000                     	org	3145728
 24700  300000  04                 	db	4
 24701                           
 24702                           ;Config register CONFIG1H @ 0x300001
 24703                           ;	Oscillator Selection bits
 24704                           ;	FOSC = HS, HS oscillator (HS)
 24705                           ;	Fail-Safe Clock Monitor Enable bit
 24706                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 24707                           ;	Internal/External Oscillator Switchover bit
 24708                           ;	IESO = OFF, Oscillator Switchover mode disabled
 24709  300001                     	org	3145729
 24710  300001  4C                 	db	76
 24711                           
 24712                           ;Config register CONFIG2L @ 0x300002
 24713                           ;	Power-up Timer Enable bit
 24714                           ;	PWRT = ON, PWRT enabled
 24715                           ;	Brown-out Reset Enable bits
 24716                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 24717                           ;	Brown-out Reset Voltage bits
 24718                           ;	BORV = 3, Minimum setting 2.05V
 24719                           ;	USB Voltage Regulator Enable bit
 24720                           ;	VREGEN = OFF, USB voltage regulator disabled
 24721  300002                     	org	3145730
 24722  300002  18                 	db	24
 24723                           
 24724                           ;Config register CONFIG2H @ 0x300003
 24725                           ;	Watchdog Timer Enable bit
 24726                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 24727                           ;	Watchdog Timer Postscale Select bits
 24728                           ;	WDTPS = 32768, 1:32768
 24729  300003                     	org	3145731
 24730  300003  1E                 	db	30
 24731                           
 24732                           ; Padding undefined space
 24733  300004                     	org	3145732
 24734  300004  FF                 	db	255
 24735                           
 24736                           ;Config register CONFIG3H @ 0x300005
 24737                           ;	CCP2 MUX bit
 24738                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
 24739                           ;	PORTB A/D Enable bit
 24740                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 24741                           ;	Low-Power Timer 1 Oscillator Enable bit
 24742                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 24743                           ;	MCLR Pin Enable bit
 24744                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 24745  300005                     	org	3145733
 24746  300005  80                 	db	128
 24747                           
 24748                           ;Config register CONFIG4L @ 0x300006
 24749                           ;	Stack Full/Underflow Reset Enable bit
 24750                           ;	STVREN = ON, Stack full/underflow will cause Reset
 24751                           ;	Single-Supply ICSP Enable bit
 24752                           ;	LVP = OFF, Single-Supply ICSP disabled
 24753                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 24754                           ;	ICPRT = OFF, ICPORT disabled
 24755                           ;	Extended Instruction Set Enable bit
 24756                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 24757                           ;	Background Debugger Enable bit
 24758                           ;	DEBUG = 0x1, unprogrammed default
 24759  300006                     	org	3145734
 24760  300006  81                 	db	129
 24761                           
 24762                           ; Padding undefined space
 24763  300007                     	org	3145735
 24764  300007  FF                 	db	255
 24765                           
 24766                           ;Config register CONFIG5L @ 0x300008
 24767                           ;	Code Protection bit
 24768                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 24769                           ;	Code Protection bit
 24770                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 24771                           ;	Code Protection bit
 24772                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 24773                           ;	Code Protection bit
 24774                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 24775  300008                     	org	3145736
 24776  300008  0F                 	db	15
 24777                           
 24778                           ;Config register CONFIG5H @ 0x300009
 24779                           ;	Boot Block Code Protection bit
 24780                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 24781                           ;	Data EEPROM Code Protection bit
 24782                           ;	CPD = OFF, Data EEPROM is not code-protected
 24783  300009                     	org	3145737
 24784  300009  C0                 	db	192
 24785                           
 24786                           ;Config register CONFIG6L @ 0x30000A
 24787                           ;	Write Protection bit
 24788                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 24789                           ;	Write Protection bit
 24790                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 24791                           ;	Write Protection bit
 24792                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 24793                           ;	Write Protection bit
 24794                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 24795  30000A                     	org	3145738
 24796  30000A  0F                 	db	15
 24797                           
 24798                           ;Config register CONFIG6H @ 0x30000B
 24799                           ;	Configuration Register Write Protection bit
 24800                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 24801                           ;	Boot Block Write Protection bit
 24802                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 24803                           ;	Data EEPROM Write Protection bit
 24804                           ;	WRTD = OFF, Data EEPROM is not write-protected
 24805  30000B                     	org	3145739
 24806  30000B  E0                 	db	224
 24807                           
 24808                           ;Config register CONFIG7L @ 0x30000C
 24809                           ;	Table Read Protection bit
 24810                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 24811                           ;	Table Read Protection bit
 24812                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 24813                           ;	Table Read Protection bit
 24814                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 24815                           ;	Table Read Protection bit
 24816                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 24817  30000C                     	org	3145740
 24818  30000C  0F                 	db	15
 24819                           
 24820                           ;Config register CONFIG7H @ 0x30000D
 24821                           ;	Boot Block Table Read Protection bit
 24822                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 24823  30000D                     	org	3145741
 24824  30000D  40                 	db	64
 24825                           tosu	equ	0xFFF
 24826                           tosh	equ	0xFFE
 24827                           tosl	equ	0xFFD
 24828                           stkptr	equ	0xFFC
 24829                           pclatu	equ	0xFFB
 24830                           pclath	equ	0xFFA
 24831                           pcl	equ	0xFF9
 24832                           tblptru	equ	0xFF8
 24833                           tblptrh	equ	0xFF7
 24834                           tblptrl	equ	0xFF6
 24835                           tablat	equ	0xFF5
 24836                           prodh	equ	0xFF4
 24837                           prodl	equ	0xFF3
 24838                           indf0	equ	0xFEF
 24839                           postinc0	equ	0xFEE
 24840                           postdec0	equ	0xFED
 24841                           preinc0	equ	0xFEC
 24842                           plusw0	equ	0xFEB
 24843                           fsr0h	equ	0xFEA
 24844                           fsr0l	equ	0xFE9
 24845                           wreg	equ	0xFE8
 24846                           indf1	equ	0xFE7
 24847                           postinc1	equ	0xFE6
 24848                           postdec1	equ	0xFE5
 24849                           preinc1	equ	0xFE4
 24850                           plusw1	equ	0xFE3
 24851                           fsr1h	equ	0xFE2
 24852                           fsr1l	equ	0xFE1
 24853                           bsr	equ	0xFE0
 24854                           indf2	equ	0xFDF
 24855                           postinc2	equ	0xFDE
 24856                           postdec2	equ	0xFDD
 24857                           preinc2	equ	0xFDC
 24858                           plusw2	equ	0xFDB
 24859                           fsr2h	equ	0xFDA
 24860                           fsr2l	equ	0xFD9
 24861                           status	equ	0xFD8

Data Sizes:
    Strings     738
    Constant    6003
    Data        7
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      88
    BANK0           160    154     154
    BANK1           256    117     247
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_75(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_75(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> Send_Temp@buffer(BANK0[10]), Set_Val@buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_25(CODE[8]), STR_24(CODE[31]), STR_20(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_25(CODE[8]), STR_24(CODE[31]), STR_20(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 31
		 -> STR_25(CODE[8]), STR_24(CODE[31]), STR_20(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_25(CODE[8]), STR_24(CODE[31]), STR_20(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> Send_Temp@buffer(BANK0[10]), Set_Val@buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1852_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> Send_Temp@buffer(BANK0[10]), Set_Val@buffer(BANK1[32]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> Send_Temp@buffer(BANK0[10]), Set_Val@buffer(BANK1[32]), 

    ili9341_draw_string@pS	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_23(CODE[20]), STR_22(CODE[24]), STR_21(CODE[23]), Set_Val@buffer(BANK1[32]), 
		 -> STR_15(CODE[27]), STR_14(CODE[24]), STR_13(CODE[20]), STR_12(CODE[27]), 
		 -> STR_11(CODE[25]), STR_10(CODE[18]), STR_9(CODE[34]), STR_8(CODE[31]), 
		 -> STR_7(CODE[23]), STR_6(CODE[22]), 

    UART_arrayln@cadena	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_62(CODE[1]), setreset(CODE[9]), gettmp(CODE[7]), STR_59(CODE[10]), 
		 -> STR_57(CODE[10]), STR_55(CODE[33]), STR_53(CODE[36]), STR_51(CODE[1]), 
		 -> STR_50(CODE[16]), STR_49(CODE[1]), STR_48(CODE[26]), STR_45(CODE[1]), 
		 -> STR_44(CODE[21]), STR_43(CODE[20]), STR_42(CODE[26]), STR_39(CODE[1]), 
		 -> STR_38(CODE[22]), STR_36(CODE[2]), STR_34(CODE[19]), STR_31(CODE[1]), 
		 -> STR_30(CODE[21]), STR_27(CODE[1]), Send_Temp@buffer(BANK0[10]), STR_19(CODE[2]), 
		 -> STR_17(CODE[1]), STR_16(CODE[9]), STR_5(CODE[35]), STR_4(CODE[40]), 
		 -> STR_3(CODE[29]), STR_2(CODE[1]), STR_1(CODE[1]), 

    UART_array@cadena	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_64(CODE[2]), STR_63(CODE[7]), STR_61(CODE[7]), STR_60(CODE[7]), 
		 -> STR_58(CODE[7]), setpwm(CODE[8]), STR_56(CODE[7]), setest(CODE[8]), 
		 -> STR_54(CODE[7]), STR_52(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_37(CODE[7]), STR_35(CODE[11]), 
		 -> STR_33(CODE[7]), STR_32(CODE[7]), STR_29(CODE[7]), Task_Com@buffer_val(BANK0[3]), 
		 -> STR_28(CODE[7]), STR_26(CODE[7]), STR_18(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRL in COMRAM

    _Timers->_Read_Temperature_DS18B20
    _Read_Temperature_DS18B20->i1___fldiv
    _OWReadByte->_OWReadBit
    _Convert_Temperature->_OWWriteByte
    _OWWriteByte->_OWWriteBit

Critical Paths under _ISRH in COMRAM

    _ISRH->i2_UART_write

Critical Paths under _main in BANK0

    _main->_Send_Temp
    _ili9341_init->_ili9341_write_command
    _ili9341_init->_ili9341_write_date
    _ili9341_fill->_ili9341_setadress
    _ili9341_drawrect->_ili9341_drawhline
    _ili9341_drawrect->_ili9341_drawvline
    _ili9341_drawvline->_ili9341_setadress
    _ili9341_drawhline->_ili9341_setadress
    _UART_init->___aldiv
    _Task_Com->___wmul
    _Set_Val->_sprintf
    _ili9341_fillrect->_ili9341_setadress
    _ili9341_setadress->_ili9341_write_command
    _ili9341_setadress->_ili9341_write_date
    _ili9341_draw_string->_ili9341_drawchar
    _ili9341_drawchar->_ili9341_setcursor
    _ili9341_setcursor->_ili9341_write_command
    _ili9341_setcursor->_ili9341_write_date
    _ili9341_pushcolor->_ili9341_write_date
    _Set_Pwm->_PWM_1
    _PWM_Stop_1->_PWM_1
    _PWM_1->___fltol
    _Send_Temp->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_arrayln->_UART_array
    _PWM_init_1->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _ISRL in BANK0

    None.

Critical Paths under _ISRH in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Set_Val
    _Set_Val->_sprintf
    _Send_Temp->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISRL in BANK1

    None.

Critical Paths under _ISRH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRL in BANK2

    None.

Critical Paths under _ISRH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRL in BANK3

    None.

Critical Paths under _ISRH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRL in BANK4

    None.

Critical Paths under _ISRH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRL in BANK5

    None.

Critical Paths under _ISRH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRL in BANK6

    None.

Critical Paths under _ISRH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRL in BANK7

    None.

Critical Paths under _ISRH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  245552
                                            100 BANK1     17    17      0
                         _PWM_init_1
                          _Send_Temp
                            _Set_Pwm
                            _Set_Val
                           _Task_Com
                         _UART_array
                       _UART_arrayln
                          _UART_init
                           _UART_int
                _ili9341_draw_string
                   _ili9341_drawrect
                       _ili9341_fill
                   _ili9341_fillrect
                       _ili9341_init
 ---------------------------------------------------------------------------------
 (1) _ili9341_init                                         2     2      0     352
                                              8 BANK0      2     2      0
              _ili9341_write_command
                 _ili9341_write_date
 ---------------------------------------------------------------------------------
 (1) _ili9341_fill                                         6     4      2    3033
                                             16 BANK0      6     4      2
                  _ili9341_pushcolor
                  _ili9341_setadress
 ---------------------------------------------------------------------------------
 (1) _ili9341_drawrect                                    10     0     10   10912
                                             33 BANK0     10     0     10
                  _ili9341_drawhline
                  _ili9341_drawvline
 ---------------------------------------------------------------------------------
 (2) _ili9341_drawvline                                   17     9      8    4938
                                             16 BANK0     17     9      8
                  _ili9341_pushcolor
                  _ili9341_setadress
 ---------------------------------------------------------------------------------
 (2) _ili9341_drawhline                                   17     9      8    3678
                                             16 BANK0     17     9      8
                  _ili9341_pushcolor
                  _ili9341_setadress
 ---------------------------------------------------------------------------------
 (1) _UART_int                                             3     2      1     120
                                              5 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            7     5      2     725
                                             19 BANK0      7     5      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Task_Com                                            28    28      0   11032
                                             11 BANK0     28    28      0
                         _UART_array
                       _UART_arrayln
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Set_Val                                             32    32      0   84101
                                             68 BANK1     32    32      0
                _ili9341_draw_string
                   _ili9341_fillrect
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ili9341_fillrect                                    14     4     10    9283
                                             16 BANK0     14     4     10
                  _ili9341_pushcolor
                  _ili9341_setadress
 ---------------------------------------------------------------------------------
 (2) _ili9341_setadress                                    8     0      8    1996
                                              8 BANK0      8     0      8
              _ili9341_write_command
                 _ili9341_write_date
 ---------------------------------------------------------------------------------
 (1) _ili9341_draw_string                                 18     8     10   12345
                                             33 BANK0     18     8     10
                   _ili9341_drawchar
 ---------------------------------------------------------------------------------
 (2) _ili9341_drawchar                                    21    11     10    3939
                                             12 BANK0     21    11     10
                             ___wmul
                  _ili9341_pushcolor
                  _ili9341_setcursor
 ---------------------------------------------------------------------------------
 (3) _ili9341_setcursor                                    4     0      4     592
                                              8 BANK0      4     0      4
              _ili9341_write_command
                 _ili9341_write_date
 ---------------------------------------------------------------------------------
 (2) _ili9341_write_command                                3     3      0     176
                                              5 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ili9341_pushcolor                                    2     0      2     739
                                              8 BANK0      2     0      2
                 _ili9341_write_date
 ---------------------------------------------------------------------------------
 (2) _ili9341_write_date                                   3     3      0     176
                                              5 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Set_Pwm                                              0     0      0   25376
                              _PWM_1
                         _PWM_Stop_1
 ---------------------------------------------------------------------------------
 (2) _PWM_Stop_1                                           0     0      0   12688
                              _PWM_1
 ---------------------------------------------------------------------------------
 (3) _PWM_1                                               17    17      0   12688
                                             79 BANK0     17    17      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Send_Temp                                           11    11      0   69693
                                            143 BANK0     11    11      0
                         _UART_array
                       _UART_arrayln
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   62269
                                            133 BANK0     10    10      0
                                             60 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   61127
                                            131 BANK0      2     2      0
                                             56 BANK1      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   60257
                                            100 BANK0     31    28      3
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     4      5     768
                                              5 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   41405
                                             89 BANK0     11     5      6
                                              0 BANK1     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1372
                                             11 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     649
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1248
                                              5 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     890
                                             69 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     482
                                              5 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5564
                                             44 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4896
                                              5 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     196
                                              5 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4712
                                             19 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1008
                                             44 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     912
                                              5 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     818
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     842
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    26      9    8248
                                             31 BANK0     35    26      9
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    5214
                                             19 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     286
                                              5 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1894
                                             13 BANK0      6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1276
                                              5 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     232
                                             23 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     818
                                              5 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     842
                                              5 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2916
                                             12 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     321
                                              5 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     437
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1280
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_arrayln                                         2     0      2    5127
                                              7 BANK0      2     0      2
                         _UART_array
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      31
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_array                                           2     0      2    2179
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_init_1                                           6     4      2    7872
                                             79 BANK0      6     4      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     852
                                              5 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1052
                                             69 BANK0     10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    5724
                                             44 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRL                                                5     5      0    3219
                                              0 BANK0      5     5      0
                             _Timers
 ---------------------------------------------------------------------------------
 (11) _Timers                                              0     0      0    3219
                _Convert_Temperature
           _Read_Temperature_DS18B20
 ---------------------------------------------------------------------------------
 (12) _Read_Temperature_DS18B20                           28    24      4    2551
                                             30 COMRAM    28    24      4
                         _OWReadByte
                        _OWWriteByte
                          i1___fldiv
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1173
                                              5 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (13) _OWReadByte                                          6     4      2      95
                                             10 COMRAM     6     4      2
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (14) _OWReadBit                                           5     3      2      24
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _Convert_Temperature                                 0     0      0     668
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (13) _OWWriteByte                                         4     2      2     660
                                              7 COMRAM     4     2      2
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (14) _OWWriteBit                                          2     0      2     161
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _OWReset                                             3     3      0       8
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISRH                                                4     4      0      66
                                              1 COMRAM     4     4      0
                          _UART_read
                       i2_UART_write
 ---------------------------------------------------------------------------------
 (16) i2_UART_write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UART_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init_1
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _Send_Temp
     _UART_array
     _UART_arrayln
       _UART_array
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Set_Pwm
     _PWM_1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _PWM_Stop_1
       _PWM_1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
   _Set_Val
     _ili9341_draw_string
       _ili9341_drawchar
         ___wmul
         _ili9341_pushcolor
           _ili9341_write_date
         _ili9341_setcursor
           _ili9341_write_command
           _ili9341_write_date
     _ili9341_fillrect
       _ili9341_pushcolor
         _ili9341_write_date
       _ili9341_setadress
         _ili9341_write_command
         _ili9341_write_date
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _Task_Com
     _UART_array
     _UART_arrayln
       _UART_array
       _UART_write
     ___wmul
   _UART_array
   _UART_arrayln
     _UART_array
     _UART_write
   _UART_init
     ___aldiv
   _UART_int
   _ili9341_draw_string
     _ili9341_drawchar
       ___wmul
       _ili9341_pushcolor
         _ili9341_write_date
       _ili9341_setcursor
         _ili9341_write_command
         _ili9341_write_date
   _ili9341_drawrect
     _ili9341_drawhline
       _ili9341_pushcolor
         _ili9341_write_date
       _ili9341_setadress
         _ili9341_write_command
         _ili9341_write_date
     _ili9341_drawvline
       _ili9341_pushcolor
         _ili9341_write_date
       _ili9341_setadress
         _ili9341_write_command
         _ili9341_write_date
   _ili9341_fill
     _ili9341_pushcolor
       _ili9341_write_date
     _ili9341_setadress
       _ili9341_write_command
       _ili9341_write_date
   _ili9341_fillrect
     _ili9341_pushcolor
       _ili9341_write_date
     _ili9341_setadress
       _ili9341_write_command
       _ili9341_write_date
   _ili9341_init
     _ili9341_write_command
     _ili9341_write_date

 _ISRL (ROOT)
   _Timers
     _Convert_Temperature
       _OWReset
       _OWWriteByte
         _OWWriteBit
     _Read_Temperature_DS18B20
       _OWReadByte
         _OWReadBit
       _OWWriteByte
         _OWWriteBit
       i1___fldiv
       i1___xxtofl

 _ISRH (ROOT)
   _UART_read
   i2_UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     75      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9      20        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Oct 28 16:09:41 2020

              __end_of_OWWriteByte 5014                       ___fldiv@aexp 00A4  
                     ___fldiv@bexp 00A3                       ___fldiv@sign 009C  
              ??_ili9341_drawhline 0078                        i1___fldiv@a 000A  
                      i1___fldiv@b 0006                ??_ili9341_drawvline 0078  
                     ___awdiv@sign 006A                                 bsr 000FE0  
              ___wmul@multiplicand 0067                      ili9341_fill@i 0072  
                    ili9341_fill@j 0074                         _PWM_Stop_1 5110  
                       i1___xxtofl 36FA                                l217 13D8  
                              l341 4AF6                                l333 513A  
                              l350 49AE                                l176 5098  
                              l494 3ABC                                l496 3B4A  
                              l885 41E0                                _PR2 000FCB  
                              _PSA 007EAB                                _abs 4F7E  
                              _cmd 0100                                _pr2 0049  
                              _pad 4652                         _OWReadByte 4DFE  
                              _ver 004B                                _rpm 003F  
                              _vis 0130                       ___awmod@sign 006A  
                       _PWM_init_1 4470                  _ili9341_setadress 4D3A  
                              wreg 000FE8              ??_ili9341_draw_string 008B  
                     ___flmul@aexp 0080                       ___flmul@bexp 0081  
                     ___flmul@sign 007F                       ___flmul@temp 008A  
                     ___flmul@prod 0086                  _ili9341_setcursor 4F1A  
               ?_ili9341_setadress 0068  __size_of_Read_Temperature_DS18B20 00F8  
        ?_Read_Temperature_DS18B20 001F                      i1___fldiv@grs 0019  
                    i1___fldiv@rem 0012                       ___fltol@exp1 00AE  
                             ?_abs 0077                               l1204 2A20  
                             l1150 242A                               l1215 2A8E  
                             l1216 2A8A                               l1234 205C  
                             l1251 22D4                               l1243 224E  
                             l1244 224A                               l1341 4680  
                             l1165 251E                               l1149 244C  
                             l1174 2584                               l1175 2580  
                             l1352 2E34                               l1408 03D4  
                             l1282 3536                               l1354 2E3C  
                             l1434 06C8                               l1275 34B8  
                             l1534 4FA6                               l1650 4C5E  
                             l1565 36F0                               l1577 3128  
        __end_of_ili9341_drawhline 414A                               ?_pad 0073  
               ?_ili9341_setcursor 0068                               l6600 4106  
                             l6620 431E                               l6614 4306  
                             l6480 3B60                               l6472 3B3C  
                             l5930 351E                               l6626 4340  
                             l6642 438E                               l6562 4006  
                             l5924 34E6                               l6476 3B52  
                             l6468 3AF0                               l6628 434C  
                             l6724 4EF8                               l5926 34EC  
                             l5918 34C8                               l6486 3B74  
                             l6646 43A4                               l6638 4380  
                             l6558 3FC4                               l6742 4AAC  
                             l5936 355C                               l5928 34F8  
                             l6728 4F06                               l6568 400E  
                             l6576 4032                               l6736 4A92  
                             l5954 35A8                               l5938 3568  
                             l6594 40EC                               l6586 40AC  
                             l6738 4A9C                               l6746 4ABC  
                             l6596 40F6                               _ADON 007E10  
                             l9702 2336                               l9730 2382  
                             l9706 233A                               l9804 2492  
                             l9902 504E                               l9806 2496  
                             l9814 24A8                               l9726 237E  
                             l9904 5054                               l9832 2542  
                             l9824 250E                               l9682 46F6  
                             l9842 2558                               l9738 23A2  
                             l9940 33AA                               l9780 2438  
                             l9942 33BE                               l9934 3384  
                             l9782 243C                               STR_1 7FFB  
                             l9960 3456                               l9952 341A  
                             l9928 335C                               l9880 25F8  
                             l9848 2562                               l9768 23DE  
                             STR_2 7FFB                               STR_3 7E0C  
                             l9882 25FA                               STR_4 7D1C  
                             STR_5 7D68                               l9956 3430  
                             l9980 38A4                               l9972 3866  
                             l9876 25F0                               l9868 25CA  
                             l9796 2470                               STR_6 7EEF  
                             STR_7 7EC2                               l9982 38B8  
                             l9894 4EBC                               STR_8 7DCE  
                             STR_9 7D8B                               l9992 3916  
                             l9976 388A                               l9898 4ECE  
                             l9996 393C                               l9988 3900  
                             _T0SE 007EAC                               u6205 3D4C  
                             u6215 3D70                               u6165 3C24  
                             u8030 402E                               u6175 3C46  
                             u6185 3C6A                               u7090 3572  
                             u8130 4350                               u6195 3D2A  
                             _ISRH 0008                               u8090 4148  
                             _ISRL 0018                               _TMR0 000FD6  
                             _TMR2 000FCC          __end_of_ili9341_drawvline 4060  
                             abs@a 0077                               _dbuf 0132  
                _ili9341_pushcolor 5122                               _help 7CF7  
                             _atoi 35BA                ??_ili9341_setadress 0070  
                             _main 0A44                               _giro 004D  
                             _dtoa 2DBE                               _freq 0050  
                             _font 72C9                               _pwm1 0129  
                             _prec 0125                               _temp 011D  
                             _nout 0121                               pad@i 0079  
                             pad@p 0076                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 007B                               fsr2l 000FD9  
                             btemp 0059                      ___fpclassifyf 421C  
                             prodh 000FF4                               prodl 000FF3  
              ??_ili9341_setcursor 006C                               start 007A  
                  __end_of_OWReset 50C8                 ?_ili9341_pushcolor 0068  
                       _OWWriteBit 4E3E                    ___fldiv@new_exp 009D  
                     _tolower$2154 0071                       ___param_bank 000000  
                            ??_abs 0079                ??_ili9341_pushcolor 006A  
                            ??_pad 0078                    __end_of_Set_Val 1FDA  
                  __end_of_Set_Pwm 509E                              ?_ISRH 0001  
                            ?_ISRL 0001                     i1___fldiv@aexp 001E  
                   i1___fldiv@bexp 001D                     i1___fldiv@sign 0016  
                            l10012 28DA                              l10032 291A  
                            l10016 28DE                              l10130 2B2E  
                            l10122 2B20                              l10114 2AD2  
                            l10050 2968                              l11002 16DC  
                            l10044 2952                              l10036 291E  
                            l10220 21F6                              l11020 1792  
                            l10118 2AF6                              l10310 48EC  
                            l10150 2008                              l11022 17AE  
                            l11006 16E6                              l10128 2B2C  
                            l10152 200C                              l11104 1B86  
                            l11040 187C                              l11024 17BA  
                            l11008 1726                              l10082 2A1E  
                            l10058 2980                              l11210 4984  
                            l10314 48FA                              l10306 48E2  
                            l10330 4A14                              l10250 22B0  
                            l10226 2214                              l10170 204C  
                            l10154 201C                              l11042 1898  
                            l11114 1BA6                              l10076 29F8  
                            l10068 29D0                              l11108 1B90  
                            l11060 196E                              l11044 18A4  
                            l11204 4BE0                              l10094 2A54  
                            l10422 441E                              l10406 43D4  
                            l11134 4B00                              l10350 4A5A  
                            l10342 4A42                              l10334 4A22  
                            l10326 4A08                              l10262 22F2  
                            l10246 2292                              l11070 1A14  
                            l11206 4C00                              l11310 1162  
                            l10088 2A36                              l10440 445E  
                            l10432 4436                              l11128 4ACC  
                            l11216 49B8                              l10336 4A2A  
                            l10168 2048                              l10512 308E  
                            l11232 3EC6                              l11240 3F4E  
                            l11304 1146                              l10434 4442  
                            l10426 442E                              l10282 4894  
                            l10346 4A4C                              l10362 47DA  
                            l10178 207A                              l10530 31AE  
                            l10522 314A                              l11082 1A90  
                            l11146 3242                              l11226 3E84  
                            l11402 134C                              l10452 4678  
                            l10604 2FD6                              l11228 3E98  
                            l11420 13F6                              l11308 1160  
                            l10462 46C8                              l10454 468A  
                            l10294 48BA                              l10366 47F8  
                            l10358 47A6                              l10382 41CA  
                            l10374 4180                              l10526 3180  
                            l10710 03DE                              l10622 00C8  
                            l11078 1A6A                              l11182 39C6  
                            l10448 4668                              l10608 2FEE  
                            l10296 48C2                              l10288 48A4  
                            l11176 39C2                              l11168 398A  
                            l11520 1F6A                              l11432 144E  
                            l11416 13B4                              l11344 11E2  
                            l11328 11A6                              l10546 4DB6  
                            l10458 469E                              l10570 2E5C  
                            l10378 41B4                              l10482 42A0  
                            l10706 03BC                              l10634 00F6  
                            l10642 010C                              l11098 1B52  
                            l11186 3A3A                              l11450 1526  
                            l11442 14A2                              l11362 1226  
                            l10556 2E14                              l10388 4218  
                            l10396 5032                              l10724 0436  
                            l10716 03E4                              l10652 017E  
                            l10660 01CA                              l11188 3A46  
                            l11508 1E5A                              l10574 2E6E  
                            l10478 4296                              l10494 4B38  
                            l10742 047E                              l10726 043C  
                            l10670 023C                              l10654 019C  
                            l11542 5086                              l11198 3A58  
                            l11518 1F64                              l11462 1638  
                            l11446 1504                              l11438 1484  
                            l11454 15EA                              l11702 0C6E  
                            l10912 35CC                              l10584 2F68  
                            l10488 42E0                              l10808 0792  
                            l10816 07B2                              l10824 07D6  
                            l10832 086E                              l10752 04B8  
                            l10760 05AE                              l10736 045A  
                            l10656 01A6                              l11456 161E  
                            l11376 125A                              l11296 1112  
                            l11712 0C90                              l11640 0B22  
                            l10930 362E                              l10922 3616  
                            l10914 35D0                              l10746 048E  
                            l10690 032C                              l11458 1626  
                            l11386 1280                              l10932 3634  
                            l10860 0906                              l10844 08BA  
                            l10684 02A2                              l11492 1D58  
                            l11388 12B8                              l11732 0CFE  
                            l11708 0C82                              l11660 0B9A  
                            l11644 0B30                              l11636 0B14  
                            l10934 365C                              l10862 0910  
                            l10782 06C0                              l10774 0668  
                            l10694 0368                              l10678 025C  
                            l11486 1CE4                              l11742 0D1E  
                            l11726 0CF2                              l10928 3626  
                            l10872 0968                              l10784 06E2  
                            l10768 062A                              l10688 02DC  
                            l10960 45EE                              l11496 1DC0  
                            l11832 10D6                              l11736 0D0A  
                            l11760 0D8E                              l11728 0CF6  
                            l11664 0BA2                              l10938 3690  
                            l10882 0994                              l11498 1DC6  
                            l11770 0DC8                              l11762 0DB2  
                            l11746 0D2C                              l11674 0BC4  
                            l10796 0764                              l11780 0DE6  
                            l11668 0BB0                              l11692 0C34  
                            l10958 45E2                              l10990 16CA  
                            l10982 16B0                              l11838 10F0  
                            l11766 0DBA                              l11694 0C58  
                            l11678 0BD2                              l10984 16B4  
                            l11776 0DD8                              l10898 09F8  
                            l10994 16D0                              l10986 16C4  
                            l11794 0E48                              l11698 0C60  
                            l10998 16D6                      ___fltol@sign1 00AD  
                  __end_of___aldiv 43B6                    __end_of___aodiv 3478  
                            ?_atoi 006C                    __end_of___fladd 2616  
                            ?_main 0001                              ?_dtoa 007F  
                  __end_of___aomod 395E                    __end_of___fldiv 2B36  
                  __end_of___awdiv 4904                    __end_of___flneg 5044  
                            STR_10 7F80                              STR_11 7D72  
                            STR_20 7ED9                              STR_12 7E44  
                            STR_13 7F45                              STR_21 7EAB  
        __end_of_ili9341_setadress 4D7E                              STR_22 7E93  
                            STR_30 7F1B                              STR_14 7E93  
                            STR_31 7FFB                              STR_23 7F45  
                            STR_15 7E29                              STR_40 7FD9  
                            STR_32 7FD9                              STR_16 7FC1  
                            STR_24 7DED                              STR_17 7FFB  
                            STR_41 7FE0                              STR_33 7FE0  
                            STR_25 7FCA                              STR_18 7FD9  
                            STR_26 7FD2                              STR_50 7F92  
                            STR_34 7F6D                              STR_42 7E79  
                            STR_51 7FFB                              STR_27 7FFB  
                            STR_19 7FD7                              STR_35 7FA2  
                            STR_43 7F59                              STR_60 7FD2  
                            STR_28 7FD9                              STR_52 7FE0  
                            STR_36 7FFC                              STR_44 7F30  
                  __end_of___awmod 4A64                              STR_45 7FFB  
                            STR_61 7FD2                              STR_37 7FE0  
                            STR_29 7FE0                              STR_53 7D44  
                            STR_62 7FFB                              STR_46 7FD9  
                            STR_54 7FE0                              STR_70 7FF3  
                            STR_38 7F05                              STR_39 7FFB  
                            STR_63 7FD9                              STR_47 7FE0  
                            STR_55 7DAD                              STR_56 7FD2  
                            STR_64 7FFA                              STR_48 7E5F  
                            STR_49 7FFB                              STR_73 7FF7  
                            STR_65 7FE7                              STR_57 7FAD  
                            STR_58 7FD2                              STR_66 7FEF  
                            STR_75 7FF7                              STR_59 7FB7  
                            STR_69 7FEB                    __end_of___flmul 2308  
                  __end_of___flsub 4CF4                    __end_of___fltol 4470  
                            u13000 2566                              u13020 257A  
                  ___awdiv@divisor 0067                              u13200 33C2  
                            u14020 4F8C                              u14100 4B72  
                            u13140 4F76                              u14030 425C  
                            u13150 4F78                              u15000 36C2  
                            u13080 25D6                              u14200 310E  
                            u14120 4C44                              u14130 4C46  
                            u14035 4250                              u14107 4B68  
                            u13500 2B04                              u13260 38BC  
                            u12700 46EE                              u14300 2DE8  
                            u14220 3168                              u13181 338A  
                            u14205 3104                              u14150 305C  
                            u12720 4730                              u14400 2FAE  
                            u14080 42D8                              u14160 307C  
                            u15200 18E8                              u16000 1F76  
                            u14225 315E                              u13450 2A84  
                            u14250 4FDA                              u14330 2E28  
                            u14090 42DA                              u15130 17F0  
                            u16010 1F7C                              u14075 42BA  
                            u14155 3052                              u14260 4FDC  
                            u14420 2FBE                              u12820 2400  
                            u14500 0150                              u15140 17F2  
                            u15310 4AEC                              u14350 2E54  
                            u13630 2244                              u12830 2410  
                            u15070 4630                              u15150 17FE  
                            u14280 4DB2                              u14360 2F78  
                            u12840 2412                              u15240 199E  
                            u14185 30A6                              u13490 2AE0  
                            u15330 4B20                              u14290 2DE6  
                            u13730 48C6                              u14186 30AC  
                            u14610 03CA                              u14530 020C  
                            u14187 30BA                              u14380 2F9A  
                            u14540 020E                              u14460 00E6  
                            u15180 18DA                              u15317 4AE2  
                            u14381 2F98                              u13910 43C2  
                            u15430 49A4                              u14390 2FA8  
                            u13670 22A0                              u13590 2068  
                            u12870 2454                              u15270 1B0A  
                            u15190 18DC                              u13920 43F2  
                            u13840 47F4                              u13680 22BE  
                            u14640 03FC                              u15280 1B0C  
                            u15337 4B16                              u15450 49D8  
                            u14490 014E                              u14580 0390  
                            u13925 43E8                              u15437 499A  
                            u16317 0E54                              u13790 4A2E  
                            u14910 097E                              u15374 3A1C  
                            u15470 3EEE                              u15375 3A16  
                            u16407 4F0E                              u16327 0F84  
                            u13960 4448                              u14680 0456  
                            u15457 49CE                              u16417 4976  
                            u16337 263A                              u14930 09E0  
                            u14850 089A                              u15490 3F6E  
                            u16427 1370                              u16347 2656  
                            u14940 09E2                              u15477 3EE4  
                            u16437 139C                              u16357 2672  
                            _LCD_H 0052                              u16447 14F2  
                            u16367 2692                              u16457 486A  
                            u15497 3F64                              u16377 285C  
                            u14970 3612                              u16467 49A8  
                            u16387 287C                              u15940 1CF2  
                            u16477 4AF0                              u16397 289C  
                            u14990 36C0                              u15870 1344  
                            u15960 1D66                              _LCD_W 0054  
                            i1l247 0062                              i1l371 4E5E  
                            i1l372 4E6E                              i2l236 4D2E  
                            i2l333 5146                    ___awdiv@counter 0069  
                            _RCREG 000FAE                       vfpfcnvrt@fmt 00C5  
                            _SPBRG 000FAF                              _PORTD 000F83  
                            _PWM_1 31C0                              _TRISB 000F93  
                            _TRISD 000F95          __end_of_ili9341_setcursor 4F4C  
                            _TXREG 000FAD                   __end_of_UART_int 4F1A  
                      ?_UART_array 0065                 __size_of_UART_init 007E  
               __size_of_UART_read 000C                              _flags 0127  
                            _est_c 012D                              _est_m 012F  
           ili9341_drawchar@fIndex 0070                              _fputc 46E2  
                            _fputs 4EB0              _ili9341_write_command 3B7C  
                  __end_of_isdigit 4FE2                        ?_UART_write 0001  
                            atoi@n 0079                              pad@fp 0073  
                            _pwm_c 012B                              atoi@s 006C  
                            _width 0123                              _putch 5160  
                            main@h 01F5                              main@i 01E8  
                            dtoa@d 0080                              dtoa@i 00A0  
                            main@w 01F3                              dtoa@n 0098  
                            dtoa@p 0092                              dtoa@s 0096  
                            dtoa@w 0094          __end_of_ili9341_pushcolor 5132  
                            _txt_x 0043                              _txt_y 0041  
                  __end_of_isspace 4DBE                    __end_of_isupper 4F7E  
                            tablat 000FF5                    __end_of_numbers 7CF7  
                            ttemp5 005A                              ttemp6 005D  
                            ttemp7 0061                              status 000FD8  
                            wtemp8 005A                    __end_of_sprintf 4BCE  
                   ?___fpclassifyf 0065                    __end_of_tolower 4C68  
               __size_ofi1___fldiv 0288                        _OWWriteByte 4FE2  
                  __end_of_strncmp 4652       __size_of_Convert_Temperature 0022  
                     __end_of_ISRH 4D3A                       __end_of_ISRL 007A  
               __size_of_OWReadBit 0038                    __initialization 4C68  
            __size_of_ili9341_fill 0066                       __end_of_help 7CFC  
               _ili9341_write_date 3C84                       __end_of_atoi 36FA  
                     __end_of_main 10FE                       __end_of_dtoa 3016  
                     __end_of_font 79AF              __size_of_ili9341_init 0296  
     Read_Temperature_DS18B20@temp 0037                             ??_ISRH 0002  
                           ??_ISRL 0060                        ?_PWM_Stop_1 0001  
                           ??_atoi 006E                             ??_main 01E6  
                           ??_dtoa 0088                        ?i1___xxtofl 0006  
              ?_ili9341_write_date 0001                   __end_of_Task_Com 166C  
                    __activetblptr 000002                      Set_Val@buffer 01C6  
                      ?_OWReadByte 000B                             ?_PWM_1 0001  
                      ?_PWM_init_1 00AF                      Task_Com@i_535 0084  
                           ?_fputc 0065                             ?_fputs 006D  
                           _CCPR1L 000FBE                   ___awdiv@dividend 0065  
       __size_of_ili9341_drawhline 00EA                             ?_putch 0001  
                           i1l1204 2CA8                             i1l1215 2D16  
                           i1l1216 2D12                             i1l1282 37B6  
                           i1l1275 3738         __size_of_ili9341_drawvline 00EA  
                        ??_OWReset 0006                             i1l6170 4FEA  
                           i1l6322 2CA6                             i1l6402 37DC  
                           i1l6316 2C80                             i1l6308 2C58  
                           i1l6252 2B62                             i1l6420 3828  
                           i1l6404 37E8                             i1l7052 4DE6  
                           i1l6334 2CDC                             i1l6184 4E0E  
                           i1l6328 2CBE                             i1l6272 2BA2  
                           i1l6256 2B66                             i1l6370 2DB6  
                           i1l6362 2DA8                             i1l6354 2D5A  
                           i1l6290 2BF0                             i1l6284 2BDA  
                           i1l6276 2BA6                             i1l6358 2D7E  
                           i1l6390 3766                             i1l6368 2DB4  
                           i1l6392 376C                             i1l6384 3748  
                           i1l6544 3E26                             i1l6528 3DAA  
                           i1l6298 2C08                             i1l6394 3778  
                           i1l6396 379E                             i2l7038 5154  
                           i2l7342 4D26                             i2l7344 4D2C  
                           i1l9592 0046                      vfpfcnvrt@done 00D3  
                           _TMR0IE 007F95                             _TMR0IF 007F92  
                           _TMR0ON 007EAF                             _TMR2ON 007E52  
             ??_ili9341_write_date 0065                       _ili9341_fill 4A64  
                     _ili9341_init 2616                   __end_of___xxtofl 35BA  
                      ?_OWWriteBit 0006                          ??_Set_Val 00EF  
                        ??_Set_Pwm 00C0               _Timer_Most_Pant_Temp 0056  
                           _Timers 4DBE                       vfprintf@cfmt 00E3  
                           ___flge 414A                             ___fleq 4772  
                        ??___aldiv 006D                          ??___aodiv 0075  
                        ??___fladd 006D                          ??___aomod 0075  
                           ___wmul 50C8                  __end_of_UART_init 4982  
                __end_of_UART_read 5158                          ??___fldiv 0094  
                        ??___awdiv 0069                          ??___flneg 0069  
               __size_of_Send_Temp 0084                          ??___awmod 0069  
                        ??___flmul 007B                          ??___flsub 0094  
                        ??___fltol 00A9                __size_of_UART_array 005E  
                           _efgtoa 007E                             _gettmp 7D15  
                           _floorf 3016                __size_of_UART_write 000E  
                           clear_0 4C8E                             clear_1 4C9A  
                 ___awdiv@quotient 006B                    ___awmod@divisor 0067  
                           _setest 7D05                    ___awmod@counter 0069  
                           _setpwm 7D0D                             pad@buf 0074  
          ili9341_drawchar@iOffset 007C                             main@x1 01EF  
                           main@y1 01F1                             dtoa@fp 007F  
       __size_of_ili9341_setadress 0044                             _strcpy 4B28  
                           _strlen 5044                  __end_ofi1___fldiv 2DBE  
         __end_of_ili9341_fillrect 3B7C           __end_of_ili9341_drawchar 3A70  
                           fputc@c 0065                             fputs@c 0070  
                           fputs@i 0071                       __pdataCOMRAM 0052  
                           fputs@s 006D         __size_of_ili9341_setcursor 0032  
                        ??_isdigit 0067           __end_of_ili9341_drawrect 45BC  
                  ___fpclassifyf@e 006D                    ___fpclassifyf@u 006F  
                  ___fpclassifyf@x 0065                       __mediumconst 65A8  
                        ??_isspace 0067                   __end_of_setreset 7D05  
                           tblptrh 000FF7                          ??_isupper 0067  
                           tblptrl 000FF6                             tblptru 000FF8  
                __end_of_OWReadBit 4EB0             ?_ili9341_write_command 0001  
                           putch@c 0001                   __end_of_vfprintf 4C1C  
                        ??_sprintf 00E5                          ??_tolower 006D  
                        ??_strncmp 006A         __size_of_ili9341_pushcolor 0010  
                       ___flge@ff1 008C                         ___flge@ff2 0090  
                  ??___fpclassifyf 0069                       ___xxtofl@arg 006F  
                     ___xxtofl@exp 006E                       ___xxtofl@val 0065  
                       ___fleq@ff1 0065                         ___fleq@ff2 0069  
                       __accesstop 0060            __end_of__initialization 4CA0  
                       ___flneg@f1 0065                __size_of_PWM_Stop_1 0012  
              __size_ofi1___xxtofl 0140                      ___rparam_used 000001  
                ili9341_fill@color 0070                         ___fltol@f1 00A5  
                    __end_of_PWM_1 3330                __size_of_OWReadByte 0040  
              __size_of_PWM_init_1 00B2                     __pcstackCOMRAM 0001  
                        ?_UART_int 0065                      __end_of_fputc 4772  
                    __end_of_fputs 4EE6             ili9341_drawhline@color 0076  
 __end_of_Read_Temperature_DS18B20 3E82                      __end_of_putch 5162  
                ili9341_fillrect@h 0076                  ili9341_fillrect@w 0074  
                ili9341_fillrect@x 0070                  ili9341_fillrect@y 0072  
    Read_Temperature_DS18B20@ftemp 0031                  ili9341_drawchar@i 0080  
                ili9341_drawchar@j 007E                  ili9341_drawchar@k 007F  
                ili9341_drawchar@x 006C                  ili9341_drawchar@y 006E  
                ili9341_drawrect@h 0087                  ili9341_drawrect@w 0085  
                ili9341_drawrect@x 0081                  ili9341_drawrect@y 0083  
                          ??_PWM_1 00AF                __size_of_OWWriteBit 003A  
                       _bigNumbers 65A9                            ??_fputc 0068  
                          ??_fputs 0070                  __end_of_Send_Temp 4880  
                          ??_putch 0065                      ?i2_UART_write 0001  
                       __pbssBANK1 0100               ili9341_draw_string@k 008F  
             ili9341_draw_string@x 0081               ili9341_draw_string@y 0083  
                   i1___xxtofl@arg 0010                     i1___xxtofl@exp 000F  
                   i1___xxtofl@val 0006                            ISRH@aux 0004  
                        ?_Task_Com 0001                   UART_array@cadena 0065  
                          ?_Timers 0001                            ?___flge 008C  
                          ?___fleq 0065                            ?___wmul 0065  
                          ?_efgtoa 00B9                         ??_UART_int 0066  
                          ?_floorf 00A5                    Send_Temp@buffer 00F0  
      __end_of_ili9341_draw_string 3F76                            ?_strcpy 0065  
                          ?_strlen 0065                _Convert_Temperature 50EE  
                        ?___xxtofl 0065                 __size_of_vfpfcnvrt 0566  
                     ??_UART_array 0067                     ??i2_UART_write 0001  
                     ??_UART_write 0065                          PWM_1@duty 00BD  
                          _OWReset 509E                       ?_OWWriteByte 0008  
             ?_Convert_Temperature 0001                     OWReadByte@loop 000F  
                       ??_Task_Com 006B                            __Hparam 0000  
                          _Set_Val 1BD2                            _Set_Pwm 5072  
                          __Lparam 0000                    __size_of_Timers 0040  
                  PWM_1@pulso_alto 00B5                            ___aldiv 42EA  
                  __size_of___flge 00D2                    __size_of___fleq 008A  
                          ___aodiv 3330                            ___fladd 2308  
                          ___aomod 383A                            ___fldiv 28AC  
                          ___awdiv 4880                            ___flneg 5014  
                          ___awmod 49F4                            ___flmul 1FDA  
                          ___flsub 4CAE                            ___fltol 43B6  
                  __size_of___wmul 0026                          ?_vfprintf 01BA  
                  __size_of_efgtoa 09C6                 __end_of_UART_array 4B28  
                    ?_UART_arrayln 0067                    __size_of_floorf 01AA  
                          __pcinit 4C68                            __ramtop 0800  
               __end_of_UART_write 5140                       ??_PWM_Stop_1 00C0  
                     ??i1___xxtofl 000A                            __ptext0 0A44  
                          __ptext1 2616                            __ptext2 4A64  
                          __ptext3 4522                            __ptext4 3F76  
                          __ptext5 4060                            __ptext6 4EE6  
                          __ptext7 4904                            __ptext8 42EA  
                          __ptext9 10FE                          _T0CONbits 000FD5  
                  __size_of_strcpy 0054                    __size_of_strlen 002E  
                     ??_OWReadByte 000D                          _T2CONbits 000FCA  
                     __size_of_abs 0032           _Read_Temperature_DS18B20 3D8A  
                     __size_of_pad 0090                            _isdigit 4FB0  
                     ??_PWM_init_1 00B1                         ??___xxtofl 0069  
                 ___awmod@dividend 0065                   ___aldiv@dividend 0065  
                          _isspace 4D7E                            _isupper 4F4C  
                          efgtoa@c 00BE                            efgtoa@d 019A  
                          efgtoa@e 01B2                            efgtoa@f 00BA  
                          efgtoa@g 01AC                            efgtoa@h 01A4  
                          efgtoa@i 01B0                            efgtoa@l 01A8  
                          efgtoa@m 0196                            efgtoa@n 01B4  
                          efgtoa@p 019E                            efgtoa@t 0192  
                          efgtoa@u 01B6                            efgtoa@w 01A1  
                          _set_ver 004C                            _numbers 79AF  
                          atoi@neg 0072                            _sprintf 4B7C  
                          _tolower 4C1C                            _strncmp 45BC  
                   __pintcode_body 4CF4               end_of_initialization 4CA0  
         ili9341_drawchar@bg_color 0074                            floorf@e 00B3  
                          floorf@m 00AF                            floorf@u 00B5  
                          floorf@x 00A5                            fputc@fp 0067  
            ??_Convert_Temperature 000C                      __Lmediumconst 65A8  
                          int_func 4CF4                            fputs@fp 006F  
                        i1u1268_20 0052                          i1u1650_27 4EA2  
                        i1u1651_27 4E4E                          i1u1652_27 4E58  
                        i1u1653_27 4E66                          i1u1654_27 4E70  
                        i1u1655_27 50AA                          i1u1656_27 50B8  
                        i1u1648_27 4E80                          i1u1657_27 50C0  
                        i1u1649_27 4E8A                       ??_OWWriteBit 0008  
               __end_of_PWM_Stop_1 5122                 __end_ofi1___xxtofl 383A  
               __end_of_OWReadByte 4E3E                  __end_of_vfpfcnvrt 1BD2  
                       efgtoa@mode 01A3                         efgtoa@sign 019C  
                        _RCSTAbits 000FAB                 __end_of_PWM_init_1 4522  
                 ___aldiv@quotient 006F                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                   ??_UART_arrayln 0069                         ??_vfprintf 00E3  
                          strcpy@d 006D                            strlen@a 0067  
                          strcpy@s 006B                            strlen@s 0065  
                        _PORTBbits 000F81                          _UART_init 4904  
                        _UART_read 514C                          _PORTDbits 000F83  
          ??_ili9341_write_command 0065                 UART_arrayln@cadena 0067  
                      ___fladd@grs 0074                  ?_ili9341_fillrect 0070  
                ?_ili9341_drawchar 006C                  ?_ili9341_drawrect 0081  
                    ___xxtofl@sign 006D                          _TRISBbits 000F93  
                        _TRISCbits 000F94                 __end_of_OWWriteBit 4E78  
               ??_ili9341_fillrect 007A                          i1___fldiv 2B36  
               ??_ili9341_drawchar 0076                        ___fldiv@grs 009F  
                      ___fldiv@rem 0098                 ??_ili9341_drawrect 008B  
                       _vis_p_temp 012C                          _OWReadBit 4E78  
              ili9341_setadress@ec 006A                ili9341_setadress@ep 006E  
              ili9341_setadress@sc 0068                ili9341_setadress@sp 006C  
           ili9341_drawvline@color 0076                        ___flmul@grs 0082  
                   _UART_init$2421 0076                        _CCP1CONbits 000FBD  
      __size_of_ili9341_write_date 0106                          _TXSTAbits 000FAC  
            ili9341_fillrect@color 0078                     __end_of_Timers 4DFE  
             __end_ofi2_UART_write 514C                     __end_of___flge 421C  
                   __end_of___fleq 47FC                        vfpfcnvrt@ap 00C6  
                      vfpfcnvrt@ct 00E0                        vfpfcnvrt@fp 00C4  
                      vfpfcnvrt@ll 00CB                     __end_of___wmul 50EE  
        Read_Temperature_DS18B20@k 0035                      __pidataCOMRAM 5158  
                   __end_of_efgtoa 0A44                     __end_of_gettmp 7D1C  
                   __end_of_floorf 31C0                         ?_UART_init 0073  
                       ?_UART_read 0001                  __size_of_UART_int 0034  
                       floorf@F524 0119                         _txt_colour 0047  
                   __end_of_setest 7D0D              ili9341_drawchar@color 0072  
                   __end_of_setpwm 7D15                     __end_of_strcpy 4B7C  
                   __end_of_strlen 5072                start_initialization 4C68  
                      __end_of_abs 4FB0                        __end_of_pad 46E2  
                       ?i1___fldiv 0006                          Task_Com@i 0086  
                        Task_Com@j 0071                         ?_OWReadBit 0006  
               ili9341_drawhline@i 007F                 ili9341_drawhline@j 007D  
               ili9341_drawhline@w 0074                 ili9341_drawhline@x 0070  
               ili9341_drawhline@y 0072                 Task_Com@buffer_val 0081  
               Task_Com@buffer_set 0072                   OWReadByte@result 000D  
            __end_of___fpclassifyf 42EA                       Task_Com@flag 0070  
                        _Send_Temp 47FC                 ili9341_drawvline@h 0074  
               ili9341_drawvline@i 007D                 ili9341_drawvline@j 007F  
               ili9341_drawvline@x 0070                 ili9341_drawvline@y 0072  
                 i2UART_write@dato 0001               __size_of_OWWriteByte 0032  
                        _Most_Temp 012E                           ??_Timers 003B  
                      vfprintf@fmt 01BB                           ??___flge 0094  
                         ??___fleq 006D                  __size_of_Task_Com 056E  
                         ??___wmul 0069                           ??_efgtoa 00BF  
                         ??_floorf 00A9             ili9341_pushcolor@color 0068  
                         ??_strcpy 0069                           ??_strlen 0067  
                        ___fladd@a 0069                          ___fladd@b 0065  
                        ___fldiv@a 0090                          ___fldiv@b 008C  
                        ___flmul@a 0077                          ___flmul@b 0073  
                      __pbssCOMRAM 003B                          ___flsub@a 0090  
                        ___flsub@b 008C              ili9341_draw_string@pS 0085  
                    __pcstackBANK0 0060                      __pcstackBANK1 0182  
                 ___aodiv@dividend 0065                  __size_of___xxtofl 0142  
                  i1___xxtofl@sign 000E               __end_of_UART_arrayln 49F4  
                         ?_OWReset 0001                          _bg_colour 0045  
                i1___fldiv@new_exp 0017                         ?_Send_Temp 0001  
                        _atoi$2060 0078                          _atoi$2061 0076  
                        _atoi$2059 0074                UART_int@transmicion 0065  
                      _efgtoa$2001 018C                        _efgtoa$2002 018E  
                      _efgtoa$2003 0190                        _efgtoa$1992 0186  
                      _efgtoa$1993 0188                        _efgtoa$1997 018A  
                         ?_Set_Val 0001                           ?_Set_Pwm 0001  
                        _dtoa$1968 0090                          __pintcode 0008  
                    __pmediumconst 65A8                           ?___aldiv 0065  
                         ?___aodiv 0065                           ?___fladd 0065  
                         ?___aomod 0065         ??_Read_Temperature_DS18B20 0023  
                         ?___fldiv 008C                           ?___awdiv 0065  
                 ___aodiv@quotient 0077                           ?___flneg 0065  
                         ?___awmod 0065                           ?___flmul 0073  
                         ?___flsub 008C                           ?___fltol 00A5  
           ili9341_write_date@date 0067                          _fin_carro 0131  
            ili9341_drawrect@color 0089                        __pintcodelo 0018  
        ili9341_draw_string@lIndex 0091                        ??_UART_init 0075  
                      ??_UART_read 0001               PWM_init_1@frecuencia 00AF  
                __size_of_vfprintf 004E                           PWM_1@aux 00B9  
                         PWM_1@per 00B1                           PWM_1@pwm 00BE  
                         ?_isdigit 0065                     __size_of_PWM_1 0170  
                  Task_Com@comando 0085                           ?_isspace 0065  
                         ?_isupper 0065                        ??i1___fldiv 000E  
     __size_of_ili9341_draw_string 00F4                           ?_sprintf 01BE  
                         ?_tolower 006B                     __size_of_fputc 0090  
                   __size_of_fputs 0036                           ?_strncmp 0065  
                  OWReadBit@result 0009                     __size_of_putch 0002  
                      ??_OWReadBit 0008                    _Timer_Lect_Temp 0058  
                  ___aldiv@divisor 0069                      ?_ili9341_fill 0070  
                  ___aldiv@counter 006D                      ?_ili9341_init 0001  
                   ___wmul@product 0069                      PWM_init_1@per 00B1  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
            __size_ofi2_UART_write 000C                           i1u702_20 4E98  
                         i1u702_28 4E9A                           i1u742_20 5012  
                         i1u744_20 4E34                           _PIR1bits 000F9E  
                         i1u771_20 2D68                           i1u772_20 2D8C  
                         i1u780_20 37F2                           i1u767_20 2D0C  
                         i1u798_20 3DCE                           _RCONbits 000FD0  
               __end_of_bigNumbers 72C9                           _UART_int 4EE6  
                        _vfpfcnvrt 166C                          main@i_461 01E9  
                        main@i_462 01EA                          main@i_463 01EB  
                        main@i_464 01EC                  ___wmul@multiplier 0065  
                   UART_write@dato 0065                          main@color 01ED  
   __size_of_ili9341_write_command 0108      __end_of_ili9341_write_command 3C84  
                     _isspace$2090 006B        __end_of_Convert_Temperature 5110  
                       vfpfcnvrt@c 00DB                         vfpfcnvrt@f 00DC  
                      _INTCON2bits 000FF1        Read_Temperature_DS18B20@get 0027  
                        copy_data0 4C7C                       i2_UART_write 5140  
                   ??_ili9341_fill 0072                     ??_ili9341_init 0068  
               ili9341_setcursor@x 0068                 ili9341_setcursor@y 006A  
                 __size_of_OWReset 002A                        ??_Send_Temp 00EF  
        __size_of_ili9341_fillrect 010C          __size_of_ili9341_drawchar 0112  
        __size_of_ili9341_drawrect 009A                           _Task_Com 10FE  
                         __Hrparam 0000                      UART_init@BAUD 0073  
                       vfprintf@ap 01BD                           __Lrparam 0000  
                       vfprintf@fp 01BA                   __size_of_Set_Val 0408  
                 __size_of_Set_Pwm 002C                        OWWriteBit@x 0006  
                 __size_of___aldiv 00CC                   __size_of___aodiv 0148  
                 __size_of___fladd 030E                   __size_of___aomod 0124  
                 __size_of___fldiv 028A                   __size_of___awdiv 0084  
                 __size_of___flneg 0030                   __size_of___awmod 0070  
                 __size_of___flmul 032E                   __size_of___flsub 0046  
                 __size_of___fltol 00BA                         ?_vfpfcnvrt 00C4  
                  ___aodiv@divisor 006D                    ___aodiv@counter 0075  
               ___fpclassifyf@F463 003B                         sprintf@fmt 01C0  
                         ___xxtofl 3478                   __size_of_isdigit 0032  
            __size_of_UART_arrayln 0072           ili9341_write_command@cmd 0067  
                 __size_of_isspace 0040                           __ptext10 1BD2  
                         __ptext11 3A70                           __ptext20 5110  
                         __ptext12 4D3A                           __ptext21 31C0  
                         __ptext13 3E82                           __ptext30 4B28  
                         __ptext22 47FC                           __ptext14 395E  
                         __ptext31 3016                           __ptext23 4B7C  
                         __ptext15 4F1A                           __ptext40 4880  
                         __ptext32 421C                           __ptext24 4BCE  
                         __ptext16 3B7C                           __ptext41 2DBE  
                         __ptext33 4CAE                           __ptext25 166C  
                         __ptext17 5122                           __ptext50 35BA  
                         __ptext42 4652                           __ptext34 2308  
                         __ptext26 45BC                           __ptext18 3C84  
                         __ptext51 4D7E                           __ptext43 5044  
                         __ptext35 5014                           __ptext27 007E  
                         __ptext19 5072                           __ptext60 28AC  
                         __ptext52 4FB0                           __ptext44 4EB0  
                         __ptext36 1FDA                           __ptext28 4C1C  
                         __ptext53 50C8                           __ptext45 46E2  
                         __ptext37 414A                           __ptext29 4F4C  
                         __ptext70 4E3E                           __ptext62 4DBE  
                         __ptext54 4982                           __ptext46 5160  
                         __ptext38 4772                           __ptext71 509E  
                         __ptext63 3D8A                           __ptext55 5132  
                         __ptext47 4F7E                           __ptext39 49F4  
                         __ptext64 36FA                           __ptext56 4ACA  
                         __ptext48 383A                           __ptext73 5140  
                         __ptext65 2B36                           __ptext57 4470  
                         __ptext49 3330                           __ptext74 514C  
                         __ptext66 4DFE                           __ptext58 3478  
                         __ptext67 4E78                           __ptext59 43B6  
                         __ptext68 50EE                           __ptext69 4FE2  
                 __size_of_isupper 0032         __end_of_ili9341_write_date 3D8A  
                 __size_of_sprintf 0052                   __size_of_tolower 004C  
                    __size_of_ISRH 4D32                      __size_of_ISRL 0062  
                         _giro_ant 004E                         strcpy@dest 0065  
                 __size_of_strncmp 0096                      __size_of_atoi 0140  
                    __size_of_main 06BA                      __size_of_dtoa 0258  
                         _long_cad 004F                           efgtoa@fp 00B9  
                         efgtoa@ne 0198                           efgtoa@pp 0194  
                         efgtoa@ou 0182                           _setreset 7CFC  
                         int$flags 0059                  UART_int@recepcion 0067  
                         _vfprintf 4BCE                       _UART_arrayln 4982  
                 ___aomod@dividend 0065                     _vfpfcnvrt$2023 00D9  
                   _vfpfcnvrt$2017 00D5                     _vfpfcnvrt$2018 00D7  
                       _INTCONbits 000FF2                           isdigit@c 0065  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 00E7        ili9341_draw_string@bg_color 0089  
                         isspace@c 0065                      ??_OWWriteByte 000A  
                        strcpy@src 0067        ili9341_draw_string@fg_color 0087  
                         isupper@c 0065                          strncmp@_l 0065  
                        strncmp@_r 0066                _ili9341_draw_string 3E82  
                      efgtoa@nmode 01A0                    ___aomod@divisor 006D  
                      ??_vfpfcnvrt 00C7                    ___aomod@counter 0075  
             __end_of_ili9341_fill 4ACA               __end_of_ili9341_init 28AC  
                         sprintf@f 00E9                           tolower@c 006B  
                         sprintf@s 01BE             __size_of___fpclassifyf 00CE  
                         strncmp@l 006D                           strncmp@n 0068  
                         strncmp@r 006B                       ___aldiv@sign 006E  
             ?_ili9341_draw_string 0081                         _UART_array 4ACA  
                    ___fladd@signs 0071                         _UART_write 5132  
                     ___aodiv@sign 0076                  _ili9341_drawhline 4060  
                     ___fladd@aexp 0072                    OWWriteByte@data 0008  
                     ___fladd@bexp 0073                    OWWriteByte@loop 000A  
                _ili9341_drawvline 3F76                   _ili9341_fillrect 3A70  
                 _ili9341_drawchar 395E                 ?_ili9341_drawhline 0070  
                 _ili9341_drawrect 4522                       ___aomod@sign 0076  
               ?_ili9341_drawvline 0070  
