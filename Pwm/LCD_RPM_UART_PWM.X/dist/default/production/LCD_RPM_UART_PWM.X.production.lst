

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Sep 03 00:30:52 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 09/04/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F877A Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  010F                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  0008                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  000E                     	;# 
   283  000E                     	;# 
   284  000F                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001D                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  0081                     	;# 
   304  0085                     	;# 
   305  0086                     	;# 
   306  0087                     	;# 
   307  0088                     	;# 
   308  0089                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  0091                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0094                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  010E                     	;# 
   325  010F                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448                           
   449                           	psect	idataCOMMON
   450  0003                     __pidataCOMMON:
   451                           
   452                           ;initializer for _flanco
   453  0003  3401               	retlw	1
   454                           
   455                           	psect	strings
   456  1000                     __pstrings:
   457  1000                     stringtab:
   458  1000                     __stringtab:
   459                           
   460                           ;	String table - string pointers are 1 byte each
   461  1000  1BFF               	btfsc	btemp+1,7
   462  1001  280A               	ljmp	stringcode
   463  1002  1383               	bcf	3,7
   464  1003  187F               	btfsc	btemp+1,0
   465  1004  1783               	bsf	3,7
   466  1005  0800               	movf	0,w
   467  1006  0A84               	incf	4,f
   468  1007  1903               	skipnz
   469  1008  0AFF               	incf	btemp+1,f
   470  1009  0008               	return
   471  100A                     stringcode:
   472  100A                     stringdir:
   473  100A  3010               	movlw	high stringdir
   474  100B  008A               	movwf	10
   475  100C  0804               	movf	4,w
   476  100D  0A84               	incf	4,f
   477  100E  0782               	addwf	2,f
   478  100F                     __stringbase:
   479  100F  3400               	retlw	0
   480  1010                     __end_of__stringtab:
   481  1010                     _dpowers:
   482  1010  3401               	retlw	1
   483  1011  3400               	retlw	0
   484  1012  340A               	retlw	10
   485  1013  3400               	retlw	0
   486  1014  3464               	retlw	100
   487  1015  3400               	retlw	0
   488  1016  34E8               	retlw	232
   489  1017  3403               	retlw	3
   490  1018  3410               	retlw	16
   491  1019  3427               	retlw	39
   492  101A                     __end_of_dpowers:
   493  000E                     _TMR1	set	14
   494  001D                     _CCP2CON	set	29
   495  001B                     _CCPR2L	set	27
   496  0017                     _CCP1CON	set	23
   497  0015                     _CCPR1L	set	21
   498  001A                     _RCREG	set	26
   499  0019                     _TXREG	set	25
   500  0018                     _RCSTAbits	set	24
   501  0008                     _PORTDbits	set	8
   502  0010                     _T1CONbits	set	16
   503  000C                     _PIR1bits	set	12
   504  000B                     _INTCONbits	set	11
   505  0006                     _PORTBbits	set	6
   506  0008                     _PORTD	set	8
   507  00EA                     _CCP2M2	set	234
   508  00EB                     _CCP2M3	set	235
   509  00EC                     _CCP2Y	set	236
   510  00ED                     _CCP2X	set	237
   511  00BA                     _CCP1M2	set	186
   512  00BB                     _CCP1M3	set	187
   513  0092                     _TMR2ON	set	146
   514  0091                     _T2CKPS1	set	145
   515  0090                     _T2CKPS0	set	144
   516  00BC                     _CCP1Y	set	188
   517  00BD                     _CCP1X	set	189
   518  0060                     _TMR1IF	set	96
   519  0059                     _INTF	set	89
   520  0092                     _PR2	set	146
   521  008C                     _PIE1bits	set	140
   522  0099                     _SPBRG	set	153
   523  0098                     _TXSTAbits	set	152
   524  0087                     _TRISCbits	set	135
   525  0086                     _TRISBbits	set	134
   526  0086                     _TRISB	set	134
   527  0088                     _TRISD	set	136
   528  040E                     _INTEDG	set	1038
   529  101A                     STR_1:
   530  101A  344D               	retlw	77	;'M'
   531  101B  344F               	retlw	79	;'O'
   532  101C  3454               	retlw	84	;'T'
   533  101D  344F               	retlw	79	;'O'
   534  101E  3452               	retlw	82	;'R'
   535  101F  343A               	retlw	58	;':'
   536  1020  3400               	retlw	0
   537  1021                     STR_2:
   538  1021  3452               	retlw	82	;'R'
   539  1022  3450               	retlw	80	;'P'
   540  1023  344D               	retlw	77	;'M'
   541  1024  343A               	retlw	58	;':'
   542  1025  3400               	retlw	0
   543  1026                     STR_3:
   544  1026  3450               	retlw	80	;'P'
   545  1027  3457               	retlw	87	;'W'
   546  1028  344D               	retlw	77	;'M'
   547  1029  343A               	retlw	58	;':'
   548  102A  3400               	retlw	0
   549  102B                     STR_8:
   550  102B  3425               	retlw	37	;'%'
   551  102C  3430               	retlw	48	;'0'
   552  102D  3433               	retlw	51	;'3'
   553  102E  3464               	retlw	100	;'d'
   554  102F  3400               	retlw	0
   555  1030                     STR_9:
   556  1030  3425               	retlw	37	;'%'
   557  1031  3430               	retlw	48	;'0'
   558  1032  3434               	retlw	52	;'4'
   559  1033  3475               	retlw	117	;'u'
   560  1034  3400               	retlw	0
   561  1035                     STR_5:
   562  1035  344F               	retlw	79	;'O'
   563  1036  3446               	retlw	70	;'F'
   564  1037  3446               	retlw	70	;'F'
   565  1038  3400               	retlw	0
   566  1039                     STR_6:
   567  1039  3449               	retlw	73	;'I'
   568  103A  345A               	retlw	90	;'Z'
   569  103B  3451               	retlw	81	;'Q'
   570  103C  3400               	retlw	0
   571  103D                     STR_7:
   572  103D  3444               	retlw	68	;'D'
   573  103E  3445               	retlw	69	;'E'
   574  103F  3452               	retlw	82	;'R'
   575  1040  3400               	retlw	0
   576  1041                     STR_4:
   577  1041  344F               	retlw	79	;'O'
   578  1042  344E               	retlw	78	;'N'
   579  1043  3400               	retlw	0
   580  1021                     
   581                           	psect	cinit
   582  0013                     start_initialization:	
   583                           ; #config settings
   584                           
   585  0013                     __initialization:
   586                           
   587                           ; Initialize objects allocated to COMMON
   588  0013  120A  118A  2003   	fcall	__pidataCOMMON	;fetch initializer
   589  0016  00F8               	movwf	__pdataCOMMON& (0+127)
   590                           
   591                           ; Clear objects allocated to BANK1
   592  0017  1683               	bsf	3,5	;RP0=1, select bank1
   593  0018  01C9               	clrf	__pbssBANK1& (0+127)
   594  0019  01CA               	clrf	(__pbssBANK1+1)& (0+127)
   595  001A  01CB               	clrf	(__pbssBANK1+2)& (0+127)
   596  001B  01CC               	clrf	(__pbssBANK1+3)& (0+127)
   597  001C  01CD               	clrf	(__pbssBANK1+4)& (0+127)
   598                           
   599                           ; Clear objects allocated to COMMON
   600  001D  01F6               	clrf	__pbssCOMMON& (0+127)
   601  001E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   602  001F                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  001F                     __end_of__initialization:
   606  001F  0183               	clrf	3
   607  0020  120A  118A  2D86   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  0076                     __pbssCOMMON:
   611  0076                     _T:
   612  0076                     	ds	2
   613                           
   614                           	psect	dataCOMMON
   615  0078                     __pdataCOMMON:
   616  0078                     _flanco:
   617  0078                     	ds	1
   618                           
   619                           	psect	bssBANK1
   620  00C9                     __pbssBANK1:
   621  00C9                     _pwm:
   622  00C9                     	ds	1
   623  00CA                     _on:
   624  00CA                     	ds	1
   625  00CB                     _giro:
   626  00CB                     	ds	1
   627  00CC                     _freq:
   628  00CC                     	ds	2
   629                           
   630                           	psect	cstackBANK1
   631  00A0                     __pcstackBANK1:
   632  00A0                     ??___fladd:
   633  00A0                     ?___fttol:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  00A0                     ___fttol@f1:	
   637                           ; 4 bytes @ 0x0
   638                           
   639                           
   640                           ; 3 bytes @ 0x0
   641  00A0                     	ds	4
   642  00A4                     ??___fttol:
   643                           
   644                           ; 1 bytes @ 0x4
   645  00A4                     	ds	3
   646  00A7                     ___fttol@sign1:
   647                           
   648                           ; 1 bytes @ 0x7
   649  00A7                     	ds	1
   650  00A8                     ?___fltol:
   651  00A8                     ___fltol@f1:	
   652                           ; 4 bytes @ 0x8
   653                           
   654  00A8                     ___fttol@lval:	
   655                           ; 4 bytes @ 0x8
   656                           
   657                           
   658                           ; 4 bytes @ 0x8
   659  00A8                     	ds	4
   660  00AC                     ??___fltol:
   661  00AC                     ___fttol@exp1:	
   662                           ; 1 bytes @ 0xC
   663                           
   664                           
   665                           ; 1 bytes @ 0xC
   666  00AC                     	ds	1
   667  00AD                     ??_PWM_1:
   668  00AD                     ??_PWM_2:	
   669                           ; 1 bytes @ 0xD
   670                           
   671                           
   672                           ; 1 bytes @ 0xD
   673  00AD                     	ds	3
   674  00B0                     ?_PWM_init_1:
   675  00B0                     ?_PWM_init_2:	
   676                           ; 1 bytes @ 0x10
   677                           
   678  00B0                     PWM_init_1@frecuencia:	
   679                           ; 1 bytes @ 0x10
   680                           
   681  00B0                     PWM_init_2@frecuencia:	
   682                           ; 2 bytes @ 0x10
   683                           
   684                           
   685                           ; 2 bytes @ 0x10
   686  00B0                     	ds	2
   687  00B2                     ??_PWM_init_1:
   688  00B2                     ??_PWM_init_2:	
   689                           ; 1 bytes @ 0x12
   690                           
   691                           
   692                           ; 1 bytes @ 0x12
   693  00B2                     	ds	1
   694  00B3                     PWM_1@per:
   695  00B3                     PWM_2@per:	
   696                           ; 3 bytes @ 0x13
   697                           
   698                           
   699                           ; 3 bytes @ 0x13
   700  00B3                     	ds	3
   701  00B6                     PWM_init_1@per:
   702  00B6                     PWM_1@pulso_alto:	
   703                           ; 3 bytes @ 0x16
   704                           
   705  00B6                     PWM_init_2@per:	
   706                           ; 3 bytes @ 0x16
   707                           
   708  00B6                     PWM_2@pulso_alto:	
   709                           ; 3 bytes @ 0x16
   710                           
   711                           
   712                           ; 3 bytes @ 0x16
   713  00B6                     	ds	3
   714  00B9                     PWM_1@aux:
   715  00B9                     PWM_2@aux:	
   716                           ; 3 bytes @ 0x19
   717                           
   718                           
   719                           ; 3 bytes @ 0x19
   720  00B9                     	ds	3
   721  00BC                     PWM_1@duty:
   722  00BC                     PWM_2@duty:	
   723                           ; 1 bytes @ 0x1C
   724                           
   725                           
   726                           ; 1 bytes @ 0x1C
   727  00BC                     	ds	1
   728  00BD                     PWM_1@pwm:
   729  00BD                     PWM_2@pwm:	
   730                           ; 2 bytes @ 0x1D
   731                           
   732                           
   733                           ; 2 bytes @ 0x1D
   734  00BD                     	ds	2
   735  00BF                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x1F
   738  00BF                     	ds	3
   739  00C2                     main@buffer:
   740                           
   741                           ; 5 bytes @ 0x22
   742  00C2                     	ds	5
   743  00C7                     main@rpm:
   744                           
   745                           ; 2 bytes @ 0x27
   746  00C7                     	ds	2
   747                           
   748                           	psect	cstackCOMMON
   749  0070                     __pcstackCOMMON:
   750  0070                     ?_isdigit:
   751  0070                     ?_LCD_init:	
   752                           ; 1 bit 
   753                           
   754  0070                     ?_RPM_init:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_UART_init:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_LCD_command:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_antirrebote:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_LCD_date:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_PWM_Stop_2:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_PWM_1:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_PWM_Stop_1:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_PWM_2:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_UART_write:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_UART_read:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ??_UART_read:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_LCD_E:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_main:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_ventana:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?i1_UART_write:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ??i1_UART_write:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     i1UART_write@dato:	
   806                           ; 1 bytes @ 0x0
   807                           
   808                           
   809                           ; 1 bytes @ 0x0
   810  0070                     	ds	1
   811  0071                     ??_ventana:
   812                           
   813                           ; 1 bytes @ 0x1
   814  0071                     	ds	3
   815  0074                     ventana@tecla:
   816                           
   817                           ; 1 bytes @ 0x4
   818  0074                     	ds	1
   819  0075                     ??_RPM_init:
   820  0075                     ??_UART_init:	
   821                           ; 1 bytes @ 0x5
   822                           
   823  0075                     ??_PWM_Stop_2:	
   824                           ; 1 bytes @ 0x5
   825                           
   826  0075                     ??_PWM_Stop_1:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0075                     ??_UART_write:	
   830                           ; 1 bytes @ 0x5
   831                           
   832  0075                     ??_LCD_E:	
   833                           ; 1 bytes @ 0x5
   834                           
   835  0075                     ??_isdigit:	
   836                           ; 1 bytes @ 0x5
   837                           
   838  0075                     ??___wmul:	
   839                           ; 1 bytes @ 0x5
   840                           
   841  0075                     ??___awtoft:	
   842                           ; 1 bytes @ 0x5
   843                           
   844  0075                     ??___lwdiv:	
   845                           ; 1 bytes @ 0x5
   846                           
   847  0075                     ??___lwmod:	
   848                           ; 1 bytes @ 0x5
   849                           
   850  0075                     LCD_command@cmd:	
   851                           ; 1 bytes @ 0x5
   852                           
   853  0075                     LCD_date@date:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0075                     UART_write@dato:	
   857                           ; 1 bytes @ 0x5
   858                           
   859  0075                     ___awtoft@sign:	
   860                           ; 1 bytes @ 0x5
   861                           
   862  0075                     ___lwmod@counter:	
   863                           ; 1 bytes @ 0x5
   864                           
   865                           
   866                           ; 1 bytes @ 0x5
   867  0075                     	ds	1
   868  0076                     ??_LCD_xy:
   869  0076                     ??_UART_array:	
   870                           ; 1 bytes @ 0x6
   871                           
   872                           
   873                           	psect	cstackBANK0
   874  0020                     __pcstackBANK0:	
   875                           ; 1 bytes @ 0x6
   876                           
   877  0020                     ??_LCD_command:
   878  0020                     ??_antirrebote:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0020                     ??_LCD_date:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0020                     ?_UART_array:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0020                     ?__Umul8_16:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0020                     ?___wmul:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0020                     ?___lwdiv:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0020                     ?___ftpack:	
   897                           ; 2 bytes @ 0x0
   898                           
   899  0020                     ?___xxtofl:	
   900                           ; 3 bytes @ 0x0
   901                           
   902  0020                     __Umul8_16@multiplicand:	
   903                           ; 4 bytes @ 0x0
   904                           
   905  0020                     _isdigit$1228:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0020                     UART_array@cadena:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0020                     ___wmul@multiplier:	
   912                           ; 2 bytes @ 0x0
   913                           
   914  0020                     ___lwdiv@divisor:	
   915                           ; 2 bytes @ 0x0
   916                           
   917  0020                     ___ftpack@arg:	
   918                           ; 2 bytes @ 0x0
   919                           
   920  0020                     ___xxtofl@val:	
   921                           ; 3 bytes @ 0x0
   922                           
   923                           
   924                           ; 4 bytes @ 0x0
   925  0020                     	ds	1
   926  0021                     isdigit@c:
   927                           
   928                           ; 1 bytes @ 0x1
   929  0021                     	ds	1
   930  0022                     ??_LCD_init:
   931  0022                     ?_LCD_array:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  0022                     ?_LCD_xy:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  0022                     ??__Umul8_16:	
   938                           ; 1 bytes @ 0x2
   939                           
   940  0022                     LCD_array@x:	
   941                           ; 1 bytes @ 0x2
   942                           
   943  0022                     LCD_xy@x:	
   944                           ; 2 bytes @ 0x2
   945                           
   946  0022                     ___wmul@multiplicand:	
   947                           ; 2 bytes @ 0x2
   948                           
   949  0022                     ___lwdiv@dividend:	
   950                           ; 2 bytes @ 0x2
   951                           
   952                           
   953                           ; 2 bytes @ 0x2
   954  0022                     	ds	1
   955  0023                     ___ftpack@exp:
   956                           
   957                           ; 1 bytes @ 0x3
   958  0023                     	ds	1
   959  0024                     ??___xxtofl:
   960  0024                     LCD_init@i:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0024                     ___ftpack@sign:	
   964                           ; 1 bytes @ 0x4
   965                           
   966  0024                     ___lwdiv@counter:	
   967                           ; 1 bytes @ 0x4
   968                           
   969  0024                     LCD_array@y:	
   970                           ; 1 bytes @ 0x4
   971                           
   972  0024                     LCD_xy@y:	
   973                           ; 2 bytes @ 0x4
   974                           
   975  0024                     ___wmul@product:	
   976                           ; 2 bytes @ 0x4
   977                           
   978  0024                     __Umul8_16@product:	
   979                           ; 2 bytes @ 0x4
   980                           
   981                           
   982                           ; 2 bytes @ 0x4
   983  0024                     	ds	1
   984  0025                     ??___ftpack:
   985  0025                     ___lwdiv@quotient:	
   986                           ; 1 bytes @ 0x5
   987                           
   988                           
   989                           ; 2 bytes @ 0x5
   990  0025                     	ds	1
   991  0026                     LCD_array@date:
   992  0026                     __Umul8_16@word_mpld:	
   993                           ; 2 bytes @ 0x6
   994                           
   995                           
   996                           ; 2 bytes @ 0x6
   997  0026                     	ds	1
   998  0027                     ?___lwmod:
   999  0027                     ___lwmod@divisor:	
  1000                           ; 2 bytes @ 0x7
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x7
  1004  0027                     	ds	1
  1005  0028                     ??_LCD_array:
  1006  0028                     ?___awtoft:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009  0028                     __Umul8_16@multiplier:	
  1010                           ; 3 bytes @ 0x8
  1011                           
  1012  0028                     ___xxtofl@sign:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015  0028                     ___awtoft@c:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0x8
  1020  0028                     	ds	1
  1021  0029                     ___xxtofl@exp:
  1022  0029                     ___lwmod@dividend:	
  1023                           ; 1 bytes @ 0x9
  1024                           
  1025                           
  1026                           ; 2 bytes @ 0x9
  1027  0029                     	ds	1
  1028  002A                     ___xxtofl@arg:
  1029                           
  1030                           ; 4 bytes @ 0xA
  1031  002A                     	ds	1
  1032  002B                     ?_sprintf:
  1033  002B                     ?___ftmul:	
  1034                           ; 2 bytes @ 0xB
  1035                           
  1036  002B                     sprintf@f:	
  1037                           ; 3 bytes @ 0xB
  1038                           
  1039  002B                     ___ftmul@f1:	
  1040                           ; 1 bytes @ 0xB
  1041                           
  1042                           
  1043                           ; 3 bytes @ 0xB
  1044  002B                     	ds	3
  1045  002E                     ??_sprintf:
  1046  002E                     ?___flmul:	
  1047                           ; 1 bytes @ 0xE
  1048                           
  1049  002E                     ___ftmul@f2:	
  1050                           ; 4 bytes @ 0xE
  1051                           
  1052  002E                     ___flmul@b:	
  1053                           ; 3 bytes @ 0xE
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0xE
  1057  002E                     	ds	3
  1058  0031                     ??___ftmul:
  1059  0031                     sprintf@prec:	
  1060                           ; 1 bytes @ 0x11
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x11
  1064  0031                     	ds	1
  1065  0032                     sprintf@ap:
  1066  0032                     ___flmul@a:	
  1067                           ; 1 bytes @ 0x12
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x12
  1071  0032                     	ds	1
  1072  0033                     sprintf@val:
  1073                           
  1074                           ; 2 bytes @ 0x13
  1075  0033                     	ds	1
  1076  0034                     ___ftmul@exp:
  1077                           
  1078                           ; 1 bytes @ 0x14
  1079  0034                     	ds	1
  1080  0035                     sprintf@flag:
  1081  0035                     ___ftmul@f3_as_product:	
  1082                           ; 1 bytes @ 0x15
  1083                           
  1084                           
  1085                           ; 3 bytes @ 0x15
  1086  0035                     	ds	1
  1087  0036                     ??___flmul:
  1088  0036                     sprintf@width:	
  1089                           ; 1 bytes @ 0x16
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0x16
  1093  0036                     	ds	2
  1094  0038                     sprintf@sp:
  1095  0038                     ___ftmul@cntr:	
  1096                           ; 1 bytes @ 0x18
  1097                           
  1098                           
  1099                           ; 1 bytes @ 0x18
  1100  0038                     	ds	1
  1101  0039                     sprintf@c:
  1102  0039                     ___ftmul@sign:	
  1103                           ; 1 bytes @ 0x19
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0x19
  1107  0039                     	ds	2
  1108  003B                     ___flmul@sign:
  1109                           
  1110                           ; 1 bytes @ 0x1B
  1111  003B                     	ds	1
  1112  003C                     ___flmul@aexp:
  1113                           
  1114                           ; 1 bytes @ 0x1C
  1115  003C                     	ds	1
  1116  003D                     ___flmul@bexp:
  1117                           
  1118                           ; 1 bytes @ 0x1D
  1119  003D                     	ds	1
  1120  003E                     ___flmul@grs:
  1121                           
  1122                           ; 4 bytes @ 0x1E
  1123  003E                     	ds	4
  1124  0042                     ___flmul@prod:
  1125                           
  1126                           ; 4 bytes @ 0x22
  1127  0042                     	ds	4
  1128  0046                     ___flmul@temp:
  1129                           
  1130                           ; 2 bytes @ 0x26
  1131  0046                     	ds	2
  1132  0048                     ?___fldiv:
  1133  0048                     ___fldiv@a:	
  1134                           ; 4 bytes @ 0x28
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x28
  1138  0048                     	ds	4
  1139  004C                     ___fldiv@b:
  1140                           
  1141                           ; 4 bytes @ 0x2C
  1142  004C                     	ds	4
  1143  0050                     ??___fldiv:
  1144                           
  1145                           ; 1 bytes @ 0x30
  1146  0050                     	ds	5
  1147  0055                     ___fldiv@rem:
  1148                           
  1149                           ; 4 bytes @ 0x35
  1150  0055                     	ds	4
  1151  0059                     ___fldiv@sign:
  1152                           
  1153                           ; 1 bytes @ 0x39
  1154  0059                     	ds	1
  1155  005A                     ___fldiv@new_exp:
  1156                           
  1157                           ; 2 bytes @ 0x3A
  1158  005A                     	ds	2
  1159  005C                     ___fldiv@grs:
  1160                           
  1161                           ; 4 bytes @ 0x3C
  1162  005C                     	ds	4
  1163  0060                     ___fldiv@bexp:
  1164                           
  1165                           ; 1 bytes @ 0x40
  1166  0060                     	ds	1
  1167  0061                     ___fldiv@aexp:
  1168                           
  1169                           ; 1 bytes @ 0x41
  1170  0061                     	ds	1
  1171  0062                     ?_RPM_read:
  1172  0062                     ?___fladd:	
  1173                           ; 3 bytes @ 0x42
  1174                           
  1175  0062                     ___fladd@b:	
  1176                           ; 4 bytes @ 0x42
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0x42
  1180  0062                     	ds	3
  1181  0065                     ??_RPM_read:
  1182                           
  1183                           ; 1 bytes @ 0x45
  1184  0065                     	ds	1
  1185  0066                     ___fladd@a:
  1186                           
  1187                           ; 4 bytes @ 0x46
  1188  0066                     	ds	3
  1189  0069                     RPM_read@freq:
  1190                           
  1191                           ; 3 bytes @ 0x49
  1192  0069                     	ds	1
  1193  006A                     ___fladd@signs:
  1194                           
  1195                           ; 1 bytes @ 0x4A
  1196  006A                     	ds	1
  1197  006B                     ___fladd@aexp:
  1198                           
  1199                           ; 1 bytes @ 0x4B
  1200  006B                     	ds	1
  1201  006C                     ___fladd@bexp:
  1202  006C                     RPM_read@rpm:	
  1203                           ; 1 bytes @ 0x4C
  1204                           
  1205                           
  1206                           ; 3 bytes @ 0x4C
  1207  006C                     	ds	1
  1208  006D                     ___fladd@grs:
  1209                           
  1210                           ; 1 bytes @ 0x4D
  1211  006D                     	ds	1
  1212  006E                     ___fltol@sign1:
  1213                           
  1214                           ; 1 bytes @ 0x4E
  1215  006E                     	ds	1
  1216  006F                     ___fltol@exp1:
  1217                           
  1218                           ; 1 bytes @ 0x4F
  1219  006F                     	ds	1
  1220                           
  1221                           	psect	maintext
  1222  0586                     __pmaintext:	
  1223 ;;
  1224 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1225 ;;
  1226 ;; *************** function _main *****************
  1227 ;; Defined at:
  1228 ;;		line 49 in file "Main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  buffer          5   34[BANK1 ] unsigned char [5]
  1233 ;;  rpm             2   39[BANK1 ] unsigned int 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : B00/0
  1240 ;;		On exit  : 300/100
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         0       0       7       0       0
  1245 ;;      Temps:          0       0       3       0       0
  1246 ;;      Totals:         0       0      10       0       0
  1247 ;;Total ram usage:       10 bytes
  1248 ;; Hardware stack levels required when called:    5
  1249 ;; This function calls:
  1250 ;;		_LCD_array
  1251 ;;		_LCD_command
  1252 ;;		_LCD_date
  1253 ;;		_LCD_init
  1254 ;;		_LCD_xy
  1255 ;;		_PWM_1
  1256 ;;		_PWM_2
  1257 ;;		_PWM_Stop_1
  1258 ;;		_PWM_Stop_2
  1259 ;;		_PWM_init_1
  1260 ;;		_PWM_init_2
  1261 ;;		_RPM_init
  1262 ;;		_RPM_read
  1263 ;;		_UART_array
  1264 ;;		_UART_init
  1265 ;;		_UART_write
  1266 ;;		___fttol
  1267 ;;		_antirrebote
  1268 ;;		_sprintf
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _main
  1276  0586                     _main:
  1277                           
  1278                           ;Main.c: 52:     TRISD = 0x00;
  1279                           
  1280                           ;incstack = 0
  1281                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1282  0586  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0587  0188               	clrf	8	;volatile
  1284                           
  1285                           ;Main.c: 53:     PORTD = 0x00;
  1286  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0589  0188               	clrf	8	;volatile
  1288                           
  1289                           ;Main.c: 54:     TRISB = 255;
  1290  058A  30FF               	movlw	255
  1291  058B  1683               	bsf	3,5	;RP0=1, select bank1
  1292  058C  0086               	movwf	6	;volatile
  1293                           
  1294                           ;Main.c: 57:     LCD_init();
  1295  058D  120A  158A  203C  120A  118A  	fcall	_LCD_init
  1296                           
  1297                           ;Main.c: 58:     RPM_init();
  1298  0592  160A  118A  23BB  120A  118A  	fcall	_RPM_init
  1299                           
  1300                           ;Main.c: 59:     UART_init();
  1301  0597  160A  118A  23D7  120A  118A  	fcall	_UART_init
  1302                           
  1303                           ;Main.c: 60:     PWM_init_1(5000);
  1304  059C  3088               	movlw	136
  1305  059D  00B0               	movwf	PWM_init_1@frecuencia^(0+128)
  1306  059E  3013               	movlw	19
  1307  059F  00B1               	movwf	(PWM_init_1@frecuencia^(0+128)+1)
  1308  05A0  160A  118A  270C  120A  118A  	fcall	_PWM_init_1
  1309                           
  1310                           ;Main.c: 61:     PWM_init_2(5000);
  1311  05A5  3088               	movlw	136
  1312  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1313  05A7  00B0               	movwf	PWM_init_2@frecuencia^(0+128)
  1314  05A8  3013               	movlw	19
  1315  05A9  00B1               	movwf	(PWM_init_2@frecuencia^(0+128)+1)
  1316  05AA  120A  118A  277A  120A  118A  	fcall	_PWM_init_2
  1317                           
  1318                           ;Main.c: 72:     LCD_command(0x01);
  1319  05AF  3001               	movlw	1
  1320  05B0  160A  118A  24E5  120A  118A  	fcall	_LCD_command
  1321                           
  1322                           ;Main.c: 73:     LCD_array(1,1,"MOTOR:");
  1323  05B5  3001               	movlw	1
  1324  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1325  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1326  05B8  00A2               	movwf	LCD_array@x
  1327  05B9  3000               	movlw	0
  1328  05BA  00A3               	movwf	LCD_array@x+1
  1329  05BB  3001               	movlw	1
  1330  05BC  00A4               	movwf	LCD_array@y
  1331  05BD  3000               	movlw	0
  1332  05BE  00A5               	movwf	LCD_array@y+1
  1333  05BF  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1334  05C0  00A6               	movwf	LCD_array@date
  1335  05C1  3080               	movlw	128
  1336  05C2  00A7               	movwf	LCD_array@date+1
  1337  05C3  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1338                           
  1339                           ;Main.c: 74:     LCD_array(2,1,"RPM:");
  1340  05C8  3002               	movlw	2
  1341  05C9  00A2               	movwf	LCD_array@x
  1342  05CA  3000               	movlw	0
  1343  05CB  00A3               	movwf	LCD_array@x+1
  1344  05CC  3001               	movlw	1
  1345  05CD  00A4               	movwf	LCD_array@y
  1346  05CE  3000               	movlw	0
  1347  05CF  00A5               	movwf	LCD_array@y+1
  1348  05D0  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1349  05D1  00A6               	movwf	LCD_array@date
  1350  05D2  3080               	movlw	128
  1351  05D3  00A7               	movwf	LCD_array@date+1
  1352  05D4  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1353                           
  1354                           ;Main.c: 75:     LCD_array(2,10,"PWM:");
  1355  05D9  3002               	movlw	2
  1356  05DA  00A2               	movwf	LCD_array@x
  1357  05DB  3000               	movlw	0
  1358  05DC  00A3               	movwf	LCD_array@x+1
  1359  05DD  300A               	movlw	10
  1360  05DE  00A4               	movwf	LCD_array@y
  1361  05DF  3000               	movlw	0
  1362  05E0  00A5               	movwf	LCD_array@y+1
  1363  05E1  3017               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1364  05E2  00A6               	movwf	LCD_array@date
  1365  05E3  3080               	movlw	128
  1366  05E4  00A7               	movwf	LCD_array@date+1
  1367  05E5  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1368                           
  1369                           ;Main.c: 78:     TRISBbits.TRISB5 = 0;
  1370  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  1371  05EB  1286               	bcf	6,5	;volatile
  1372                           
  1373                           ;Main.c: 79:     TRISBbits.TRISB6 = 0;
  1374  05EC  1306               	bcf	6,6	;volatile
  1375                           
  1376                           ;Main.c: 80:     PORTBbits.RB5 = 1;
  1377  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1378  05EE  1686               	bsf	6,5	;volatile
  1379                           
  1380                           ;Main.c: 81:     PORTBbits.RB6 = 0;
  1381  05EF  1306               	bcf	6,6	;volatile
  1382                           
  1383                           ;Main.c: 84:     on = 0;
  1384  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  1385  05F1  01CA               	clrf	_on^(0+128)
  1386                           
  1387                           ;Main.c: 85:     giro = 0;
  1388  05F2  01CB               	clrf	_giro^(0+128)
  1389                           
  1390                           ;Main.c: 90:     char buffer[5];;Main.c: 91:     unsigned int rpm=0;
  1391  05F3  01C7               	clrf	main@rpm^(0+128)
  1392  05F4  01C8               	clrf	(main@rpm+1)^(0+128)
  1393  05F5                     l5225:
  1394                           
  1395                           ;Main.c: 96:     {;Main.c: 97:         if(PORTBbits.RB1 == 1) on=!on,antirrebote();
  1396  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1397  05F6  1C86               	btfss	6,1	;volatile
  1398  05F7  2E07               	goto	l5231
  1399  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1400  05F9  084A               	movf	_on^(0+128),w
  1401  05FA  1D03               	btfss	3,2
  1402  05FB  2DFE               	goto	u7250
  1403  05FC  3001               	movlw	1
  1404  05FD  2DFF               	goto	u7260
  1405  05FE                     u7250:
  1406  05FE  3000               	movlw	0
  1407  05FF                     u7260:
  1408  05FF  00FF               	movwf	127
  1409  0600  087F               	movf	127,w
  1410  0601  00CA               	movwf	_on^(0+128)
  1411  0602  160A  118A  23E8  120A  118A  	fcall	_antirrebote
  1412  0607                     l5231:
  1413                           
  1414                           ;Main.c: 98:         if(PORTBbits.RB3 == 1) antirrebote(),pwm+=25;
  1415  0607  1D86               	btfss	6,3	;volatile
  1416  0608  2E13               	goto	l5237
  1417  0609  160A  118A  23E8  120A  118A  	fcall	_antirrebote
  1418  060E  3019               	movlw	25
  1419  060F  00FF               	movwf	127
  1420  0610  087F               	movf	127,w
  1421  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0612  07C9               	addwf	_pwm^(0+128),f
  1423  0613                     l5237:
  1424                           
  1425                           ;Main.c: 101:         if(on == 1)
  1426  0613  1683               	bsf	3,5	;RP0=1, select bank1
  1427  0614  034A               	decf	_on^(0+128),w
  1428  0615  1D03               	btfss	3,2
  1429  0616  2E99               	goto	l5263
  1430                           
  1431                           ;Main.c: 102:         {;Main.c: 103:             LCD_xy(1,9);
  1432  0617  3001               	movlw	1
  1433  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0619  00A2               	movwf	LCD_xy@x
  1435  061A  3000               	movlw	0
  1436  061B  00A3               	movwf	LCD_xy@x+1
  1437  061C  3009               	movlw	9
  1438  061D  00A4               	movwf	LCD_xy@y
  1439  061E  3000               	movlw	0
  1440  061F  00A5               	movwf	LCD_xy@y+1
  1441  0620  160A  118A  2482  120A  118A  	fcall	_LCD_xy
  1442                           
  1443                           ;Main.c: 104:             LCD_date(0);
  1444  0625  3000               	movlw	0
  1445  0626  160A  118A  251C  120A  118A  	fcall	_LCD_date
  1446                           
  1447                           ;Main.c: 105:             LCD_array(1,7,"ON");
  1448  062B  3001               	movlw	1
  1449  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1450  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1451  062E  00A2               	movwf	LCD_array@x
  1452  062F  3000               	movlw	0
  1453  0630  00A3               	movwf	LCD_array@x+1
  1454  0631  3007               	movlw	7
  1455  0632  00A4               	movwf	LCD_array@y
  1456  0633  3000               	movlw	0
  1457  0634  00A5               	movwf	LCD_array@y+1
  1458  0635  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1459  0636  00A6               	movwf	LCD_array@date
  1460  0637  3080               	movlw	128
  1461  0638  00A7               	movwf	LCD_array@date+1
  1462  0639  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1463                           
  1464                           ;Main.c: 108:             if(giro == 1)
  1465  063E  1683               	bsf	3,5	;RP0=1, select bank1
  1466  063F  034B               	decf	_giro^(0+128),w
  1467  0640  1D03               	btfss	3,2
  1468  0641  2E68               	goto	l5253
  1469                           
  1470                           ;Main.c: 109:             {;Main.c: 110:                 PWM_Stop_2();
  1471  0642  160A  118A  239C  120A  118A  	fcall	_PWM_Stop_2
  1472                           
  1473                           ;Main.c: 111:                 PWM_1(pwm);
  1474  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0648  0849               	movf	_pwm^(0+128),w
  1476  0649  120A  158A  22A4  120A  118A  	fcall	_PWM_1
  1477                           
  1478                           ;Main.c: 112:                 rpm = (int)RPM_read();
  1479  064E  160A  118A  2625  120A  118A  	fcall	_RPM_read
  1480  0653  0862               	movf	?_RPM_read,w
  1481  0654  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0655  00A0               	movwf	___fttol@f1^(0+128)
  1483  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0657  0863               	movf	?_RPM_read+1,w
  1485  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0659  00A1               	movwf	(___fttol@f1+1)^(0+128)
  1487  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1488  065B  0864               	movf	?_RPM_read+2,w
  1489  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1490  065D  00A2               	movwf	(___fttol@f1+2)^(0+128)
  1491  065E  160A  118A  2785  120A  118A  	fcall	___fttol
  1492  0663  0821               	movf	(?___fttol+1)^(0+128),w
  1493  0664  00C8               	movwf	(main@rpm+1)^(0+128)
  1494  0665  0820               	movf	?___fttol^(0+128),w
  1495  0666  00C7               	movwf	main@rpm^(0+128)
  1496                           
  1497                           ;Main.c: 113:             }
  1498  0667  2EF5               	goto	l5291
  1499  0668                     l5253:
  1500                           
  1501                           ;Main.c: 115:             {;Main.c: 116:                 PWM_Stop_1();
  1502  0668  160A  118A  2396  120A  118A  	fcall	_PWM_Stop_1
  1503                           
  1504                           ;Main.c: 117:                 PWM_2(pwm);
  1505  066D  1683               	bsf	3,5	;RP0=1, select bank1
  1506  066E  0849               	movf	_pwm^(0+128),w
  1507  066F  120A  158A  23A9  120A  118A  	fcall	_PWM_2
  1508                           
  1509                           ;Main.c: 118:                 rpm = (int)RPM_read();
  1510  0674  160A  118A  2625  120A  118A  	fcall	_RPM_read
  1511  0679  0862               	movf	?_RPM_read,w
  1512  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1513  067B  00A0               	movwf	___fttol@f1^(0+128)
  1514  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1515  067D  0863               	movf	?_RPM_read+1,w
  1516  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1517  067F  00A1               	movwf	(___fttol@f1+1)^(0+128)
  1518  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0681  0864               	movf	?_RPM_read+2,w
  1520  0682  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0683  00A2               	movwf	(___fttol@f1+2)^(0+128)
  1522  0684  160A  118A  2785  120A  118A  	fcall	___fttol
  1523  0689  0821               	movf	(?___fttol+1)^(0+128),w
  1524  068A  00C8               	movwf	(main@rpm+1)^(0+128)
  1525  068B  0820               	movf	?___fttol^(0+128),w
  1526  068C  00C7               	movwf	main@rpm^(0+128)
  1527                           
  1528                           ;Main.c: 119:                 if(rpm > 9999) rpm = 9999;
  1529  068D  3027               	movlw	39
  1530  068E  0248               	subwf	(main@rpm+1)^(0+128),w
  1531  068F  3010               	movlw	16
  1532  0690  1903               	skipnz
  1533  0691  0247               	subwf	main@rpm^(0+128),w
  1534  0692  1C03               	skipc
  1535  0693  2EF5               	goto	l5291
  1536  0694  300F               	movlw	15
  1537  0695  00C7               	movwf	main@rpm^(0+128)
  1538  0696  3027               	movlw	39
  1539  0697  00C8               	movwf	(main@rpm^(0+128)+1)
  1540  0698  2EF5               	goto	l5291
  1541  0699                     l5263:
  1542  0699  084A               	movf	_on^(0+128),w
  1543  069A  1D03               	btfss	3,2
  1544  069B  2EF5               	goto	l5291
  1545                           
  1546                           ;Main.c: 124:         {;Main.c: 125:             PWM_Stop_1();
  1547  069C  160A  118A  2396  120A  118A  	fcall	_PWM_Stop_1
  1548                           
  1549                           ;Main.c: 126:             PWM_Stop_2();
  1550  06A1  160A  118A  239C  120A  118A  	fcall	_PWM_Stop_2
  1551                           
  1552                           ;Main.c: 127:             LCD_array(1,7,"OFF");
  1553  06A6  3001               	movlw	1
  1554  06A7  00A2               	movwf	LCD_array@x
  1555  06A8  3000               	movlw	0
  1556  06A9  00A3               	movwf	LCD_array@x+1
  1557  06AA  3007               	movlw	7
  1558  06AB  00A4               	movwf	LCD_array@y
  1559  06AC  3000               	movlw	0
  1560  06AD  00A5               	movwf	LCD_array@y+1
  1561  06AE  3026               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1562  06AF  00A6               	movwf	LCD_array@date
  1563  06B0  3080               	movlw	128
  1564  06B1  00A7               	movwf	LCD_array@date+1
  1565  06B2  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1566                           
  1567                           ;Main.c: 128:             rpm = 0;
  1568  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  1569  06B8  01C7               	clrf	main@rpm^(0+128)
  1570  06B9  01C8               	clrf	(main@rpm+1)^(0+128)
  1571                           
  1572                           ;Main.c: 129:             pwm = 0;
  1573  06BA  01C9               	clrf	_pwm^(0+128)
  1574                           
  1575                           ;Main.c: 132:             if(PORTBbits.RB2 == 1) antirrebote(),giro=!giro;
  1576  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1577  06BC  1D06               	btfss	6,2	;volatile
  1578  06BD  2ECD               	goto	l5279
  1579  06BE  160A  118A  23E8  120A  118A  	fcall	_antirrebote
  1580  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  1581  06C4  084B               	movf	_giro^(0+128),w
  1582  06C5  1D03               	btfss	3,2
  1583  06C6  2EC9               	goto	u7330
  1584  06C7  3001               	movlw	1
  1585  06C8  2ECA               	goto	u7340
  1586  06C9                     u7330:
  1587  06C9  3000               	movlw	0
  1588  06CA                     u7340:
  1589  06CA  00FF               	movwf	127
  1590  06CB  087F               	movf	127,w
  1591  06CC  00CB               	movwf	_giro^(0+128)
  1592  06CD                     l5279:
  1593                           
  1594                           ;Main.c: 135:             if(giro == 1) PORTBbits.RB6=1,PORTBbits.RB5=0,LCD_array(1,14,"
      +                          IZQ");
  1595  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1596  06CE  034B               	decf	_giro^(0+128),w
  1597  06CF  1D03               	btfss	3,2
  1598  06D0  2EDE               	goto	l5285
  1599  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1600  06D2  1706               	bsf	6,6	;volatile
  1601  06D3  1286               	bcf	6,5	;volatile
  1602  06D4  3001               	movlw	1
  1603  06D5  00A2               	movwf	LCD_array@x
  1604  06D6  3000               	movlw	0
  1605  06D7  00A3               	movwf	LCD_array@x+1
  1606  06D8  300E               	movlw	14
  1607  06D9  00A4               	movwf	LCD_array@y
  1608  06DA  3000               	movlw	0
  1609  06DB  00A5               	movwf	LCD_array@y+1
  1610  06DC  302A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1611  06DD  2EED               	goto	L1
  1612  06DE                     l5285:
  1613  06DE  084B               	movf	_giro^(0+128),w
  1614  06DF  1D03               	btfss	3,2
  1615  06E0  2EF5               	goto	l5291
  1616  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1617  06E2  1686               	bsf	6,5	;volatile
  1618  06E3  1306               	bcf	6,6	;volatile
  1619  06E4  3001               	movlw	1
  1620  06E5  00A2               	movwf	LCD_array@x
  1621  06E6  3000               	movlw	0
  1622  06E7  00A3               	movwf	LCD_array@x+1
  1623  06E8  300E               	movlw	14
  1624  06E9  00A4               	movwf	LCD_array@y
  1625  06EA  3000               	movlw	0
  1626  06EB  00A5               	movwf	LCD_array@y+1
  1627  06EC  302E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1628  06ED                     L1:
  1629  06ED  00A6               	movwf	LCD_array@date
  1630  06EE  3080               	movlw	128
  1631  06EF  00A7               	movwf	LCD_array@date+1
  1632  06F0  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1633  06F5                     l5291:
  1634                           
  1635                           ;Main.c: 140:         if(pwm > 100) pwm = 0;
  1636  06F5  3065               	movlw	101
  1637  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1638  06F7  0249               	subwf	_pwm^(0+128),w
  1639  06F8  1803               	btfsc	3,0
  1640  06F9  01C9               	clrf	_pwm^(0+128)
  1641                           
  1642                           ;Main.c: 142:         sprintf(buffer,"%03d",pwm);
  1643  06FA  301C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1644  06FB  00FF               	movwf	127
  1645  06FC  087F               	movf	127,w
  1646  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1647  06FE  00AB               	movwf	sprintf@f
  1648  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0700  0849               	movf	_pwm^(0+128),w
  1650  0701  00BF               	movwf	??_main^(0+128)
  1651  0702  01C0               	clrf	(??_main^(0+128)+1)
  1652  0703  083F               	movf	??_main^(0+128),w
  1653  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0705  00AC               	movwf	?_sprintf+1
  1655  0706  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0707  0840               	movf	(??_main+1)^(0+128),w
  1657  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0709  00AD               	movwf	?_sprintf+2
  1659  070A  30C2               	movlw	(low (main@buffer| 0))& (0+255)
  1660  070B  120A  158A  264F  120A  118A  	fcall	_sprintf
  1661                           
  1662                           ;Main.c: 143:         LCD_array(2,14,buffer);
  1663  0710  3002               	movlw	2
  1664  0711  00A2               	movwf	LCD_array@x
  1665  0712  3000               	movlw	0
  1666  0713  00A3               	movwf	LCD_array@x+1
  1667  0714  300E               	movlw	14
  1668  0715  00A4               	movwf	LCD_array@y
  1669  0716  3000               	movlw	0
  1670  0717  00A5               	movwf	LCD_array@y+1
  1671  0718  30C2               	movlw	(low (main@buffer| 0))& (0+255)
  1672  0719  00A6               	movwf	LCD_array@date
  1673  071A  3000               	movlw	0
  1674  071B  00A7               	movwf	LCD_array@date+1
  1675  071C  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1676                           
  1677                           ;Main.c: 145:         if(rpm < 9999 && rpm != 0)
  1678  0721  3027               	movlw	39
  1679  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0723  0248               	subwf	(main@rpm+1)^(0+128),w
  1681  0724  300F               	movlw	15
  1682  0725  1903               	skipnz
  1683  0726  0247               	subwf	main@rpm^(0+128),w
  1684  0727  1803               	skipnc
  1685  0728  2DF5               	goto	l5225
  1686  0729  0847               	movf	main@rpm^(0+128),w
  1687  072A  0448               	iorwf	(main@rpm+1)^(0+128),w
  1688  072B  1903               	btfsc	3,2
  1689  072C  2DF5               	goto	l5225
  1690                           
  1691                           ;Main.c: 146:         {;Main.c: 148:             sprintf(buffer,"%04u",rpm);
  1692  072D  3021               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1693  072E  00FF               	movwf	127
  1694  072F  087F               	movf	127,w
  1695  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0731  00AB               	movwf	sprintf@f
  1697  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0733  0848               	movf	(main@rpm+1)^(0+128),w
  1699  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0735  00AD               	movwf	?_sprintf+2
  1701  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0737  0847               	movf	main@rpm^(0+128),w
  1703  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0739  00AC               	movwf	?_sprintf+1
  1705  073A  30C2               	movlw	(low (main@buffer| 0))& (0+255)
  1706  073B  120A  158A  264F  120A  118A  	fcall	_sprintf
  1707                           
  1708                           ;Main.c: 149:             LCD_array(2,5,buffer);
  1709  0740  3002               	movlw	2
  1710  0741  00A2               	movwf	LCD_array@x
  1711  0742  3000               	movlw	0
  1712  0743  00A3               	movwf	LCD_array@x+1
  1713  0744  3005               	movlw	5
  1714  0745  00A4               	movwf	LCD_array@y
  1715  0746  3000               	movlw	0
  1716  0747  00A5               	movwf	LCD_array@y+1
  1717  0748  30C2               	movlw	(low (main@buffer| 0))& (0+255)
  1718  0749  00A6               	movwf	LCD_array@date
  1719  074A  3000               	movlw	0
  1720  074B  00A7               	movwf	LCD_array@date+1
  1721  074C  160A  118A  2555  120A  118A  	fcall	_LCD_array
  1722                           
  1723                           ;Main.c: 151:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1724  0751  3003               	movlw	3
  1725  0752  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0753  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0754  00C1               	movwf	(??_main^(0+128)+2)
  1728  0755  308A               	movlw	138
  1729  0756  00C0               	movwf	(??_main^(0+128)+1)
  1730  0757  3055               	movlw	85
  1731  0758  00BF               	movwf	??_main^(0+128)
  1732  0759                     u7407:
  1733  0759  0BBF               	decfsz	??_main^(0+128),f
  1734  075A  2F59               	goto	u7407
  1735  075B  0BC0               	decfsz	(??_main^(0+128)+1),f
  1736  075C  2F59               	goto	u7407
  1737  075D  0BC1               	decfsz	(??_main^(0+128)+2),f
  1738  075E  2F59               	goto	u7407
  1739                           
  1740                           ;Main.c: 153:             UART_array("RPM:");
  1741  075F  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1742  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0762  00A0               	movwf	UART_array@cadena
  1745  0763  3080               	movlw	128
  1746  0764  00A1               	movwf	UART_array@cadena+1
  1747  0765  160A  118A  243D  120A  118A  	fcall	_UART_array
  1748                           
  1749                           ;Main.c: 154:             UART_array(buffer),UART_write(13);
  1750  076A  30C2               	movlw	(low (main@buffer| 0))& (0+255)
  1751  076B  00A0               	movwf	UART_array@cadena
  1752  076C  3000               	movlw	0
  1753  076D  00A1               	movwf	UART_array@cadena+1
  1754  076E  160A  118A  243D  120A  118A  	fcall	_UART_array
  1755  0773  300D               	movlw	13
  1756  0774  160A  118A  23A9  120A  118A  	fcall	_UART_write
  1757  0779  2DF5               	goto	l5225
  1758  077A                     __end_of_main:
  1759                           
  1760                           	psect	text1
  1761  0E4F                     __ptext1:	
  1762 ;; *************** function _sprintf *****************
  1763 ;; Defined at:
  1764 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  sp              1    wreg     PTR unsigned char 
  1767 ;;		 -> main@buffer(5), 
  1768 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1769 ;;		 -> STR_9(5), STR_8(5), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  1772 ;;		 -> main@buffer(5), 
  1773 ;;  tmpval          4    0        struct .
  1774 ;;  width           2   22[BANK0 ] int 
  1775 ;;  val             2   19[BANK0 ] unsigned int 
  1776 ;;  cp              2    0        PTR const unsigned char 
  1777 ;;  len             2    0        unsigned int 
  1778 ;;  c               1   25[BANK0 ] unsigned char 
  1779 ;;  flag            1   21[BANK0 ] unsigned char 
  1780 ;;  ap              1   18[BANK0 ] PTR void [1]
  1781 ;;		 -> ?_sprintf(2), 
  1782 ;;  prec            1   17[BANK0 ] char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2   11[BANK0 ] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 300/0
  1789 ;;		On exit  : B00/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       3       0       0       0
  1793 ;;      Locals:         0       9       0       0       0
  1794 ;;      Temps:          0       3       0       0       0
  1795 ;;      Totals:         0      15       0       0       0
  1796 ;;Total ram usage:       15 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    3
  1799 ;; This function calls:
  1800 ;;		___lwdiv
  1801 ;;		___lwmod
  1802 ;;		___wmul
  1803 ;;		_isdigit
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _sprintf
  1811  0E4F                     _sprintf:
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1815                           ;sprintf@sp stored from wreg
  1816  0E4F  00B8               	movwf	sprintf@sp
  1817                           
  1818                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1819  0E50  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1820  0E51  00FF               	movwf	127
  1821  0E52  087F               	movf	127,w
  1822  0E53  00B2               	movwf	sprintf@ap
  1823  0E54                     l5167:	
  1824                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1825                           
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1828  0E54  3001               	movlw	1
  1829  0E55  07AB               	addwf	sprintf@f,f
  1830  0E56  30FF               	movlw	-1
  1831  0E57  072B               	addwf	sprintf@f,w
  1832  0E58  0084               	movwf	4
  1833  0E59  160A  118A  200A  120A  158A  	fcall	stringdir
  1834  0E5E  00FF               	movwf	127
  1835  0E5F  087F               	movf	127,w
  1836  0E60  00B9               	movwf	sprintf@c
  1837  0E61  0839               	movf	sprintf@c,w
  1838  0E62  1903               	btfsc	3,2
  1839  0E63  2FFB               	goto	l5169
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1842  0E64  3025               	movlw	37
  1843  0E65  0639               	xorwf	sprintf@c,w
  1844  0E66  1903               	btfsc	3,2
  1845  0E67  2E74               	goto	l5065
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1848  0E68  0839               	movf	sprintf@c,w
  1849  0E69  00FF               	movwf	127
  1850  0E6A  0838               	movf	sprintf@sp,w
  1851  0E6B  0084               	movwf	4
  1852  0E6C  087F               	movf	127,w
  1853  0E6D  1383               	bcf	3,7	;select IRP bank0
  1854  0E6E  0080               	movwf	0
  1855  0E6F  3001               	movlw	1
  1856  0E70  00FF               	movwf	127
  1857  0E71  087F               	movf	127,w
  1858  0E72  07B8               	addwf	sprintf@sp,f
  1859                           
  1860                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1861  0E73  2E54               	goto	l5167
  1862  0E74                     l5065:
  1863                           
  1864                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1865  0E74  01B6               	clrf	sprintf@width
  1866  0E75  01B7               	clrf	sprintf@width+1
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1869  0E76  01B5               	clrf	sprintf@flag
  1870  0E77  2E7D               	goto	l5071
  1871  0E78                     l403:	
  1872                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1873                           
  1874                           
  1875                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1876  0E78  1535               	bsf	sprintf@flag,2
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 598:     f++;
  1879  0E79  3001               	movlw	1
  1880  0E7A  00FF               	movwf	127
  1881  0E7B  087F               	movf	127,w
  1882  0E7C  07AB               	addwf	sprintf@f,f
  1883  0E7D                     l5071:	
  1884                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1885                           
  1886  0E7D  082B               	movf	sprintf@f,w
  1887  0E7E  0084               	movwf	4
  1888  0E7F  160A  118A  200A  120A  158A  	fcall	stringdir
  1889  0E84  00AE               	movwf	??_sprintf
  1890  0E85  01AF               	clrf	??_sprintf+1
  1891                           
  1892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1893                           ; Switch size 1, requested type "simple"
  1894                           ; Number of cases is 1, Range of values is 0 to 0
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte            4     3 (average)
  1898                           ; direct_byte           11     8 (fixed)
  1899                           ; jumptable            260     6 (fixed)
  1900                           ;	Chosen strategy is simple_byte
  1901  0E86  082F               	movf	??_sprintf+1,w
  1902  0E87  3A00               	xorlw	0	; case 0
  1903  0E88  1903               	skipnz
  1904  0E89  2E8B               	goto	l5393
  1905  0E8A  2E90               	goto	l5073
  1906  0E8B                     l5393:
  1907                           
  1908                           ; Switch size 1, requested type "simple"
  1909                           ; Number of cases is 1, Range of values is 48 to 48
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte            4     3 (average)
  1913                           ; direct_byte           14    11 (fixed)
  1914                           ; jumptable            263     9 (fixed)
  1915                           ;	Chosen strategy is simple_byte
  1916  0E8B  082E               	movf	??_sprintf,w
  1917  0E8C  3A30               	xorlw	48	; case 48
  1918  0E8D  1903               	skipnz
  1919  0E8E  2E78               	goto	l403
  1920  0E8F  2E90               	goto	l5073
  1921  0E90                     l5073:
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1924  0E90  082B               	movf	sprintf@f,w
  1925  0E91  0084               	movwf	4
  1926  0E92  160A  118A  200A  120A  158A  	fcall	stringdir
  1927  0E97  160A  118A  23C9  120A  158A  	fcall	_isdigit
  1928  0E9C  1C03               	btfss	3,0
  1929  0E9D  2ED9               	goto	l5087
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1932  0E9E  01B6               	clrf	sprintf@width
  1933  0E9F  01B7               	clrf	sprintf@width+1
  1934  0EA0                     l5077:
  1935                           
  1936                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1937  0EA0  300A               	movlw	10
  1938  0EA1  00A0               	movwf	___wmul@multiplier
  1939  0EA2  3000               	movlw	0
  1940  0EA3  00A1               	movwf	___wmul@multiplier+1
  1941  0EA4  0837               	movf	sprintf@width+1,w
  1942  0EA5  00A3               	movwf	___wmul@multiplicand+1
  1943  0EA6  0836               	movf	sprintf@width,w
  1944  0EA7  00A2               	movwf	___wmul@multiplicand
  1945  0EA8  160A  118A  241C  120A  158A  	fcall	___wmul
  1946  0EAD  0821               	movf	?___wmul+1,w
  1947  0EAE  00B7               	movwf	sprintf@width+1
  1948  0EAF  0820               	movf	?___wmul,w
  1949  0EB0  00B6               	movwf	sprintf@width
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1952  0EB1  082B               	movf	sprintf@f,w
  1953  0EB2  0084               	movwf	4
  1954  0EB3  160A  118A  200A  120A  158A  	fcall	stringdir
  1955  0EB8  3ED0               	addlw	208
  1956  0EB9  00AE               	movwf	??_sprintf
  1957  0EBA  30FF               	movlw	255
  1958  0EBB  1803               	skipnc
  1959  0EBC  3000               	movlw	0
  1960  0EBD  00AF               	movwf	??_sprintf+1
  1961  0EBE  082E               	movf	??_sprintf,w
  1962  0EBF  07B6               	addwf	sprintf@width,f
  1963  0EC0  1803               	skipnc
  1964  0EC1  0AB7               	incf	sprintf@width+1,f
  1965  0EC2  082F               	movf	??_sprintf+1,w
  1966  0EC3  07B7               	addwf	sprintf@width+1,f
  1967  0EC4  3001               	movlw	1
  1968  0EC5  00FF               	movwf	127
  1969  0EC6  087F               	movf	127,w
  1970  0EC7  07AB               	addwf	sprintf@f,f
  1971                           
  1972                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1973  0EC8  082B               	movf	sprintf@f,w
  1974  0EC9  0084               	movwf	4
  1975  0ECA  160A  118A  200A  120A  158A  	fcall	stringdir
  1976  0ECF  160A  118A  23C9  120A  158A  	fcall	_isdigit
  1977  0ED4  1C03               	btfss	3,0
  1978  0ED5  2ED9               	goto	l5087
  1979  0ED6  2EA0               	goto	l5077
  1980  0ED7                     l417:	
  1981                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  1982                           
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  1985  0ED7  1735               	bsf	sprintf@flag,6
  1986                           
  1987                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 845:    break;
  1988  0ED8  2EF9               	goto	l415
  1989  0ED9                     l5087:
  1990  0ED9  3001               	movlw	1
  1991  0EDA  07AB               	addwf	sprintf@f,f
  1992  0EDB  30FF               	movlw	-1
  1993  0EDC  072B               	addwf	sprintf@f,w
  1994  0EDD  0084               	movwf	4
  1995  0EDE  160A  118A  200A  120A  158A  	fcall	stringdir
  1996  0EE3  00B9               	movwf	sprintf@c
  1997  0EE4  00AE               	movwf	??_sprintf
  1998  0EE5  01AF               	clrf	??_sprintf+1
  1999                           
  2000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2001                           ; Switch size 1, requested type "simple"
  2002                           ; Number of cases is 1, Range of values is 0 to 0
  2003                           ; switch strategies available:
  2004                           ; Name         Instructions Cycles
  2005                           ; simple_byte            4     3 (average)
  2006                           ; direct_byte           11     8 (fixed)
  2007                           ; jumptable            260     6 (fixed)
  2008                           ;	Chosen strategy is simple_byte
  2009  0EE6  082F               	movf	??_sprintf+1,w
  2010  0EE7  3A00               	xorlw	0	; case 0
  2011  0EE8  1903               	skipnz
  2012  0EE9  2EEB               	goto	l5395
  2013  0EEA  2E54               	goto	l5167
  2014  0EEB                     l5395:
  2015                           
  2016                           ; Switch size 1, requested type "simple"
  2017                           ; Number of cases is 4, Range of values is 0 to 117
  2018                           ; switch strategies available:
  2019                           ; Name         Instructions Cycles
  2020                           ; simple_byte           13     7 (average)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ;	Chosen strategy is simple_byte
  2023  0EEB  082E               	movf	??_sprintf,w
  2024  0EEC  3A00               	xorlw	0	; case 0
  2025  0EED  1903               	skipnz
  2026  0EEE  2FFB               	goto	l5169
  2027  0EEF  3A64               	xorlw	100	; case 100
  2028  0EF0  1903               	skipnz
  2029  0EF1  2EF9               	goto	l415
  2030  0EF2  3A0D               	xorlw	13	; case 105
  2031  0EF3  1903               	skipnz
  2032  0EF4  2EF9               	goto	l415
  2033  0EF5  3A1C               	xorlw	28	; case 117
  2034  0EF6  1903               	skipnz
  2035  0EF7  2ED7               	goto	l417
  2036  0EF8  2E54               	goto	l5167
  2037  0EF9                     l415:
  2038                           
  2039                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2040  0EF9  1B35               	btfsc	sprintf@flag,6
  2041  0EFA  2F13               	goto	l5099
  2042                           
  2043                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2044  0EFB  0832               	movf	sprintf@ap,w
  2045  0EFC  0084               	movwf	4
  2046  0EFD  1383               	bcf	3,7	;select IRP bank0
  2047  0EFE  0800               	movf	0,w
  2048  0EFF  00B3               	movwf	sprintf@val
  2049  0F00  0A84               	incf	4,f
  2050  0F01  0800               	movf	0,w
  2051  0F02  00B4               	movwf	sprintf@val+1
  2052  0F03  3002               	movlw	2
  2053  0F04  00FF               	movwf	127
  2054  0F05  087F               	movf	127,w
  2055  0F06  07B2               	addwf	sprintf@ap,f
  2056                           
  2057                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2058  0F07  1FB4               	btfss	sprintf@val+1,7
  2059  0F08  2F1F               	goto	l5103
  2060                           
  2061                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2062  0F09  3003               	movlw	3
  2063  0F0A  00FF               	movwf	127
  2064  0F0B  087F               	movf	127,w
  2065  0F0C  04B5               	iorwf	sprintf@flag,f
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2068  0F0D  09B3               	comf	sprintf@val,f
  2069  0F0E  09B4               	comf	sprintf@val+1,f
  2070  0F0F  0AB3               	incf	sprintf@val,f
  2071  0F10  1903               	skipnz
  2072  0F11  0AB4               	incf	sprintf@val+1,f
  2073  0F12  2F1F               	goto	l5103
  2074  0F13                     l5099:
  2075                           
  2076                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2077  0F13  0832               	movf	sprintf@ap,w
  2078  0F14  0084               	movwf	4
  2079  0F15  1383               	bcf	3,7	;select IRP bank0
  2080  0F16  0800               	movf	0,w
  2081  0F17  00B3               	movwf	sprintf@val
  2082  0F18  0A84               	incf	4,f
  2083  0F19  0800               	movf	0,w
  2084  0F1A  00B4               	movwf	sprintf@val+1
  2085  0F1B  3002               	movlw	2
  2086  0F1C  00FF               	movwf	127
  2087  0F1D  087F               	movf	127,w
  2088  0F1E  07B2               	addwf	sprintf@ap,f
  2089  0F1F                     l5103:
  2090                           
  2091                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2092  0F1F  01B9               	clrf	sprintf@c
  2093  0F20  0AB9               	incf	sprintf@c,f
  2094  0F21                     l5109:
  2095                           
  2096                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2097  0F21  0839               	movf	sprintf@c,w
  2098  0F22  00AE               	movwf	??_sprintf
  2099  0F23  072E               	addwf	??_sprintf,w
  2100  0F24  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2101  0F25  0084               	movwf	4
  2102  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  2103  0F2B  00AF               	movwf	??_sprintf+1
  2104  0F2C  160A  118A  200A  120A  158A  	fcall	stringdir
  2105  0F31  00B0               	movwf	??_sprintf+2
  2106  0F32  0830               	movf	??_sprintf+2,w
  2107  0F33  0234               	subwf	sprintf@val+1,w
  2108  0F34  1D03               	skipz
  2109  0F35  2F38               	goto	u7095
  2110  0F36  082F               	movf	??_sprintf+1,w
  2111  0F37  0233               	subwf	sprintf@val,w
  2112  0F38                     u7095:
  2113  0F38  1C03               	btfss	3,0
  2114  0F39  2F42               	goto	l5117
  2115  0F3A  3001               	movlw	1
  2116  0F3B  00FF               	movwf	127
  2117  0F3C  087F               	movf	127,w
  2118  0F3D  07B9               	addwf	sprintf@c,f
  2119  0F3E  3005               	movlw	5
  2120  0F3F  0639               	xorwf	sprintf@c,w
  2121  0F40  1D03               	btfss	3,2
  2122  0F41  2F21               	goto	l5109
  2123  0F42                     l5117:
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2126  0F42  0836               	movf	sprintf@width,w
  2127  0F43  0437               	iorwf	sprintf@width+1,w
  2128  0F44  1903               	btfsc	3,2
  2129  0F45  2F50               	goto	l424
  2130  0F46  0835               	movf	sprintf@flag,w
  2131  0F47  3903               	andlw	3
  2132  0F48  1903               	btfsc	3,2
  2133  0F49  2F50               	goto	l424
  2134                           
  2135                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2136  0F4A  30FF               	movlw	255
  2137  0F4B  07B6               	addwf	sprintf@width,f
  2138  0F4C  1803               	skipnc
  2139  0F4D  0AB7               	incf	sprintf@width+1,f
  2140  0F4E  30FF               	movlw	255
  2141  0F4F  07B7               	addwf	sprintf@width+1,f
  2142  0F50                     l424:
  2143                           
  2144                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2145  0F50  0837               	movf	sprintf@width+1,w
  2146  0F51  3A80               	xorlw	128
  2147  0F52  3C80               	sublw	128
  2148  0F53  1D03               	skipz
  2149  0F54  2F57               	goto	u7135
  2150  0F55  0836               	movf	sprintf@width,w
  2151  0F56  0239               	subwf	sprintf@c,w
  2152  0F57                     u7135:
  2153  0F57  1803               	skipnc
  2154  0F58  2F65               	goto	l5125
  2155                           
  2156                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2157  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0F5B  0839               	movf	sprintf@c,w
  2160  0F5C  00AE               	movwf	??_sprintf
  2161  0F5D  01AF               	clrf	??_sprintf+1
  2162  0F5E  082E               	movf	??_sprintf,w
  2163  0F5F  02B6               	subwf	sprintf@width,f
  2164  0F60  082F               	movf	??_sprintf+1,w
  2165  0F61  1C03               	skipc
  2166  0F62  03B7               	decf	sprintf@width+1,f
  2167  0F63  02B7               	subwf	sprintf@width+1,f
  2168  0F64  2F69               	goto	l5127
  2169  0F65                     l5125:
  2170                           
  2171                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2172  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0F67  01B6               	clrf	sprintf@width
  2175  0F68  01B7               	clrf	sprintf@width+1
  2176  0F69                     l5127:
  2177                           
  2178                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2179  0F69  1D35               	btfss	sprintf@flag,2
  2180  0F6A  2F90               	goto	l5143
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2183  0F6B  0835               	movf	sprintf@flag,w
  2184  0F6C  3903               	andlw	3
  2185  0F6D  1903               	btfsc	3,2
  2186  0F6E  2F7A               	goto	l5135
  2187                           
  2188                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2189  0F6F  302D               	movlw	45
  2190  0F70  00FF               	movwf	127
  2191  0F71  0838               	movf	sprintf@sp,w
  2192  0F72  0084               	movwf	4
  2193  0F73  087F               	movf	127,w
  2194  0F74  1383               	bcf	3,7	;select IRP bank0
  2195  0F75  0080               	movwf	0
  2196  0F76  3001               	movlw	1
  2197  0F77  00FF               	movwf	127
  2198  0F78  087F               	movf	127,w
  2199  0F79  07B8               	addwf	sprintf@sp,f
  2200  0F7A                     l5135:
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2203  0F7A  0836               	movf	sprintf@width,w
  2204  0F7B  0437               	iorwf	sprintf@width+1,w
  2205  0F7C  1903               	btfsc	3,2
  2206  0F7D  2FB8               	goto	l5157
  2207                           
  2208                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2209  0F7E  3030               	movlw	48
  2210  0F7F  00FF               	movwf	127
  2211  0F80  0838               	movf	sprintf@sp,w
  2212  0F81  0084               	movwf	4
  2213  0F82  087F               	movf	127,w
  2214  0F83  1383               	bcf	3,7	;select IRP bank0
  2215  0F84  0080               	movwf	0
  2216  0F85  3001               	movlw	1
  2217  0F86  00FF               	movwf	127
  2218  0F87  087F               	movf	127,w
  2219  0F88  07B8               	addwf	sprintf@sp,f
  2220  0F89  30FF               	movlw	255
  2221  0F8A  07B6               	addwf	sprintf@width,f
  2222  0F8B  1803               	skipnc
  2223  0F8C  0AB7               	incf	sprintf@width+1,f
  2224  0F8D  30FF               	movlw	255
  2225  0F8E  07B7               	addwf	sprintf@width+1,f
  2226  0F8F  2F7A               	goto	l5135
  2227  0F90                     l5143:
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2230  0F90  0836               	movf	sprintf@width,w
  2231  0F91  0437               	iorwf	sprintf@width+1,w
  2232  0F92  1903               	btfsc	3,2
  2233  0F93  2FA9               	goto	l5151
  2234  0F94                     l5145:
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2237  0F94  3020               	movlw	32
  2238  0F95  00FF               	movwf	127
  2239  0F96  0838               	movf	sprintf@sp,w
  2240  0F97  0084               	movwf	4
  2241  0F98  087F               	movf	127,w
  2242  0F99  1383               	bcf	3,7	;select IRP bank0
  2243  0F9A  0080               	movwf	0
  2244  0F9B  3001               	movlw	1
  2245  0F9C  00FF               	movwf	127
  2246  0F9D  087F               	movf	127,w
  2247  0F9E  07B8               	addwf	sprintf@sp,f
  2248  0F9F  30FF               	movlw	255
  2249  0FA0  07B6               	addwf	sprintf@width,f
  2250  0FA1  1803               	skipnc
  2251  0FA2  0AB7               	incf	sprintf@width+1,f
  2252  0FA3  30FF               	movlw	255
  2253  0FA4  07B7               	addwf	sprintf@width+1,f
  2254  0FA5  0836               	movf	sprintf@width,w
  2255  0FA6  0437               	iorwf	sprintf@width+1,w
  2256  0FA7  1D03               	btfss	3,2
  2257  0FA8  2F94               	goto	l5145
  2258  0FA9                     l5151:
  2259                           
  2260                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2261  0FA9  0835               	movf	sprintf@flag,w
  2262  0FAA  3903               	andlw	3
  2263  0FAB  1903               	btfsc	3,2
  2264  0FAC  2FB8               	goto	l5157
  2265                           
  2266                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2267  0FAD  302D               	movlw	45
  2268  0FAE  00FF               	movwf	127
  2269  0FAF  0838               	movf	sprintf@sp,w
  2270  0FB0  0084               	movwf	4
  2271  0FB1  087F               	movf	127,w
  2272  0FB2  1383               	bcf	3,7	;select IRP bank0
  2273  0FB3  0080               	movwf	0
  2274  0FB4  3001               	movlw	1
  2275  0FB5  00FF               	movwf	127
  2276  0FB6  087F               	movf	127,w
  2277  0FB7  07B8               	addwf	sprintf@sp,f
  2278  0FB8                     l5157:
  2279                           
  2280                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2281  0FB8  0839               	movf	sprintf@c,w
  2282  0FB9  00FF               	movwf	127
  2283  0FBA  087F               	movf	127,w
  2284  0FBB  00B1               	movwf	sprintf@prec
  2285  0FBC                     l5165:	
  2286                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2287                           
  2288                           
  2289                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2290  0FBC  30FF               	movlw	255
  2291  0FBD  00FF               	movwf	127
  2292  0FBE  087F               	movf	127,w
  2293  0FBF  07B1               	addwf	sprintf@prec,f
  2294  0FC0  0A31               	incf	sprintf@prec,w
  2295  0FC1  1903               	btfsc	3,2
  2296  0FC2  2E54               	goto	l5167
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2299  0FC3  300A               	movlw	10
  2300  0FC4  00A7               	movwf	___lwmod@divisor
  2301  0FC5  3000               	movlw	0
  2302  0FC6  00A8               	movwf	___lwmod@divisor+1
  2303  0FC7  0831               	movf	sprintf@prec,w
  2304  0FC8  00AE               	movwf	??_sprintf
  2305  0FC9  072E               	addwf	??_sprintf,w
  2306  0FCA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2307  0FCB  0084               	movwf	4
  2308  0FCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2309  0FD1  00A0               	movwf	___lwdiv@divisor
  2310  0FD2  160A  118A  200A  120A  158A  	fcall	stringdir
  2311  0FD7  00A1               	movwf	___lwdiv@divisor+1
  2312  0FD8  0834               	movf	sprintf@val+1,w
  2313  0FD9  00A3               	movwf	___lwdiv@dividend+1
  2314  0FDA  0833               	movf	sprintf@val,w
  2315  0FDB  00A2               	movwf	___lwdiv@dividend
  2316  0FDC  120A  158A  2000  120A  158A  	fcall	___lwdiv
  2317  0FE1  0821               	movf	?___lwdiv+1,w
  2318  0FE2  00AA               	movwf	___lwmod@dividend+1
  2319  0FE3  0820               	movf	?___lwdiv,w
  2320  0FE4  00A9               	movwf	___lwmod@dividend
  2321  0FE5  160A  118A  24B3  120A  158A  	fcall	___lwmod
  2322  0FEA  0827               	movf	?___lwmod,w
  2323  0FEB  3E30               	addlw	48
  2324  0FEC  00FF               	movwf	127
  2325  0FED  087F               	movf	127,w
  2326  0FEE  00B9               	movwf	sprintf@c
  2327                           
  2328                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2329  0FEF  0839               	movf	sprintf@c,w
  2330  0FF0  00FF               	movwf	127
  2331  0FF1  0838               	movf	sprintf@sp,w
  2332  0FF2  0084               	movwf	4
  2333  0FF3  087F               	movf	127,w
  2334  0FF4  1383               	bcf	3,7	;select IRP bank0
  2335  0FF5  0080               	movwf	0
  2336  0FF6  3001               	movlw	1
  2337  0FF7  00FF               	movwf	127
  2338  0FF8  087F               	movf	127,w
  2339  0FF9  07B8               	addwf	sprintf@sp,f
  2340  0FFA  2FBC               	goto	l5165
  2341  0FFB                     l5169:
  2342                           
  2343                           ;C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2344  0FFB  0838               	movf	sprintf@sp,w
  2345  0FFC  0084               	movwf	4
  2346  0FFD  1383               	bcf	3,7	;select IRP bank0
  2347  0FFE  0180               	clrf	0
  2348  0FFF  0008               	return
  2349  1000                     __end_of_sprintf:
  2350                           
  2351                           	psect	text2
  2352  13C9                     __ptext2:	
  2353 ;; *************** function _isdigit *****************
  2354 ;; Defined at:
  2355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\isdigit.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  c               1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  c               1    1[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 300/0
  2366 ;;		On exit  : 300/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       2       0       0       0
  2371 ;;      Temps:          0       0       0       0       0
  2372 ;;      Totals:         0       2       0       0       0
  2373 ;;Total ram usage:        2 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    2
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_sprintf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _isdigit
  2385  13C9                     _isdigit:
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2389                           ;isdigit@c stored from wreg
  2390  13C9  00A1               	movwf	isdigit@c
  2391  13CA  01A0               	clrf	_isdigit$1228
  2392  13CB  303A               	movlw	58
  2393  13CC  0221               	subwf	isdigit@c,w
  2394  13CD  1803               	skipnc
  2395  13CE  2BD5               	goto	l4287
  2396  13CF  3030               	movlw	48
  2397  13D0  0221               	subwf	isdigit@c,w
  2398  13D1  1C03               	skipc
  2399  13D2  2BD5               	goto	l4287
  2400  13D3  01A0               	clrf	_isdigit$1228
  2401  13D4  0AA0               	incf	_isdigit$1228,f
  2402  13D5                     l4287:
  2403  13D5  0C20               	rrf	_isdigit$1228,w
  2404  13D6  0008               	return
  2405  13D7                     __end_of_isdigit:
  2406                           
  2407                           	psect	text3
  2408  141C                     __ptext3:	
  2409 ;; *************** function ___wmul *****************
  2410 ;; Defined at:
  2411 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\Umul16.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2414 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  product         2    4[BANK0 ] unsigned int 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2    0[BANK0 ] unsigned int 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 300/0
  2423 ;;		On exit  : 300/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       4       0       0       0
  2427 ;;      Locals:         0       2       0       0       0
  2428 ;;      Temps:          0       0       0       0       0
  2429 ;;      Totals:         0       6       0       0       0
  2430 ;;Total ram usage:        6 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    2
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_sprintf
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function ___wmul
  2442  141C                     ___wmul:
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2446  141C  01A4               	clrf	___wmul@product
  2447  141D  01A5               	clrf	___wmul@product+1
  2448  141E                     l4293:
  2449  141E  1C20               	btfss	___wmul@multiplier,0
  2450  141F  2C26               	goto	l445
  2451  1420  0822               	movf	___wmul@multiplicand,w
  2452  1421  07A4               	addwf	___wmul@product,f
  2453  1422  1803               	skipnc
  2454  1423  0AA5               	incf	___wmul@product+1,f
  2455  1424  0823               	movf	___wmul@multiplicand+1,w
  2456  1425  07A5               	addwf	___wmul@product+1,f
  2457  1426                     l445:
  2458  1426  3001               	movlw	1
  2459  1427                     u5595:
  2460  1427  1003               	clrc
  2461  1428  0DA2               	rlf	___wmul@multiplicand,f
  2462  1429  0DA3               	rlf	___wmul@multiplicand+1,f
  2463  142A  3EFF               	addlw	-1
  2464  142B  1D03               	skipz
  2465  142C  2C27               	goto	u5595
  2466  142D  3001               	movlw	1
  2467  142E                     u5605:
  2468  142E  1003               	clrc
  2469  142F  0CA1               	rrf	___wmul@multiplier+1,f
  2470  1430  0CA0               	rrf	___wmul@multiplier,f
  2471  1431  3EFF               	addlw	-1
  2472  1432  1D03               	skipz
  2473  1433  2C2E               	goto	u5605
  2474  1434  0820               	movf	___wmul@multiplier,w
  2475  1435  0421               	iorwf	___wmul@multiplier+1,w
  2476  1436  1D03               	btfss	3,2
  2477  1437  2C1E               	goto	l4293
  2478  1438  0825               	movf	___wmul@product+1,w
  2479  1439  00A1               	movwf	?___wmul+1
  2480  143A  0824               	movf	___wmul@product,w
  2481  143B  00A0               	movwf	?___wmul
  2482  143C  0008               	return
  2483  143D                     __end_of___wmul:
  2484                           
  2485                           	psect	text4
  2486  14B3                     __ptext4:	
  2487 ;; *************** function ___lwmod *****************
  2488 ;; Defined at:
  2489 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwmod.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  divisor         2    7[BANK0 ] unsigned int 
  2492 ;;  dividend        2    9[BANK0 ] unsigned int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  counter         1    5[COMMON] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2    7[BANK0 ] unsigned int 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, btemp+1
  2499 ;; Tracked objects:
  2500 ;;		On entry : 300/0
  2501 ;;		On exit  : 300/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       4       0       0       0
  2505 ;;      Locals:         1       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         1       4       0       0       0
  2508 ;;Total ram usage:        5 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_sprintf
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function ___lwmod
  2520  14B3                     ___lwmod:
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2524  14B3  0827               	movf	___lwmod@divisor,w
  2525  14B4  0428               	iorwf	___lwmod@divisor+1,w
  2526  14B5  1903               	btfsc	3,2
  2527  14B6  2CE0               	goto	l4461
  2528  14B7  01F5               	clrf	___lwmod@counter
  2529  14B8  0AF5               	incf	___lwmod@counter,f
  2530  14B9                     l4451:
  2531  14B9  1BA8               	btfsc	___lwmod@divisor+1,7
  2532  14BA  2CC7               	goto	l4453
  2533  14BB  3001               	movlw	1
  2534  14BC                     u5935:
  2535  14BC  1003               	clrc
  2536  14BD  0DA7               	rlf	___lwmod@divisor,f
  2537  14BE  0DA8               	rlf	___lwmod@divisor+1,f
  2538  14BF  3EFF               	addlw	-1
  2539  14C0  1D03               	skipz
  2540  14C1  2CBC               	goto	u5935
  2541  14C2  3001               	movlw	1
  2542  14C3  00FF               	movwf	127
  2543  14C4  087F               	movf	127,w
  2544  14C5  07F5               	addwf	___lwmod@counter,f
  2545  14C6  2CB9               	goto	l4451
  2546  14C7                     l4453:
  2547  14C7  0828               	movf	___lwmod@divisor+1,w
  2548  14C8  022A               	subwf	___lwmod@dividend+1,w
  2549  14C9  1D03               	skipz
  2550  14CA  2CCD               	goto	u5955
  2551  14CB  0827               	movf	___lwmod@divisor,w
  2552  14CC  0229               	subwf	___lwmod@dividend,w
  2553  14CD                     u5955:
  2554  14CD  1C03               	skipc
  2555  14CE  2CD5               	goto	l4457
  2556  14CF  0827               	movf	___lwmod@divisor,w
  2557  14D0  02A9               	subwf	___lwmod@dividend,f
  2558  14D1  0828               	movf	___lwmod@divisor+1,w
  2559  14D2  1C03               	skipc
  2560  14D3  03AA               	decf	___lwmod@dividend+1,f
  2561  14D4  02AA               	subwf	___lwmod@dividend+1,f
  2562  14D5                     l4457:
  2563  14D5  3001               	movlw	1
  2564  14D6                     u5965:
  2565  14D6  1003               	clrc
  2566  14D7  0CA8               	rrf	___lwmod@divisor+1,f
  2567  14D8  0CA7               	rrf	___lwmod@divisor,f
  2568  14D9  3EFF               	addlw	-1
  2569  14DA  1D03               	skipz
  2570  14DB  2CD6               	goto	u5965
  2571  14DC  3001               	movlw	1
  2572  14DD  02F5               	subwf	___lwmod@counter,f
  2573  14DE  1D03               	btfss	3,2
  2574  14DF  2CC7               	goto	l4453
  2575  14E0                     l4461:
  2576  14E0  082A               	movf	___lwmod@dividend+1,w
  2577  14E1  00A8               	movwf	?___lwmod+1
  2578  14E2  0829               	movf	___lwmod@dividend,w
  2579  14E3  00A7               	movwf	?___lwmod
  2580  14E4  0008               	return
  2581  14E5                     __end_of___lwmod:
  2582                           
  2583                           	psect	text5
  2584  0800                     __ptext5:	
  2585 ;; *************** function ___lwdiv *****************
  2586 ;; Defined at:
  2587 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\lwdiv.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  divisor         2    0[BANK0 ] unsigned int 
  2590 ;;  dividend        2    2[BANK0 ] unsigned int 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  quotient        2    5[BANK0 ] unsigned int 
  2593 ;;  counter         1    4[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2    0[BANK0 ] unsigned int 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, btemp+1
  2598 ;; Tracked objects:
  2599 ;;		On entry : 300/0
  2600 ;;		On exit  : 300/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       4       0       0       0
  2604 ;;      Locals:         0       3       0       0       0
  2605 ;;      Temps:          0       0       0       0       0
  2606 ;;      Totals:         0       7       0       0       0
  2607 ;;Total ram usage:        7 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    2
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_sprintf
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function ___lwdiv
  2619  0800                     ___lwdiv:
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2623  0800  01A5               	clrf	___lwdiv@quotient
  2624  0801  01A6               	clrf	___lwdiv@quotient+1
  2625  0802  0820               	movf	___lwdiv@divisor,w
  2626  0803  0421               	iorwf	___lwdiv@divisor+1,w
  2627  0804  1903               	btfsc	3,2
  2628  0805  2837               	goto	l4439
  2629  0806  01A4               	clrf	___lwdiv@counter
  2630  0807  0AA4               	incf	___lwdiv@counter,f
  2631  0808                     l4427:
  2632  0808  1BA1               	btfsc	___lwdiv@divisor+1,7
  2633  0809  2816               	goto	l4429
  2634  080A  3001               	movlw	1
  2635  080B                     u5865:
  2636  080B  1003               	clrc
  2637  080C  0DA0               	rlf	___lwdiv@divisor,f
  2638  080D  0DA1               	rlf	___lwdiv@divisor+1,f
  2639  080E  3EFF               	addlw	-1
  2640  080F  1D03               	skipz
  2641  0810  280B               	goto	u5865
  2642  0811  3001               	movlw	1
  2643  0812  00FF               	movwf	127
  2644  0813  087F               	movf	127,w
  2645  0814  07A4               	addwf	___lwdiv@counter,f
  2646  0815  2808               	goto	l4427
  2647  0816                     l4429:
  2648  0816  3001               	movlw	1
  2649  0817                     u5885:
  2650  0817  1003               	clrc
  2651  0818  0DA5               	rlf	___lwdiv@quotient,f
  2652  0819  0DA6               	rlf	___lwdiv@quotient+1,f
  2653  081A  3EFF               	addlw	-1
  2654  081B  1D03               	skipz
  2655  081C  2817               	goto	u5885
  2656  081D  0821               	movf	___lwdiv@divisor+1,w
  2657  081E  0223               	subwf	___lwdiv@dividend+1,w
  2658  081F  1D03               	skipz
  2659  0820  2823               	goto	u5895
  2660  0821  0820               	movf	___lwdiv@divisor,w
  2661  0822  0222               	subwf	___lwdiv@dividend,w
  2662  0823                     u5895:
  2663  0823  1C03               	skipc
  2664  0824  282C               	goto	l4435
  2665  0825  0820               	movf	___lwdiv@divisor,w
  2666  0826  02A2               	subwf	___lwdiv@dividend,f
  2667  0827  0821               	movf	___lwdiv@divisor+1,w
  2668  0828  1C03               	skipc
  2669  0829  03A3               	decf	___lwdiv@dividend+1,f
  2670  082A  02A3               	subwf	___lwdiv@dividend+1,f
  2671  082B  1425               	bsf	___lwdiv@quotient,0
  2672  082C                     l4435:
  2673  082C  3001               	movlw	1
  2674  082D                     u5905:
  2675  082D  1003               	clrc
  2676  082E  0CA1               	rrf	___lwdiv@divisor+1,f
  2677  082F  0CA0               	rrf	___lwdiv@divisor,f
  2678  0830  3EFF               	addlw	-1
  2679  0831  1D03               	skipz
  2680  0832  282D               	goto	u5905
  2681  0833  3001               	movlw	1
  2682  0834  02A4               	subwf	___lwdiv@counter,f
  2683  0835  1D03               	btfss	3,2
  2684  0836  2816               	goto	l4429
  2685  0837                     l4439:
  2686  0837  0826               	movf	___lwdiv@quotient+1,w
  2687  0838  00A1               	movwf	?___lwdiv+1
  2688  0839  0825               	movf	___lwdiv@quotient,w
  2689  083A  00A0               	movwf	?___lwdiv
  2690  083B  0008               	return
  2691  083C                     __end_of___lwdiv:
  2692                           
  2693                           	psect	text6
  2694  13E8                     __ptext6:	
  2695 ;; *************** function _antirrebote *****************
  2696 ;; Defined at:
  2697 ;;		line 163 in file "Main.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 200/100
  2708 ;;		On exit  : 300/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       2       0       0       0
  2714 ;;      Totals:         0       2       0       0       0
  2715 ;;Total ram usage:        2 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    2
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _antirrebote
  2727  13E8                     _antirrebote:
  2728                           
  2729                           ;Main.c: 165:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _antirrebote: [wreg]
  2733  13E8  3027               	movlw	39
  2734  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  2735  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  2736  13EB  00A1               	movwf	??_antirrebote+1
  2737  13EC  30F4               	movlw	244
  2738  13ED  00A0               	movwf	??_antirrebote
  2739  13EE                     u7417:
  2740  13EE  0BA0               	decfsz	??_antirrebote,f
  2741  13EF  2BEE               	goto	u7417
  2742  13F0  0BA1               	decfsz	??_antirrebote+1,f
  2743  13F1  2BEE               	goto	u7417
  2744  13F2  0000               	nop
  2745  13F3                     l95:	
  2746                           ;Main.c: 166:     while(PORTBbits.RB1 == 1 || PORTBbits.RB2 == 1 || PORTBbits.RB3 == 1);
  2747                           
  2748  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  2749  13F4  1303               	bcf	3,6	;RP1=0, select bank0
  2750  13F5  1C86               	btfss	6,1	;volatile
  2751  13F6  1906               	btfsc	6,2	;volatile
  2752  13F7  2BF3               	goto	l95
  2753  13F8  1D86               	btfss	6,3	;volatile
  2754  13F9  0008               	return
  2755  13FA  2BF3               	goto	l95
  2756  13FB                     __end_of_antirrebote:
  2757                           
  2758                           	psect	text7
  2759  13D7                     __ptext7:	
  2760 ;; *************** function _UART_init *****************
  2761 ;; Defined at:
  2762 ;;		line 10 in file "UART_com.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg
  2771 ;; Tracked objects:
  2772 ;;		On entry : 300/100
  2773 ;;		On exit  : 300/100
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    2
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function _UART_init
  2792  13D7                     _UART_init:
  2793                           
  2794                           ;UART_com.c: 12:     TRISCbits.TRISC7 = 1;
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in _UART_init: [wreg]
  2798  13D7  1787               	bsf	7,7	;volatile
  2799                           
  2800                           ;UART_com.c: 13:     TRISCbits.TRISC6 = 0;
  2801  13D8  1307               	bcf	7,6	;volatile
  2802                           
  2803                           ;UART_com.c: 14:     TXSTAbits.TX9 = 0;
  2804  13D9  1318               	bcf	24,6	;volatile
  2805                           
  2806                           ;UART_com.c: 15:     TXSTAbits.TXEN = 1;
  2807  13DA  1698               	bsf	24,5	;volatile
  2808                           
  2809                           ;UART_com.c: 16:     TXSTAbits.SYNC = 0;
  2810  13DB  1218               	bcf	24,4	;volatile
  2811                           
  2812                           ;UART_com.c: 17:     TXSTAbits.BRGH = 1;
  2813  13DC  1518               	bsf	24,2	;volatile
  2814                           
  2815                           ;UART_com.c: 18:     SPBRG = 25;
  2816  13DD  3019               	movlw	25
  2817  13DE  0099               	movwf	25	;volatile
  2818                           
  2819                           ;UART_com.c: 19:     RCSTAbits.SPEN = 1;
  2820  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  2821  13E0  1798               	bsf	24,7	;volatile
  2822                           
  2823                           ;UART_com.c: 20:     RCSTAbits.CREN = 1;
  2824  13E1  1618               	bsf	24,4	;volatile
  2825                           
  2826                           ;UART_com.c: 21:     RCSTAbits.RX9 = 0;
  2827  13E2  1318               	bcf	24,6	;volatile
  2828                           
  2829                           ;UART_com.c: 24:     INTCONbits.GIE = 1;
  2830  13E3  178B               	bsf	11,7	;volatile
  2831                           
  2832                           ;UART_com.c: 25:     PIE1bits.RCIE = 1;
  2833  13E4  1683               	bsf	3,5	;RP0=1, select bank1
  2834  13E5  168C               	bsf	12,5	;volatile
  2835                           
  2836                           ;UART_com.c: 26:     INTCONbits.PEIE = 1;
  2837  13E6  170B               	bsf	11,6	;volatile
  2838  13E7  0008               	return
  2839  13E8                     __end_of_UART_init:
  2840                           
  2841                           	psect	text8
  2842  143D                     __ptext8:	
  2843 ;; *************** function _UART_array *****************
  2844 ;; Defined at:
  2845 ;;		line 52 in file "UART_com.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  cadena          2    0[BANK0 ] PTR const unsigned char 
  2848 ;;		 -> STR_10(5), main@buffer(5), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 300/0
  2857 ;;		On exit  : 300/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       2       0       0       0
  2861 ;;      Locals:         0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       2       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    3
  2867 ;; This function calls:
  2868 ;;		_UART_write
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _UART_array
  2876  143D                     _UART_array:
  2877  143D                     l5187:	
  2878                           ;UART_com.c: 52: void UART_array(const char* cadena);UART_com.c: 53: {;UART_com.c: 54:  
      +                             while(*cadena)
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _UART_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2882                           
  2883                           
  2884                           ;UART_com.c: 54:     while(*cadena)
  2885  143D  0821               	movf	UART_array@cadena+1,w
  2886  143E  00FF               	movwf	127
  2887  143F  0820               	movf	UART_array@cadena,w
  2888  1440  0084               	movwf	4
  2889  1441  160A  118A  2000  160A  118A  	fcall	stringtab
  2890  1446  3A00               	xorlw	0
  2891  1447  1903               	btfsc	3,2
  2892  1448  0008               	return
  2893                           
  2894                           ;UART_com.c: 55:     {;UART_com.c: 56:         UART_write(*cadena);
  2895  1449  0821               	movf	UART_array@cadena+1,w
  2896  144A  00FF               	movwf	127
  2897  144B  0820               	movf	UART_array@cadena,w
  2898  144C  0084               	movwf	4
  2899  144D  160A  118A  2000  160A  118A  	fcall	stringtab
  2900  1452  160A  118A  23A9  160A  118A  	fcall	_UART_write
  2901                           
  2902                           ;UART_com.c: 57:         cadena++;
  2903  1457  3001               	movlw	1
  2904  1458  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1459  07A0               	addwf	UART_array@cadena,f
  2906  145A  1803               	skipnc
  2907  145B  0AA1               	incf	UART_array@cadena+1,f
  2908  145C  3000               	movlw	0
  2909  145D  07A1               	addwf	UART_array@cadena+1,f
  2910  145E  2C3D               	goto	l5187
  2911  145F                     __end_of_UART_array:
  2912                           
  2913                           	psect	text9
  2914  13A9                     __ptext9:	
  2915 ;; *************** function _UART_write *****************
  2916 ;; Defined at:
  2917 ;;		line 38 in file "UART_com.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  dato            1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  dato            1    5[COMMON] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg
  2926 ;; Tracked objects:
  2927 ;;		On entry : 300/0
  2928 ;;		On exit  : 300/100
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0
  2934 ;;      Totals:         1       0       0       0       0
  2935 ;;Total ram usage:        1 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;;		_UART_array
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _UART_write
  2948  13A9                     _UART_write:
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _UART_write: [wreg]
  2952                           ;UART_write@dato stored from wreg
  2953  13A9  00F5               	movwf	UART_write@dato
  2954                           
  2955                           ;UART_com.c: 38: void UART_write(char dato);UART_com.c: 39: {;UART_com.c: 40:     TXREG 
      +                          = dato;
  2956  13AA  0875               	movf	UART_write@dato,w
  2957  13AB  0099               	movwf	25	;volatile
  2958  13AC                     l235:	
  2959                           ;UART_com.c: 41:     while(TXSTAbits.TRMT == 0);
  2960                           
  2961  13AC  1683               	bsf	3,5	;RP0=1, select bank1
  2962  13AD  1898               	btfsc	24,1	;volatile
  2963  13AE  0008               	return
  2964  13AF  2BAC               	goto	l235
  2965  13B0                     __end_of_UART_write:
  2966                           
  2967                           	psect	text10
  2968  1625                     __ptext10:	
  2969 ;; *************** function _RPM_read *****************
  2970 ;; Defined at:
  2971 ;;		line 39 in file "RPM.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  rpm             3   76[BANK0 ] float 
  2976 ;;  freq            3   73[BANK0 ] float 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  3   66[BANK0 ] float 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 300/0
  2983 ;;		On exit  : 300/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       3       0       0       0
  2987 ;;      Locals:         0       6       0       0       0
  2988 ;;      Temps:          0       4       0       0       0
  2989 ;;      Totals:         0      13       0       0       0
  2990 ;;Total ram usage:       13 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    4
  2993 ;; This function calls:
  2994 ;;		___fldiv
  2995 ;;		___flmul
  2996 ;;		___xxtofl
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _RPM_read
  3004  1625                     _RPM_read:
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _RPM_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3008  1625  3000               	movlw	0
  3009  1626  00EC               	movwf	RPM_read@rpm
  3010  1627  3000               	movlw	0
  3011  1628  00ED               	movwf	RPM_read@rpm+1
  3012  1629  3000               	movlw	0
  3013  162A  00EE               	movwf	RPM_read@rpm+2
  3014                           
  3015                           ;RPM.c: 46:     flanco = 1;
  3016  162B  01F8               	clrf	_flanco
  3017  162C  0AF8               	incf	_flanco,f
  3018                           
  3019                           ;RPM.c: 47:     TMR1IF = 1;
  3020  162D  140C               	bsf	12,0	;volatile
  3021                           
  3022                           ;RPM.c: 48:     INTCONbits.INTE = 1;
  3023  162E  160B               	bsf	11,4	;volatile
  3024  162F                     l5023:	
  3025                           ;RPM.c: 49:     while(flanco <= 2);
  3026                           
  3027  162F  3003               	movlw	3
  3028  1630  0278               	subwf	_flanco,w
  3029  1631  1C03               	skipc
  3030  1632  2E2F               	goto	l5023
  3031                           
  3032                           ;RPM.c: 52:     freq = 1 / (T * 0.000008);
  3033  1633  3037               	movlw	55
  3034  1634  00B1               	movwf	___flmul@b+3
  3035  1635  3006               	movlw	6
  3036  1636  00B0               	movwf	___flmul@b+2
  3037  1637  3037               	movlw	55
  3038  1638  00AF               	movwf	___flmul@b+1
  3039  1639  30BD               	movlw	189
  3040  163A  00AE               	movwf	___flmul@b
  3041  163B  0876               	movf	_T,w
  3042  163C  00A0               	movwf	___xxtofl@val
  3043  163D  0877               	movf	_T+1,w
  3044  163E  00A1               	movwf	___xxtofl@val+1
  3045  163F  01A2               	clrf	___xxtofl@val+2
  3046  1640  01A3               	clrf	___xxtofl@val+3
  3047  1641  3000               	movlw	0
  3048  1642  120A  158A  214E  160A  118A  	fcall	___xxtofl
  3049  1647  0823               	movf	?___xxtofl+3,w
  3050  1648  00B5               	movwf	___flmul@a+3
  3051  1649  0822               	movf	?___xxtofl+2,w
  3052  164A  00B4               	movwf	___flmul@a+2
  3053  164B  0821               	movf	?___xxtofl+1,w
  3054  164C  00B3               	movwf	___flmul@a+1
  3055  164D  0820               	movf	?___xxtofl,w
  3056  164E  00B2               	movwf	___flmul@a
  3057  164F  120A  118A  2023  160A  118A  	fcall	___flmul
  3058  1654  0831               	movf	?___flmul+3,w
  3059  1655  00CB               	movwf	___fldiv@a+3
  3060  1656  0830               	movf	?___flmul+2,w
  3061  1657  00CA               	movwf	___fldiv@a+2
  3062  1658  082F               	movf	?___flmul+1,w
  3063  1659  00C9               	movwf	___fldiv@a+1
  3064  165A  082E               	movf	?___flmul,w
  3065  165B  00C8               	movwf	___fldiv@a
  3066  165C  303F               	movlw	63
  3067  165D  00CF               	movwf	___fldiv@b+3
  3068  165E  3080               	movlw	128
  3069  165F  00CE               	movwf	___fldiv@b+2
  3070  1660  3000               	movlw	0
  3071  1661  00CD               	movwf	___fldiv@b+1
  3072  1662  3000               	movlw	0
  3073  1663  00CC               	movwf	___fldiv@b
  3074  1664  120A  158A  24AE  160A  118A  	fcall	___fldiv
  3075  1669  0849               	movf	?___fldiv+1,w
  3076  166A  00E9               	movwf	RPM_read@freq
  3077  166B  084A               	movf	?___fldiv+2,w
  3078  166C  00EA               	movwf	RPM_read@freq+1
  3079  166D  084B               	movf	?___fldiv+3,w
  3080  166E  00EB               	movwf	RPM_read@freq+2
  3081                           
  3082                           ;RPM.c: 53:     rpm = freq * 60.0;
  3083  166F  3042               	movlw	66
  3084  1670  00B1               	movwf	___flmul@b+3
  3085  1671  3070               	movlw	112
  3086  1672  00B0               	movwf	___flmul@b+2
  3087  1673  3000               	movlw	0
  3088  1674  00AF               	movwf	___flmul@b+1
  3089  1675  3000               	movlw	0
  3090  1676  00AE               	movwf	___flmul@b
  3091  1677  086B               	movf	RPM_read@freq+2,w
  3092  1678  00E8               	movwf	??_RPM_read+3
  3093  1679  086A               	movf	RPM_read@freq+1,w
  3094  167A  00E7               	movwf	??_RPM_read+2
  3095  167B  0869               	movf	RPM_read@freq,w
  3096  167C  00E6               	movwf	??_RPM_read+1
  3097  167D  01E5               	clrf	??_RPM_read
  3098  167E  0868               	movf	??_RPM_read+3,w
  3099  167F  00B5               	movwf	___flmul@a+3
  3100  1680  0867               	movf	??_RPM_read+2,w
  3101  1681  00B4               	movwf	___flmul@a+2
  3102  1682  0866               	movf	??_RPM_read+1,w
  3103  1683  00B3               	movwf	___flmul@a+1
  3104  1684  0865               	movf	??_RPM_read,w
  3105  1685  00B2               	movwf	___flmul@a
  3106  1686  120A  118A  2023   	fcall	___flmul
  3107  1689  082F               	movf	?___flmul+1,w
  3108  168A  00EC               	movwf	RPM_read@rpm
  3109  168B  0830               	movf	?___flmul+2,w
  3110  168C  00ED               	movwf	RPM_read@rpm+1
  3111  168D  0831               	movf	?___flmul+3,w
  3112  168E  00EE               	movwf	RPM_read@rpm+2
  3113                           
  3114                           ;RPM.c: 56:     return rpm;
  3115  168F  086C               	movf	RPM_read@rpm,w
  3116  1690  00E2               	movwf	?_RPM_read
  3117  1691  086D               	movf	RPM_read@rpm+1,w
  3118  1692  00E3               	movwf	?_RPM_read+1
  3119  1693  086E               	movf	RPM_read@rpm+2,w
  3120  1694  00E4               	movwf	?_RPM_read+2
  3121  1695  0008               	return
  3122  1696                     __end_of_RPM_read:
  3123                           
  3124                           	psect	text11
  3125  0023                     __ptext11:	
  3126 ;; *************** function ___flmul *****************
  3127 ;; Defined at:
  3128 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\sprcmul.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  b               4   14[BANK0 ] float 
  3131 ;;  a               4   18[BANK0 ] float 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  prod            4   34[BANK0 ] struct .
  3134 ;;  grs             4   30[BANK0 ] unsigned long 
  3135 ;;  temp            2   38[BANK0 ] struct .
  3136 ;;  bexp            1   29[BANK0 ] unsigned char 
  3137 ;;  aexp            1   28[BANK0 ] unsigned char 
  3138 ;;  sign            1   27[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  4   14[BANK0 ] unsigned char 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 300/0
  3145 ;;		On exit  : 300/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       8       0       0       0
  3149 ;;      Locals:         0      13       0       0       0
  3150 ;;      Temps:          0       5       0       0       0
  3151 ;;      Totals:         0      26       0       0       0
  3152 ;;Total ram usage:       26 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    3
  3155 ;; This function calls:
  3156 ;;		__Umul8_16
  3157 ;; This function is called by:
  3158 ;;		_RPM_read
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function ___flmul
  3164  0023                     ___flmul:
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3168  0023  0831               	movf	___flmul@b+3,w
  3169  0024  3980               	andlw	128
  3170  0025  00FF               	movwf	127
  3171  0026  087F               	movf	127,w
  3172  0027  00BB               	movwf	___flmul@sign
  3173  0028  0831               	movf	___flmul@b+3,w
  3174  0029  00B6               	movwf	??___flmul
  3175  002A  0736               	addwf	??___flmul,w
  3176  002B  00FF               	movwf	127
  3177  002C  087F               	movf	127,w
  3178  002D  00BD               	movwf	___flmul@bexp
  3179  002E  1BB0               	btfsc	___flmul@b+2,7
  3180  002F  143D               	bsf	___flmul@bexp,0
  3181  0030  083D               	movf	___flmul@bexp,w
  3182  0031  1903               	btfsc	3,2
  3183  0032  2840               	goto	l4683
  3184  0033  0A3D               	incf	___flmul@bexp,w
  3185  0034  1D03               	btfss	3,2
  3186  0035  283E               	goto	l4681
  3187  0036  3000               	movlw	0
  3188  0037  00B1               	movwf	___flmul@b+3
  3189  0038  3000               	movlw	0
  3190  0039  00B0               	movwf	___flmul@b+2
  3191  003A  3000               	movlw	0
  3192  003B  00AF               	movwf	___flmul@b+1
  3193  003C  3000               	movlw	0
  3194  003D  00AE               	movwf	___flmul@b
  3195  003E                     l4681:
  3196  003E  17B0               	bsf	___flmul@b+2,7
  3197  003F  2848               	goto	l4685
  3198  0040                     l4683:
  3199  0040  3000               	movlw	0
  3200  0041  00B1               	movwf	___flmul@b+3
  3201  0042  3000               	movlw	0
  3202  0043  00B0               	movwf	___flmul@b+2
  3203  0044  3000               	movlw	0
  3204  0045  00AF               	movwf	___flmul@b+1
  3205  0046  3000               	movlw	0
  3206  0047  00AE               	movwf	___flmul@b
  3207  0048                     l4685:
  3208  0048  0835               	movf	___flmul@a+3,w
  3209  0049  3980               	andlw	128
  3210  004A  00FF               	movwf	127
  3211  004B  087F               	movf	127,w
  3212  004C  06BB               	xorwf	___flmul@sign,f
  3213  004D  0835               	movf	___flmul@a+3,w
  3214  004E  00B6               	movwf	??___flmul
  3215  004F  0736               	addwf	??___flmul,w
  3216  0050  00FF               	movwf	127
  3217  0051  087F               	movf	127,w
  3218  0052  00BC               	movwf	___flmul@aexp
  3219  0053  1BB4               	btfsc	___flmul@a+2,7
  3220  0054  143C               	bsf	___flmul@aexp,0
  3221  0055  083C               	movf	___flmul@aexp,w
  3222  0056  1903               	btfsc	3,2
  3223  0057  2865               	goto	l4701
  3224  0058  0A3C               	incf	___flmul@aexp,w
  3225  0059  1D03               	btfss	3,2
  3226  005A  2863               	goto	l4699
  3227  005B  3000               	movlw	0
  3228  005C  00B5               	movwf	___flmul@a+3
  3229  005D  3000               	movlw	0
  3230  005E  00B4               	movwf	___flmul@a+2
  3231  005F  3000               	movlw	0
  3232  0060  00B3               	movwf	___flmul@a+1
  3233  0061  3000               	movlw	0
  3234  0062  00B2               	movwf	___flmul@a
  3235  0063                     l4699:
  3236  0063  17B4               	bsf	___flmul@a+2,7
  3237  0064  286D               	goto	l4703
  3238  0065                     l4701:
  3239  0065  3000               	movlw	0
  3240  0066  00B5               	movwf	___flmul@a+3
  3241  0067  3000               	movlw	0
  3242  0068  00B4               	movwf	___flmul@a+2
  3243  0069  3000               	movlw	0
  3244  006A  00B3               	movwf	___flmul@a+1
  3245  006B  3000               	movlw	0
  3246  006C  00B2               	movwf	___flmul@a
  3247  006D                     l4703:
  3248  006D  083C               	movf	___flmul@aexp,w
  3249  006E  1D03               	btfss	3,2
  3250  006F  083D               	movf	___flmul@bexp,w
  3251  0070  1D03               	btfss	3,2
  3252  0071  287B               	goto	l4711
  3253  0072  3000               	movlw	0
  3254  0073  00B1               	movwf	?___flmul+3
  3255  0074  3000               	movlw	0
  3256  0075  00B0               	movwf	?___flmul+2
  3257  0076  3000               	movlw	0
  3258  0077  00AF               	movwf	?___flmul+1
  3259  0078  3000               	movlw	0
  3260  0079  00AE               	movwf	?___flmul
  3261  007A  0008               	return
  3262  007B                     l4711:
  3263  007B  082E               	movf	___flmul@b,w
  3264  007C  00FF               	movwf	127
  3265  007D  087F               	movf	127,w
  3266  007E  00A0               	movwf	__Umul8_16@multiplicand
  3267  007F  0834               	movf	___flmul@a+2,w
  3268  0080  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3269  0085  0821               	movf	?__Umul8_16+1,w
  3270  0086  00C7               	movwf	___flmul@temp+1
  3271  0087  0820               	movf	?__Umul8_16,w
  3272  0088  00C6               	movwf	___flmul@temp
  3273  0089  0846               	movf	___flmul@temp,w
  3274  008A  00B6               	movwf	??___flmul
  3275  008B  01B7               	clrf	??___flmul+1
  3276  008C  01B8               	clrf	??___flmul+2
  3277  008D  01B9               	clrf	??___flmul+3
  3278  008E  0839               	movf	??___flmul+3,w
  3279  008F  00C1               	movwf	___flmul@grs+3
  3280  0090  0838               	movf	??___flmul+2,w
  3281  0091  00C0               	movwf	___flmul@grs+2
  3282  0092  0837               	movf	??___flmul+1,w
  3283  0093  00BF               	movwf	___flmul@grs+1
  3284  0094  0836               	movf	??___flmul,w
  3285  0095  00BE               	movwf	___flmul@grs
  3286  0096  0847               	movf	___flmul@temp+1,w
  3287  0097  00B6               	movwf	??___flmul
  3288  0098  01B7               	clrf	??___flmul+1
  3289  0099  01B8               	clrf	??___flmul+2
  3290  009A  01B9               	clrf	??___flmul+3
  3291  009B  0839               	movf	??___flmul+3,w
  3292  009C  00C5               	movwf	___flmul@prod+3
  3293  009D  0838               	movf	??___flmul+2,w
  3294  009E  00C4               	movwf	___flmul@prod+2
  3295  009F  0837               	movf	??___flmul+1,w
  3296  00A0  00C3               	movwf	___flmul@prod+1
  3297  00A1  0836               	movf	??___flmul,w
  3298  00A2  00C2               	movwf	___flmul@prod
  3299  00A3  082F               	movf	___flmul@b+1,w
  3300  00A4  00FF               	movwf	127
  3301  00A5  087F               	movf	127,w
  3302  00A6  00A0               	movwf	__Umul8_16@multiplicand
  3303  00A7  0833               	movf	___flmul@a+1,w
  3304  00A8  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3305  00AD  0821               	movf	?__Umul8_16+1,w
  3306  00AE  00C7               	movwf	___flmul@temp+1
  3307  00AF  0820               	movf	?__Umul8_16,w
  3308  00B0  00C6               	movwf	___flmul@temp
  3309  00B1  0846               	movf	___flmul@temp,w
  3310  00B2  00B6               	movwf	??___flmul
  3311  00B3  01B7               	clrf	??___flmul+1
  3312  00B4  01B8               	clrf	??___flmul+2
  3313  00B5  01B9               	clrf	??___flmul+3
  3314  00B6  0836               	movf	??___flmul,w
  3315  00B7  07BE               	addwf	___flmul@grs,f
  3316  00B8  0837               	movf	??___flmul+1,w
  3317  00B9  1103               	clrz
  3318  00BA  1803               	skipnc
  3319  00BB  3E01               	addlw	1
  3320  00BC  1D03               	btfss	3,2
  3321  00BD  07BF               	addwf	___flmul@grs+1,f
  3322  00BE  0838               	movf	??___flmul+2,w
  3323  00BF  1103               	clrz
  3324  00C0  1803               	skipnc
  3325  00C1  3E01               	addlw	1
  3326  00C2  1D03               	btfss	3,2
  3327  00C3  07C0               	addwf	___flmul@grs+2,f
  3328  00C4  0839               	movf	??___flmul+3,w
  3329  00C5  1103               	clrz
  3330  00C6  1803               	skipnc
  3331  00C7  3E01               	addlw	1
  3332  00C8  1D03               	btfss	3,2
  3333  00C9  07C1               	addwf	___flmul@grs+3,f
  3334  00CA  0847               	movf	___flmul@temp+1,w
  3335  00CB  00B6               	movwf	??___flmul
  3336  00CC  01B7               	clrf	??___flmul+1
  3337  00CD  01B8               	clrf	??___flmul+2
  3338  00CE  01B9               	clrf	??___flmul+3
  3339  00CF  0836               	movf	??___flmul,w
  3340  00D0  07C2               	addwf	___flmul@prod,f
  3341  00D1  0837               	movf	??___flmul+1,w
  3342  00D2  1103               	clrz
  3343  00D3  1803               	skipnc
  3344  00D4  3E01               	addlw	1
  3345  00D5  1D03               	btfss	3,2
  3346  00D6  07C3               	addwf	___flmul@prod+1,f
  3347  00D7  0838               	movf	??___flmul+2,w
  3348  00D8  1103               	clrz
  3349  00D9  1803               	skipnc
  3350  00DA  3E01               	addlw	1
  3351  00DB  1D03               	btfss	3,2
  3352  00DC  07C4               	addwf	___flmul@prod+2,f
  3353  00DD  0839               	movf	??___flmul+3,w
  3354  00DE  1103               	clrz
  3355  00DF  1803               	skipnc
  3356  00E0  3E01               	addlw	1
  3357  00E1  1D03               	btfss	3,2
  3358  00E2  07C5               	addwf	___flmul@prod+3,f
  3359  00E3  0830               	movf	___flmul@b+2,w
  3360  00E4  00FF               	movwf	127
  3361  00E5  087F               	movf	127,w
  3362  00E6  00A0               	movwf	__Umul8_16@multiplicand
  3363  00E7  0832               	movf	___flmul@a,w
  3364  00E8  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3365  00ED  0821               	movf	?__Umul8_16+1,w
  3366  00EE  00C7               	movwf	___flmul@temp+1
  3367  00EF  0820               	movf	?__Umul8_16,w
  3368  00F0  00C6               	movwf	___flmul@temp
  3369  00F1  0846               	movf	___flmul@temp,w
  3370  00F2  00B6               	movwf	??___flmul
  3371  00F3  01B7               	clrf	??___flmul+1
  3372  00F4  01B8               	clrf	??___flmul+2
  3373  00F5  01B9               	clrf	??___flmul+3
  3374  00F6  0836               	movf	??___flmul,w
  3375  00F7  07BE               	addwf	___flmul@grs,f
  3376  00F8  0837               	movf	??___flmul+1,w
  3377  00F9  1103               	clrz
  3378  00FA  1803               	skipnc
  3379  00FB  3E01               	addlw	1
  3380  00FC  1D03               	btfss	3,2
  3381  00FD  07BF               	addwf	___flmul@grs+1,f
  3382  00FE  0838               	movf	??___flmul+2,w
  3383  00FF  1103               	clrz
  3384  0100  1803               	skipnc
  3385  0101  3E01               	addlw	1
  3386  0102  1D03               	btfss	3,2
  3387  0103  07C0               	addwf	___flmul@grs+2,f
  3388  0104  0839               	movf	??___flmul+3,w
  3389  0105  1103               	clrz
  3390  0106  1803               	skipnc
  3391  0107  3E01               	addlw	1
  3392  0108  1D03               	btfss	3,2
  3393  0109  07C1               	addwf	___flmul@grs+3,f
  3394  010A  0847               	movf	___flmul@temp+1,w
  3395  010B  00B6               	movwf	??___flmul
  3396  010C  01B7               	clrf	??___flmul+1
  3397  010D  01B8               	clrf	??___flmul+2
  3398  010E  01B9               	clrf	??___flmul+3
  3399  010F  0836               	movf	??___flmul,w
  3400  0110  07C2               	addwf	___flmul@prod,f
  3401  0111  0837               	movf	??___flmul+1,w
  3402  0112  1103               	clrz
  3403  0113  1803               	skipnc
  3404  0114  3E01               	addlw	1
  3405  0115  1D03               	btfss	3,2
  3406  0116  07C3               	addwf	___flmul@prod+1,f
  3407  0117  0838               	movf	??___flmul+2,w
  3408  0118  1103               	clrz
  3409  0119  1803               	skipnc
  3410  011A  3E01               	addlw	1
  3411  011B  1D03               	btfss	3,2
  3412  011C  07C4               	addwf	___flmul@prod+2,f
  3413  011D  0839               	movf	??___flmul+3,w
  3414  011E  1103               	clrz
  3415  011F  1803               	skipnc
  3416  0120  3E01               	addlw	1
  3417  0121  1D03               	btfss	3,2
  3418  0122  07C5               	addwf	___flmul@prod+3,f
  3419  0123  3008               	movlw	8
  3420  0124  00B6               	movwf	??___flmul
  3421  0125                     u6565:
  3422  0125  1003               	clrc
  3423  0126  0DBE               	rlf	___flmul@grs,f
  3424  0127  0DBF               	rlf	___flmul@grs+1,f
  3425  0128  0DC0               	rlf	___flmul@grs+2,f
  3426  0129  0DC1               	rlf	___flmul@grs+3,f
  3427  012A  0BB6               	decfsz	??___flmul,f
  3428  012B  2925               	goto	u6565
  3429  012C  082F               	movf	___flmul@b+1,w
  3430  012D  00FF               	movwf	127
  3431  012E  087F               	movf	127,w
  3432  012F  00A0               	movwf	__Umul8_16@multiplicand
  3433  0130  0832               	movf	___flmul@a,w
  3434  0131  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3435  0136  0821               	movf	?__Umul8_16+1,w
  3436  0137  00C7               	movwf	___flmul@temp+1
  3437  0138  0820               	movf	?__Umul8_16,w
  3438  0139  00C6               	movwf	___flmul@temp
  3439  013A  0846               	movf	___flmul@temp,w
  3440  013B  00B6               	movwf	??___flmul
  3441  013C  0847               	movf	___flmul@temp+1,w
  3442  013D  00B7               	movwf	??___flmul+1
  3443  013E  01B8               	clrf	??___flmul+2
  3444  013F  01B9               	clrf	??___flmul+3
  3445  0140  0836               	movf	??___flmul,w
  3446  0141  07BE               	addwf	___flmul@grs,f
  3447  0142  0837               	movf	??___flmul+1,w
  3448  0143  1103               	clrz
  3449  0144  1803               	skipnc
  3450  0145  3E01               	addlw	1
  3451  0146  1D03               	btfss	3,2
  3452  0147  07BF               	addwf	___flmul@grs+1,f
  3453  0148  0838               	movf	??___flmul+2,w
  3454  0149  1103               	clrz
  3455  014A  1803               	skipnc
  3456  014B  3E01               	addlw	1
  3457  014C  1D03               	btfss	3,2
  3458  014D  07C0               	addwf	___flmul@grs+2,f
  3459  014E  0839               	movf	??___flmul+3,w
  3460  014F  1103               	clrz
  3461  0150  1803               	skipnc
  3462  0151  3E01               	addlw	1
  3463  0152  1D03               	btfss	3,2
  3464  0153  07C1               	addwf	___flmul@grs+3,f
  3465  0154  082E               	movf	___flmul@b,w
  3466  0155  00FF               	movwf	127
  3467  0156  087F               	movf	127,w
  3468  0157  00A0               	movwf	__Umul8_16@multiplicand
  3469  0158  0833               	movf	___flmul@a+1,w
  3470  0159  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3471  015E  0821               	movf	?__Umul8_16+1,w
  3472  015F  00C7               	movwf	___flmul@temp+1
  3473  0160  0820               	movf	?__Umul8_16,w
  3474  0161  00C6               	movwf	___flmul@temp
  3475  0162  0846               	movf	___flmul@temp,w
  3476  0163  00B6               	movwf	??___flmul
  3477  0164  0847               	movf	___flmul@temp+1,w
  3478  0165  00B7               	movwf	??___flmul+1
  3479  0166  01B8               	clrf	??___flmul+2
  3480  0167  01B9               	clrf	??___flmul+3
  3481  0168  0836               	movf	??___flmul,w
  3482  0169  07BE               	addwf	___flmul@grs,f
  3483  016A  0837               	movf	??___flmul+1,w
  3484  016B  1103               	clrz
  3485  016C  1803               	skipnc
  3486  016D  3E01               	addlw	1
  3487  016E  1D03               	btfss	3,2
  3488  016F  07BF               	addwf	___flmul@grs+1,f
  3489  0170  0838               	movf	??___flmul+2,w
  3490  0171  1103               	clrz
  3491  0172  1803               	skipnc
  3492  0173  3E01               	addlw	1
  3493  0174  1D03               	btfss	3,2
  3494  0175  07C0               	addwf	___flmul@grs+2,f
  3495  0176  0839               	movf	??___flmul+3,w
  3496  0177  1103               	clrz
  3497  0178  1803               	skipnc
  3498  0179  3E01               	addlw	1
  3499  017A  1D03               	btfss	3,2
  3500  017B  07C1               	addwf	___flmul@grs+3,f
  3501  017C  3008               	movlw	8
  3502  017D  00B6               	movwf	??___flmul
  3503  017E                     u6595:
  3504  017E  1003               	clrc
  3505  017F  0DBE               	rlf	___flmul@grs,f
  3506  0180  0DBF               	rlf	___flmul@grs+1,f
  3507  0181  0DC0               	rlf	___flmul@grs+2,f
  3508  0182  0DC1               	rlf	___flmul@grs+3,f
  3509  0183  0BB6               	decfsz	??___flmul,f
  3510  0184  297E               	goto	u6595
  3511  0185  082E               	movf	___flmul@b,w
  3512  0186  00FF               	movwf	127
  3513  0187  087F               	movf	127,w
  3514  0188  00A0               	movwf	__Umul8_16@multiplicand
  3515  0189  0832               	movf	___flmul@a,w
  3516  018A  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3517  018F  0821               	movf	?__Umul8_16+1,w
  3518  0190  00C7               	movwf	___flmul@temp+1
  3519  0191  0820               	movf	?__Umul8_16,w
  3520  0192  00C6               	movwf	___flmul@temp
  3521  0193  0846               	movf	___flmul@temp,w
  3522  0194  00B6               	movwf	??___flmul
  3523  0195  0847               	movf	___flmul@temp+1,w
  3524  0196  00B7               	movwf	??___flmul+1
  3525  0197  01B8               	clrf	??___flmul+2
  3526  0198  01B9               	clrf	??___flmul+3
  3527  0199  0836               	movf	??___flmul,w
  3528  019A  07BE               	addwf	___flmul@grs,f
  3529  019B  0837               	movf	??___flmul+1,w
  3530  019C  1103               	clrz
  3531  019D  1803               	skipnc
  3532  019E  3E01               	addlw	1
  3533  019F  1D03               	btfss	3,2
  3534  01A0  07BF               	addwf	___flmul@grs+1,f
  3535  01A1  0838               	movf	??___flmul+2,w
  3536  01A2  1103               	clrz
  3537  01A3  1803               	skipnc
  3538  01A4  3E01               	addlw	1
  3539  01A5  1D03               	btfss	3,2
  3540  01A6  07C0               	addwf	___flmul@grs+2,f
  3541  01A7  0839               	movf	??___flmul+3,w
  3542  01A8  1103               	clrz
  3543  01A9  1803               	skipnc
  3544  01AA  3E01               	addlw	1
  3545  01AB  1D03               	btfss	3,2
  3546  01AC  07C1               	addwf	___flmul@grs+3,f
  3547  01AD  082F               	movf	___flmul@b+1,w
  3548  01AE  00FF               	movwf	127
  3549  01AF  087F               	movf	127,w
  3550  01B0  00A0               	movwf	__Umul8_16@multiplicand
  3551  01B1  0834               	movf	___flmul@a+2,w
  3552  01B2  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3553  01B7  0821               	movf	?__Umul8_16+1,w
  3554  01B8  00C7               	movwf	___flmul@temp+1
  3555  01B9  0820               	movf	?__Umul8_16,w
  3556  01BA  00C6               	movwf	___flmul@temp
  3557  01BB  0846               	movf	___flmul@temp,w
  3558  01BC  00B6               	movwf	??___flmul
  3559  01BD  0847               	movf	___flmul@temp+1,w
  3560  01BE  00B7               	movwf	??___flmul+1
  3561  01BF  01B8               	clrf	??___flmul+2
  3562  01C0  01B9               	clrf	??___flmul+3
  3563  01C1  0836               	movf	??___flmul,w
  3564  01C2  07C2               	addwf	___flmul@prod,f
  3565  01C3  0837               	movf	??___flmul+1,w
  3566  01C4  1103               	clrz
  3567  01C5  1803               	skipnc
  3568  01C6  3E01               	addlw	1
  3569  01C7  1D03               	btfss	3,2
  3570  01C8  07C3               	addwf	___flmul@prod+1,f
  3571  01C9  0838               	movf	??___flmul+2,w
  3572  01CA  1103               	clrz
  3573  01CB  1803               	skipnc
  3574  01CC  3E01               	addlw	1
  3575  01CD  1D03               	btfss	3,2
  3576  01CE  07C4               	addwf	___flmul@prod+2,f
  3577  01CF  0839               	movf	??___flmul+3,w
  3578  01D0  1103               	clrz
  3579  01D1  1803               	skipnc
  3580  01D2  3E01               	addlw	1
  3581  01D3  1D03               	btfss	3,2
  3582  01D4  07C5               	addwf	___flmul@prod+3,f
  3583  01D5  0830               	movf	___flmul@b+2,w
  3584  01D6  00FF               	movwf	127
  3585  01D7  087F               	movf	127,w
  3586  01D8  00A0               	movwf	__Umul8_16@multiplicand
  3587  01D9  0833               	movf	___flmul@a+1,w
  3588  01DA  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3589  01DF  0821               	movf	?__Umul8_16+1,w
  3590  01E0  00C7               	movwf	___flmul@temp+1
  3591  01E1  0820               	movf	?__Umul8_16,w
  3592  01E2  00C6               	movwf	___flmul@temp
  3593  01E3  0846               	movf	___flmul@temp,w
  3594  01E4  00B6               	movwf	??___flmul
  3595  01E5  0847               	movf	___flmul@temp+1,w
  3596  01E6  00B7               	movwf	??___flmul+1
  3597  01E7  01B8               	clrf	??___flmul+2
  3598  01E8  01B9               	clrf	??___flmul+3
  3599  01E9  0836               	movf	??___flmul,w
  3600  01EA  07C2               	addwf	___flmul@prod,f
  3601  01EB  0837               	movf	??___flmul+1,w
  3602  01EC  1103               	clrz
  3603  01ED  1803               	skipnc
  3604  01EE  3E01               	addlw	1
  3605  01EF  1D03               	btfss	3,2
  3606  01F0  07C3               	addwf	___flmul@prod+1,f
  3607  01F1  0838               	movf	??___flmul+2,w
  3608  01F2  1103               	clrz
  3609  01F3  1803               	skipnc
  3610  01F4  3E01               	addlw	1
  3611  01F5  1D03               	btfss	3,2
  3612  01F6  07C4               	addwf	___flmul@prod+2,f
  3613  01F7  0839               	movf	??___flmul+3,w
  3614  01F8  1103               	clrz
  3615  01F9  1803               	skipnc
  3616  01FA  3E01               	addlw	1
  3617  01FB  1D03               	btfss	3,2
  3618  01FC  07C5               	addwf	___flmul@prod+3,f
  3619  01FD  0830               	movf	___flmul@b+2,w
  3620  01FE  00FF               	movwf	127
  3621  01FF  087F               	movf	127,w
  3622  0200  00A0               	movwf	__Umul8_16@multiplicand
  3623  0201  0834               	movf	___flmul@a+2,w
  3624  0202  160A  118A  245F  120A  118A  	fcall	__Umul8_16
  3625  0207  0821               	movf	?__Umul8_16+1,w
  3626  0208  00C7               	movwf	___flmul@temp+1
  3627  0209  0820               	movf	?__Umul8_16,w
  3628  020A  00C6               	movwf	___flmul@temp
  3629  020B  0846               	movf	___flmul@temp,w
  3630  020C  00B6               	movwf	??___flmul
  3631  020D  0847               	movf	___flmul@temp+1,w
  3632  020E  00B7               	movwf	??___flmul+1
  3633  020F  01B8               	clrf	??___flmul+2
  3634  0210  01B9               	clrf	??___flmul+3
  3635  0211  3008               	movlw	8
  3636  0212                     u6635:
  3637  0212  1003               	clrc
  3638  0213  0DB6               	rlf	??___flmul,f
  3639  0214  0DB7               	rlf	??___flmul+1,f
  3640  0215  0DB8               	rlf	??___flmul+2,f
  3641  0216  0DB9               	rlf	??___flmul+3,f
  3642  0217  3EFF               	addlw	-1
  3643  0218  1D03               	skipz
  3644  0219  2A12               	goto	u6635
  3645  021A  0836               	movf	??___flmul,w
  3646  021B  07C2               	addwf	___flmul@prod,f
  3647  021C  0837               	movf	??___flmul+1,w
  3648  021D  1103               	clrz
  3649  021E  1803               	skipnc
  3650  021F  3E01               	addlw	1
  3651  0220  1D03               	btfss	3,2
  3652  0221  07C3               	addwf	___flmul@prod+1,f
  3653  0222  0838               	movf	??___flmul+2,w
  3654  0223  1103               	clrz
  3655  0224  1803               	skipnc
  3656  0225  3E01               	addlw	1
  3657  0226  1D03               	btfss	3,2
  3658  0227  07C4               	addwf	___flmul@prod+2,f
  3659  0228  0839               	movf	??___flmul+3,w
  3660  0229  1103               	clrz
  3661  022A  1803               	skipnc
  3662  022B  3E01               	addlw	1
  3663  022C  1D03               	btfss	3,2
  3664  022D  07C5               	addwf	___flmul@prod+3,f
  3665  022E  0841               	movf	___flmul@grs+3,w
  3666  022F  00B6               	movwf	??___flmul
  3667  0230  01B7               	clrf	??___flmul+1
  3668  0231  01B8               	clrf	??___flmul+2
  3669  0232  01B9               	clrf	??___flmul+3
  3670  0233  0836               	movf	??___flmul,w
  3671  0234  07C2               	addwf	___flmul@prod,f
  3672  0235  0837               	movf	??___flmul+1,w
  3673  0236  1103               	clrz
  3674  0237  1803               	skipnc
  3675  0238  3E01               	addlw	1
  3676  0239  1D03               	btfss	3,2
  3677  023A  07C3               	addwf	___flmul@prod+1,f
  3678  023B  0838               	movf	??___flmul+2,w
  3679  023C  1103               	clrz
  3680  023D  1803               	skipnc
  3681  023E  3E01               	addlw	1
  3682  023F  1D03               	btfss	3,2
  3683  0240  07C4               	addwf	___flmul@prod+2,f
  3684  0241  0839               	movf	??___flmul+3,w
  3685  0242  1103               	clrz
  3686  0243  1803               	skipnc
  3687  0244  3E01               	addlw	1
  3688  0245  1D03               	btfss	3,2
  3689  0246  07C5               	addwf	___flmul@prod+3,f
  3690  0247  3008               	movlw	8
  3691  0248  00B6               	movwf	??___flmul
  3692  0249                     u6665:
  3693  0249  1003               	clrc
  3694  024A  0DBE               	rlf	___flmul@grs,f
  3695  024B  0DBF               	rlf	___flmul@grs+1,f
  3696  024C  0DC0               	rlf	___flmul@grs+2,f
  3697  024D  0DC1               	rlf	___flmul@grs+3,f
  3698  024E  0BB6               	decfsz	??___flmul,f
  3699  024F  2A49               	goto	u6665
  3700  0250  083D               	movf	___flmul@bexp,w
  3701  0251  073C               	addwf	___flmul@aexp,w
  3702  0252  00B6               	movwf	??___flmul
  3703  0253  01B7               	clrf	??___flmul+1
  3704  0254  0DB7               	rlf	??___flmul+1,f
  3705  0255  0836               	movf	??___flmul,w
  3706  0256  3E82               	addlw	130
  3707  0257  00C6               	movwf	___flmul@temp
  3708  0258  0837               	movf	??___flmul+1,w
  3709  0259  1803               	skipnc
  3710  025A  3E01               	addlw	1
  3711  025B  3EFF               	addlw	255
  3712  025C  00C7               	movwf	___flmul@temp+1
  3713  025D                     l4763:
  3714  025D  1BC4               	btfsc	___flmul@prod+2,7
  3715  025E  2A7A               	goto	l4765
  3716  025F  3001               	movlw	1
  3717  0260  00B6               	movwf	??___flmul
  3718  0261                     u6675:
  3719  0261  1003               	clrc
  3720  0262  0DC2               	rlf	___flmul@prod,f
  3721  0263  0DC3               	rlf	___flmul@prod+1,f
  3722  0264  0DC4               	rlf	___flmul@prod+2,f
  3723  0265  0DC5               	rlf	___flmul@prod+3,f
  3724  0266  0BB6               	decfsz	??___flmul,f
  3725  0267  2A61               	goto	u6675
  3726  0268  1BC1               	btfsc	___flmul@grs+3,7
  3727  0269  1442               	bsf	___flmul@prod,0
  3728  026A  3001               	movlw	1
  3729  026B  00B6               	movwf	??___flmul
  3730  026C                     u6695:
  3731  026C  1003               	clrc
  3732  026D  0DBE               	rlf	___flmul@grs,f
  3733  026E  0DBF               	rlf	___flmul@grs+1,f
  3734  026F  0DC0               	rlf	___flmul@grs+2,f
  3735  0270  0DC1               	rlf	___flmul@grs+3,f
  3736  0271  0BB6               	decfsz	??___flmul,f
  3737  0272  2A6C               	goto	u6695
  3738  0273  30FF               	movlw	255
  3739  0274  07C6               	addwf	___flmul@temp,f
  3740  0275  1803               	skipnc
  3741  0276  0AC7               	incf	___flmul@temp+1,f
  3742  0277  30FF               	movlw	255
  3743  0278  07C7               	addwf	___flmul@temp+1,f
  3744  0279  2A5D               	goto	l4763
  3745  027A                     l4765:
  3746  027A  01BC               	clrf	___flmul@aexp
  3747  027B  1FC1               	btfss	___flmul@grs+3,7
  3748  027C  2A93               	goto	l4775
  3749  027D  30FF               	movlw	255
  3750  027E  053E               	andwf	___flmul@grs,w
  3751  027F  00B6               	movwf	??___flmul
  3752  0280  30FF               	movlw	255
  3753  0281  053F               	andwf	___flmul@grs+1,w
  3754  0282  00B7               	movwf	??___flmul+1
  3755  0283  30FF               	movlw	255
  3756  0284  0540               	andwf	___flmul@grs+2,w
  3757  0285  00B8               	movwf	??___flmul+2
  3758  0286  307F               	movlw	127
  3759  0287  0541               	andwf	___flmul@grs+3,w
  3760  0288  00B9               	movwf	??___flmul+3
  3761  0289  0839               	movf	??___flmul+3,w
  3762  028A  0438               	iorwf	??___flmul+2,w
  3763  028B  0437               	iorwf	??___flmul+1,w
  3764  028C  0436               	iorwf	??___flmul,w
  3765  028D  1903               	skipnz
  3766  028E  1842               	btfsc	___flmul@prod,0
  3767  028F  2A91               	goto	l4771
  3768  0290  2A93               	goto	l4775
  3769  0291                     l4771:
  3770  0291  01BC               	clrf	___flmul@aexp
  3771  0292  0ABC               	incf	___flmul@aexp,f
  3772  0293                     l4775:
  3773  0293  083C               	movf	___flmul@aexp,w
  3774  0294  1903               	btfsc	3,2
  3775  0295  2AC5               	goto	l4785
  3776  0296  3001               	movlw	1
  3777  0297  07C2               	addwf	___flmul@prod,f
  3778  0298  3000               	movlw	0
  3779  0299  1803               	skipnc
  3780  029A  3001               	movlw	1
  3781  029B  07C3               	addwf	___flmul@prod+1,f
  3782  029C  3000               	movlw	0
  3783  029D  1803               	skipnc
  3784  029E  3001               	movlw	1
  3785  029F  07C4               	addwf	___flmul@prod+2,f
  3786  02A0  3000               	movlw	0
  3787  02A1  1803               	skipnc
  3788  02A2  3001               	movlw	1
  3789  02A3  07C5               	addwf	___flmul@prod+3,f
  3790  02A4  1C45               	btfss	___flmul@prod+3,0
  3791  02A5  2AC5               	goto	l4785
  3792  02A6  0842               	movf	___flmul@prod,w
  3793  02A7  00B6               	movwf	??___flmul
  3794  02A8  0843               	movf	___flmul@prod+1,w
  3795  02A9  00B7               	movwf	??___flmul+1
  3796  02AA  0844               	movf	___flmul@prod+2,w
  3797  02AB  00B8               	movwf	??___flmul+2
  3798  02AC  0845               	movf	___flmul@prod+3,w
  3799  02AD  00B9               	movwf	??___flmul+3
  3800  02AE  3001               	movlw	1
  3801  02AF  00BA               	movwf	??___flmul+4
  3802  02B0                     u6765:
  3803  02B0  0D39               	rlf	??___flmul+3,w
  3804  02B1  0CB9               	rrf	??___flmul+3,f
  3805  02B2  0CB8               	rrf	??___flmul+2,f
  3806  02B3  0CB7               	rrf	??___flmul+1,f
  3807  02B4  0CB6               	rrf	??___flmul,f
  3808  02B5  0BBA               	decfsz	??___flmul+4,f
  3809  02B6  2AB0               	goto	u6765
  3810  02B7  0839               	movf	??___flmul+3,w
  3811  02B8  00C5               	movwf	___flmul@prod+3
  3812  02B9  0838               	movf	??___flmul+2,w
  3813  02BA  00C4               	movwf	___flmul@prod+2
  3814  02BB  0837               	movf	??___flmul+1,w
  3815  02BC  00C3               	movwf	___flmul@prod+1
  3816  02BD  0836               	movf	??___flmul,w
  3817  02BE  00C2               	movwf	___flmul@prod
  3818  02BF  3001               	movlw	1
  3819  02C0  07C6               	addwf	___flmul@temp,f
  3820  02C1  1803               	skipnc
  3821  02C2  0AC7               	incf	___flmul@temp+1,f
  3822  02C3  3000               	movlw	0
  3823  02C4  07C7               	addwf	___flmul@temp+1,f
  3824  02C5                     l4785:
  3825  02C5  0847               	movf	___flmul@temp+1,w
  3826  02C6  3A80               	xorlw	128
  3827  02C7  00FF               	movwf	127
  3828  02C8  3080               	movlw	128
  3829  02C9  027F               	subwf	127,w
  3830  02CA  1D03               	skipz
  3831  02CB  2ACE               	goto	u6775
  3832  02CC  30FF               	movlw	255
  3833  02CD  0246               	subwf	___flmul@temp,w
  3834  02CE                     u6775:
  3835  02CE  1C03               	skipc
  3836  02CF  2ADB               	goto	l4789
  3837  02D0  307F               	movlw	127
  3838  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3839  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3840  02D3  00C5               	movwf	___flmul@prod+3
  3841  02D4  3080               	movlw	128
  3842  02D5  00C4               	movwf	___flmul@prod+2
  3843  02D6  3000               	movlw	0
  3844  02D7  00C3               	movwf	___flmul@prod+1
  3845  02D8  3000               	movlw	0
  3846  02D9  00C2               	movwf	___flmul@prod
  3847  02DA  2B0B               	goto	l1017
  3848  02DB                     l4789:
  3849  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3850  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  3851  02DD  0847               	movf	___flmul@temp+1,w
  3852  02DE  3A80               	xorlw	128
  3853  02DF  00FF               	movwf	127
  3854  02E0  3080               	movlw	128
  3855  02E1  027F               	subwf	127,w
  3856  02E2  1D03               	skipz
  3857  02E3  2AE6               	goto	u6785
  3858  02E4  3001               	movlw	1
  3859  02E5  0246               	subwf	___flmul@temp,w
  3860  02E6                     u6785:
  3861  02E6  1803               	skipnc
  3862  02E7  2AF4               	goto	l4795
  3863  02E8  3000               	movlw	0
  3864  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3865  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3866  02EB  00C5               	movwf	___flmul@prod+3
  3867  02EC  3000               	movlw	0
  3868  02ED  00C4               	movwf	___flmul@prod+2
  3869  02EE  3000               	movlw	0
  3870  02EF  00C3               	movwf	___flmul@prod+1
  3871  02F0  3000               	movlw	0
  3872  02F1  00C2               	movwf	___flmul@prod
  3873  02F2  01BB               	clrf	___flmul@sign
  3874  02F3  2B0B               	goto	l1017
  3875  02F4                     l4795:
  3876  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3877  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3878  02F6  0846               	movf	___flmul@temp,w
  3879  02F7  00FF               	movwf	127
  3880  02F8  087F               	movf	127,w
  3881  02F9  00BD               	movwf	___flmul@bexp
  3882  02FA  30FF               	movlw	255
  3883  02FB  05C2               	andwf	___flmul@prod,f
  3884  02FC  30FF               	movlw	255
  3885  02FD  05C3               	andwf	___flmul@prod+1,f
  3886  02FE  307F               	movlw	127
  3887  02FF  05C4               	andwf	___flmul@prod+2,f
  3888  0300  3000               	movlw	0
  3889  0301  05C5               	andwf	___flmul@prod+3,f
  3890  0302  183D               	btfsc	___flmul@bexp,0
  3891  0303  17C4               	bsf	___flmul@prod+2,7
  3892  0304  083D               	movf	___flmul@bexp,w
  3893  0305  00B6               	movwf	??___flmul
  3894  0306  1003               	clrc
  3895  0307  0C36               	rrf	??___flmul,w
  3896  0308  00FF               	movwf	127
  3897  0309  087F               	movf	127,w
  3898  030A  00C5               	movwf	___flmul@prod+3
  3899  030B                     l1017:
  3900  030B  083B               	movf	___flmul@sign,w
  3901  030C  00FF               	movwf	127
  3902  030D  087F               	movf	127,w
  3903  030E  04C5               	iorwf	___flmul@prod+3,f
  3904  030F  0845               	movf	___flmul@prod+3,w
  3905  0310  00B1               	movwf	?___flmul+3
  3906  0311  0844               	movf	___flmul@prod+2,w
  3907  0312  00B0               	movwf	?___flmul+2
  3908  0313  0843               	movf	___flmul@prod+1,w
  3909  0314  00AF               	movwf	?___flmul+1
  3910  0315  0842               	movf	___flmul@prod,w
  3911  0316  00AE               	movwf	?___flmul
  3912  0317  0008               	return
  3913  0318                     __end_of___flmul:
  3914                           
  3915                           	psect	text12
  3916  145F                     __ptext12:	
  3917 ;; *************** function __Umul8_16 *****************
  3918 ;; Defined at:
  3919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\Umul8_16.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  multiplier      1    wreg     unsigned char 
  3922 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3925 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3926 ;;  product         2    4[BANK0 ] unsigned int 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2    0[BANK0 ] unsigned int 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 300/0
  3933 ;;		On exit  : 300/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3936 ;;      Params:         0       2       0       0       0
  3937 ;;      Locals:         0       5       0       0       0
  3938 ;;      Temps:          0       2       0       0       0
  3939 ;;      Totals:         0       9       0       0       0
  3940 ;;Total ram usage:        9 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    2
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		___flmul
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function __Umul8_16
  3952  145F                     __Umul8_16:
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3956                           ;__Umul8_16@multiplier stored from wreg
  3957  145F  00A8               	movwf	__Umul8_16@multiplier
  3958  1460  01A4               	clrf	__Umul8_16@product
  3959  1461  01A5               	clrf	__Umul8_16@product+1
  3960  1462  0820               	movf	__Umul8_16@multiplicand,w
  3961  1463  00A2               	movwf	??__Umul8_16
  3962  1464  01A3               	clrf	??__Umul8_16+1
  3963  1465  0822               	movf	??__Umul8_16,w
  3964  1466  00A6               	movwf	__Umul8_16@word_mpld
  3965  1467  0823               	movf	??__Umul8_16+1,w
  3966  1468  00A7               	movwf	__Umul8_16@word_mpld+1
  3967  1469                     l4233:
  3968  1469  1C28               	btfss	__Umul8_16@multiplier,0
  3969  146A  2C71               	goto	l1024
  3970  146B  0826               	movf	__Umul8_16@word_mpld,w
  3971  146C  07A4               	addwf	__Umul8_16@product,f
  3972  146D  1803               	skipnc
  3973  146E  0AA5               	incf	__Umul8_16@product+1,f
  3974  146F  0827               	movf	__Umul8_16@word_mpld+1,w
  3975  1470  07A5               	addwf	__Umul8_16@product+1,f
  3976  1471                     l1024:
  3977  1471  3001               	movlw	1
  3978  1472                     u5525:
  3979  1472  1003               	clrc
  3980  1473  0DA6               	rlf	__Umul8_16@word_mpld,f
  3981  1474  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3982  1475  3EFF               	addlw	-1
  3983  1476  1D03               	skipz
  3984  1477  2C72               	goto	u5525
  3985  1478  1003               	clrc
  3986  1479  0CA8               	rrf	__Umul8_16@multiplier,f
  3987  147A  0828               	movf	__Umul8_16@multiplier,w
  3988  147B  1D03               	btfss	3,2
  3989  147C  2C69               	goto	l4233
  3990  147D  0825               	movf	__Umul8_16@product+1,w
  3991  147E  00A1               	movwf	?__Umul8_16+1
  3992  147F  0824               	movf	__Umul8_16@product,w
  3993  1480  00A0               	movwf	?__Umul8_16
  3994  1481  0008               	return
  3995  1482                     __end_of__Umul8_16:
  3996                           
  3997                           	psect	text13
  3998  13BB                     __ptext13:	
  3999 ;; *************** function _RPM_init *****************
  4000 ;; Defined at:
  4001 ;;		line 11 in file "RPM.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		None
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/100
  4012 ;;		On exit  : 300/100
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    2
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function _RPM_init
  4031  13BB                     _RPM_init:
  4032                           
  4033                           ;RPM.c: 14:     TRISBbits.TRISB0 = 1;
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _RPM_init: []
  4037  13BB  1683               	bsf	3,5	;RP0=1, select bank1
  4038  13BC  1303               	bcf	3,6	;RP1=0, select bank1
  4039  13BD  1406               	bsf	6,0	;volatile
  4040                           
  4041                           ;RPM.c: 17:     T1CONbits.T1CKPS1 = 1;
  4042  13BE  1283               	bcf	3,5	;RP0=0, select bank0
  4043  13BF  1690               	bsf	16,5	;volatile
  4044                           
  4045                           ;RPM.c: 18:     T1CONbits.T1CKPS0 = 1;
  4046  13C0  1610               	bsf	16,4	;volatile
  4047                           
  4048                           ;RPM.c: 19:     T1CONbits.TMR1CS = 0;
  4049  13C1  1090               	bcf	16,1	;volatile
  4050                           
  4051                           ;RPM.c: 20:     T1CONbits.TMR1ON = 1;
  4052  13C2  1410               	bsf	16,0	;volatile
  4053                           
  4054                           ;RPM.c: 23:     INTCONbits.GIE = 1;
  4055  13C3  178B               	bsf	11,7	;volatile
  4056                           
  4057                           ;RPM.c: 24:     INTCONbits.INTE = 0;
  4058  13C4  120B               	bcf	11,4	;volatile
  4059                           
  4060                           ;RPM.c: 25:     INTEDG = 1;
  4061  13C5  1683               	bsf	3,5	;RP0=1, select bank1
  4062  13C6  1701               	bsf	1,6	;volatile
  4063                           
  4064                           ;RPM.c: 26:     INTF = 0;
  4065  13C7  108B               	bcf	11,1	;volatile
  4066                           
  4067                           ;RPM.c: 28:     return;
  4068  13C8  0008               	return
  4069  13C9                     __end_of_RPM_init:
  4070                           
  4071                           	psect	text14
  4072  077A                     __ptext14:	
  4073 ;; *************** function _PWM_init_2 *****************
  4074 ;; Defined at:
  4075 ;;		line 127 in file "Libreria pwm.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  frecuencia      2   16[BANK1 ] unsigned int 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  per             3   22[BANK1 ] float 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 300/100
  4086 ;;		On exit  : 300/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4089 ;;      Params:         0       0       2       0       0
  4090 ;;      Locals:         0       0       3       0       0
  4091 ;;      Temps:          0       0       4       0       0
  4092 ;;      Totals:         0       0       9       0       0
  4093 ;;Total ram usage:        9 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    3
  4096 ;; This function calls:
  4097 ;;		___fladd
  4098 ;;		___fldiv
  4099 ;;		___fltol
  4100 ;;		___xxtofl
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function _PWM_init_2
  4108  077A                     _PWM_init_2:
  4109                           
  4110                           ;Libreria pwm.c: 132:     per = 1.0 / frecuencia;
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in _PWM_init_2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4114  077A  0830               	movf	PWM_init_2@frecuencia^(0+128),w
  4115  077B  1283               	bcf	3,5	;RP0=0, select bank0
  4116  077C  00A0               	movwf	___xxtofl@val
  4117  077D  1683               	bsf	3,5	;RP0=1, select bank1
  4118  077E  0831               	movf	(PWM_init_2@frecuencia+1)^(0+128),w
  4119  077F  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0780  00A1               	movwf	___xxtofl@val+1
  4121  0781  01A2               	clrf	___xxtofl@val+2
  4122  0782  01A3               	clrf	___xxtofl@val+3
  4123  0783  3000               	movlw	0
  4124  0784  120A  158A  214E  120A  118A  	fcall	___xxtofl
  4125  0789  0823               	movf	?___xxtofl+3,w
  4126  078A  00CB               	movwf	___fldiv@a+3
  4127  078B  0822               	movf	?___xxtofl+2,w
  4128  078C  00CA               	movwf	___fldiv@a+2
  4129  078D  0821               	movf	?___xxtofl+1,w
  4130  078E  00C9               	movwf	___fldiv@a+1
  4131  078F  0820               	movf	?___xxtofl,w
  4132  0790  00C8               	movwf	___fldiv@a
  4133  0791  303F               	movlw	63
  4134  0792  00CF               	movwf	___fldiv@b+3
  4135  0793  3080               	movlw	128
  4136  0794  00CE               	movwf	___fldiv@b+2
  4137  0795  3000               	movlw	0
  4138  0796  00CD               	movwf	___fldiv@b+1
  4139  0797  3000               	movlw	0
  4140  0798  00CC               	movwf	___fldiv@b
  4141  0799  120A  158A  24AE  120A  118A  	fcall	___fldiv
  4142  079E  0849               	movf	?___fldiv+1,w
  4143  079F  1683               	bsf	3,5	;RP0=1, select bank1
  4144  07A0  00B6               	movwf	PWM_init_2@per^(0+128)
  4145  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  4146  07A2  084A               	movf	?___fldiv+2,w
  4147  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  4148  07A4  00B7               	movwf	(PWM_init_2@per+1)^(0+128)
  4149  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  4150  07A6  084B               	movf	?___fldiv+3,w
  4151  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  4152  07A8  00B8               	movwf	(PWM_init_2@per+2)^(0+128)
  4153                           
  4154                           ;Libreria pwm.c: 135:     PR2 = (per / (4 * 1.0 / 4000000 * 16)) - 1;
  4155  07A9  0838               	movf	(PWM_init_2@per+2)^(0+128),w
  4156  07AA  00B5               	movwf	(??_PWM_init_2^(0+128)+3)
  4157  07AB  0837               	movf	(PWM_init_2@per+1)^(0+128),w
  4158  07AC  00B4               	movwf	(??_PWM_init_2^(0+128)+2)
  4159  07AD  0836               	movf	PWM_init_2@per^(0+128),w
  4160  07AE  00B3               	movwf	(??_PWM_init_2^(0+128)+1)
  4161  07AF  01B2               	clrf	??_PWM_init_2^(0+128)
  4162  07B0  0835               	movf	(??_PWM_init_2+3)^(0+128),w
  4163  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4164  07B2  00CF               	movwf	___fldiv@b+3
  4165  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  4166  07B4  0834               	movf	(??_PWM_init_2+2)^(0+128),w
  4167  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4168  07B6  00CE               	movwf	___fldiv@b+2
  4169  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4170  07B8  0833               	movf	(??_PWM_init_2+1)^(0+128),w
  4171  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4172  07BA  00CD               	movwf	___fldiv@b+1
  4173  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  4174  07BC  0832               	movf	??_PWM_init_2^(0+128),w
  4175  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  4176  07BE  00CC               	movwf	___fldiv@b
  4177  07BF  3037               	movlw	55
  4178  07C0  00CB               	movwf	___fldiv@a+3
  4179  07C1  3086               	movlw	134
  4180  07C2  00CA               	movwf	___fldiv@a+2
  4181  07C3  3037               	movlw	55
  4182  07C4  00C9               	movwf	___fldiv@a+1
  4183  07C5  30BD               	movlw	189
  4184  07C6  00C8               	movwf	___fldiv@a
  4185  07C7  120A  158A  24AE  120A  118A  	fcall	___fldiv
  4186  07CC  084B               	movf	?___fldiv+3,w
  4187  07CD  00E9               	movwf	___fladd@a+3
  4188  07CE  084A               	movf	?___fldiv+2,w
  4189  07CF  00E8               	movwf	___fladd@a+2
  4190  07D0  0849               	movf	?___fldiv+1,w
  4191  07D1  00E7               	movwf	___fladd@a+1
  4192  07D2  0848               	movf	?___fldiv,w
  4193  07D3  00E6               	movwf	___fladd@a
  4194  07D4  30BF               	movlw	191
  4195  07D5  00E5               	movwf	___fladd@b+3
  4196  07D6  3080               	movlw	128
  4197  07D7  00E4               	movwf	___fladd@b+2
  4198  07D8  3000               	movlw	0
  4199  07D9  00E3               	movwf	___fladd@b+1
  4200  07DA  3000               	movlw	0
  4201  07DB  00E2               	movwf	___fladd@b
  4202  07DC  120A  118A  2318  120A  118A  	fcall	___fladd
  4203  07E1  0865               	movf	?___fladd+3,w
  4204  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  4205  07E3  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4206  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4207  07E5  0864               	movf	?___fladd+2,w
  4208  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  4209  07E7  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4210  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4211  07E9  0863               	movf	?___fladd+1,w
  4212  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  4213  07EB  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4214  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  4215  07ED  0862               	movf	?___fladd,w
  4216  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  4217  07EF  00A8               	movwf	___fltol@f1^(0+128)
  4218  07F0  160A  118A  2696   	fcall	___fltol
  4219  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  4220  07F4  0828               	movf	?___fltol^(0+128),w
  4221  07F5  0092               	movwf	18	;volatile
  4222                           
  4223                           ;Libreria pwm.c: 136:     CCPR2L = 0;
  4224  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  4225  07F7  019B               	clrf	27	;volatile
  4226                           
  4227                           ;Libreria pwm.c: 137:     CCP2X = 0;
  4228  07F8  129D               	bcf	29,5	;volatile
  4229                           
  4230                           ;Libreria pwm.c: 138:     CCP2Y = 0;
  4231  07F9  121D               	bcf	29,4	;volatile
  4232                           
  4233                           ;Libreria pwm.c: 141:     TRISCbits.TRISC1 = 0;
  4234  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  4235  07FB  1087               	bcf	7,1	;volatile
  4236                           
  4237                           ;Libreria pwm.c: 144:     CCP2M3 = 1;
  4238  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  4239  07FD  159D               	bsf	29,3	;volatile
  4240                           
  4241                           ;Libreria pwm.c: 145:     CCP2M2 = 1;
  4242  07FE  151D               	bsf	29,2	;volatile
  4243  07FF  0008               	return
  4244  0800                     __end_of_PWM_init_2:
  4245                           
  4246                           	psect	text15
  4247  0318                     __ptext15:	
  4248 ;; *************** function ___fladd *****************
  4249 ;; Defined at:
  4250 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\sprcadd.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  b               4   66[BANK0 ] void 
  4253 ;;  a               4   70[BANK0 ] void 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  grs             1   77[BANK0 ] unsigned char 
  4256 ;;  bexp            1   76[BANK0 ] unsigned char 
  4257 ;;  aexp            1   75[BANK0 ] unsigned char 
  4258 ;;  signs           1   74[BANK0 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  4   66[BANK0 ] unsigned char 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, btemp+1
  4263 ;; Tracked objects:
  4264 ;;		On entry : 300/0
  4265 ;;		On exit  : 300/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       8       0       0       0
  4269 ;;      Locals:         0       4       0       0       0
  4270 ;;      Temps:          0       0       8       0       0
  4271 ;;      Totals:         0      12       8       0       0
  4272 ;;Total ram usage:       20 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_PWM_init_2
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function ___fladd
  4284  0318                     ___fladd:
  4285                           
  4286                           ;incstack = 0
  4287                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4288  0318  0865               	movf	___fladd@b+3,w
  4289  0319  3980               	andlw	128
  4290  031A  00FF               	movwf	127
  4291  031B  087F               	movf	127,w
  4292  031C  00EA               	movwf	___fladd@signs
  4293  031D  0865               	movf	___fladd@b+3,w
  4294  031E  1683               	bsf	3,5	;RP0=1, select bank1
  4295  031F  00A0               	movwf	??___fladd^(0+128)
  4296  0320  0720               	addwf	??___fladd^(0+128),w
  4297  0321  00FF               	movwf	127
  4298  0322  087F               	movf	127,w
  4299  0323  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0324  00EC               	movwf	___fladd@bexp
  4301  0325  1BE4               	btfsc	___fladd@b+2,7
  4302  0326  146C               	bsf	___fladd@bexp,0
  4303  0327  086C               	movf	___fladd@bexp,w
  4304  0328  1903               	btfsc	3,2
  4305  0329  2B38               	goto	l4483
  4306  032A  0A6C               	incf	___fladd@bexp,w
  4307  032B  1D03               	btfss	3,2
  4308  032C  2B35               	goto	l4479
  4309  032D  3000               	movlw	0
  4310  032E  00E5               	movwf	___fladd@b+3
  4311  032F  3000               	movlw	0
  4312  0330  00E4               	movwf	___fladd@b+2
  4313  0331  3000               	movlw	0
  4314  0332  00E3               	movwf	___fladd@b+1
  4315  0333  3000               	movlw	0
  4316  0334  00E2               	movwf	___fladd@b
  4317  0335                     l4479:
  4318  0335  17E4               	bsf	___fladd@b+2,7
  4319  0336  01E5               	clrf	___fladd@b+3
  4320  0337  2B40               	goto	l4485
  4321  0338                     l4483:
  4322  0338  3000               	movlw	0
  4323  0339  00E5               	movwf	___fladd@b+3
  4324  033A  3000               	movlw	0
  4325  033B  00E4               	movwf	___fladd@b+2
  4326  033C  3000               	movlw	0
  4327  033D  00E3               	movwf	___fladd@b+1
  4328  033E  3000               	movlw	0
  4329  033F  00E2               	movwf	___fladd@b
  4330  0340                     l4485:
  4331  0340  0869               	movf	___fladd@a+3,w
  4332  0341  3980               	andlw	128
  4333  0342  00FF               	movwf	127
  4334  0343  087F               	movf	127,w
  4335  0344  00EB               	movwf	___fladd@aexp
  4336  0345  086B               	movf	___fladd@aexp,w
  4337  0346  066A               	xorwf	___fladd@signs,w
  4338  0347  1D03               	btfss	3,2
  4339  0348  176A               	bsf	___fladd@signs,6
  4340  0349  0869               	movf	___fladd@a+3,w
  4341  034A  1683               	bsf	3,5	;RP0=1, select bank1
  4342  034B  00A0               	movwf	??___fladd^(0+128)
  4343  034C  0720               	addwf	??___fladd^(0+128),w
  4344  034D  00FF               	movwf	127
  4345  034E  087F               	movf	127,w
  4346  034F  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0350  00EB               	movwf	___fladd@aexp
  4348  0351  1BE8               	btfsc	___fladd@a+2,7
  4349  0352  146B               	bsf	___fladd@aexp,0
  4350  0353  086B               	movf	___fladd@aexp,w
  4351  0354  1903               	btfsc	3,2
  4352  0355  2B64               	goto	l4507
  4353  0356  0A6B               	incf	___fladd@aexp,w
  4354  0357  1D03               	btfss	3,2
  4355  0358  2B61               	goto	l4503
  4356  0359  3000               	movlw	0
  4357  035A  00E9               	movwf	___fladd@a+3
  4358  035B  3000               	movlw	0
  4359  035C  00E8               	movwf	___fladd@a+2
  4360  035D  3000               	movlw	0
  4361  035E  00E7               	movwf	___fladd@a+1
  4362  035F  3000               	movlw	0
  4363  0360  00E6               	movwf	___fladd@a
  4364  0361                     l4503:
  4365  0361  17E8               	bsf	___fladd@a+2,7
  4366  0362  01E9               	clrf	___fladd@a+3
  4367  0363  2B6C               	goto	l909
  4368  0364                     l4507:
  4369  0364  3000               	movlw	0
  4370  0365  00E9               	movwf	___fladd@a+3
  4371  0366  3000               	movlw	0
  4372  0367  00E8               	movwf	___fladd@a+2
  4373  0368  3000               	movlw	0
  4374  0369  00E7               	movwf	___fladd@a+1
  4375  036A  3000               	movlw	0
  4376  036B  00E6               	movwf	___fladd@a
  4377  036C                     l909:
  4378  036C  086C               	movf	___fladd@bexp,w
  4379  036D  026B               	subwf	___fladd@aexp,w
  4380  036E  1803               	skipnc
  4381  036F  2BB2               	goto	l4543
  4382  0370  1F6A               	btfss	___fladd@signs,6
  4383  0371  2B76               	goto	l4513
  4384  0372  3080               	movlw	128
  4385  0373  00FF               	movwf	127
  4386  0374  087F               	movf	127,w
  4387  0375  06EA               	xorwf	___fladd@signs,f
  4388  0376                     l4513:
  4389  0376  086C               	movf	___fladd@bexp,w
  4390  0377  00FF               	movwf	127
  4391  0378  087F               	movf	127,w
  4392  0379  00ED               	movwf	___fladd@grs
  4393  037A  086B               	movf	___fladd@aexp,w
  4394  037B  00FF               	movwf	127
  4395  037C  087F               	movf	127,w
  4396  037D  00EC               	movwf	___fladd@bexp
  4397  037E  086D               	movf	___fladd@grs,w
  4398  037F  00FF               	movwf	127
  4399  0380  087F               	movf	127,w
  4400  0381  00EB               	movwf	___fladd@aexp
  4401  0382  0862               	movf	___fladd@b,w
  4402  0383  00FF               	movwf	127
  4403  0384  087F               	movf	127,w
  4404  0385  00ED               	movwf	___fladd@grs
  4405  0386  0866               	movf	___fladd@a,w
  4406  0387  00FF               	movwf	127
  4407  0388  087F               	movf	127,w
  4408  0389  00E2               	movwf	___fladd@b
  4409  038A  086D               	movf	___fladd@grs,w
  4410  038B  00FF               	movwf	127
  4411  038C  087F               	movf	127,w
  4412  038D  00E6               	movwf	___fladd@a
  4413  038E  0863               	movf	___fladd@b+1,w
  4414  038F  00FF               	movwf	127
  4415  0390  087F               	movf	127,w
  4416  0391  00ED               	movwf	___fladd@grs
  4417  0392  0867               	movf	___fladd@a+1,w
  4418  0393  00FF               	movwf	127
  4419  0394  087F               	movf	127,w
  4420  0395  00E3               	movwf	___fladd@b+1
  4421  0396  086D               	movf	___fladd@grs,w
  4422  0397  00FF               	movwf	127
  4423  0398  087F               	movf	127,w
  4424  0399  00E7               	movwf	___fladd@a+1
  4425  039A  0864               	movf	___fladd@b+2,w
  4426  039B  00FF               	movwf	127
  4427  039C  087F               	movf	127,w
  4428  039D  00ED               	movwf	___fladd@grs
  4429  039E  0868               	movf	___fladd@a+2,w
  4430  039F  00FF               	movwf	127
  4431  03A0  087F               	movf	127,w
  4432  03A1  00E4               	movwf	___fladd@b+2
  4433  03A2  086D               	movf	___fladd@grs,w
  4434  03A3  00FF               	movwf	127
  4435  03A4  087F               	movf	127,w
  4436  03A5  00E8               	movwf	___fladd@a+2
  4437  03A6  0865               	movf	___fladd@b+3,w
  4438  03A7  00FF               	movwf	127
  4439  03A8  087F               	movf	127,w
  4440  03A9  00ED               	movwf	___fladd@grs
  4441  03AA  0869               	movf	___fladd@a+3,w
  4442  03AB  00FF               	movwf	127
  4443  03AC  087F               	movf	127,w
  4444  03AD  00E5               	movwf	___fladd@b+3
  4445  03AE  086D               	movf	___fladd@grs,w
  4446  03AF  00FF               	movwf	127
  4447  03B0  087F               	movf	127,w
  4448  03B1  00E9               	movwf	___fladd@a+3
  4449  03B2                     l4543:
  4450  03B2  01ED               	clrf	___fladd@grs
  4451  03B3  086B               	movf	___fladd@aexp,w
  4452  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  4453  03B5  00A0               	movwf	??___fladd^(0+128)
  4454  03B6  01A1               	clrf	(??___fladd^(0+128)+1)
  4455  03B7  0821               	movf	(??___fladd+1)^(0+128),w
  4456  03B8  00A3               	movwf	((??___fladd+2)^(0+128)+1)
  4457  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  4458  03BA  086C               	movf	___fladd@bexp,w
  4459  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4460  03BC  0220               	subwf	??___fladd^(0+128),w
  4461  03BD  00A2               	movwf	(??___fladd+2)^(0+128)
  4462  03BE  1C03               	skipc
  4463  03BF  03A3               	decf	((??___fladd+2)^(0+128)+1),f
  4464  03C0  0823               	movf	(??___fladd+3)^(0+128),w
  4465  03C1  3A80               	xorlw	128
  4466  03C2  00FF               	movwf	127
  4467  03C3  3080               	movlw	128
  4468  03C4  027F               	subwf	127,w
  4469  03C5  1D03               	skipz
  4470  03C6  2BC9               	goto	u6075
  4471  03C7  301A               	movlw	26
  4472  03C8  0222               	subwf	(??___fladd+2)^(0+128),w
  4473  03C9                     u6075:
  4474  03C9  1C03               	skipc
  4475  03CA  2C08               	goto	l4565
  4476  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4477  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  4478  03CD  0865               	movf	___fladd@b+3,w
  4479  03CE  0464               	iorwf	___fladd@b+2,w
  4480  03CF  0463               	iorwf	___fladd@b+1,w
  4481  03D0  0462               	iorwf	___fladd@b,w
  4482  03D1  1903               	btfsc	3,2
  4483  03D2  2BD5               	goto	u6080
  4484  03D3  3001               	movlw	1
  4485  03D4  2BD6               	goto	u6090
  4486  03D5                     u6080:
  4487  03D5  3000               	movlw	0
  4488  03D6                     u6090:
  4489  03D6  00FF               	movwf	127
  4490  03D7  087F               	movf	127,w
  4491  03D8  00ED               	movwf	___fladd@grs
  4492  03D9  3000               	movlw	0
  4493  03DA  00E5               	movwf	___fladd@b+3
  4494  03DB  3000               	movlw	0
  4495  03DC  00E4               	movwf	___fladd@b+2
  4496  03DD  3000               	movlw	0
  4497  03DE  00E3               	movwf	___fladd@b+1
  4498  03DF  3000               	movlw	0
  4499  03E0  00E2               	movwf	___fladd@b
  4500  03E1  086B               	movf	___fladd@aexp,w
  4501  03E2  00FF               	movwf	127
  4502  03E3  087F               	movf	127,w
  4503  03E4  00EC               	movwf	___fladd@bexp
  4504  03E5  2C0E               	goto	l913
  4505  03E6                     l915:
  4506  03E6  1C6D               	btfss	___fladd@grs,0
  4507  03E7  2BF3               	goto	l4555
  4508  03E8  086D               	movf	___fladd@grs,w
  4509  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  4510  03EA  00A0               	movwf	??___fladd^(0+128)
  4511  03EB  1003               	clrc
  4512  03EC  0C20               	rrf	??___fladd^(0+128),w
  4513  03ED  3801               	iorlw	1
  4514  03EE  00FF               	movwf	127
  4515  03EF  087F               	movf	127,w
  4516  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4517  03F1  00ED               	movwf	___fladd@grs
  4518  03F2  2BF5               	goto	l4557
  4519  03F3                     l4555:
  4520  03F3  1003               	clrc
  4521  03F4  0CED               	rrf	___fladd@grs,f
  4522  03F5                     l4557:
  4523  03F5  1862               	btfsc	___fladd@b,0
  4524  03F6  17ED               	bsf	___fladd@grs,7
  4525  03F7  3001               	movlw	1
  4526  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  4527  03F9  00A0               	movwf	??___fladd^(0+128)
  4528  03FA                     u6125:
  4529  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  4530  03FB  0D65               	rlf	___fladd@b+3,w
  4531  03FC  0CE5               	rrf	___fladd@b+3,f
  4532  03FD  0CE4               	rrf	___fladd@b+2,f
  4533  03FE  0CE3               	rrf	___fladd@b+1,f
  4534  03FF  0CE2               	rrf	___fladd@b,f
  4535  0400  1683               	bsf	3,5	;RP0=1, select bank1
  4536  0401  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
  4537  0402  2BFA               	goto	u6125
  4538  0403  3001               	movlw	1
  4539  0404  00FF               	movwf	127
  4540  0405  087F               	movf	127,w
  4541  0406  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0407  07EC               	addwf	___fladd@bexp,f
  4543  0408                     l4565:
  4544  0408  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0409  1303               	bcf	3,6	;RP1=0, select bank0
  4546  040A  086B               	movf	___fladd@aexp,w
  4547  040B  026C               	subwf	___fladd@bexp,w
  4548  040C  1C03               	skipc
  4549  040D  2BE6               	goto	l915
  4550  040E                     l913:
  4551  040E  1B6A               	btfsc	___fladd@signs,6
  4552  040F  2C55               	goto	l4591
  4553  0410  086C               	movf	___fladd@bexp,w
  4554  0411  1D03               	btfss	3,2
  4555  0412  2C1C               	goto	l4573
  4556  0413  3000               	movlw	0
  4557  0414  00E5               	movwf	?___fladd+3
  4558  0415  3000               	movlw	0
  4559  0416  00E4               	movwf	?___fladd+2
  4560  0417  3000               	movlw	0
  4561  0418  00E3               	movwf	?___fladd+1
  4562  0419  3000               	movlw	0
  4563  041A  00E2               	movwf	?___fladd
  4564  041B  0008               	return
  4565  041C                     l4573:
  4566  041C  0866               	movf	___fladd@a,w
  4567  041D  07E2               	addwf	___fladd@b,f
  4568  041E  0867               	movf	___fladd@a+1,w
  4569  041F  1103               	clrz
  4570  0420  1803               	skipnc
  4571  0421  3E01               	addlw	1
  4572  0422  1D03               	btfss	3,2
  4573  0423  07E3               	addwf	___fladd@b+1,f
  4574  0424  0868               	movf	___fladd@a+2,w
  4575  0425  1103               	clrz
  4576  0426  1803               	skipnc
  4577  0427  3E01               	addlw	1
  4578  0428  1D03               	btfss	3,2
  4579  0429  07E4               	addwf	___fladd@b+2,f
  4580  042A  0869               	movf	___fladd@a+3,w
  4581  042B  1103               	clrz
  4582  042C  1803               	skipnc
  4583  042D  3E01               	addlw	1
  4584  042E  1D03               	btfss	3,2
  4585  042F  07E5               	addwf	___fladd@b+3,f
  4586  0430  1C65               	btfss	___fladd@b+3,0
  4587  0431  2D15               	goto	l4627
  4588  0432  1C6D               	btfss	___fladd@grs,0
  4589  0433  2C3F               	goto	l4581
  4590  0434  086D               	movf	___fladd@grs,w
  4591  0435  1683               	bsf	3,5	;RP0=1, select bank1
  4592  0436  00A0               	movwf	??___fladd^(0+128)
  4593  0437  1003               	clrc
  4594  0438  0C20               	rrf	??___fladd^(0+128),w
  4595  0439  3801               	iorlw	1
  4596  043A  00FF               	movwf	127
  4597  043B  087F               	movf	127,w
  4598  043C  1283               	bcf	3,5	;RP0=0, select bank0
  4599  043D  00ED               	movwf	___fladd@grs
  4600  043E  2C41               	goto	l4583
  4601  043F                     l4581:
  4602  043F  1003               	clrc
  4603  0440  0CED               	rrf	___fladd@grs,f
  4604  0441                     l4583:
  4605  0441  1862               	btfsc	___fladd@b,0
  4606  0442  17ED               	bsf	___fladd@grs,7
  4607  0443  3001               	movlw	1
  4608  0444  1683               	bsf	3,5	;RP0=1, select bank1
  4609  0445  00A0               	movwf	??___fladd^(0+128)
  4610  0446                     u6205:
  4611  0446  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0447  0D65               	rlf	___fladd@b+3,w
  4613  0448  0CE5               	rrf	___fladd@b+3,f
  4614  0449  0CE4               	rrf	___fladd@b+2,f
  4615  044A  0CE3               	rrf	___fladd@b+1,f
  4616  044B  0CE2               	rrf	___fladd@b,f
  4617  044C  1683               	bsf	3,5	;RP0=1, select bank1
  4618  044D  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
  4619  044E  2C46               	goto	u6205
  4620  044F  3001               	movlw	1
  4621  0450  00FF               	movwf	127
  4622  0451  087F               	movf	127,w
  4623  0452  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0453  07EC               	addwf	___fladd@bexp,f
  4625  0454  2D15               	goto	l4627
  4626  0455                     l4591:
  4627  0455  0865               	movf	___fladd@b+3,w
  4628  0456  3A80               	xorlw	128
  4629  0457  00FF               	movwf	127
  4630  0458  0869               	movf	___fladd@a+3,w
  4631  0459  3A80               	xorlw	128
  4632  045A  027F               	subwf	127,w
  4633  045B  1D03               	skipz
  4634  045C  2C67               	goto	u6213
  4635  045D  0868               	movf	___fladd@a+2,w
  4636  045E  0264               	subwf	___fladd@b+2,w
  4637  045F  1D03               	skipz
  4638  0460  2C67               	goto	u6213
  4639  0461  0867               	movf	___fladd@a+1,w
  4640  0462  0263               	subwf	___fladd@b+1,w
  4641  0463  1D03               	skipz
  4642  0464  2C67               	goto	u6213
  4643  0465  0866               	movf	___fladd@a,w
  4644  0466  0262               	subwf	___fladd@b,w
  4645  0467                     u6213:
  4646  0467  1803               	skipnc
  4647  0468  2CD9               	goto	l4603
  4648  0469  30FF               	movlw	255
  4649  046A  1683               	bsf	3,5	;RP0=1, select bank1
  4650  046B  00A0               	movwf	??___fladd^(0+128)
  4651  046C  30FF               	movlw	255
  4652  046D  00A1               	movwf	(??___fladd^(0+128)+1)
  4653  046E  30FF               	movlw	255
  4654  046F  00A2               	movwf	(??___fladd^(0+128)+2)
  4655  0470  30FF               	movlw	255
  4656  0471  00A3               	movwf	(??___fladd^(0+128)+3)
  4657  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0473  0866               	movf	___fladd@a,w
  4659  0474  1683               	bsf	3,5	;RP0=1, select bank1
  4660  0475  00A4               	movwf	(??___fladd+4)^(0+128)
  4661  0476  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0477  0867               	movf	___fladd@a+1,w
  4663  0478  1683               	bsf	3,5	;RP0=1, select bank1
  4664  0479  00A5               	movwf	((??___fladd+4)^(0+128)+1)
  4665  047A  1283               	bcf	3,5	;RP0=0, select bank0
  4666  047B  0868               	movf	___fladd@a+2,w
  4667  047C  1683               	bsf	3,5	;RP0=1, select bank1
  4668  047D  00A6               	movwf	((??___fladd+4)^(0+128)+2)
  4669  047E  1283               	bcf	3,5	;RP0=0, select bank0
  4670  047F  0869               	movf	___fladd@a+3,w
  4671  0480  1683               	bsf	3,5	;RP0=1, select bank1
  4672  0481  00A7               	movwf	((??___fladd+4)^(0+128)+3)
  4673  0482  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0483  0862               	movf	___fladd@b,w
  4675  0484  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0485  02A4               	subwf	(??___fladd+4)^(0+128),f
  4677  0486  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0487  0863               	movf	___fladd@b+1,w
  4679  0488  1C03               	skipc
  4680  0489  0F63               	incfsz	___fladd@b+1,w
  4681  048A  2C8C               	goto	u6221
  4682  048B  2C8E               	goto	u6222
  4683  048C                     u6221:
  4684  048C  1683               	bsf	3,5	;RP0=1, select bank1
  4685  048D  02A5               	subwf	((??___fladd+4)^(0+128)+1),f
  4686  048E                     u6222:
  4687  048E  1283               	bcf	3,5	;RP0=0, select bank0
  4688  048F  0864               	movf	___fladd@b+2,w
  4689  0490  1C03               	skipc
  4690  0491  0F64               	incfsz	___fladd@b+2,w
  4691  0492  2C94               	goto	u6223
  4692  0493  2C96               	goto	u6224
  4693  0494                     u6223:
  4694  0494  1683               	bsf	3,5	;RP0=1, select bank1
  4695  0495  02A6               	subwf	((??___fladd+4)^(0+128)+2),f
  4696  0496                     u6224:
  4697  0496  1283               	bcf	3,5	;RP0=0, select bank0
  4698  0497  0865               	movf	___fladd@b+3,w
  4699  0498  1C03               	skipc
  4700  0499  0F65               	incfsz	___fladd@b+3,w
  4701  049A  2C9C               	goto	u6225
  4702  049B  2C9E               	goto	u6226
  4703  049C                     u6225:
  4704  049C  1683               	bsf	3,5	;RP0=1, select bank1
  4705  049D  02A7               	subwf	((??___fladd+4)^(0+128)+3),f
  4706  049E                     u6226:
  4707  049E  1283               	bcf	3,5	;RP0=0, select bank0
  4708  049F  1683               	bsf	3,5	;RP0=1, select bank1
  4709  04A0  0824               	movf	(??___fladd+4)^(0+128),w
  4710  04A1  07A0               	addwf	??___fladd^(0+128),f
  4711  04A2  0825               	movf	(??___fladd+5)^(0+128),w
  4712  04A3  1803               	skipnc
  4713  04A4  0F25               	incfsz	(??___fladd+5)^(0+128),w
  4714  04A5  2CA7               	goto	u6230
  4715  04A6  2CA8               	goto	u6231
  4716  04A7                     u6230:
  4717  04A7  07A1               	addwf	(??___fladd^(0+128)+1),f
  4718  04A8                     u6231:
  4719  04A8  0826               	movf	(??___fladd+6)^(0+128),w
  4720  04A9  1803               	skipnc
  4721  04AA  0F26               	incfsz	(??___fladd+6)^(0+128),w
  4722  04AB  2CAD               	goto	u6232
  4723  04AC  2CAE               	goto	u6233
  4724  04AD                     u6232:
  4725  04AD  07A2               	addwf	(??___fladd^(0+128)+2),f
  4726  04AE                     u6233:
  4727  04AE  0827               	movf	(??___fladd+7)^(0+128),w
  4728  04AF  1803               	skipnc
  4729  04B0  0A27               	incf	(??___fladd+7)^(0+128),w
  4730  04B1  07A3               	addwf	(??___fladd^(0+128)+3),f
  4731  04B2  0823               	movf	(??___fladd+3)^(0+128),w
  4732  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4733  04B4  00E5               	movwf	___fladd@b+3
  4734  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  4735  04B6  0822               	movf	(??___fladd+2)^(0+128),w
  4736  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  4737  04B8  00E4               	movwf	___fladd@b+2
  4738  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  4739  04BA  0821               	movf	(??___fladd+1)^(0+128),w
  4740  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  4741  04BC  00E3               	movwf	___fladd@b+1
  4742  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  4743  04BE  0820               	movf	??___fladd^(0+128),w
  4744  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  4745  04C0  00E2               	movwf	___fladd@b
  4746  04C1  3080               	movlw	128
  4747  04C2  00FF               	movwf	127
  4748  04C3  087F               	movf	127,w
  4749  04C4  06EA               	xorwf	___fladd@signs,f
  4750  04C5  09ED               	comf	___fladd@grs,f
  4751  04C6  0AED               	incf	___fladd@grs,f
  4752  04C7  086D               	movf	___fladd@grs,w
  4753  04C8  1D03               	btfss	3,2
  4754  04C9  2CE7               	goto	l930
  4755  04CA  3001               	movlw	1
  4756  04CB  07E2               	addwf	___fladd@b,f
  4757  04CC  3000               	movlw	0
  4758  04CD  1803               	skipnc
  4759  04CE  3001               	movlw	1
  4760  04CF  07E3               	addwf	___fladd@b+1,f
  4761  04D0  3000               	movlw	0
  4762  04D1  1803               	skipnc
  4763  04D2  3001               	movlw	1
  4764  04D3  07E4               	addwf	___fladd@b+2,f
  4765  04D4  3000               	movlw	0
  4766  04D5  1803               	skipnc
  4767  04D6  3001               	movlw	1
  4768  04D7  07E5               	addwf	___fladd@b+3,f
  4769  04D8  2CE7               	goto	l930
  4770  04D9                     l4603:
  4771  04D9  0866               	movf	___fladd@a,w
  4772  04DA  02E2               	subwf	___fladd@b,f
  4773  04DB  0867               	movf	___fladd@a+1,w
  4774  04DC  1C03               	skipc
  4775  04DD  0F67               	incfsz	___fladd@a+1,w
  4776  04DE  02E3               	subwf	___fladd@b+1,f
  4777  04DF  0868               	movf	___fladd@a+2,w
  4778  04E0  1C03               	skipc
  4779  04E1  0F68               	incfsz	___fladd@a+2,w
  4780  04E2  02E4               	subwf	___fladd@b+2,f
  4781  04E3  0869               	movf	___fladd@a+3,w
  4782  04E4  1C03               	skipc
  4783  04E5  0F69               	incfsz	___fladd@a+3,w
  4784  04E6  02E5               	subwf	___fladd@b+3,f
  4785  04E7                     l930:
  4786  04E7  0865               	movf	___fladd@b+3,w
  4787  04E8  0464               	iorwf	___fladd@b+2,w
  4788  04E9  0463               	iorwf	___fladd@b+1,w
  4789  04EA  0462               	iorwf	___fladd@b,w
  4790  04EB  1D03               	skipz
  4791  04EC  2D13               	goto	l4625
  4792  04ED  086D               	movf	___fladd@grs,w
  4793  04EE  1D03               	btfss	3,2
  4794  04EF  2D13               	goto	l4625
  4795  04F0  3000               	movlw	0
  4796  04F1  00E5               	movwf	?___fladd+3
  4797  04F2  3000               	movlw	0
  4798  04F3  00E4               	movwf	?___fladd+2
  4799  04F4  3000               	movlw	0
  4800  04F5  00E3               	movwf	?___fladd+1
  4801  04F6  3000               	movlw	0
  4802  04F7  00E2               	movwf	?___fladd
  4803  04F8  0008               	return
  4804  04F9                     l4611:
  4805  04F9  3001               	movlw	1
  4806  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  4807  04FB  00A0               	movwf	??___fladd^(0+128)
  4808  04FC                     u6275:
  4809  04FC  1003               	clrc
  4810  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  4811  04FE  0DE2               	rlf	___fladd@b,f
  4812  04FF  0DE3               	rlf	___fladd@b+1,f
  4813  0500  0DE4               	rlf	___fladd@b+2,f
  4814  0501  0DE5               	rlf	___fladd@b+3,f
  4815  0502  1683               	bsf	3,5	;RP0=1, select bank1
  4816  0503  0BA0               	decfsz	??___fladd^(0+128),f
  4817  0504  2CFC               	goto	u6275
  4818  0505  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0506  1BED               	btfsc	___fladd@grs,7
  4820  0507  1462               	bsf	___fladd@b,0
  4821  0508  1C6D               	btfss	___fladd@grs,0
  4822  0509  2D0C               	goto	l4619
  4823  050A  1403               	setc
  4824  050B  2D0D               	goto	L2
  4825  050C                     l4619:
  4826  050C  1003               	clrc
  4827  050D                     L2:
  4828  050D  0DED               	rlf	___fladd@grs,f
  4829  050E  086C               	movf	___fladd@bexp,w
  4830  050F  1903               	btfsc	3,2
  4831  0510  2D13               	goto	l4625
  4832  0511  3001               	movlw	1
  4833  0512  02EC               	subwf	___fladd@bexp,f
  4834  0513                     l4625:
  4835  0513  1FE4               	btfss	___fladd@b+2,7
  4836  0514  2CF9               	goto	l4611
  4837  0515                     l4627:
  4838  0515  01EB               	clrf	___fladd@aexp
  4839  0516  1FED               	btfss	___fladd@grs,7
  4840  0517  2D20               	goto	l4637
  4841  0518  086D               	movf	___fladd@grs,w
  4842  0519  397F               	andlw	127
  4843  051A  1903               	btfsc	3,2
  4844  051B  1862               	btfsc	___fladd@b,0
  4845  051C  2D1E               	goto	l4633
  4846  051D  2D20               	goto	l4637
  4847  051E                     l4633:
  4848  051E  01EB               	clrf	___fladd@aexp
  4849  051F  0AEB               	incf	___fladd@aexp,f
  4850  0520                     l4637:
  4851  0520  086B               	movf	___fladd@aexp,w
  4852  0521  1903               	btfsc	3,2
  4853  0522  2D61               	goto	l4647
  4854  0523  3001               	movlw	1
  4855  0524  07E2               	addwf	___fladd@b,f
  4856  0525  3000               	movlw	0
  4857  0526  1803               	skipnc
  4858  0527  3001               	movlw	1
  4859  0528  07E3               	addwf	___fladd@b+1,f
  4860  0529  3000               	movlw	0
  4861  052A  1803               	skipnc
  4862  052B  3001               	movlw	1
  4863  052C  07E4               	addwf	___fladd@b+2,f
  4864  052D  3000               	movlw	0
  4865  052E  1803               	skipnc
  4866  052F  3001               	movlw	1
  4867  0530  07E5               	addwf	___fladd@b+3,f
  4868  0531  1C65               	btfss	___fladd@b+3,0
  4869  0532  2D61               	goto	l4647
  4870  0533  0862               	movf	___fladd@b,w
  4871  0534  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0535  00A0               	movwf	??___fladd^(0+128)
  4873  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4874  0537  0863               	movf	___fladd@b+1,w
  4875  0538  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0539  00A1               	movwf	(??___fladd^(0+128)+1)
  4877  053A  1283               	bcf	3,5	;RP0=0, select bank0
  4878  053B  0864               	movf	___fladd@b+2,w
  4879  053C  1683               	bsf	3,5	;RP0=1, select bank1
  4880  053D  00A2               	movwf	(??___fladd^(0+128)+2)
  4881  053E  1283               	bcf	3,5	;RP0=0, select bank0
  4882  053F  0865               	movf	___fladd@b+3,w
  4883  0540  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0541  00A3               	movwf	(??___fladd^(0+128)+3)
  4885  0542  3001               	movlw	1
  4886  0543  00A4               	movwf	(??___fladd+4)^(0+128)
  4887  0544                     u6375:
  4888  0544  0D23               	rlf	(??___fladd^(0+128)+3),w
  4889  0545  0CA3               	rrf	(??___fladd^(0+128)+3),f
  4890  0546  0CA2               	rrf	(??___fladd^(0+128)+2),f
  4891  0547  0CA1               	rrf	(??___fladd^(0+128)+1),f
  4892  0548  0CA0               	rrf	??___fladd^(0+128),f
  4893  0549  0BA4               	decfsz	(??___fladd+4)^(0+128),f
  4894  054A  2D44               	goto	u6375
  4895  054B  0823               	movf	(??___fladd+3)^(0+128),w
  4896  054C  1283               	bcf	3,5	;RP0=0, select bank0
  4897  054D  00E5               	movwf	___fladd@b+3
  4898  054E  1683               	bsf	3,5	;RP0=1, select bank1
  4899  054F  0822               	movf	(??___fladd+2)^(0+128),w
  4900  0550  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0551  00E4               	movwf	___fladd@b+2
  4902  0552  1683               	bsf	3,5	;RP0=1, select bank1
  4903  0553  0821               	movf	(??___fladd+1)^(0+128),w
  4904  0554  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0555  00E3               	movwf	___fladd@b+1
  4906  0556  1683               	bsf	3,5	;RP0=1, select bank1
  4907  0557  0820               	movf	??___fladd^(0+128),w
  4908  0558  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0559  00E2               	movwf	___fladd@b
  4910  055A  0A6C               	incf	___fladd@bexp,w
  4911  055B  1903               	btfsc	3,2
  4912  055C  2D61               	goto	l4647
  4913  055D  3001               	movlw	1
  4914  055E  00FF               	movwf	127
  4915  055F  087F               	movf	127,w
  4916  0560  07EC               	addwf	___fladd@bexp,f
  4917  0561                     l4647:
  4918  0561  0A6C               	incf	___fladd@bexp,w
  4919  0562  1D03               	btfss	3,2
  4920  0563  086C               	movf	___fladd@bexp,w
  4921  0564  1D03               	btfss	3,2
  4922  0565  2D71               	goto	l4657
  4923  0566  3000               	movlw	0
  4924  0567  00E5               	movwf	___fladd@b+3
  4925  0568  3000               	movlw	0
  4926  0569  00E4               	movwf	___fladd@b+2
  4927  056A  3000               	movlw	0
  4928  056B  00E3               	movwf	___fladd@b+1
  4929  056C  3000               	movlw	0
  4930  056D  00E2               	movwf	___fladd@b
  4931  056E  086C               	movf	___fladd@bexp,w
  4932  056F  1903               	btfsc	3,2
  4933  0570  01EA               	clrf	___fladd@signs
  4934  0571                     l4657:
  4935  0571  1C6C               	btfss	___fladd@bexp,0
  4936  0572  2D75               	goto	l4661
  4937  0573  17E4               	bsf	___fladd@b+2,7
  4938  0574  2D79               	goto	l951
  4939  0575                     l4661:
  4940  0575  307F               	movlw	127
  4941  0576  00FF               	movwf	127
  4942  0577  087F               	movf	127,w
  4943  0578  05E4               	andwf	___fladd@b+2,f
  4944  0579                     l951:
  4945  0579  086C               	movf	___fladd@bexp,w
  4946  057A  1683               	bsf	3,5	;RP0=1, select bank1
  4947  057B  00A0               	movwf	??___fladd^(0+128)
  4948  057C  1003               	clrc
  4949  057D  0C20               	rrf	??___fladd^(0+128),w
  4950  057E  00FF               	movwf	127
  4951  057F  087F               	movf	127,w
  4952  0580  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0581  00E5               	movwf	___fladd@b+3
  4954  0582  1FEA               	btfss	___fladd@signs,7
  4955  0583  0008               	return
  4956  0584  17E5               	bsf	___fladd@b+3,7
  4957  0585  0008               	return
  4958  0586                     __end_of___fladd:
  4959                           
  4960                           	psect	text16
  4961  170C                     __ptext16:	
  4962 ;; *************** function _PWM_init_1 *****************
  4963 ;; Defined at:
  4964 ;;		line 8 in file "Libreria pwm.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  frecuencia      2   16[BANK1 ] unsigned int 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  per             3   22[BANK1 ] float 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 300/100
  4975 ;;		On exit  : 300/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4978 ;;      Params:         0       0       2       0       0
  4979 ;;      Locals:         0       0       3       0       0
  4980 ;;      Temps:          0       0       4       0       0
  4981 ;;      Totals:         0       0       9       0       0
  4982 ;;Total ram usage:        9 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    3
  4985 ;; This function calls:
  4986 ;;		___fldiv
  4987 ;;		___fltol
  4988 ;;		___xxtofl
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function _PWM_init_1
  4996  170C                     _PWM_init_1:
  4997                           
  4998                           ;Libreria pwm.c: 13:     per = 1.0 / frecuencia;
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _PWM_init_1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5002  170C  0830               	movf	PWM_init_1@frecuencia^(0+128),w
  5003  170D  1283               	bcf	3,5	;RP0=0, select bank0
  5004  170E  00A0               	movwf	___xxtofl@val
  5005  170F  1683               	bsf	3,5	;RP0=1, select bank1
  5006  1710  0831               	movf	(PWM_init_1@frecuencia+1)^(0+128),w
  5007  1711  1283               	bcf	3,5	;RP0=0, select bank0
  5008  1712  00A1               	movwf	___xxtofl@val+1
  5009  1713  01A2               	clrf	___xxtofl@val+2
  5010  1714  01A3               	clrf	___xxtofl@val+3
  5011  1715  3000               	movlw	0
  5012  1716  120A  158A  214E  160A  118A  	fcall	___xxtofl
  5013  171B  0823               	movf	?___xxtofl+3,w
  5014  171C  00CB               	movwf	___fldiv@a+3
  5015  171D  0822               	movf	?___xxtofl+2,w
  5016  171E  00CA               	movwf	___fldiv@a+2
  5017  171F  0821               	movf	?___xxtofl+1,w
  5018  1720  00C9               	movwf	___fldiv@a+1
  5019  1721  0820               	movf	?___xxtofl,w
  5020  1722  00C8               	movwf	___fldiv@a
  5021  1723  303F               	movlw	63
  5022  1724  00CF               	movwf	___fldiv@b+3
  5023  1725  3080               	movlw	128
  5024  1726  00CE               	movwf	___fldiv@b+2
  5025  1727  3000               	movlw	0
  5026  1728  00CD               	movwf	___fldiv@b+1
  5027  1729  3000               	movlw	0
  5028  172A  00CC               	movwf	___fldiv@b
  5029  172B  120A  158A  24AE  160A  118A  	fcall	___fldiv
  5030  1730  0849               	movf	?___fldiv+1,w
  5031  1731  1683               	bsf	3,5	;RP0=1, select bank1
  5032  1732  00B6               	movwf	PWM_init_1@per^(0+128)
  5033  1733  1283               	bcf	3,5	;RP0=0, select bank0
  5034  1734  084A               	movf	?___fldiv+2,w
  5035  1735  1683               	bsf	3,5	;RP0=1, select bank1
  5036  1736  00B7               	movwf	(PWM_init_1@per+1)^(0+128)
  5037  1737  1283               	bcf	3,5	;RP0=0, select bank0
  5038  1738  084B               	movf	?___fldiv+3,w
  5039  1739  1683               	bsf	3,5	;RP0=1, select bank1
  5040  173A  00B8               	movwf	(PWM_init_1@per+2)^(0+128)
  5041                           
  5042                           ;Libreria pwm.c: 14:     freq = frecuencia;
  5043  173B  0831               	movf	(PWM_init_1@frecuencia+1)^(0+128),w
  5044  173C  00CD               	movwf	(_freq+1)^(0+128)
  5045  173D  0830               	movf	PWM_init_1@frecuencia^(0+128),w
  5046  173E  00CC               	movwf	_freq^(0+128)
  5047                           
  5048                           ;Libreria pwm.c: 18:     PR2 = (int) (per / (4 * (1.0 / 4000000) * 16)) - 1;
  5049  173F  0838               	movf	(PWM_init_1@per+2)^(0+128),w
  5050  1740  00B5               	movwf	(??_PWM_init_1^(0+128)+3)
  5051  1741  0837               	movf	(PWM_init_1@per+1)^(0+128),w
  5052  1742  00B4               	movwf	(??_PWM_init_1^(0+128)+2)
  5053  1743  0836               	movf	PWM_init_1@per^(0+128),w
  5054  1744  00B3               	movwf	(??_PWM_init_1^(0+128)+1)
  5055  1745  01B2               	clrf	??_PWM_init_1^(0+128)
  5056  1746  0835               	movf	(??_PWM_init_1+3)^(0+128),w
  5057  1747  1283               	bcf	3,5	;RP0=0, select bank0
  5058  1748  00CF               	movwf	___fldiv@b+3
  5059  1749  1683               	bsf	3,5	;RP0=1, select bank1
  5060  174A  0834               	movf	(??_PWM_init_1+2)^(0+128),w
  5061  174B  1283               	bcf	3,5	;RP0=0, select bank0
  5062  174C  00CE               	movwf	___fldiv@b+2
  5063  174D  1683               	bsf	3,5	;RP0=1, select bank1
  5064  174E  0833               	movf	(??_PWM_init_1+1)^(0+128),w
  5065  174F  1283               	bcf	3,5	;RP0=0, select bank0
  5066  1750  00CD               	movwf	___fldiv@b+1
  5067  1751  1683               	bsf	3,5	;RP0=1, select bank1
  5068  1752  0832               	movf	??_PWM_init_1^(0+128),w
  5069  1753  1283               	bcf	3,5	;RP0=0, select bank0
  5070  1754  00CC               	movwf	___fldiv@b
  5071  1755  3037               	movlw	55
  5072  1756  00CB               	movwf	___fldiv@a+3
  5073  1757  3086               	movlw	134
  5074  1758  00CA               	movwf	___fldiv@a+2
  5075  1759  3037               	movlw	55
  5076  175A  00C9               	movwf	___fldiv@a+1
  5077  175B  30BD               	movlw	189
  5078  175C  00C8               	movwf	___fldiv@a
  5079  175D  120A  158A  24AE  160A  118A  	fcall	___fldiv
  5080  1762  084B               	movf	?___fldiv+3,w
  5081  1763  1683               	bsf	3,5	;RP0=1, select bank1
  5082  1764  00AB               	movwf	(___fltol@f1+3)^(0+128)
  5083  1765  1283               	bcf	3,5	;RP0=0, select bank0
  5084  1766  084A               	movf	?___fldiv+2,w
  5085  1767  1683               	bsf	3,5	;RP0=1, select bank1
  5086  1768  00AA               	movwf	(___fltol@f1+2)^(0+128)
  5087  1769  1283               	bcf	3,5	;RP0=0, select bank0
  5088  176A  0849               	movf	?___fldiv+1,w
  5089  176B  1683               	bsf	3,5	;RP0=1, select bank1
  5090  176C  00A9               	movwf	(___fltol@f1+1)^(0+128)
  5091  176D  1283               	bcf	3,5	;RP0=0, select bank0
  5092  176E  0848               	movf	?___fldiv,w
  5093  176F  1683               	bsf	3,5	;RP0=1, select bank1
  5094  1770  00A8               	movwf	___fltol@f1^(0+128)
  5095  1771  160A  118A  2696   	fcall	___fltol
  5096  1774  1683               	bsf	3,5	;RP0=1, select bank1
  5097  1775  0828               	movf	?___fltol^(0+128),w
  5098  1776  3EFF               	addlw	255
  5099  1777  0092               	movwf	18	;volatile
  5100                           
  5101                           ;Libreria pwm.c: 19:     CCPR1L = 0;
  5102  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5103  1779  0195               	clrf	21	;volatile
  5104                           
  5105                           ;Libreria pwm.c: 20:     CCP1X = 0;
  5106  177A  1297               	bcf	23,5	;volatile
  5107                           
  5108                           ;Libreria pwm.c: 21:     CCP1Y = 0;
  5109  177B  1217               	bcf	23,4	;volatile
  5110                           
  5111                           ;Libreria pwm.c: 27:     TRISCbits.TRISC2 = 0;
  5112  177C  1683               	bsf	3,5	;RP0=1, select bank1
  5113  177D  1107               	bcf	7,2	;volatile
  5114                           
  5115                           ;Libreria pwm.c: 30:     T2CKPS0 = 1;
  5116  177E  1283               	bcf	3,5	;RP0=0, select bank0
  5117  177F  1412               	bsf	18,0	;volatile
  5118                           
  5119                           ;Libreria pwm.c: 31:     T2CKPS1 = 1;
  5120  1780  1492               	bsf	18,1	;volatile
  5121                           
  5122                           ;Libreria pwm.c: 32:     TMR2ON = 1;
  5123  1781  1512               	bsf	18,2	;volatile
  5124                           
  5125                           ;Libreria pwm.c: 35:     CCP1M3 = 1;
  5126  1782  1597               	bsf	23,3	;volatile
  5127                           
  5128                           ;Libreria pwm.c: 36:     CCP1M2 = 1;
  5129  1783  1517               	bsf	23,2	;volatile
  5130  1784  0008               	return
  5131  1785                     __end_of_PWM_init_1:
  5132                           
  5133                           	psect	text17
  5134  1696                     __ptext17:	
  5135 ;; *************** function ___fltol *****************
  5136 ;; Defined at:
  5137 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\fltol.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  f1              4    8[BANK1 ] void 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  exp1            1   79[BANK0 ] unsigned char 
  5142 ;;  sign1           1   78[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  4    8[BANK1 ] long 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, btemp+1
  5147 ;; Tracked objects:
  5148 ;;		On entry : 300/100
  5149 ;;		On exit  : 200/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5152 ;;      Params:         0       0       4       0       0
  5153 ;;      Locals:         0       2       0       0       0
  5154 ;;      Temps:          0       0       4       0       0
  5155 ;;      Totals:         0       2       8       0       0
  5156 ;;Total ram usage:       10 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    2
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_PWM_init_1
  5163 ;;		_PWM_init_2
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function ___fltol
  5169  1696                     ___fltol:
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5173  1696  1003               	clrc
  5174  1697  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
  5175  1698  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
  5176  1699  00FF               	movwf	127
  5177  169A  087F               	movf	127,w
  5178  169B  1283               	bcf	3,5	;RP0=0, select bank0
  5179  169C  00EF               	movwf	___fltol@exp1
  5180  169D  086F               	movf	___fltol@exp1,w
  5181  169E  1D03               	btfss	3,2
  5182  169F  2EAA               	goto	l2807
  5183  16A0                     l2803:
  5184  16A0  3000               	movlw	0
  5185  16A1  1683               	bsf	3,5	;RP0=1, select bank1
  5186  16A2  00AB               	movwf	(?___fltol+3)^(0+128)
  5187  16A3  3000               	movlw	0
  5188  16A4  00AA               	movwf	(?___fltol+2)^(0+128)
  5189  16A5  3000               	movlw	0
  5190  16A6  00A9               	movwf	(?___fltol+1)^(0+128)
  5191  16A7  3000               	movlw	0
  5192  16A8  00A8               	movwf	?___fltol^(0+128)
  5193  16A9  0008               	return
  5194  16AA                     l2807:
  5195  16AA  1683               	bsf	3,5	;RP0=1, select bank1
  5196  16AB  0828               	movf	___fltol@f1^(0+128),w
  5197  16AC  00AC               	movwf	??___fltol^(0+128)
  5198  16AD  0829               	movf	(___fltol@f1+1)^(0+128),w
  5199  16AE  00AD               	movwf	(??___fltol^(0+128)+1)
  5200  16AF  082A               	movf	(___fltol@f1+2)^(0+128),w
  5201  16B0  00AE               	movwf	(??___fltol^(0+128)+2)
  5202  16B1  082B               	movf	(___fltol@f1+3)^(0+128),w
  5203  16B2  00AF               	movwf	(??___fltol^(0+128)+3)
  5204  16B3  301F               	movlw	31
  5205  16B4                     u2965:
  5206  16B4  1003               	clrc
  5207  16B5  0CAF               	rrf	(??___fltol^(0+128)+3),f
  5208  16B6  0CAE               	rrf	(??___fltol^(0+128)+2),f
  5209  16B7  0CAD               	rrf	(??___fltol^(0+128)+1),f
  5210  16B8  0CAC               	rrf	??___fltol^(0+128),f
  5211  16B9  3EFF               	addlw	-1
  5212  16BA  1D03               	skipz
  5213  16BB  2EB4               	goto	u2965
  5214  16BC  082C               	movf	??___fltol^(0+128),w
  5215  16BD  00FF               	movwf	127
  5216  16BE  087F               	movf	127,w
  5217  16BF  1283               	bcf	3,5	;RP0=0, select bank0
  5218  16C0  00EE               	movwf	___fltol@sign1
  5219  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  5220  16C2  17AA               	bsf	(___fltol@f1^(0+128)+2),7
  5221  16C3  30FF               	movlw	255
  5222  16C4  05A8               	andwf	___fltol@f1^(0+128),f
  5223  16C5  30FF               	movlw	255
  5224  16C6  05A9               	andwf	(___fltol@f1+1)^(0+128),f
  5225  16C7  30FF               	movlw	255
  5226  16C8  05AA               	andwf	(___fltol@f1+2)^(0+128),f
  5227  16C9  3000               	movlw	0
  5228  16CA  05AB               	andwf	(___fltol@f1+3)^(0+128),f
  5229  16CB  3096               	movlw	150
  5230  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  5231  16CD  02EF               	subwf	___fltol@exp1,f
  5232  16CE  1FEF               	btfss	___fltol@exp1,7
  5233  16CF  2EE7               	goto	l2827
  5234  16D0  086F               	movf	___fltol@exp1,w
  5235  16D1  3A80               	xorlw	128
  5236  16D2  3E97               	addlw	151
  5237  16D3  1C03               	btfss	3,0
  5238  16D4  2EA0               	goto	l2803
  5239  16D5                     l2823:
  5240  16D5  3001               	movlw	1
  5241  16D6                     u2995:
  5242  16D6  1003               	clrc
  5243  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  5244  16D8  0CAB               	rrf	(___fltol@f1+3)^(0+128),f
  5245  16D9  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
  5246  16DA  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
  5247  16DB  0CA8               	rrf	___fltol@f1^(0+128),f
  5248  16DC  3EFF               	addlw	-1
  5249  16DD  1D03               	skipz
  5250  16DE  2ED6               	goto	u2995
  5251  16DF  3001               	movlw	1
  5252  16E0  00FF               	movwf	127
  5253  16E1  087F               	movf	127,w
  5254  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  5255  16E3  07EF               	addwf	___fltol@exp1,f
  5256  16E4  1903               	btfsc	3,2
  5257  16E5  2EFC               	goto	l2835
  5258  16E6  2ED5               	goto	l2823
  5259  16E7                     l2827:
  5260  16E7  3020               	movlw	32
  5261  16E8  026F               	subwf	___fltol@exp1,w
  5262  16E9  1803               	btfsc	3,0
  5263  16EA  2EA0               	goto	l2803
  5264  16EB                     l693:
  5265  16EB  086F               	movf	___fltol@exp1,w
  5266  16EC  1903               	btfsc	3,2
  5267  16ED  2EFC               	goto	l2835
  5268  16EE  3001               	movlw	1
  5269  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  5270  16F0  00AC               	movwf	??___fltol^(0+128)
  5271  16F1                     u3025:
  5272  16F1  1003               	clrc
  5273  16F2  0DA8               	rlf	___fltol@f1^(0+128),f
  5274  16F3  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
  5275  16F4  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
  5276  16F5  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
  5277  16F6  0BAC               	decfsz	??___fltol^(0+128),f
  5278  16F7  2EF1               	goto	u3025
  5279  16F8  3001               	movlw	1
  5280  16F9  1283               	bcf	3,5	;RP0=0, select bank0
  5281  16FA  02EF               	subwf	___fltol@exp1,f
  5282  16FB  2EEB               	goto	l693
  5283  16FC                     l2835:
  5284  16FC  086E               	movf	___fltol@sign1,w
  5285  16FD  1903               	btfsc	3,2
  5286  16FE  0008               	return
  5287  16FF  1683               	bsf	3,5	;RP0=1, select bank1
  5288  1700  09A8               	comf	___fltol@f1^(0+128),f
  5289  1701  09A9               	comf	(___fltol@f1+1)^(0+128),f
  5290  1702  09AA               	comf	(___fltol@f1+2)^(0+128),f
  5291  1703  09AB               	comf	(___fltol@f1+3)^(0+128),f
  5292  1704  0AA8               	incf	___fltol@f1^(0+128),f
  5293  1705  1903               	skipnz
  5294  1706  0AA9               	incf	(___fltol@f1+1)^(0+128),f
  5295  1707  1903               	skipnz
  5296  1708  0AAA               	incf	(___fltol@f1+2)^(0+128),f
  5297  1709  1903               	skipnz
  5298  170A  0AAB               	incf	(___fltol@f1+3)^(0+128),f
  5299  170B  0008               	return
  5300  170C                     __end_of___fltol:
  5301                           
  5302                           	psect	text18
  5303  139C                     __ptext18:	
  5304 ;; *************** function _PWM_Stop_2 *****************
  5305 ;; Defined at:
  5306 ;;		line 180 in file "Libreria pwm.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;		None
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		status,2
  5315 ;; Tracked objects:
  5316 ;;		On entry : 200/100
  5317 ;;		On exit  : 300/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5320 ;;      Params:         0       0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0
  5323 ;;      Totals:         0       0       0       0       0
  5324 ;;Total ram usage:        0 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    2
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_main
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _PWM_Stop_2
  5336  139C                     _PWM_Stop_2:
  5337                           
  5338                           ;Libreria pwm.c: 182:     TMR2ON = 0;
  5339                           
  5340                           ;incstack = 0
  5341                           ; Regs used in _PWM_Stop_2: [status,2]
  5342  139C  1283               	bcf	3,5	;RP0=0, select bank0
  5343  139D  1112               	bcf	18,2	;volatile
  5344                           
  5345                           ;Libreria pwm.c: 183:     CCPR2L = 0;
  5346  139E  019B               	clrf	27	;volatile
  5347                           
  5348                           ;Libreria pwm.c: 184:     CCP2X = 0;
  5349  139F  129D               	bcf	29,5	;volatile
  5350                           
  5351                           ;Libreria pwm.c: 185:     CCP2Y = 0;
  5352  13A0  121D               	bcf	29,4	;volatile
  5353  13A1  0008               	return
  5354  13A2                     __end_of_PWM_Stop_2:
  5355                           
  5356                           	psect	text19
  5357  1396                     __ptext19:	
  5358 ;; *************** function _PWM_Stop_1 *****************
  5359 ;; Defined at:
  5360 ;;		line 113 in file "Libreria pwm.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		status,2
  5369 ;; Tracked objects:
  5370 ;;		On entry : 300/100
  5371 ;;		On exit  : 300/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5374 ;;      Params:         0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    2
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_main
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function _PWM_Stop_1
  5390  1396                     _PWM_Stop_1:
  5391                           
  5392                           ;Libreria pwm.c: 115:     TMR2ON = 0;
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _PWM_Stop_1: [status,2]
  5396  1396  1283               	bcf	3,5	;RP0=0, select bank0
  5397  1397  1112               	bcf	18,2	;volatile
  5398                           
  5399                           ;Libreria pwm.c: 116:     CCPR1L = 0;
  5400  1398  0195               	clrf	21	;volatile
  5401                           
  5402                           ;Libreria pwm.c: 117:     CCP1X = 0;
  5403  1399  1297               	bcf	23,5	;volatile
  5404                           
  5405                           ;Libreria pwm.c: 118:     CCP1Y = 0;
  5406  139A  1217               	bcf	23,4	;volatile
  5407  139B  0008               	return
  5408  139C                     __end_of_PWM_Stop_1:
  5409                           
  5410                           	psect	text20
  5411  0BA9                     __ptext20:	
  5412 ;; *************** function _PWM_2 *****************
  5413 ;; Defined at:
  5414 ;;		line 153 in file "Libreria pwm.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  duty            1    wreg     unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  duty            1   28[BANK1 ] unsigned char 
  5419 ;;  aux             3   25[BANK1 ] float 
  5420 ;;  pulso_alto      3   22[BANK1 ] float 
  5421 ;;  per             3   19[BANK1 ] float 
  5422 ;;  pwm             2   29[BANK1 ] unsigned int 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 300/100
  5429 ;;		On exit  : 300/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5432 ;;      Params:         0       0       0       0       0
  5433 ;;      Locals:         0       0      12       0       0
  5434 ;;      Temps:          0       0       6       0       0
  5435 ;;      Totals:         0       0      18       0       0
  5436 ;;Total ram usage:       18 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    4
  5439 ;; This function calls:
  5440 ;;		___awtoft
  5441 ;;		___fldiv
  5442 ;;		___ftmul
  5443 ;;		___fttol
  5444 ;;		___xxtofl
  5445 ;; This function is called by:
  5446 ;;		_main
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           
  5451                           ;psect for function _PWM_2
  5452  0BA9                     _PWM_2:
  5453                           
  5454                           ;incstack = 0
  5455                           ; Regs used in _PWM_2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5456                           ;PWM_2@duty stored from wreg
  5457  0BA9  00BC               	movwf	PWM_2@duty^(0+128)
  5458  0BAA  3000               	movlw	0
  5459  0BAB  00B6               	movwf	PWM_2@pulso_alto^(0+128)
  5460  0BAC  3000               	movlw	0
  5461  0BAD  00B7               	movwf	(PWM_2@pulso_alto+1)^(0+128)
  5462  0BAE  3000               	movlw	0
  5463  0BAF  00B8               	movwf	(PWM_2@pulso_alto+2)^(0+128)
  5464  0BB0  3000               	movlw	0
  5465  0BB1  00B9               	movwf	PWM_2@aux^(0+128)
  5466  0BB2  3000               	movlw	0
  5467  0BB3  00BA               	movwf	(PWM_2@aux+1)^(0+128)
  5468  0BB4  3000               	movlw	0
  5469  0BB5  00BB               	movwf	(PWM_2@aux+2)^(0+128)
  5470                           
  5471                           ;Libreria pwm.c: 159:     per = 1.0 / freq;
  5472  0BB6  084C               	movf	_freq^(0+128),w
  5473  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0BB8  00A0               	movwf	___xxtofl@val
  5475  0BB9  1683               	bsf	3,5	;RP0=1, select bank1
  5476  0BBA  084D               	movf	(_freq+1)^(0+128),w
  5477  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0BBC  00A1               	movwf	___xxtofl@val+1
  5479  0BBD  01A2               	clrf	___xxtofl@val+2
  5480  0BBE  01A3               	clrf	___xxtofl@val+3
  5481  0BBF  3000               	movlw	0
  5482  0BC0  120A  158A  214E  120A  158A  	fcall	___xxtofl
  5483  0BC5  0823               	movf	?___xxtofl+3,w
  5484  0BC6  00CB               	movwf	___fldiv@a+3
  5485  0BC7  0822               	movf	?___xxtofl+2,w
  5486  0BC8  00CA               	movwf	___fldiv@a+2
  5487  0BC9  0821               	movf	?___xxtofl+1,w
  5488  0BCA  00C9               	movwf	___fldiv@a+1
  5489  0BCB  0820               	movf	?___xxtofl,w
  5490  0BCC  00C8               	movwf	___fldiv@a
  5491  0BCD  303F               	movlw	63
  5492  0BCE  00CF               	movwf	___fldiv@b+3
  5493  0BCF  3080               	movlw	128
  5494  0BD0  00CE               	movwf	___fldiv@b+2
  5495  0BD1  3000               	movlw	0
  5496  0BD2  00CD               	movwf	___fldiv@b+1
  5497  0BD3  3000               	movlw	0
  5498  0BD4  00CC               	movwf	___fldiv@b
  5499  0BD5  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5500  0BDA  0849               	movf	?___fldiv+1,w
  5501  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  5502  0BDC  00B3               	movwf	PWM_2@per^(0+128)
  5503  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  5504  0BDE  084A               	movf	?___fldiv+2,w
  5505  0BDF  1683               	bsf	3,5	;RP0=1, select bank1
  5506  0BE0  00B4               	movwf	(PWM_2@per+1)^(0+128)
  5507  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  5508  0BE2  084B               	movf	?___fldiv+3,w
  5509  0BE3  1683               	bsf	3,5	;RP0=1, select bank1
  5510  0BE4  00B5               	movwf	(PWM_2@per+2)^(0+128)
  5511                           
  5512                           ;Libreria pwm.c: 161:     if(duty == 100) duty = 95;
  5513  0BE5  3064               	movlw	100
  5514  0BE6  063C               	xorwf	PWM_2@duty^(0+128),w
  5515  0BE7  1D03               	btfss	3,2
  5516  0BE8  2BED               	goto	l5041
  5517  0BE9  305F               	movlw	95
  5518  0BEA  00FF               	movwf	127
  5519  0BEB  087F               	movf	127,w
  5520  0BEC  00BC               	movwf	PWM_2@duty^(0+128)
  5521  0BED                     l5041:
  5522                           
  5523                           ;Libreria pwm.c: 163:     pulso_alto = (duty * per) / 100.0;
  5524  0BED  3042               	movlw	66
  5525  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  5526  0BEF  00CB               	movwf	___fldiv@a+3
  5527  0BF0  30C8               	movlw	200
  5528  0BF1  00CA               	movwf	___fldiv@a+2
  5529  0BF2  3000               	movlw	0
  5530  0BF3  00C9               	movwf	___fldiv@a+1
  5531  0BF4  3000               	movlw	0
  5532  0BF5  00C8               	movwf	___fldiv@a
  5533  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0BF7  083C               	movf	PWM_2@duty^(0+128),w
  5535  0BF8  00AD               	movwf	??_PWM_2^(0+128)
  5536  0BF9  01AE               	clrf	(??_PWM_2^(0+128)+1)
  5537  0BFA  082D               	movf	??_PWM_2^(0+128),w
  5538  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  5539  0BFC  00A8               	movwf	___awtoft@c
  5540  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
  5541  0BFE  082E               	movf	(??_PWM_2+1)^(0+128),w
  5542  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0C00  00A9               	movwf	___awtoft@c+1
  5544  0C01  160A  118A  23FB  120A  158A  	fcall	___awtoft
  5545  0C06  0828               	movf	?___awtoft,w
  5546  0C07  00AE               	movwf	___ftmul@f2
  5547  0C08  0829               	movf	?___awtoft+1,w
  5548  0C09  00AF               	movwf	___ftmul@f2+1
  5549  0C0A  082A               	movf	?___awtoft+2,w
  5550  0C0B  00B0               	movwf	___ftmul@f2+2
  5551  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  5552  0C0D  0833               	movf	PWM_2@per^(0+128),w
  5553  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5554  0C0F  00AB               	movwf	___ftmul@f1
  5555  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  5556  0C11  0834               	movf	(PWM_2@per+1)^(0+128),w
  5557  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5558  0C13  00AC               	movwf	___ftmul@f1+1
  5559  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  5560  0C15  0835               	movf	(PWM_2@per+2)^(0+128),w
  5561  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0C17  00AD               	movwf	___ftmul@f1+2
  5563  0C18  120A  158A  21F1  120A  158A  	fcall	___ftmul
  5564  0C1D  082D               	movf	?___ftmul+2,w
  5565  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  5566  0C1F  00B2               	movwf	((??_PWM_2+2)^(0+128)+3)
  5567  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0C21  082C               	movf	?___ftmul+1,w
  5569  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  5570  0C23  00B1               	movwf	((??_PWM_2+2)^(0+128)+2)
  5571  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0C25  082B               	movf	?___ftmul,w
  5573  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  5574  0C27  00B0               	movwf	((??_PWM_2+2)^(0+128)+1)
  5575  0C28  01AF               	clrf	(??_PWM_2+2)^(0+128)
  5576  0C29  0832               	movf	(??_PWM_2+5)^(0+128),w
  5577  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0C2B  00CF               	movwf	___fldiv@b+3
  5579  0C2C  1683               	bsf	3,5	;RP0=1, select bank1
  5580  0C2D  0831               	movf	(??_PWM_2+4)^(0+128),w
  5581  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5582  0C2F  00CE               	movwf	___fldiv@b+2
  5583  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  5584  0C31  0830               	movf	(??_PWM_2+3)^(0+128),w
  5585  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  5586  0C33  00CD               	movwf	___fldiv@b+1
  5587  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  5588  0C35  082F               	movf	(??_PWM_2+2)^(0+128),w
  5589  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  5590  0C37  00CC               	movwf	___fldiv@b
  5591  0C38  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5592  0C3D  0849               	movf	?___fldiv+1,w
  5593  0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0C3F  00B6               	movwf	PWM_2@pulso_alto^(0+128)
  5595  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  5596  0C41  084A               	movf	?___fldiv+2,w
  5597  0C42  1683               	bsf	3,5	;RP0=1, select bank1
  5598  0C43  00B7               	movwf	(PWM_2@pulso_alto+1)^(0+128)
  5599  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  5600  0C45  084B               	movf	?___fldiv+3,w
  5601  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  5602  0C47  00B8               	movwf	(PWM_2@pulso_alto+2)^(0+128)
  5603                           
  5604                           ;Libreria pwm.c: 167:     aux = ((pulso_alto) / ((1.0/4000000) * 16));
  5605  0C48  3036               	movlw	54
  5606  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  5607  0C4A  00CB               	movwf	___fldiv@a+3
  5608  0C4B  3086               	movlw	134
  5609  0C4C  00CA               	movwf	___fldiv@a+2
  5610  0C4D  3037               	movlw	55
  5611  0C4E  00C9               	movwf	___fldiv@a+1
  5612  0C4F  30BD               	movlw	189
  5613  0C50  00C8               	movwf	___fldiv@a
  5614  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  5615  0C52  0838               	movf	(PWM_2@pulso_alto+2)^(0+128),w
  5616  0C53  00B0               	movwf	(??_PWM_2^(0+128)+3)
  5617  0C54  0837               	movf	(PWM_2@pulso_alto+1)^(0+128),w
  5618  0C55  00AF               	movwf	(??_PWM_2^(0+128)+2)
  5619  0C56  0836               	movf	PWM_2@pulso_alto^(0+128),w
  5620  0C57  00AE               	movwf	(??_PWM_2^(0+128)+1)
  5621  0C58  01AD               	clrf	??_PWM_2^(0+128)
  5622  0C59  0830               	movf	(??_PWM_2+3)^(0+128),w
  5623  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0C5B  00CF               	movwf	___fldiv@b+3
  5625  0C5C  1683               	bsf	3,5	;RP0=1, select bank1
  5626  0C5D  082F               	movf	(??_PWM_2+2)^(0+128),w
  5627  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  5628  0C5F  00CE               	movwf	___fldiv@b+2
  5629  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  5630  0C61  082E               	movf	(??_PWM_2+1)^(0+128),w
  5631  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  5632  0C63  00CD               	movwf	___fldiv@b+1
  5633  0C64  1683               	bsf	3,5	;RP0=1, select bank1
  5634  0C65  082D               	movf	??_PWM_2^(0+128),w
  5635  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0C67  00CC               	movwf	___fldiv@b
  5637  0C68  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5638  0C6D  0849               	movf	?___fldiv+1,w
  5639  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  5640  0C6F  00B9               	movwf	PWM_2@aux^(0+128)
  5641  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0C71  084A               	movf	?___fldiv+2,w
  5643  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0C73  00BA               	movwf	(PWM_2@aux+1)^(0+128)
  5645  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  5646  0C75  084B               	movf	?___fldiv+3,w
  5647  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  5648  0C77  00BB               	movwf	(PWM_2@aux+2)^(0+128)
  5649                           
  5650                           ;Libreria pwm.c: 168:     pwm = (int)aux;
  5651  0C78  0839               	movf	PWM_2@aux^(0+128),w
  5652  0C79  00A0               	movwf	___fttol@f1^(0+128)
  5653  0C7A  083A               	movf	(PWM_2@aux+1)^(0+128),w
  5654  0C7B  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5655  0C7C  083B               	movf	(PWM_2@aux+2)^(0+128),w
  5656  0C7D  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5657  0C7E  160A  118A  2785  120A  158A  	fcall	___fttol
  5658  0C83  0821               	movf	(?___fttol+1)^(0+128),w
  5659  0C84  00BE               	movwf	(PWM_2@pwm+1)^(0+128)
  5660  0C85  0820               	movf	?___fttol^(0+128),w
  5661  0C86  00BD               	movwf	PWM_2@pwm^(0+128)
  5662                           
  5663                           ;Libreria pwm.c: 169:     CCP2CON &= 0x0F;
  5664  0C87  300F               	movlw	15
  5665  0C88  00FF               	movwf	127
  5666  0C89  087F               	movf	127,w
  5667  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0C8B  059D               	andwf	29,f	;volatile
  5669                           
  5670                           ;Libreria pwm.c: 170:     CCP2CON |= ((pwm & 0x03) << 4);
  5671  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0C8D  083D               	movf	PWM_2@pwm^(0+128),w	;volatile
  5673  0C8E  3903               	andlw	3
  5674  0C8F  00AD               	movwf	??_PWM_2^(0+128)
  5675  0C90  3003               	movlw	3
  5676  0C91                     u7035:
  5677  0C91  1003               	clrc
  5678  0C92  0DAD               	rlf	??_PWM_2^(0+128),f
  5679  0C93  3EFF               	addlw	-1
  5680  0C94  1D03               	skipz
  5681  0C95  2C91               	goto	u7035
  5682  0C96  1003               	clrc
  5683  0C97  0D2D               	rlf	??_PWM_2^(0+128),w
  5684  0C98  00FF               	movwf	127
  5685  0C99  087F               	movf	127,w
  5686  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5687  0C9B  049D               	iorwf	29,f	;volatile
  5688                           
  5689                           ;Libreria pwm.c: 171:     CCPR2L &= 0x00;
  5690  0C9C  019B               	clrf	27	;volatile
  5691                           
  5692                           ;Libreria pwm.c: 172:     CCPR2L |= (pwm & 0x3FC) >> 2;
  5693  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  5694  0C9E  083E               	movf	(PWM_2@pwm+1)^(0+128),w
  5695  0C9F  00AE               	movwf	(??_PWM_2^(0+128)+1)
  5696  0CA0  083D               	movf	PWM_2@pwm^(0+128),w
  5697  0CA1  00AD               	movwf	??_PWM_2^(0+128)
  5698  0CA2  1003               	clrc
  5699  0CA3  0CAE               	rrf	(??_PWM_2^(0+128)+1),f
  5700  0CA4  0CAD               	rrf	??_PWM_2^(0+128),f
  5701  0CA5  1003               	clrc
  5702  0CA6  0CAE               	rrf	(??_PWM_2^(0+128)+1),f
  5703  0CA7  0CAD               	rrf	??_PWM_2^(0+128),f
  5704  0CA8  082D               	movf	??_PWM_2^(0+128),w
  5705  0CA9  00FF               	movwf	127
  5706  0CAA  087F               	movf	127,w
  5707  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0CAC  049B               	iorwf	27,f	;volatile
  5709  0CAD  0008               	return
  5710  0CAE                     __end_of_PWM_2:
  5711                           
  5712                           	psect	text21
  5713  0AA4                     __ptext21:	
  5714 ;; *************** function _PWM_1 *****************
  5715 ;; Defined at:
  5716 ;;		line 47 in file "Libreria pwm.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  duty            1    wreg     unsigned char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  duty            1   28[BANK1 ] unsigned char 
  5721 ;;  aux             3   25[BANK1 ] float 
  5722 ;;  pulso_alto      3   22[BANK1 ] float 
  5723 ;;  per             3   19[BANK1 ] float 
  5724 ;;  pwm             2   29[BANK1 ] unsigned int 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 300/100
  5731 ;;		On exit  : 300/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         0       0      12       0       0
  5736 ;;      Temps:          0       0       6       0       0
  5737 ;;      Totals:         0       0      18       0       0
  5738 ;;Total ram usage:       18 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    4
  5741 ;; This function calls:
  5742 ;;		___awtoft
  5743 ;;		___fldiv
  5744 ;;		___ftmul
  5745 ;;		___fttol
  5746 ;;		___xxtofl
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function _PWM_1
  5754  0AA4                     _PWM_1:
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in _PWM_1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5758                           ;PWM_1@duty stored from wreg
  5759  0AA4  00BC               	movwf	PWM_1@duty^(0+128)
  5760  0AA5  3000               	movlw	0
  5761  0AA6  00B6               	movwf	PWM_1@pulso_alto^(0+128)
  5762  0AA7  3000               	movlw	0
  5763  0AA8  00B7               	movwf	(PWM_1@pulso_alto+1)^(0+128)
  5764  0AA9  3000               	movlw	0
  5765  0AAA  00B8               	movwf	(PWM_1@pulso_alto+2)^(0+128)
  5766  0AAB  3000               	movlw	0
  5767  0AAC  00B9               	movwf	PWM_1@aux^(0+128)
  5768  0AAD  3000               	movlw	0
  5769  0AAE  00BA               	movwf	(PWM_1@aux+1)^(0+128)
  5770  0AAF  3000               	movlw	0
  5771  0AB0  00BB               	movwf	(PWM_1@aux+2)^(0+128)
  5772                           
  5773                           ;Libreria pwm.c: 53:     per = 1.0 / freq;
  5774  0AB1  084C               	movf	_freq^(0+128),w
  5775  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0AB3  00A0               	movwf	___xxtofl@val
  5777  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  5778  0AB5  084D               	movf	(_freq+1)^(0+128),w
  5779  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0AB7  00A1               	movwf	___xxtofl@val+1
  5781  0AB8  01A2               	clrf	___xxtofl@val+2
  5782  0AB9  01A3               	clrf	___xxtofl@val+3
  5783  0ABA  3000               	movlw	0
  5784  0ABB  120A  158A  214E  120A  158A  	fcall	___xxtofl
  5785  0AC0  0823               	movf	?___xxtofl+3,w
  5786  0AC1  00CB               	movwf	___fldiv@a+3
  5787  0AC2  0822               	movf	?___xxtofl+2,w
  5788  0AC3  00CA               	movwf	___fldiv@a+2
  5789  0AC4  0821               	movf	?___xxtofl+1,w
  5790  0AC5  00C9               	movwf	___fldiv@a+1
  5791  0AC6  0820               	movf	?___xxtofl,w
  5792  0AC7  00C8               	movwf	___fldiv@a
  5793  0AC8  303F               	movlw	63
  5794  0AC9  00CF               	movwf	___fldiv@b+3
  5795  0ACA  3080               	movlw	128
  5796  0ACB  00CE               	movwf	___fldiv@b+2
  5797  0ACC  3000               	movlw	0
  5798  0ACD  00CD               	movwf	___fldiv@b+1
  5799  0ACE  3000               	movlw	0
  5800  0ACF  00CC               	movwf	___fldiv@b
  5801  0AD0  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5802  0AD5  0849               	movf	?___fldiv+1,w
  5803  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  5804  0AD7  00B3               	movwf	PWM_1@per^(0+128)
  5805  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0AD9  084A               	movf	?___fldiv+2,w
  5807  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  5808  0ADB  00B4               	movwf	(PWM_1@per+1)^(0+128)
  5809  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5810  0ADD  084B               	movf	?___fldiv+3,w
  5811  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  5812  0ADF  00B5               	movwf	(PWM_1@per+2)^(0+128)
  5813                           
  5814                           ;Libreria pwm.c: 55:     if(duty == 100) duty = 95;
  5815  0AE0  3064               	movlw	100
  5816  0AE1  063C               	xorwf	PWM_1@duty^(0+128),w
  5817  0AE2  1D03               	btfss	3,2
  5818  0AE3  2AE8               	goto	l4999
  5819  0AE4  305F               	movlw	95
  5820  0AE5  00FF               	movwf	127
  5821  0AE6  087F               	movf	127,w
  5822  0AE7  00BC               	movwf	PWM_1@duty^(0+128)
  5823  0AE8                     l4999:
  5824                           
  5825                           ;Libreria pwm.c: 57:     pulso_alto = (duty * per) / 100.0;
  5826  0AE8  3042               	movlw	66
  5827  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  5828  0AEA  00CB               	movwf	___fldiv@a+3
  5829  0AEB  30C8               	movlw	200
  5830  0AEC  00CA               	movwf	___fldiv@a+2
  5831  0AED  3000               	movlw	0
  5832  0AEE  00C9               	movwf	___fldiv@a+1
  5833  0AEF  3000               	movlw	0
  5834  0AF0  00C8               	movwf	___fldiv@a
  5835  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  5836  0AF2  083C               	movf	PWM_1@duty^(0+128),w
  5837  0AF3  00AD               	movwf	??_PWM_1^(0+128)
  5838  0AF4  01AE               	clrf	(??_PWM_1^(0+128)+1)
  5839  0AF5  082D               	movf	??_PWM_1^(0+128),w
  5840  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0AF7  00A8               	movwf	___awtoft@c
  5842  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  5843  0AF9  082E               	movf	(??_PWM_1+1)^(0+128),w
  5844  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0AFB  00A9               	movwf	___awtoft@c+1
  5846  0AFC  160A  118A  23FB  120A  158A  	fcall	___awtoft
  5847  0B01  0828               	movf	?___awtoft,w
  5848  0B02  00AE               	movwf	___ftmul@f2
  5849  0B03  0829               	movf	?___awtoft+1,w
  5850  0B04  00AF               	movwf	___ftmul@f2+1
  5851  0B05  082A               	movf	?___awtoft+2,w
  5852  0B06  00B0               	movwf	___ftmul@f2+2
  5853  0B07  1683               	bsf	3,5	;RP0=1, select bank1
  5854  0B08  0833               	movf	PWM_1@per^(0+128),w
  5855  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0B0A  00AB               	movwf	___ftmul@f1
  5857  0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  5858  0B0C  0834               	movf	(PWM_1@per+1)^(0+128),w
  5859  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  5860  0B0E  00AC               	movwf	___ftmul@f1+1
  5861  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  5862  0B10  0835               	movf	(PWM_1@per+2)^(0+128),w
  5863  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  5864  0B12  00AD               	movwf	___ftmul@f1+2
  5865  0B13  120A  158A  21F1  120A  158A  	fcall	___ftmul
  5866  0B18  082D               	movf	?___ftmul+2,w
  5867  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  5868  0B1A  00B2               	movwf	((??_PWM_1+2)^(0+128)+3)
  5869  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5870  0B1C  082C               	movf	?___ftmul+1,w
  5871  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  5872  0B1E  00B1               	movwf	((??_PWM_1+2)^(0+128)+2)
  5873  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0B20  082B               	movf	?___ftmul,w
  5875  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  5876  0B22  00B0               	movwf	((??_PWM_1+2)^(0+128)+1)
  5877  0B23  01AF               	clrf	(??_PWM_1+2)^(0+128)
  5878  0B24  0832               	movf	(??_PWM_1+5)^(0+128),w
  5879  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0B26  00CF               	movwf	___fldiv@b+3
  5881  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  5882  0B28  0831               	movf	(??_PWM_1+4)^(0+128),w
  5883  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  5884  0B2A  00CE               	movwf	___fldiv@b+2
  5885  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  5886  0B2C  0830               	movf	(??_PWM_1+3)^(0+128),w
  5887  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  5888  0B2E  00CD               	movwf	___fldiv@b+1
  5889  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0B30  082F               	movf	(??_PWM_1+2)^(0+128),w
  5891  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0B32  00CC               	movwf	___fldiv@b
  5893  0B33  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5894  0B38  0849               	movf	?___fldiv+1,w
  5895  0B39  1683               	bsf	3,5	;RP0=1, select bank1
  5896  0B3A  00B6               	movwf	PWM_1@pulso_alto^(0+128)
  5897  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  5898  0B3C  084A               	movf	?___fldiv+2,w
  5899  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  5900  0B3E  00B7               	movwf	(PWM_1@pulso_alto+1)^(0+128)
  5901  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  5902  0B40  084B               	movf	?___fldiv+3,w
  5903  0B41  1683               	bsf	3,5	;RP0=1, select bank1
  5904  0B42  00B8               	movwf	(PWM_1@pulso_alto+2)^(0+128)
  5905                           
  5906                           ;Libreria pwm.c: 61:     aux = ((pulso_alto) / ((1.0/4000000) * 16));
  5907  0B43  3036               	movlw	54
  5908  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0B45  00CB               	movwf	___fldiv@a+3
  5910  0B46  3086               	movlw	134
  5911  0B47  00CA               	movwf	___fldiv@a+2
  5912  0B48  3037               	movlw	55
  5913  0B49  00C9               	movwf	___fldiv@a+1
  5914  0B4A  30BD               	movlw	189
  5915  0B4B  00C8               	movwf	___fldiv@a
  5916  0B4C  1683               	bsf	3,5	;RP0=1, select bank1
  5917  0B4D  0838               	movf	(PWM_1@pulso_alto+2)^(0+128),w
  5918  0B4E  00B0               	movwf	(??_PWM_1^(0+128)+3)
  5919  0B4F  0837               	movf	(PWM_1@pulso_alto+1)^(0+128),w
  5920  0B50  00AF               	movwf	(??_PWM_1^(0+128)+2)
  5921  0B51  0836               	movf	PWM_1@pulso_alto^(0+128),w
  5922  0B52  00AE               	movwf	(??_PWM_1^(0+128)+1)
  5923  0B53  01AD               	clrf	??_PWM_1^(0+128)
  5924  0B54  0830               	movf	(??_PWM_1+3)^(0+128),w
  5925  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  5926  0B56  00CF               	movwf	___fldiv@b+3
  5927  0B57  1683               	bsf	3,5	;RP0=1, select bank1
  5928  0B58  082F               	movf	(??_PWM_1+2)^(0+128),w
  5929  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0B5A  00CE               	movwf	___fldiv@b+2
  5931  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  5932  0B5C  082E               	movf	(??_PWM_1+1)^(0+128),w
  5933  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  5934  0B5E  00CD               	movwf	___fldiv@b+1
  5935  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  5936  0B60  082D               	movf	??_PWM_1^(0+128),w
  5937  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0B62  00CC               	movwf	___fldiv@b
  5939  0B63  120A  158A  24AE  120A  158A  	fcall	___fldiv
  5940  0B68  0849               	movf	?___fldiv+1,w
  5941  0B69  1683               	bsf	3,5	;RP0=1, select bank1
  5942  0B6A  00B9               	movwf	PWM_1@aux^(0+128)
  5943  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0B6C  084A               	movf	?___fldiv+2,w
  5945  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  5946  0B6E  00BA               	movwf	(PWM_1@aux+1)^(0+128)
  5947  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5948  0B70  084B               	movf	?___fldiv+3,w
  5949  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  5950  0B72  00BB               	movwf	(PWM_1@aux+2)^(0+128)
  5951                           
  5952                           ;Libreria pwm.c: 62:     pwm = (int)aux;
  5953  0B73  0839               	movf	PWM_1@aux^(0+128),w
  5954  0B74  00A0               	movwf	___fttol@f1^(0+128)
  5955  0B75  083A               	movf	(PWM_1@aux+1)^(0+128),w
  5956  0B76  00A1               	movwf	(___fttol@f1+1)^(0+128)
  5957  0B77  083B               	movf	(PWM_1@aux+2)^(0+128),w
  5958  0B78  00A2               	movwf	(___fttol@f1+2)^(0+128)
  5959  0B79  160A  118A  2785  120A  158A  	fcall	___fttol
  5960  0B7E  0821               	movf	(?___fttol+1)^(0+128),w
  5961  0B7F  00BE               	movwf	(PWM_1@pwm+1)^(0+128)
  5962  0B80  0820               	movf	?___fttol^(0+128),w
  5963  0B81  00BD               	movwf	PWM_1@pwm^(0+128)
  5964                           
  5965                           ;Libreria pwm.c: 64:     CCP1CON &= 0x0F;
  5966  0B82  300F               	movlw	15
  5967  0B83  00FF               	movwf	127
  5968  0B84  087F               	movf	127,w
  5969  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0B86  0597               	andwf	23,f	;volatile
  5971                           
  5972                           ;Libreria pwm.c: 72:     CCP1CON |= ((pwm & 0x03) << 4);
  5973  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  5974  0B88  083D               	movf	PWM_1@pwm^(0+128),w	;volatile
  5975  0B89  3903               	andlw	3
  5976  0B8A  00AD               	movwf	??_PWM_1^(0+128)
  5977  0B8B  3003               	movlw	3
  5978  0B8C                     u7005:
  5979  0B8C  1003               	clrc
  5980  0B8D  0DAD               	rlf	??_PWM_1^(0+128),f
  5981  0B8E  3EFF               	addlw	-1
  5982  0B8F  1D03               	skipz
  5983  0B90  2B8C               	goto	u7005
  5984  0B91  1003               	clrc
  5985  0B92  0D2D               	rlf	??_PWM_1^(0+128),w
  5986  0B93  00FF               	movwf	127
  5987  0B94  087F               	movf	127,w
  5988  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0B96  0497               	iorwf	23,f	;volatile
  5990                           
  5991                           ;Libreria pwm.c: 87:     CCPR1L &= 0x00;
  5992  0B97  0195               	clrf	21	;volatile
  5993                           
  5994                           ;Libreria pwm.c: 90:     CCPR1L |= (pwm & 0x3FC) >> 2;
  5995  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  5996  0B99  083E               	movf	(PWM_1@pwm+1)^(0+128),w
  5997  0B9A  00AE               	movwf	(??_PWM_1^(0+128)+1)
  5998  0B9B  083D               	movf	PWM_1@pwm^(0+128),w
  5999  0B9C  00AD               	movwf	??_PWM_1^(0+128)
  6000  0B9D  1003               	clrc
  6001  0B9E  0CAE               	rrf	(??_PWM_1^(0+128)+1),f
  6002  0B9F  0CAD               	rrf	??_PWM_1^(0+128),f
  6003  0BA0  1003               	clrc
  6004  0BA1  0CAE               	rrf	(??_PWM_1^(0+128)+1),f
  6005  0BA2  0CAD               	rrf	??_PWM_1^(0+128),f
  6006  0BA3  082D               	movf	??_PWM_1^(0+128),w
  6007  0BA4  00FF               	movwf	127
  6008  0BA5  087F               	movf	127,w
  6009  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0BA7  0495               	iorwf	21,f	;volatile
  6011  0BA8  0008               	return
  6012  0BA9                     __end_of_PWM_1:
  6013                           
  6014                           	psect	text22
  6015  094E                     __ptext22:	
  6016 ;; *************** function ___xxtofl *****************
  6017 ;; Defined at:
  6018 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\xxtofl.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  sign            1    wreg     unsigned char 
  6021 ;;  val             4    0[BANK0 ] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  sign            1    8[BANK0 ] unsigned char 
  6024 ;;  arg             4   10[BANK0 ] unsigned long 
  6025 ;;  exp             1    9[BANK0 ] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  4    0[BANK0 ] unsigned char 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, btemp+1
  6030 ;; Tracked objects:
  6031 ;;		On entry : 300/0
  6032 ;;		On exit  : 300/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         0       4       0       0       0
  6036 ;;      Locals:         0       6       0       0       0
  6037 ;;      Temps:          0       4       0       0       0
  6038 ;;      Totals:         0      14       0       0       0
  6039 ;;Total ram usage:       14 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    2
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_RPM_read
  6046 ;;		_PWM_init_1
  6047 ;;		_PWM_1
  6048 ;;		_PWM_init_2
  6049 ;;		_PWM_2
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function ___xxtofl
  6055  094E                     ___xxtofl:
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6059                           ;___xxtofl@sign stored from wreg
  6060  094E  00A8               	movwf	___xxtofl@sign
  6061  094F  0828               	movf	___xxtofl@sign,w
  6062  0950  1D03               	btfss	3,2
  6063  0951  1FA3               	btfss	___xxtofl@val+3,7
  6064  0952  2963               	goto	l4815
  6065  0953  0920               	comf	___xxtofl@val,w
  6066  0954  00AA               	movwf	___xxtofl@arg
  6067  0955  0921               	comf	___xxtofl@val+1,w
  6068  0956  00AB               	movwf	___xxtofl@arg+1
  6069  0957  0922               	comf	___xxtofl@val+2,w
  6070  0958  00AC               	movwf	___xxtofl@arg+2
  6071  0959  0923               	comf	___xxtofl@val+3,w
  6072  095A  00AD               	movwf	___xxtofl@arg+3
  6073  095B  0AAA               	incf	___xxtofl@arg,f
  6074  095C  1903               	skipnz
  6075  095D  0AAB               	incf	___xxtofl@arg+1,f
  6076  095E  1903               	skipnz
  6077  095F  0AAC               	incf	___xxtofl@arg+2,f
  6078  0960  1903               	skipnz
  6079  0961  0AAD               	incf	___xxtofl@arg+3,f
  6080  0962  296B               	goto	l1049
  6081  0963                     l4815:
  6082  0963  0823               	movf	___xxtofl@val+3,w
  6083  0964  00AD               	movwf	___xxtofl@arg+3
  6084  0965  0822               	movf	___xxtofl@val+2,w
  6085  0966  00AC               	movwf	___xxtofl@arg+2
  6086  0967  0821               	movf	___xxtofl@val+1,w
  6087  0968  00AB               	movwf	___xxtofl@arg+1
  6088  0969  0820               	movf	___xxtofl@val,w
  6089  096A  00AA               	movwf	___xxtofl@arg
  6090  096B                     l1049:
  6091  096B  0823               	movf	___xxtofl@val+3,w
  6092  096C  0422               	iorwf	___xxtofl@val+2,w
  6093  096D  0421               	iorwf	___xxtofl@val+1,w
  6094  096E  0420               	iorwf	___xxtofl@val,w
  6095  096F  1D03               	skipz
  6096  0970  297A               	goto	l4821
  6097  0971  3000               	movlw	0
  6098  0972  00A3               	movwf	?___xxtofl+3
  6099  0973  3000               	movlw	0
  6100  0974  00A2               	movwf	?___xxtofl+2
  6101  0975  3000               	movlw	0
  6102  0976  00A1               	movwf	?___xxtofl+1
  6103  0977  3000               	movlw	0
  6104  0978  00A0               	movwf	?___xxtofl
  6105  0979  0008               	return
  6106  097A                     l4821:
  6107  097A  3096               	movlw	150
  6108  097B  00FF               	movwf	127
  6109  097C  087F               	movf	127,w
  6110  097D  00A9               	movwf	___xxtofl@exp
  6111  097E                     l4827:
  6112  097E  30FE               	movlw	254
  6113  097F  052D               	andwf	___xxtofl@arg+3,w
  6114  0980  1903               	btfsc	3,2
  6115  0981  29AB               	goto	l4835
  6116  0982  3001               	movlw	1
  6117  0983  00FF               	movwf	127
  6118  0984  087F               	movf	127,w
  6119  0985  07A9               	addwf	___xxtofl@exp,f
  6120  0986  3001               	movlw	1
  6121  0987                     u6835:
  6122  0987  1003               	clrc
  6123  0988  0CAD               	rrf	___xxtofl@arg+3,f
  6124  0989  0CAC               	rrf	___xxtofl@arg+2,f
  6125  098A  0CAB               	rrf	___xxtofl@arg+1,f
  6126  098B  0CAA               	rrf	___xxtofl@arg,f
  6127  098C  3EFF               	addlw	-1
  6128  098D  1D03               	skipz
  6129  098E  2987               	goto	u6835
  6130  098F  297E               	goto	l4827
  6131  0990                     l4829:
  6132  0990  3001               	movlw	1
  6133  0991  00FF               	movwf	127
  6134  0992  087F               	movf	127,w
  6135  0993  07A9               	addwf	___xxtofl@exp,f
  6136  0994  3001               	movlw	1
  6137  0995  07AA               	addwf	___xxtofl@arg,f
  6138  0996  3000               	movlw	0
  6139  0997  1803               	skipnc
  6140  0998  3001               	movlw	1
  6141  0999  07AB               	addwf	___xxtofl@arg+1,f
  6142  099A  3000               	movlw	0
  6143  099B  1803               	skipnc
  6144  099C  3001               	movlw	1
  6145  099D  07AC               	addwf	___xxtofl@arg+2,f
  6146  099E  3000               	movlw	0
  6147  099F  1803               	skipnc
  6148  09A0  3001               	movlw	1
  6149  09A1  07AD               	addwf	___xxtofl@arg+3,f
  6150  09A2  3001               	movlw	1
  6151  09A3                     u6855:
  6152  09A3  1003               	clrc
  6153  09A4  0CAD               	rrf	___xxtofl@arg+3,f
  6154  09A5  0CAC               	rrf	___xxtofl@arg+2,f
  6155  09A6  0CAB               	rrf	___xxtofl@arg+1,f
  6156  09A7  0CAA               	rrf	___xxtofl@arg,f
  6157  09A8  3EFF               	addlw	-1
  6158  09A9  1D03               	skipz
  6159  09AA  29A3               	goto	u6855
  6160  09AB                     l4835:
  6161  09AB  30FF               	movlw	255
  6162  09AC  052D               	andwf	___xxtofl@arg+3,w
  6163  09AD  1903               	btfsc	3,2
  6164  09AE  29BF               	goto	l4839
  6165  09AF  2990               	goto	l4829
  6166  09B0                     l4841:
  6167  09B0  3002               	movlw	2
  6168  09B1  0229               	subwf	___xxtofl@exp,w
  6169  09B2  1C03               	btfss	3,0
  6170  09B3  29C1               	goto	l1062
  6171  09B4  3001               	movlw	1
  6172  09B5  02A9               	subwf	___xxtofl@exp,f
  6173  09B6  3001               	movlw	1
  6174  09B7  00A4               	movwf	??___xxtofl
  6175  09B8                     u6875:
  6176  09B8  1003               	clrc
  6177  09B9  0DAA               	rlf	___xxtofl@arg,f
  6178  09BA  0DAB               	rlf	___xxtofl@arg+1,f
  6179  09BB  0DAC               	rlf	___xxtofl@arg+2,f
  6180  09BC  0DAD               	rlf	___xxtofl@arg+3,f
  6181  09BD  0BA4               	decfsz	??___xxtofl,f
  6182  09BE  29B8               	goto	u6875
  6183  09BF                     l4839:
  6184  09BF  1FAC               	btfss	___xxtofl@arg+2,7
  6185  09C0  29B0               	goto	l4841
  6186  09C1                     l1062:
  6187  09C1  1829               	btfsc	___xxtofl@exp,0
  6188  09C2  29CB               	goto	l1063
  6189  09C3  30FF               	movlw	255
  6190  09C4  05AA               	andwf	___xxtofl@arg,f
  6191  09C5  30FF               	movlw	255
  6192  09C6  05AB               	andwf	___xxtofl@arg+1,f
  6193  09C7  307F               	movlw	127
  6194  09C8  05AC               	andwf	___xxtofl@arg+2,f
  6195  09C9  30FF               	movlw	255
  6196  09CA  05AD               	andwf	___xxtofl@arg+3,f
  6197  09CB                     l1063:
  6198  09CB  1003               	clrc
  6199  09CC  0CA9               	rrf	___xxtofl@exp,f
  6200  09CD  0829               	movf	___xxtofl@exp,w
  6201  09CE  00A4               	movwf	??___xxtofl
  6202  09CF  01A5               	clrf	??___xxtofl+1
  6203  09D0  01A6               	clrf	??___xxtofl+2
  6204  09D1  01A7               	clrf	??___xxtofl+3
  6205  09D2  3018               	movlw	24
  6206  09D3                     u6915:
  6207  09D3  1003               	clrc
  6208  09D4  0DA4               	rlf	??___xxtofl,f
  6209  09D5  0DA5               	rlf	??___xxtofl+1,f
  6210  09D6  0DA6               	rlf	??___xxtofl+2,f
  6211  09D7  0DA7               	rlf	??___xxtofl+3,f
  6212  09D8  3EFF               	addlw	-1
  6213  09D9  1D03               	skipz
  6214  09DA  29D3               	goto	u6915
  6215  09DB  0824               	movf	??___xxtofl,w
  6216  09DC  04AA               	iorwf	___xxtofl@arg,f
  6217  09DD  0825               	movf	??___xxtofl+1,w
  6218  09DE  04AB               	iorwf	___xxtofl@arg+1,f
  6219  09DF  0826               	movf	??___xxtofl+2,w
  6220  09E0  04AC               	iorwf	___xxtofl@arg+2,f
  6221  09E1  0827               	movf	??___xxtofl+3,w
  6222  09E2  04AD               	iorwf	___xxtofl@arg+3,f
  6223  09E3  0828               	movf	___xxtofl@sign,w
  6224  09E4  1D03               	btfss	3,2
  6225  09E5  1FA3               	btfss	___xxtofl@val+3,7
  6226  09E6  29E8               	goto	l4853
  6227  09E7  17AD               	bsf	___xxtofl@arg+3,7
  6228  09E8                     l4853:
  6229  09E8  082D               	movf	___xxtofl@arg+3,w
  6230  09E9  00A3               	movwf	?___xxtofl+3
  6231  09EA  082C               	movf	___xxtofl@arg+2,w
  6232  09EB  00A2               	movwf	?___xxtofl+2
  6233  09EC  082B               	movf	___xxtofl@arg+1,w
  6234  09ED  00A1               	movwf	?___xxtofl+1
  6235  09EE  082A               	movf	___xxtofl@arg,w
  6236  09EF  00A0               	movwf	?___xxtofl
  6237  09F0  0008               	return
  6238  09F1                     __end_of___xxtofl:
  6239                           
  6240                           	psect	text23
  6241  1785                     __ptext23:	
  6242 ;; *************** function ___fttol *****************
  6243 ;; Defined at:
  6244 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\fttol.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  f1              3    0[BANK1 ] float 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  lval            4    8[BANK1 ] unsigned long 
  6249 ;;  exp1            1   12[BANK1 ] unsigned char 
  6250 ;;  sign1           1    7[BANK1 ] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4    0[BANK1 ] long 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, btemp+1
  6255 ;; Tracked objects:
  6256 ;;		On entry : 300/100
  6257 ;;		On exit  : 300/100
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6260 ;;      Params:         0       0       4       0       0
  6261 ;;      Locals:         0       0       6       0       0
  6262 ;;      Temps:          0       0       3       0       0
  6263 ;;      Totals:         0       0      13       0       0
  6264 ;;Total ram usage:       13 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    2
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_main
  6271 ;;		_PWM_1
  6272 ;;		_PWM_2
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function ___fttol
  6278  1785                     ___fttol:
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  6282  1785  0820               	movf	___fttol@f1^(0+128),w
  6283  1786  00A4               	movwf	??___fttol^(0+128)
  6284  1787  0821               	movf	(___fttol@f1+1)^(0+128),w
  6285  1788  00A5               	movwf	(??___fttol^(0+128)+1)
  6286  1789  0822               	movf	(___fttol@f1+2)^(0+128),w
  6287  178A  00A6               	movwf	(??___fttol^(0+128)+2)
  6288  178B  1003               	clrc
  6289  178C  0D25               	rlf	(??___fttol^(0+128)+1),w
  6290  178D  0D26               	rlf	(??___fttol^(0+128)+2),w
  6291  178E  00FF               	movwf	127
  6292  178F  087F               	movf	127,w
  6293  1790  00AC               	movwf	___fttol@exp1^(0+128)
  6294  1791  082C               	movf	___fttol@exp1^(0+128),w
  6295  1792  1D03               	btfss	3,2
  6296  1793  2F9D               	goto	l4379
  6297  1794                     l4375:
  6298  1794  3000               	movlw	0
  6299  1795  00A3               	movwf	(?___fttol+3)^(0+128)
  6300  1796  3000               	movlw	0
  6301  1797  00A2               	movwf	(?___fttol+2)^(0+128)
  6302  1798  3000               	movlw	0
  6303  1799  00A1               	movwf	(?___fttol+1)^(0+128)
  6304  179A  3000               	movlw	0
  6305  179B  00A0               	movwf	?___fttol^(0+128)
  6306  179C  0008               	return
  6307  179D                     l4379:
  6308  179D  0820               	movf	___fttol@f1^(0+128),w
  6309  179E  00A4               	movwf	??___fttol^(0+128)
  6310  179F  0821               	movf	(___fttol@f1+1)^(0+128),w
  6311  17A0  00A5               	movwf	(??___fttol^(0+128)+1)
  6312  17A1  0822               	movf	(___fttol@f1+2)^(0+128),w
  6313  17A2  00A6               	movwf	(??___fttol^(0+128)+2)
  6314  17A3  3017               	movlw	23
  6315  17A4                     u5765:
  6316  17A4  1003               	clrc
  6317  17A5  0CA6               	rrf	(??___fttol^(0+128)+2),f
  6318  17A6  0CA5               	rrf	(??___fttol^(0+128)+1),f
  6319  17A7  0CA4               	rrf	??___fttol^(0+128),f
  6320  17A8  3EFF               	addlw	-1
  6321  17A9  1D03               	skipz
  6322  17AA  2FA4               	goto	u5765
  6323  17AB  0824               	movf	??___fttol^(0+128),w
  6324  17AC  00FF               	movwf	127
  6325  17AD  087F               	movf	127,w
  6326  17AE  00A7               	movwf	___fttol@sign1^(0+128)
  6327  17AF  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  6328  17B0  30FF               	movlw	255
  6329  17B1  05A0               	andwf	___fttol@f1^(0+128),f
  6330  17B2  30FF               	movlw	255
  6331  17B3  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  6332  17B4  3000               	movlw	0
  6333  17B5  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  6334  17B6  0820               	movf	___fttol@f1^(0+128),w
  6335  17B7  00A8               	movwf	___fttol@lval^(0+128)
  6336  17B8  0821               	movf	(___fttol@f1+1)^(0+128),w
  6337  17B9  00A9               	movwf	(___fttol@lval^(0+128)+1)
  6338  17BA  0822               	movf	(___fttol@f1+2)^(0+128),w
  6339  17BB  00AA               	movwf	(___fttol@lval^(0+128)+2)
  6340  17BC  01AB               	clrf	(___fttol@lval^(0+128)+3)
  6341  17BD  308E               	movlw	142
  6342  17BE  02AC               	subwf	___fttol@exp1^(0+128),f
  6343  17BF  1FAC               	btfss	___fttol@exp1^(0+128),7
  6344  17C0  2FD6               	goto	l4401
  6345  17C1  082C               	movf	___fttol@exp1^(0+128),w
  6346  17C2  3A80               	xorlw	128
  6347  17C3  3E8F               	addlw	143
  6348  17C4  1C03               	btfss	3,0
  6349  17C5  2F94               	goto	l4375
  6350  17C6                     l4397:
  6351  17C6  3001               	movlw	1
  6352  17C7                     u5795:
  6353  17C7  1003               	clrc
  6354  17C8  0CAB               	rrf	(___fttol@lval+3)^(0+128),f
  6355  17C9  0CAA               	rrf	(___fttol@lval+2)^(0+128),f
  6356  17CA  0CA9               	rrf	(___fttol@lval+1)^(0+128),f
  6357  17CB  0CA8               	rrf	___fttol@lval^(0+128),f
  6358  17CC  3EFF               	addlw	-1
  6359  17CD  1D03               	skipz
  6360  17CE  2FC7               	goto	u5795
  6361  17CF  3001               	movlw	1
  6362  17D0  00FF               	movwf	127
  6363  17D1  087F               	movf	127,w
  6364  17D2  07AC               	addwf	___fttol@exp1^(0+128),f
  6365  17D3  1903               	btfsc	3,2
  6366  17D4  2FE9               	goto	l4409
  6367  17D5  2FC6               	goto	l4397
  6368  17D6                     l4401:
  6369  17D6  3018               	movlw	24
  6370  17D7  022C               	subwf	___fttol@exp1^(0+128),w
  6371  17D8  1803               	btfsc	3,0
  6372  17D9  2F94               	goto	l4375
  6373  17DA                     l778:
  6374  17DA  082C               	movf	___fttol@exp1^(0+128),w
  6375  17DB  1903               	btfsc	3,2
  6376  17DC  2FE9               	goto	l4409
  6377  17DD  3001               	movlw	1
  6378  17DE  00A4               	movwf	??___fttol^(0+128)
  6379  17DF                     u5825:
  6380  17DF  1003               	clrc
  6381  17E0  0DA8               	rlf	___fttol@lval^(0+128),f
  6382  17E1  0DA9               	rlf	(___fttol@lval+1)^(0+128),f
  6383  17E2  0DAA               	rlf	(___fttol@lval+2)^(0+128),f
  6384  17E3  0DAB               	rlf	(___fttol@lval+3)^(0+128),f
  6385  17E4  0BA4               	decfsz	??___fttol^(0+128),f
  6386  17E5  2FDF               	goto	u5825
  6387  17E6  3001               	movlw	1
  6388  17E7  02AC               	subwf	___fttol@exp1^(0+128),f
  6389  17E8  2FDA               	goto	l778
  6390  17E9                     l4409:
  6391  17E9  0827               	movf	___fttol@sign1^(0+128),w
  6392  17EA  1903               	btfsc	3,2
  6393  17EB  2FF7               	goto	l4413
  6394  17EC  09A8               	comf	___fttol@lval^(0+128),f
  6395  17ED  09A9               	comf	(___fttol@lval+1)^(0+128),f
  6396  17EE  09AA               	comf	(___fttol@lval+2)^(0+128),f
  6397  17EF  09AB               	comf	(___fttol@lval+3)^(0+128),f
  6398  17F0  0AA8               	incf	___fttol@lval^(0+128),f
  6399  17F1  1903               	skipnz
  6400  17F2  0AA9               	incf	(___fttol@lval+1)^(0+128),f
  6401  17F3  1903               	skipnz
  6402  17F4  0AAA               	incf	(___fttol@lval+2)^(0+128),f
  6403  17F5  1903               	skipnz
  6404  17F6  0AAB               	incf	(___fttol@lval+3)^(0+128),f
  6405  17F7                     l4413:
  6406  17F7  082B               	movf	(___fttol@lval+3)^(0+128),w
  6407  17F8  00A3               	movwf	(?___fttol+3)^(0+128)
  6408  17F9  082A               	movf	(___fttol@lval+2)^(0+128),w
  6409  17FA  00A2               	movwf	(?___fttol+2)^(0+128)
  6410  17FB  0829               	movf	(___fttol@lval+1)^(0+128),w
  6411  17FC  00A1               	movwf	(?___fttol+1)^(0+128)
  6412  17FD  0828               	movf	___fttol@lval^(0+128),w
  6413  17FE  00A0               	movwf	?___fttol^(0+128)
  6414  17FF  0008               	return
  6415  1800                     __end_of___fttol:
  6416                           
  6417                           	psect	text24
  6418  09F1                     __ptext24:	
  6419 ;; *************** function ___ftmul *****************
  6420 ;; Defined at:
  6421 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\ftmul.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  f1              3   11[BANK0 ] float 
  6424 ;;  f2              3   14[BANK0 ] float 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  6427 ;;  sign            1   25[BANK0 ] unsigned char 
  6428 ;;  cntr            1   24[BANK0 ] unsigned char 
  6429 ;;  exp             1   20[BANK0 ] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  3   11[BANK0 ] float 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 300/0
  6436 ;;		On exit  : 300/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6439 ;;      Params:         0       6       0       0       0
  6440 ;;      Locals:         0       6       0       0       0
  6441 ;;      Temps:          0       3       0       0       0
  6442 ;;      Totals:         0      15       0       0       0
  6443 ;;Total ram usage:       15 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    3
  6446 ;; This function calls:
  6447 ;;		___ftpack
  6448 ;; This function is called by:
  6449 ;;		_PWM_1
  6450 ;;		_PWM_2
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function ___ftmul
  6456  09F1                     ___ftmul:
  6457                           
  6458                           ;incstack = 0
  6459                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6460  09F1  082B               	movf	___ftmul@f1,w
  6461  09F2  00B1               	movwf	??___ftmul
  6462  09F3  082C               	movf	___ftmul@f1+1,w
  6463  09F4  00B2               	movwf	??___ftmul+1
  6464  09F5  082D               	movf	___ftmul@f1+2,w
  6465  09F6  00B3               	movwf	??___ftmul+2
  6466  09F7  1003               	clrc
  6467  09F8  0D32               	rlf	??___ftmul+1,w
  6468  09F9  0D33               	rlf	??___ftmul+2,w
  6469  09FA  00FF               	movwf	127
  6470  09FB  087F               	movf	127,w
  6471  09FC  00B4               	movwf	___ftmul@exp
  6472  09FD  0834               	movf	___ftmul@exp,w
  6473  09FE  1D03               	btfss	3,2
  6474  09FF  2A07               	goto	l4323
  6475  0A00  3000               	movlw	0
  6476  0A01  00AB               	movwf	?___ftmul
  6477  0A02  3000               	movlw	0
  6478  0A03  00AC               	movwf	?___ftmul+1
  6479  0A04  3000               	movlw	0
  6480  0A05  00AD               	movwf	?___ftmul+2
  6481  0A06  0008               	return
  6482  0A07                     l4323:
  6483  0A07  082E               	movf	___ftmul@f2,w
  6484  0A08  00B1               	movwf	??___ftmul
  6485  0A09  082F               	movf	___ftmul@f2+1,w
  6486  0A0A  00B2               	movwf	??___ftmul+1
  6487  0A0B  0830               	movf	___ftmul@f2+2,w
  6488  0A0C  00B3               	movwf	??___ftmul+2
  6489  0A0D  1003               	clrc
  6490  0A0E  0D32               	rlf	??___ftmul+1,w
  6491  0A0F  0D33               	rlf	??___ftmul+2,w
  6492  0A10  00FF               	movwf	127
  6493  0A11  087F               	movf	127,w
  6494  0A12  00B9               	movwf	___ftmul@sign
  6495  0A13  0839               	movf	___ftmul@sign,w
  6496  0A14  1D03               	btfss	3,2
  6497  0A15  2A1D               	goto	l4329
  6498  0A16  3000               	movlw	0
  6499  0A17  00AB               	movwf	?___ftmul
  6500  0A18  3000               	movlw	0
  6501  0A19  00AC               	movwf	?___ftmul+1
  6502  0A1A  3000               	movlw	0
  6503  0A1B  00AD               	movwf	?___ftmul+2
  6504  0A1C  0008               	return
  6505  0A1D                     l4329:
  6506  0A1D  0839               	movf	___ftmul@sign,w
  6507  0A1E  3E7B               	addlw	123
  6508  0A1F  00FF               	movwf	127
  6509  0A20  087F               	movf	127,w
  6510  0A21  07B4               	addwf	___ftmul@exp,f
  6511  0A22  082D               	movf	___ftmul@f1+2,w
  6512  0A23  00FF               	movwf	127
  6513  0A24  087F               	movf	127,w
  6514  0A25  00B9               	movwf	___ftmul@sign
  6515  0A26  0830               	movf	___ftmul@f2+2,w
  6516  0A27  00FF               	movwf	127
  6517  0A28  087F               	movf	127,w
  6518  0A29  06B9               	xorwf	___ftmul@sign,f
  6519  0A2A  3080               	movlw	128
  6520  0A2B  00FF               	movwf	127
  6521  0A2C  087F               	movf	127,w
  6522  0A2D  05B9               	andwf	___ftmul@sign,f
  6523  0A2E  17AC               	bsf	___ftmul@f1+1,7
  6524  0A2F  17AF               	bsf	___ftmul@f2+1,7
  6525  0A30  30FF               	movlw	255
  6526  0A31  05AE               	andwf	___ftmul@f2,f
  6527  0A32  30FF               	movlw	255
  6528  0A33  05AF               	andwf	___ftmul@f2+1,f
  6529  0A34  3000               	movlw	0
  6530  0A35  05B0               	andwf	___ftmul@f2+2,f
  6531  0A36  3000               	movlw	0
  6532  0A37  00B5               	movwf	___ftmul@f3_as_product
  6533  0A38  3000               	movlw	0
  6534  0A39  00B6               	movwf	___ftmul@f3_as_product+1
  6535  0A3A  3000               	movlw	0
  6536  0A3B  00B7               	movwf	___ftmul@f3_as_product+2
  6537  0A3C  3007               	movlw	7
  6538  0A3D  00FF               	movwf	127
  6539  0A3E  087F               	movf	127,w
  6540  0A3F  00B8               	movwf	___ftmul@cntr
  6541  0A40                     l4347:
  6542  0A40  1C2B               	btfss	___ftmul@f1,0
  6543  0A41  2A50               	goto	l4351
  6544  0A42  082E               	movf	___ftmul@f2,w
  6545  0A43  07B5               	addwf	___ftmul@f3_as_product,f
  6546  0A44  082F               	movf	___ftmul@f2+1,w
  6547  0A45  1103               	clrz
  6548  0A46  1803               	skipnc
  6549  0A47  0A2F               	incf	___ftmul@f2+1,w
  6550  0A48  1D03               	btfss	3,2
  6551  0A49  07B6               	addwf	___ftmul@f3_as_product+1,f
  6552  0A4A  0830               	movf	___ftmul@f2+2,w
  6553  0A4B  1103               	clrz
  6554  0A4C  1803               	skipnc
  6555  0A4D  0A30               	incf	___ftmul@f2+2,w
  6556  0A4E  1D03               	btfss	3,2
  6557  0A4F  07B7               	addwf	___ftmul@f3_as_product+2,f
  6558  0A50                     l4351:
  6559  0A50  3001               	movlw	1
  6560  0A51                     u5675:
  6561  0A51  1003               	clrc
  6562  0A52  0CAD               	rrf	___ftmul@f1+2,f
  6563  0A53  0CAC               	rrf	___ftmul@f1+1,f
  6564  0A54  0CAB               	rrf	___ftmul@f1,f
  6565  0A55  3EFF               	addlw	-1
  6566  0A56  1D03               	skipz
  6567  0A57  2A51               	goto	u5675
  6568  0A58  3001               	movlw	1
  6569  0A59                     u5685:
  6570  0A59  1003               	clrc
  6571  0A5A  0DAE               	rlf	___ftmul@f2,f
  6572  0A5B  0DAF               	rlf	___ftmul@f2+1,f
  6573  0A5C  0DB0               	rlf	___ftmul@f2+2,f
  6574  0A5D  3EFF               	addlw	-1
  6575  0A5E  1D03               	skipz
  6576  0A5F  2A59               	goto	u5685
  6577  0A60  3001               	movlw	1
  6578  0A61  02B8               	subwf	___ftmul@cntr,f
  6579  0A62  1D03               	btfss	3,2
  6580  0A63  2A40               	goto	l4347
  6581  0A64  3009               	movlw	9
  6582  0A65  00FF               	movwf	127
  6583  0A66  087F               	movf	127,w
  6584  0A67  00B8               	movwf	___ftmul@cntr
  6585  0A68                     l4359:
  6586  0A68  1C2B               	btfss	___ftmul@f1,0
  6587  0A69  2A78               	goto	l4363
  6588  0A6A  082E               	movf	___ftmul@f2,w
  6589  0A6B  07B5               	addwf	___ftmul@f3_as_product,f
  6590  0A6C  082F               	movf	___ftmul@f2+1,w
  6591  0A6D  1103               	clrz
  6592  0A6E  1803               	skipnc
  6593  0A6F  0A2F               	incf	___ftmul@f2+1,w
  6594  0A70  1D03               	btfss	3,2
  6595  0A71  07B6               	addwf	___ftmul@f3_as_product+1,f
  6596  0A72  0830               	movf	___ftmul@f2+2,w
  6597  0A73  1103               	clrz
  6598  0A74  1803               	skipnc
  6599  0A75  0A30               	incf	___ftmul@f2+2,w
  6600  0A76  1D03               	btfss	3,2
  6601  0A77  07B7               	addwf	___ftmul@f3_as_product+2,f
  6602  0A78                     l4363:
  6603  0A78  3001               	movlw	1
  6604  0A79                     u5725:
  6605  0A79  1003               	clrc
  6606  0A7A  0CAD               	rrf	___ftmul@f1+2,f
  6607  0A7B  0CAC               	rrf	___ftmul@f1+1,f
  6608  0A7C  0CAB               	rrf	___ftmul@f1,f
  6609  0A7D  3EFF               	addlw	-1
  6610  0A7E  1D03               	skipz
  6611  0A7F  2A79               	goto	u5725
  6612  0A80  3001               	movlw	1
  6613  0A81                     u5735:
  6614  0A81  1003               	clrc
  6615  0A82  0CB7               	rrf	___ftmul@f3_as_product+2,f
  6616  0A83  0CB6               	rrf	___ftmul@f3_as_product+1,f
  6617  0A84  0CB5               	rrf	___ftmul@f3_as_product,f
  6618  0A85  3EFF               	addlw	-1
  6619  0A86  1D03               	skipz
  6620  0A87  2A81               	goto	u5735
  6621  0A88  3001               	movlw	1
  6622  0A89  02B8               	subwf	___ftmul@cntr,f
  6623  0A8A  1D03               	btfss	3,2
  6624  0A8B  2A68               	goto	l4359
  6625  0A8C  0835               	movf	___ftmul@f3_as_product,w
  6626  0A8D  00A0               	movwf	___ftpack@arg
  6627  0A8E  0836               	movf	___ftmul@f3_as_product+1,w
  6628  0A8F  00A1               	movwf	___ftpack@arg+1
  6629  0A90  0837               	movf	___ftmul@f3_as_product+2,w
  6630  0A91  00A2               	movwf	___ftpack@arg+2
  6631  0A92  0834               	movf	___ftmul@exp,w
  6632  0A93  00FF               	movwf	127
  6633  0A94  087F               	movf	127,w
  6634  0A95  00A3               	movwf	___ftpack@exp
  6635  0A96  0839               	movf	___ftmul@sign,w
  6636  0A97  00FF               	movwf	127
  6637  0A98  087F               	movf	127,w
  6638  0A99  00A4               	movwf	___ftpack@sign
  6639  0A9A  160A  118A  25B9   	fcall	___ftpack
  6640  0A9D  0820               	movf	?___ftpack,w
  6641  0A9E  00AB               	movwf	?___ftmul
  6642  0A9F  0821               	movf	?___ftpack+1,w
  6643  0AA0  00AC               	movwf	?___ftmul+1
  6644  0AA1  0822               	movf	?___ftpack+2,w
  6645  0AA2  00AD               	movwf	?___ftmul+2
  6646  0AA3  0008               	return
  6647  0AA4                     __end_of___ftmul:
  6648                           
  6649                           	psect	text25
  6650  0CAE                     __ptext25:	
  6651 ;; *************** function ___fldiv *****************
  6652 ;; Defined at:
  6653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\sprcdiv.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  a               4   40[BANK0 ] float 
  6656 ;;  b               4   44[BANK0 ] float 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  grs             4   60[BANK0 ] unsigned long 
  6659 ;;  rem             4   53[BANK0 ] unsigned long 
  6660 ;;  new_exp         2   58[BANK0 ] int 
  6661 ;;  aexp            1   65[BANK0 ] unsigned char 
  6662 ;;  bexp            1   64[BANK0 ] unsigned char 
  6663 ;;  sign            1   57[BANK0 ] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  4   40[BANK0 ] unsigned char 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0, btemp+1
  6668 ;; Tracked objects:
  6669 ;;		On entry : 300/0
  6670 ;;		On exit  : 300/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6673 ;;      Params:         0       8       0       0       0
  6674 ;;      Locals:         0      13       0       0       0
  6675 ;;      Temps:          0       5       0       0       0
  6676 ;;      Totals:         0      26       0       0       0
  6677 ;;Total ram usage:       26 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    2
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_RPM_read
  6684 ;;		_PWM_init_1
  6685 ;;		_PWM_1
  6686 ;;		_PWM_init_2
  6687 ;;		_PWM_2
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function ___fldiv
  6693  0CAE                     ___fldiv:
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6697  0CAE  084F               	movf	___fldiv@b+3,w
  6698  0CAF  3980               	andlw	128
  6699  0CB0  00FF               	movwf	127
  6700  0CB1  087F               	movf	127,w
  6701  0CB2  00D9               	movwf	___fldiv@sign
  6702  0CB3  084F               	movf	___fldiv@b+3,w
  6703  0CB4  00D0               	movwf	??___fldiv
  6704  0CB5  0750               	addwf	??___fldiv,w
  6705  0CB6  00FF               	movwf	127
  6706  0CB7  087F               	movf	127,w
  6707  0CB8  00E0               	movwf	___fldiv@bexp
  6708  0CB9  1BCE               	btfsc	___fldiv@b+2,7
  6709  0CBA  1460               	bsf	___fldiv@bexp,0
  6710  0CBB  0860               	movf	___fldiv@bexp,w
  6711  0CBC  1903               	btfsc	3,2
  6712  0CBD  2CCC               	goto	l3207
  6713  0CBE  0A60               	incf	___fldiv@bexp,w
  6714  0CBF  1D03               	btfss	3,2
  6715  0CC0  2CC9               	goto	l3203
  6716  0CC1  3000               	movlw	0
  6717  0CC2  00CF               	movwf	___fldiv@b+3
  6718  0CC3  3000               	movlw	0
  6719  0CC4  00CE               	movwf	___fldiv@b+2
  6720  0CC5  3000               	movlw	0
  6721  0CC6  00CD               	movwf	___fldiv@b+1
  6722  0CC7  3000               	movlw	0
  6723  0CC8  00CC               	movwf	___fldiv@b
  6724  0CC9                     l3203:
  6725  0CC9  17CE               	bsf	___fldiv@b+2,7
  6726  0CCA  01CF               	clrf	___fldiv@b+3
  6727  0CCB  2CD4               	goto	l3209
  6728  0CCC                     l3207:
  6729  0CCC  3000               	movlw	0
  6730  0CCD  00CF               	movwf	___fldiv@b+3
  6731  0CCE  3000               	movlw	0
  6732  0CCF  00CE               	movwf	___fldiv@b+2
  6733  0CD0  3000               	movlw	0
  6734  0CD1  00CD               	movwf	___fldiv@b+1
  6735  0CD2  3000               	movlw	0
  6736  0CD3  00CC               	movwf	___fldiv@b
  6737  0CD4                     l3209:
  6738  0CD4  084B               	movf	___fldiv@a+3,w
  6739  0CD5  3980               	andlw	128
  6740  0CD6  00FF               	movwf	127
  6741  0CD7  087F               	movf	127,w
  6742  0CD8  06D9               	xorwf	___fldiv@sign,f
  6743  0CD9  084B               	movf	___fldiv@a+3,w
  6744  0CDA  00D0               	movwf	??___fldiv
  6745  0CDB  0750               	addwf	??___fldiv,w
  6746  0CDC  00FF               	movwf	127
  6747  0CDD  087F               	movf	127,w
  6748  0CDE  00E1               	movwf	___fldiv@aexp
  6749  0CDF  1BCA               	btfsc	___fldiv@a+2,7
  6750  0CE0  1461               	bsf	___fldiv@aexp,0
  6751  0CE1  0861               	movf	___fldiv@aexp,w
  6752  0CE2  1903               	btfsc	3,2
  6753  0CE3  2CF2               	goto	l3227
  6754  0CE4  0A61               	incf	___fldiv@aexp,w
  6755  0CE5  1D03               	btfss	3,2
  6756  0CE6  2CEF               	goto	l3223
  6757  0CE7  3000               	movlw	0
  6758  0CE8  00CB               	movwf	___fldiv@a+3
  6759  0CE9  3000               	movlw	0
  6760  0CEA  00CA               	movwf	___fldiv@a+2
  6761  0CEB  3000               	movlw	0
  6762  0CEC  00C9               	movwf	___fldiv@a+1
  6763  0CED  3000               	movlw	0
  6764  0CEE  00C8               	movwf	___fldiv@a
  6765  0CEF                     l3223:
  6766  0CEF  17CA               	bsf	___fldiv@a+2,7
  6767  0CF0  01CB               	clrf	___fldiv@a+3
  6768  0CF1  2CFA               	goto	l965
  6769  0CF2                     l3227:
  6770  0CF2  3000               	movlw	0
  6771  0CF3  00CB               	movwf	___fldiv@a+3
  6772  0CF4  3000               	movlw	0
  6773  0CF5  00CA               	movwf	___fldiv@a+2
  6774  0CF6  3000               	movlw	0
  6775  0CF7  00C9               	movwf	___fldiv@a+1
  6776  0CF8  3000               	movlw	0
  6777  0CF9  00C8               	movwf	___fldiv@a
  6778  0CFA                     l965:
  6779  0CFA  084B               	movf	___fldiv@a+3,w
  6780  0CFB  044A               	iorwf	___fldiv@a+2,w
  6781  0CFC  0449               	iorwf	___fldiv@a+1,w
  6782  0CFD  0448               	iorwf	___fldiv@a,w
  6783  0CFE  1D03               	skipz
  6784  0CFF  2D19               	goto	l3237
  6785  0D00  3000               	movlw	0
  6786  0D01  00CF               	movwf	___fldiv@b+3
  6787  0D02  3000               	movlw	0
  6788  0D03  00CE               	movwf	___fldiv@b+2
  6789  0D04  3000               	movlw	0
  6790  0D05  00CD               	movwf	___fldiv@b+1
  6791  0D06  3000               	movlw	0
  6792  0D07  00CC               	movwf	___fldiv@b
  6793  0D08  3080               	movlw	128
  6794  0D09  04CE               	iorwf	___fldiv@b+2,f
  6795  0D0A  307F               	movlw	127
  6796  0D0B  04CF               	iorwf	___fldiv@b+3,f
  6797  0D0C                     L3:
  6798  0D0C  0859               	movf	___fldiv@sign,w
  6799  0D0D  00FF               	movwf	127
  6800  0D0E  087F               	movf	127,w
  6801  0D0F  04CF               	iorwf	___fldiv@b+3,f
  6802  0D10  084F               	movf	___fldiv@b+3,w
  6803  0D11  00CB               	movwf	?___fldiv+3
  6804  0D12  084E               	movf	___fldiv@b+2,w
  6805  0D13  00CA               	movwf	?___fldiv+2
  6806  0D14  084D               	movf	___fldiv@b+1,w
  6807  0D15  00C9               	movwf	?___fldiv+1
  6808  0D16  084C               	movf	___fldiv@b,w
  6809  0D17  00C8               	movwf	?___fldiv
  6810  0D18  0008               	return
  6811  0D19                     l3237:
  6812  0D19  0860               	movf	___fldiv@bexp,w
  6813  0D1A  1D03               	btfss	3,2
  6814  0D1B  2D25               	goto	l3243
  6815  0D1C  3000               	movlw	0
  6816  0D1D  00CB               	movwf	?___fldiv+3
  6817  0D1E  3000               	movlw	0
  6818  0D1F  00CA               	movwf	?___fldiv+2
  6819  0D20  3000               	movlw	0
  6820  0D21  00C9               	movwf	?___fldiv+1
  6821  0D22  3000               	movlw	0
  6822  0D23  00C8               	movwf	?___fldiv
  6823  0D24  0008               	return
  6824  0D25                     l3243:
  6825  0D25  0860               	movf	___fldiv@bexp,w
  6826  0D26  00D0               	movwf	??___fldiv
  6827  0D27  01D1               	clrf	??___fldiv+1
  6828  0D28  0851               	movf	??___fldiv+1,w
  6829  0D29  00D3               	movwf	??___fldiv+3
  6830  0D2A  0861               	movf	___fldiv@aexp,w
  6831  0D2B  0250               	subwf	??___fldiv,w
  6832  0D2C  00D2               	movwf	??___fldiv+2
  6833  0D2D  1C03               	skipc
  6834  0D2E  03D3               	decf	??___fldiv+3,f
  6835  0D2F  0852               	movf	??___fldiv+2,w
  6836  0D30  3E7F               	addlw	127
  6837  0D31  00DA               	movwf	___fldiv@new_exp
  6838  0D32  0853               	movf	??___fldiv+3,w
  6839  0D33  1803               	skipnc
  6840  0D34  3E01               	addlw	1
  6841  0D35  3E00               	addlw	0
  6842  0D36  00DB               	movwf	___fldiv@new_exp+1
  6843  0D37  084F               	movf	___fldiv@b+3,w
  6844  0D38  00D8               	movwf	___fldiv@rem+3
  6845  0D39  084E               	movf	___fldiv@b+2,w
  6846  0D3A  00D7               	movwf	___fldiv@rem+2
  6847  0D3B  084D               	movf	___fldiv@b+1,w
  6848  0D3C  00D6               	movwf	___fldiv@rem+1
  6849  0D3D  084C               	movf	___fldiv@b,w
  6850  0D3E  00D5               	movwf	___fldiv@rem
  6851  0D3F  3000               	movlw	0
  6852  0D40  00CF               	movwf	___fldiv@b+3
  6853  0D41  3000               	movlw	0
  6854  0D42  00CE               	movwf	___fldiv@b+2
  6855  0D43  3000               	movlw	0
  6856  0D44  00CD               	movwf	___fldiv@b+1
  6857  0D45  3000               	movlw	0
  6858  0D46  00CC               	movwf	___fldiv@b
  6859  0D47  3000               	movlw	0
  6860  0D48  00DF               	movwf	___fldiv@grs+3
  6861  0D49  3000               	movlw	0
  6862  0D4A  00DE               	movwf	___fldiv@grs+2
  6863  0D4B  3000               	movlw	0
  6864  0D4C  00DD               	movwf	___fldiv@grs+1
  6865  0D4D  3000               	movlw	0
  6866  0D4E  00DC               	movwf	___fldiv@grs
  6867  0D4F  01E1               	clrf	___fldiv@aexp
  6868  0D50                     l3271:
  6869  0D50  301A               	movlw	26
  6870  0D51  0261               	subwf	___fldiv@aexp,w
  6871  0D52  1803               	btfsc	3,0
  6872  0D53  2D98               	goto	l3273
  6873  0D54  0861               	movf	___fldiv@aexp,w
  6874  0D55  1903               	btfsc	3,2
  6875  0D56  2D74               	goto	l3263
  6876  0D57  3001               	movlw	1
  6877  0D58  00D0               	movwf	??___fldiv
  6878  0D59                     u3955:
  6879  0D59  1003               	clrc
  6880  0D5A  0DD5               	rlf	___fldiv@rem,f
  6881  0D5B  0DD6               	rlf	___fldiv@rem+1,f
  6882  0D5C  0DD7               	rlf	___fldiv@rem+2,f
  6883  0D5D  0DD8               	rlf	___fldiv@rem+3,f
  6884  0D5E  0BD0               	decfsz	??___fldiv,f
  6885  0D5F  2D59               	goto	u3955
  6886  0D60  3001               	movlw	1
  6887  0D61  00D0               	movwf	??___fldiv
  6888  0D62                     u3965:
  6889  0D62  1003               	clrc
  6890  0D63  0DCC               	rlf	___fldiv@b,f
  6891  0D64  0DCD               	rlf	___fldiv@b+1,f
  6892  0D65  0DCE               	rlf	___fldiv@b+2,f
  6893  0D66  0DCF               	rlf	___fldiv@b+3,f
  6894  0D67  0BD0               	decfsz	??___fldiv,f
  6895  0D68  2D62               	goto	u3965
  6896  0D69  1BDF               	btfsc	___fldiv@grs+3,7
  6897  0D6A  144C               	bsf	___fldiv@b,0
  6898  0D6B  3001               	movlw	1
  6899  0D6C  00D0               	movwf	??___fldiv
  6900  0D6D                     u3985:
  6901  0D6D  1003               	clrc
  6902  0D6E  0DDC               	rlf	___fldiv@grs,f
  6903  0D6F  0DDD               	rlf	___fldiv@grs+1,f
  6904  0D70  0DDE               	rlf	___fldiv@grs+2,f
  6905  0D71  0DDF               	rlf	___fldiv@grs+3,f
  6906  0D72  0BD0               	decfsz	??___fldiv,f
  6907  0D73  2D6D               	goto	u3985
  6908  0D74                     l3263:
  6909  0D74  084B               	movf	___fldiv@a+3,w
  6910  0D75  0258               	subwf	___fldiv@rem+3,w
  6911  0D76  1D03               	skipz
  6912  0D77  2D82               	goto	u3995
  6913  0D78  084A               	movf	___fldiv@a+2,w
  6914  0D79  0257               	subwf	___fldiv@rem+2,w
  6915  0D7A  1D03               	skipz
  6916  0D7B  2D82               	goto	u3995
  6917  0D7C  0849               	movf	___fldiv@a+1,w
  6918  0D7D  0256               	subwf	___fldiv@rem+1,w
  6919  0D7E  1D03               	skipz
  6920  0D7F  2D82               	goto	u3995
  6921  0D80  0848               	movf	___fldiv@a,w
  6922  0D81  0255               	subwf	___fldiv@rem,w
  6923  0D82                     u3995:
  6924  0D82  1C03               	skipc
  6925  0D83  2D93               	goto	l3269
  6926  0D84  175F               	bsf	___fldiv@grs+3,6
  6927  0D85  0848               	movf	___fldiv@a,w
  6928  0D86  02D5               	subwf	___fldiv@rem,f
  6929  0D87  0849               	movf	___fldiv@a+1,w
  6930  0D88  1C03               	skipc
  6931  0D89  0F49               	incfsz	___fldiv@a+1,w
  6932  0D8A  02D6               	subwf	___fldiv@rem+1,f
  6933  0D8B  084A               	movf	___fldiv@a+2,w
  6934  0D8C  1C03               	skipc
  6935  0D8D  0F4A               	incfsz	___fldiv@a+2,w
  6936  0D8E  02D7               	subwf	___fldiv@rem+2,f
  6937  0D8F  084B               	movf	___fldiv@a+3,w
  6938  0D90  1C03               	skipc
  6939  0D91  0F4B               	incfsz	___fldiv@a+3,w
  6940  0D92  02D8               	subwf	___fldiv@rem+3,f
  6941  0D93                     l3269:
  6942  0D93  3001               	movlw	1
  6943  0D94  00FF               	movwf	127
  6944  0D95  087F               	movf	127,w
  6945  0D96  07E1               	addwf	___fldiv@aexp,f
  6946  0D97  2D50               	goto	l3271
  6947  0D98                     l3273:
  6948  0D98  0858               	movf	___fldiv@rem+3,w
  6949  0D99  0457               	iorwf	___fldiv@rem+2,w
  6950  0D9A  0456               	iorwf	___fldiv@rem+1,w
  6951  0D9B  0455               	iorwf	___fldiv@rem,w
  6952  0D9C  1D03               	btfss	3,2
  6953  0D9D  145C               	bsf	___fldiv@grs,0
  6954  0D9E                     l3287:
  6955  0D9E  1BCE               	btfsc	___fldiv@b+2,7
  6956  0D9F  2DBB               	goto	l3289
  6957  0DA0  3001               	movlw	1
  6958  0DA1  00D0               	movwf	??___fldiv
  6959  0DA2                     u4025:
  6960  0DA2  1003               	clrc
  6961  0DA3  0DCC               	rlf	___fldiv@b,f
  6962  0DA4  0DCD               	rlf	___fldiv@b+1,f
  6963  0DA5  0DCE               	rlf	___fldiv@b+2,f
  6964  0DA6  0DCF               	rlf	___fldiv@b+3,f
  6965  0DA7  0BD0               	decfsz	??___fldiv,f
  6966  0DA8  2DA2               	goto	u4025
  6967  0DA9  1BDF               	btfsc	___fldiv@grs+3,7
  6968  0DAA  144C               	bsf	___fldiv@b,0
  6969  0DAB  3001               	movlw	1
  6970  0DAC  00D0               	movwf	??___fldiv
  6971  0DAD                     u4045:
  6972  0DAD  1003               	clrc
  6973  0DAE  0DDC               	rlf	___fldiv@grs,f
  6974  0DAF  0DDD               	rlf	___fldiv@grs+1,f
  6975  0DB0  0DDE               	rlf	___fldiv@grs+2,f
  6976  0DB1  0DDF               	rlf	___fldiv@grs+3,f
  6977  0DB2  0BD0               	decfsz	??___fldiv,f
  6978  0DB3  2DAD               	goto	u4045
  6979  0DB4  30FF               	movlw	255
  6980  0DB5  07DA               	addwf	___fldiv@new_exp,f
  6981  0DB6  1803               	skipnc
  6982  0DB7  0ADB               	incf	___fldiv@new_exp+1,f
  6983  0DB8  30FF               	movlw	255
  6984  0DB9  07DB               	addwf	___fldiv@new_exp+1,f
  6985  0DBA  2D9E               	goto	l3287
  6986  0DBB                     l3289:
  6987  0DBB  01E1               	clrf	___fldiv@aexp
  6988  0DBC  1FDF               	btfss	___fldiv@grs+3,7
  6989  0DBD  2DD4               	goto	l3299
  6990  0DBE  30FF               	movlw	255
  6991  0DBF  055C               	andwf	___fldiv@grs,w
  6992  0DC0  00D0               	movwf	??___fldiv
  6993  0DC1  30FF               	movlw	255
  6994  0DC2  055D               	andwf	___fldiv@grs+1,w
  6995  0DC3  00D1               	movwf	??___fldiv+1
  6996  0DC4  30FF               	movlw	255
  6997  0DC5  055E               	andwf	___fldiv@grs+2,w
  6998  0DC6  00D2               	movwf	??___fldiv+2
  6999  0DC7  307F               	movlw	127
  7000  0DC8  055F               	andwf	___fldiv@grs+3,w
  7001  0DC9  00D3               	movwf	??___fldiv+3
  7002  0DCA  0853               	movf	??___fldiv+3,w
  7003  0DCB  0452               	iorwf	??___fldiv+2,w
  7004  0DCC  0451               	iorwf	??___fldiv+1,w
  7005  0DCD  0450               	iorwf	??___fldiv,w
  7006  0DCE  1903               	skipnz
  7007  0DCF  184C               	btfsc	___fldiv@b,0
  7008  0DD0  2DD2               	goto	l3295
  7009  0DD1  2DD4               	goto	l3299
  7010  0DD2                     l3295:
  7011  0DD2  01E1               	clrf	___fldiv@aexp
  7012  0DD3  0AE1               	incf	___fldiv@aexp,f
  7013  0DD4                     l3299:
  7014  0DD4  0861               	movf	___fldiv@aexp,w
  7015  0DD5  1903               	btfsc	3,2
  7016  0DD6  2E06               	goto	l3309
  7017  0DD7  3001               	movlw	1
  7018  0DD8  07CC               	addwf	___fldiv@b,f
  7019  0DD9  3000               	movlw	0
  7020  0DDA  1803               	skipnc
  7021  0DDB  3001               	movlw	1
  7022  0DDC  07CD               	addwf	___fldiv@b+1,f
  7023  0DDD  3000               	movlw	0
  7024  0DDE  1803               	skipnc
  7025  0DDF  3001               	movlw	1
  7026  0DE0  07CE               	addwf	___fldiv@b+2,f
  7027  0DE1  3000               	movlw	0
  7028  0DE2  1803               	skipnc
  7029  0DE3  3001               	movlw	1
  7030  0DE4  07CF               	addwf	___fldiv@b+3,f
  7031  0DE5  1C4F               	btfss	___fldiv@b+3,0
  7032  0DE6  2E06               	goto	l3309
  7033  0DE7  084C               	movf	___fldiv@b,w
  7034  0DE8  00D0               	movwf	??___fldiv
  7035  0DE9  084D               	movf	___fldiv@b+1,w
  7036  0DEA  00D1               	movwf	??___fldiv+1
  7037  0DEB  084E               	movf	___fldiv@b+2,w
  7038  0DEC  00D2               	movwf	??___fldiv+2
  7039  0DED  084F               	movf	___fldiv@b+3,w
  7040  0DEE  00D3               	movwf	??___fldiv+3
  7041  0DEF  3001               	movlw	1
  7042  0DF0  00D4               	movwf	??___fldiv+4
  7043  0DF1                     u4115:
  7044  0DF1  0D53               	rlf	??___fldiv+3,w
  7045  0DF2  0CD3               	rrf	??___fldiv+3,f
  7046  0DF3  0CD2               	rrf	??___fldiv+2,f
  7047  0DF4  0CD1               	rrf	??___fldiv+1,f
  7048  0DF5  0CD0               	rrf	??___fldiv,f
  7049  0DF6  0BD4               	decfsz	??___fldiv+4,f
  7050  0DF7  2DF1               	goto	u4115
  7051  0DF8  0853               	movf	??___fldiv+3,w
  7052  0DF9  00CF               	movwf	___fldiv@b+3
  7053  0DFA  0852               	movf	??___fldiv+2,w
  7054  0DFB  00CE               	movwf	___fldiv@b+2
  7055  0DFC  0851               	movf	??___fldiv+1,w
  7056  0DFD  00CD               	movwf	___fldiv@b+1
  7057  0DFE  0850               	movf	??___fldiv,w
  7058  0DFF  00CC               	movwf	___fldiv@b
  7059  0E00  3001               	movlw	1
  7060  0E01  07DA               	addwf	___fldiv@new_exp,f
  7061  0E02  1803               	skipnc
  7062  0E03  0ADB               	incf	___fldiv@new_exp+1,f
  7063  0E04  3000               	movlw	0
  7064  0E05  07DB               	addwf	___fldiv@new_exp+1,f
  7065  0E06                     l3309:
  7066  0E06  085B               	movf	___fldiv@new_exp+1,w
  7067  0E07  3A80               	xorlw	128
  7068  0E08  00FF               	movwf	127
  7069  0E09  3080               	movlw	128
  7070  0E0A  027F               	subwf	127,w
  7071  0E0B  1D03               	skipz
  7072  0E0C  2E0F               	goto	u4125
  7073  0E0D  30FF               	movlw	255
  7074  0E0E  025A               	subwf	___fldiv@new_exp,w
  7075  0E0F                     u4125:
  7076  0E0F  1C03               	skipc
  7077  0E10  2E1F               	goto	l3313
  7078  0E11  30FF               	movlw	255
  7079  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  7080  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  7081  0E14  00DA               	movwf	___fldiv@new_exp
  7082  0E15  3000               	movlw	0
  7083  0E16  00DB               	movwf	___fldiv@new_exp+1
  7084  0E17  3000               	movlw	0
  7085  0E18  00CF               	movwf	___fldiv@b+3
  7086  0E19  3000               	movlw	0
  7087  0E1A  00CE               	movwf	___fldiv@b+2
  7088  0E1B  3000               	movlw	0
  7089  0E1C  00CD               	movwf	___fldiv@b+1
  7090  0E1D  3000               	movlw	0
  7091  0E1E  00CC               	movwf	___fldiv@b
  7092  0E1F                     l3313:
  7093  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  7095  0E21  085B               	movf	___fldiv@new_exp+1,w
  7096  0E22  3A80               	xorlw	128
  7097  0E23  00FF               	movwf	127
  7098  0E24  3080               	movlw	128
  7099  0E25  027F               	subwf	127,w
  7100  0E26  1D03               	skipz
  7101  0E27  2E2A               	goto	u4135
  7102  0E28  3001               	movlw	1
  7103  0E29  025A               	subwf	___fldiv@new_exp,w
  7104  0E2A                     u4135:
  7105  0E2A  1803               	skipnc
  7106  0E2B  2E39               	goto	l3321
  7107  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  7108  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  7109  0E2E  01DA               	clrf	___fldiv@new_exp
  7110  0E2F  01DB               	clrf	___fldiv@new_exp+1
  7111  0E30  3000               	movlw	0
  7112  0E31  00CF               	movwf	___fldiv@b+3
  7113  0E32  3000               	movlw	0
  7114  0E33  00CE               	movwf	___fldiv@b+2
  7115  0E34  3000               	movlw	0
  7116  0E35  00CD               	movwf	___fldiv@b+1
  7117  0E36  3000               	movlw	0
  7118  0E37  00CC               	movwf	___fldiv@b
  7119  0E38  01D9               	clrf	___fldiv@sign
  7120  0E39                     l3321:
  7121  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  7122  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  7123  0E3B  085A               	movf	___fldiv@new_exp,w
  7124  0E3C  00FF               	movwf	127
  7125  0E3D  087F               	movf	127,w
  7126  0E3E  00E0               	movwf	___fldiv@bexp
  7127  0E3F  1C60               	btfss	___fldiv@bexp,0
  7128  0E40  2E43               	goto	l3327
  7129  0E41  17CE               	bsf	___fldiv@b+2,7
  7130  0E42  2E47               	goto	l989
  7131  0E43                     l3327:
  7132  0E43  307F               	movlw	127
  7133  0E44  00FF               	movwf	127
  7134  0E45  087F               	movf	127,w
  7135  0E46  05CE               	andwf	___fldiv@b+2,f
  7136  0E47                     l989:
  7137  0E47  0860               	movf	___fldiv@bexp,w
  7138  0E48  00D0               	movwf	??___fldiv
  7139  0E49  1003               	clrc
  7140  0E4A  0C50               	rrf	??___fldiv,w
  7141  0E4B  00FF               	movwf	127
  7142  0E4C  087F               	movf	127,w
  7143  0E4D  00CF               	movwf	___fldiv@b+3
  7144  0E4E  2D0C               	goto	L3
  7145  0E4F                     __end_of___fldiv:
  7146                           
  7147                           	psect	text26
  7148  13FB                     __ptext26:	
  7149 ;; *************** function ___awtoft *****************
  7150 ;; Defined at:
  7151 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\awtoft.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  c               2    8[BANK0 ] int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  sign            1    5[COMMON] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  3    8[BANK0 ] float 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 300/0
  7162 ;;		On exit  : 300/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7165 ;;      Params:         0       3       0       0       0
  7166 ;;      Locals:         1       0       0       0       0
  7167 ;;      Temps:          0       0       0       0       0
  7168 ;;      Totals:         1       3       0       0       0
  7169 ;;Total ram usage:        4 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:    3
  7172 ;; This function calls:
  7173 ;;		___ftpack
  7174 ;; This function is called by:
  7175 ;;		_PWM_1
  7176 ;;		_PWM_2
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           
  7181                           ;psect for function ___awtoft
  7182  13FB                     ___awtoft:
  7183                           
  7184                           ;incstack = 0
  7185                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7186  13FB  01F5               	clrf	___awtoft@sign
  7187  13FC  1FA9               	btfss	___awtoft@c+1,7
  7188  13FD  2C05               	goto	l4313
  7189  13FE  09A8               	comf	___awtoft@c,f
  7190  13FF  09A9               	comf	___awtoft@c+1,f
  7191  1400  0AA8               	incf	___awtoft@c,f
  7192  1401  1903               	skipnz
  7193  1402  0AA9               	incf	___awtoft@c+1,f
  7194  1403  01F5               	clrf	___awtoft@sign
  7195  1404  0AF5               	incf	___awtoft@sign,f
  7196  1405                     l4313:
  7197  1405  0828               	movf	___awtoft@c,w
  7198  1406  00A0               	movwf	___ftpack@arg
  7199  1407  0829               	movf	___awtoft@c+1,w
  7200  1408  00A1               	movwf	___ftpack@arg+1
  7201  1409  01A2               	clrf	___ftpack@arg+2
  7202  140A  308E               	movlw	142
  7203  140B  00FF               	movwf	127
  7204  140C  087F               	movf	127,w
  7205  140D  00A3               	movwf	___ftpack@exp
  7206  140E  0875               	movf	___awtoft@sign,w
  7207  140F  00FF               	movwf	127
  7208  1410  087F               	movf	127,w
  7209  1411  00A4               	movwf	___ftpack@sign
  7210  1412  160A  118A  25B9   	fcall	___ftpack
  7211  1415  0820               	movf	?___ftpack,w
  7212  1416  00A8               	movwf	?___awtoft
  7213  1417  0821               	movf	?___ftpack+1,w
  7214  1418  00A9               	movwf	?___awtoft+1
  7215  1419  0822               	movf	?___ftpack+2,w
  7216  141A  00AA               	movwf	?___awtoft+2
  7217  141B  0008               	return
  7218  141C                     __end_of___awtoft:
  7219                           
  7220                           	psect	text27
  7221  15B9                     __ptext27:	
  7222 ;; *************** function ___ftpack *****************
  7223 ;; Defined at:
  7224 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\pic\sources\c90\common\float.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  arg             3    0[BANK0 ] unsigned um
  7227 ;;  exp             1    3[BANK0 ] unsigned char 
  7228 ;;  sign            1    4[BANK0 ] unsigned char 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  3    0[BANK0 ] float 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0, btemp+1
  7235 ;; Tracked objects:
  7236 ;;		On entry : 300/0
  7237 ;;		On exit  : 300/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7240 ;;      Params:         0       5       0       0       0
  7241 ;;      Locals:         0       0       0       0       0
  7242 ;;      Temps:          0       3       0       0       0
  7243 ;;      Totals:         0       8       0       0       0
  7244 ;;Total ram usage:        8 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    2
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		___awtoft
  7251 ;;		___ftmul
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function ___ftpack
  7257  15B9                     ___ftpack:
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  7261  15B9  0823               	movf	___ftpack@exp,w
  7262  15BA  1903               	btfsc	3,2
  7263  15BB  2DC1               	goto	l4197
  7264  15BC  0822               	movf	___ftpack@arg+2,w
  7265  15BD  0421               	iorwf	___ftpack@arg+1,w
  7266  15BE  0420               	iorwf	___ftpack@arg,w
  7267  15BF  1D03               	skipz
  7268  15C0  2DD4               	goto	l4205
  7269  15C1                     l4197:
  7270  15C1  3000               	movlw	0
  7271  15C2  00A0               	movwf	?___ftpack
  7272  15C3  3000               	movlw	0
  7273  15C4  00A1               	movwf	?___ftpack+1
  7274  15C5  3000               	movlw	0
  7275  15C6  00A2               	movwf	?___ftpack+2
  7276  15C7  0008               	return
  7277  15C8                     l4201:
  7278  15C8  3001               	movlw	1
  7279  15C9  00FF               	movwf	127
  7280  15CA  087F               	movf	127,w
  7281  15CB  07A3               	addwf	___ftpack@exp,f
  7282  15CC  3001               	movlw	1
  7283  15CD                     u5415:
  7284  15CD  1003               	clrc
  7285  15CE  0CA2               	rrf	___ftpack@arg+2,f
  7286  15CF  0CA1               	rrf	___ftpack@arg+1,f
  7287  15D0  0CA0               	rrf	___ftpack@arg,f
  7288  15D1  3EFF               	addlw	-1
  7289  15D2  1D03               	skipz
  7290  15D3  2DCD               	goto	u5415
  7291  15D4                     l4205:
  7292  15D4  30FE               	movlw	254
  7293  15D5  0522               	andwf	___ftpack@arg+2,w
  7294  15D6  1903               	btfsc	3,2
  7295  15D7  2DEF               	goto	l4213
  7296  15D8  2DC8               	goto	l4201
  7297  15D9                     l4207:
  7298  15D9  3001               	movlw	1
  7299  15DA  00FF               	movwf	127
  7300  15DB  087F               	movf	127,w
  7301  15DC  07A3               	addwf	___ftpack@exp,f
  7302  15DD  3001               	movlw	1
  7303  15DE  07A0               	addwf	___ftpack@arg,f
  7304  15DF  3000               	movlw	0
  7305  15E0  1803               	skipnc
  7306  15E1  3001               	movlw	1
  7307  15E2  07A1               	addwf	___ftpack@arg+1,f
  7308  15E3  3000               	movlw	0
  7309  15E4  1803               	skipnc
  7310  15E5  3001               	movlw	1
  7311  15E6  07A2               	addwf	___ftpack@arg+2,f
  7312  15E7  3001               	movlw	1
  7313  15E8                     u5435:
  7314  15E8  1003               	clrc
  7315  15E9  0CA2               	rrf	___ftpack@arg+2,f
  7316  15EA  0CA1               	rrf	___ftpack@arg+1,f
  7317  15EB  0CA0               	rrf	___ftpack@arg,f
  7318  15EC  3EFF               	addlw	-1
  7319  15ED  1D03               	skipz
  7320  15EE  2DE8               	goto	u5435
  7321  15EF                     l4213:
  7322  15EF  30FF               	movlw	255
  7323  15F0  0522               	andwf	___ftpack@arg+2,w
  7324  15F1  1903               	btfsc	3,2
  7325  15F2  2E02               	goto	l4217
  7326  15F3  2DD9               	goto	l4207
  7327  15F4                     l4219:
  7328  15F4  3002               	movlw	2
  7329  15F5  0223               	subwf	___ftpack@exp,w
  7330  15F6  1C03               	btfss	3,0
  7331  15F7  2E04               	goto	l680
  7332  15F8  3001               	movlw	1
  7333  15F9  02A3               	subwf	___ftpack@exp,f
  7334  15FA  3001               	movlw	1
  7335  15FB                     u5455:
  7336  15FB  1003               	clrc
  7337  15FC  0DA0               	rlf	___ftpack@arg,f
  7338  15FD  0DA1               	rlf	___ftpack@arg+1,f
  7339  15FE  0DA2               	rlf	___ftpack@arg+2,f
  7340  15FF  3EFF               	addlw	-1
  7341  1600  1D03               	skipz
  7342  1601  2DFB               	goto	u5455
  7343  1602                     l4217:
  7344  1602  1FA1               	btfss	___ftpack@arg+1,7
  7345  1603  2DF4               	goto	l4219
  7346  1604                     l680:
  7347  1604  1823               	btfsc	___ftpack@exp,0
  7348  1605  2E0C               	goto	l681
  7349  1606  30FF               	movlw	255
  7350  1607  05A0               	andwf	___ftpack@arg,f
  7351  1608  307F               	movlw	127
  7352  1609  05A1               	andwf	___ftpack@arg+1,f
  7353  160A  30FF               	movlw	255
  7354  160B  05A2               	andwf	___ftpack@arg+2,f
  7355  160C                     l681:
  7356  160C  1003               	clrc
  7357  160D  0CA3               	rrf	___ftpack@exp,f
  7358  160E  0823               	movf	___ftpack@exp,w
  7359  160F  00A5               	movwf	??___ftpack
  7360  1610  01A6               	clrf	??___ftpack+1
  7361  1611  01A7               	clrf	??___ftpack+2
  7362  1612  3010               	movlw	16
  7363  1613                     u5495:
  7364  1613  1003               	clrc
  7365  1614  0DA5               	rlf	??___ftpack,f
  7366  1615  0DA6               	rlf	??___ftpack+1,f
  7367  1616  0DA7               	rlf	??___ftpack+2,f
  7368  1617  3EFF               	addlw	-1
  7369  1618  1D03               	skipz
  7370  1619  2E13               	goto	u5495
  7371  161A  0825               	movf	??___ftpack,w
  7372  161B  04A0               	iorwf	___ftpack@arg,f
  7373  161C  0826               	movf	??___ftpack+1,w
  7374  161D  04A1               	iorwf	___ftpack@arg+1,f
  7375  161E  0827               	movf	??___ftpack+2,w
  7376  161F  04A2               	iorwf	___ftpack@arg+2,f
  7377  1620  0824               	movf	___ftpack@sign,w
  7378  1621  1903               	btfsc	3,2
  7379  1622  0008               	return
  7380  1623  17A2               	bsf	___ftpack@arg+2,7
  7381  1624  0008               	return
  7382  1625                     __end_of___ftpack:
  7383                           
  7384                           	psect	text28
  7385  1482                     __ptext28:	
  7386 ;; *************** function _LCD_xy *****************
  7387 ;; Defined at:
  7388 ;;		line 121 in file "LCD_control.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  x               2    2[BANK0 ] int 
  7391 ;;  y               2    4[BANK0 ] int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 300/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7403 ;;      Params:         0       4       0       0       0
  7404 ;;      Locals:         0       0       0       0       0
  7405 ;;      Temps:          0       0       0       0       0
  7406 ;;      Totals:         0       4       0       0       0
  7407 ;;Total ram usage:        4 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    4
  7410 ;; This function calls:
  7411 ;;		_LCD_command
  7412 ;; This function is called by:
  7413 ;;		_main
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _LCD_xy
  7419  1482                     _LCD_xy:
  7420                           
  7421                           ;LCD_control.c: 121: void LCD_xy(int x,int y);LCD_control.c: 122: {;LCD_control.c: 123: 
      +                              switch(x)
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _LCD_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7425  1482  2C9F               	goto	l4983
  7426  1483                     l4973:
  7427  1483  0824               	movf	LCD_xy@y,w
  7428  1484  3EFF               	addlw	255
  7429  1485  3880               	iorlw	128
  7430  1486  160A  118A  24E5   	fcall	_LCD_command
  7431                           
  7432                           ;LCD_control.c: 126:         break;
  7433  1489  0008               	return
  7434  148A                     l4975:
  7435  148A  0824               	movf	LCD_xy@y,w
  7436  148B  3E3F               	addlw	63
  7437  148C  3880               	iorlw	128
  7438  148D  160A  118A  24E5   	fcall	_LCD_command
  7439                           
  7440                           ;LCD_control.c: 128:         break;
  7441  1490  0008               	return
  7442  1491                     l4977:
  7443  1491  0824               	movf	LCD_xy@y,w
  7444  1492  3E13               	addlw	19
  7445  1493  3880               	iorlw	128
  7446  1494  160A  118A  24E5   	fcall	_LCD_command
  7447                           
  7448                           ;LCD_control.c: 130:         break;
  7449  1497  0008               	return
  7450  1498                     l4979:
  7451  1498  0824               	movf	LCD_xy@y,w
  7452  1499  3E53               	addlw	83
  7453  149A  3880               	iorlw	128
  7454  149B  160A  118A  24E5   	fcall	_LCD_command
  7455                           
  7456                           ;LCD_control.c: 132:         break;
  7457  149E  0008               	return
  7458  149F                     l4983:
  7459                           
  7460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7461                           ; Switch size 1, requested type "simple"
  7462                           ; Number of cases is 1, Range of values is 0 to 0
  7463                           ; switch strategies available:
  7464                           ; Name         Instructions Cycles
  7465                           ; simple_byte            4     3 (average)
  7466                           ; direct_byte           11     8 (fixed)
  7467                           ; jumptable            260     6 (fixed)
  7468                           ;	Chosen strategy is simple_byte
  7469  149F  0823               	movf	LCD_xy@x+1,w
  7470  14A0  3A00               	xorlw	0	; case 0
  7471  14A1  1903               	skipnz
  7472  14A2  2CA4               	goto	l5397
  7473  14A3  2CB2               	goto	l200
  7474  14A4                     l5397:
  7475                           
  7476                           ; Switch size 1, requested type "simple"
  7477                           ; Number of cases is 4, Range of values is 1 to 4
  7478                           ; switch strategies available:
  7479                           ; Name         Instructions Cycles
  7480                           ; simple_byte           13     7 (average)
  7481                           ; direct_byte           23    11 (fixed)
  7482                           ; jumptable            263     9 (fixed)
  7483                           ;	Chosen strategy is simple_byte
  7484  14A4  0822               	movf	LCD_xy@x,w
  7485  14A5  3A01               	xorlw	1	; case 1
  7486  14A6  1903               	skipnz
  7487  14A7  2C83               	goto	l4973
  7488  14A8  3A03               	xorlw	3	; case 2
  7489  14A9  1903               	skipnz
  7490  14AA  2C8A               	goto	l4975
  7491  14AB  3A01               	xorlw	1	; case 3
  7492  14AC  1903               	skipnz
  7493  14AD  2C91               	goto	l4977
  7494  14AE  3A07               	xorlw	7	; case 4
  7495  14AF  1903               	skipnz
  7496  14B0  2C98               	goto	l4979
  7497  14B1  2CB2               	goto	l200
  7498  14B2                     l200:
  7499  14B2  0008               	return
  7500  14B3                     __end_of_LCD_xy:
  7501                           
  7502                           	psect	text29
  7503  083C                     __ptext29:	
  7504 ;; *************** function _LCD_init *****************
  7505 ;; Defined at:
  7506 ;;		line 6 in file "LCD_control.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  i               1    4[BANK0 ] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : B00/100
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7520 ;;      Params:         0       0       0       0       0
  7521 ;;      Locals:         0       1       0       0       0
  7522 ;;      Temps:          0       2       0       0       0
  7523 ;;      Totals:         0       3       0       0       0
  7524 ;;Total ram usage:        3 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    4
  7527 ;; This function calls:
  7528 ;;		_LCD_command
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _LCD_init
  7536  083C                     _LCD_init:
  7537                           
  7538                           ;LCD_control.c: 9:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7539                           
  7540                           ;incstack = 0
  7541                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7542  083C  301A               	movlw	26
  7543  083D  1283               	bcf	3,5	;RP0=0, select bank0
  7544  083E  1303               	bcf	3,6	;RP1=0, select bank0
  7545  083F  00A3               	movwf	??_LCD_init+1
  7546  0840  30F7               	movlw	247
  7547  0841  00A2               	movwf	??_LCD_init
  7548  0842                     u7427:
  7549  0842  0BA2               	decfsz	??_LCD_init,f
  7550  0843  2842               	goto	u7427
  7551  0844  0BA3               	decfsz	??_LCD_init+1,f
  7552  0845  2842               	goto	u7427
  7553  0846  2847               	nop2
  7554                           
  7555                           ;LCD_control.c: 11:     for(char i=0;i<3;i++)
  7556  0847  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0848  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0849  01A4               	clrf	LCD_init@i
  7559  084A                     l4865:
  7560                           
  7561                           ;LCD_control.c: 12:     {;LCD_control.c: 13:         LCD_command(0x03);
  7562  084A  3003               	movlw	3
  7563  084B  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7564                           
  7565                           ;LCD_control.c: 14:         _delay((unsigned long)((5)*(4000000/4000.0)));
  7566  0850  3007               	movlw	7
  7567  0851  1283               	bcf	3,5	;RP0=0, select bank0
  7568  0852  1303               	bcf	3,6	;RP1=0, select bank0
  7569  0853  00A3               	movwf	??_LCD_init+1
  7570  0854  307C               	movlw	124
  7571  0855  00A2               	movwf	??_LCD_init
  7572  0856                     u7437:
  7573  0856  0BA2               	decfsz	??_LCD_init,f
  7574  0857  2856               	goto	u7437
  7575  0858  0BA3               	decfsz	??_LCD_init+1,f
  7576  0859  2856               	goto	u7437
  7577  085A  0000               	nop
  7578                           
  7579                           ;LCD_control.c: 15:     }
  7580  085B  3001               	movlw	1
  7581  085C  00FF               	movwf	127
  7582  085D  087F               	movf	127,w
  7583  085E  1283               	bcf	3,5	;RP0=0, select bank0
  7584  085F  1303               	bcf	3,6	;RP1=0, select bank0
  7585  0860  07A4               	addwf	LCD_init@i,f
  7586  0861  3003               	movlw	3
  7587  0862  0224               	subwf	LCD_init@i,w
  7588  0863  1C03               	skipc
  7589  0864  284A               	goto	l4865
  7590                           
  7591                           ;LCD_control.c: 18:  LCD_command(0x33);
  7592  0865  3033               	movlw	51
  7593  0866  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7594                           
  7595                           ;LCD_control.c: 19:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7596  086B  3020               	movlw	32
  7597  086C  1283               	bcf	3,5	;RP0=0, select bank0
  7598  086D  1303               	bcf	3,6	;RP1=0, select bank0
  7599  086E  00A2               	movwf	??_LCD_init
  7600  086F                     u7447:
  7601  086F  0BA2               	decfsz	??_LCD_init,f
  7602  0870  286F               	goto	u7447
  7603  0871  0000               	nop
  7604                           
  7605                           ;LCD_control.c: 20:     LCD_command(0x32);
  7606  0872  3032               	movlw	50
  7607  0873  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7608                           
  7609                           ;LCD_control.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7610  0878  3007               	movlw	7
  7611  0879  1283               	bcf	3,5	;RP0=0, select bank0
  7612  087A  1303               	bcf	3,6	;RP1=0, select bank0
  7613  087B  00A3               	movwf	??_LCD_init+1
  7614  087C  307C               	movlw	124
  7615  087D  00A2               	movwf	??_LCD_init
  7616  087E                     u7457:
  7617  087E  0BA2               	decfsz	??_LCD_init,f
  7618  087F  287E               	goto	u7457
  7619  0880  0BA3               	decfsz	??_LCD_init+1,f
  7620  0881  287E               	goto	u7457
  7621  0882  0000               	nop
  7622                           
  7623                           ;LCD_control.c: 22:  LCD_command(0x28);
  7624  0883  3028               	movlw	40
  7625  0884  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7626                           
  7627                           ;LCD_control.c: 23:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7628  0889  3020               	movlw	32
  7629  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7630  088B  1303               	bcf	3,6	;RP1=0, select bank0
  7631  088C  00A2               	movwf	??_LCD_init
  7632  088D                     u7467:
  7633  088D  0BA2               	decfsz	??_LCD_init,f
  7634  088E  288D               	goto	u7467
  7635  088F  0000               	nop
  7636                           
  7637                           ;LCD_control.c: 24:  LCD_command(0x0C);
  7638  0890  300C               	movlw	12
  7639  0891  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7640                           
  7641                           ;LCD_control.c: 25:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7642  0896  3020               	movlw	32
  7643  0897  1283               	bcf	3,5	;RP0=0, select bank0
  7644  0898  1303               	bcf	3,6	;RP1=0, select bank0
  7645  0899  00A2               	movwf	??_LCD_init
  7646  089A                     u7477:
  7647  089A  0BA2               	decfsz	??_LCD_init,f
  7648  089B  289A               	goto	u7477
  7649  089C  0000               	nop
  7650                           
  7651                           ;LCD_control.c: 26:  LCD_command(0x06);
  7652  089D  3006               	movlw	6
  7653  089E  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7654                           
  7655                           ;LCD_control.c: 27:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7656  08A3  3020               	movlw	32
  7657  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  7658  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  7659  08A6  00A2               	movwf	??_LCD_init
  7660  08A7                     u7487:
  7661  08A7  0BA2               	decfsz	??_LCD_init,f
  7662  08A8  28A7               	goto	u7487
  7663  08A9  0000               	nop
  7664                           
  7665                           ;LCD_control.c: 28:     LCD_command(0x01);
  7666  08AA  3001               	movlw	1
  7667  08AB  160A  118A  24E5  120A  158A  	fcall	_LCD_command
  7668                           
  7669                           ;LCD_control.c: 29:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7670  08B0  3004               	movlw	4
  7671  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  7672  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  7673  08B3  00A3               	movwf	??_LCD_init+1
  7674  08B4  30E3               	movlw	227
  7675  08B5  00A2               	movwf	??_LCD_init
  7676  08B6                     u7497:
  7677  08B6  0BA2               	decfsz	??_LCD_init,f
  7678  08B7  28B6               	goto	u7497
  7679  08B8  0BA3               	decfsz	??_LCD_init+1,f
  7680  08B9  28B6               	goto	u7497
  7681  08BA  28BB               	nop2
  7682  08BB  0008               	return
  7683  08BC                     __end_of_LCD_init:
  7684                           
  7685                           	psect	text30
  7686  1555                     __ptext30:	
  7687 ;; *************** function _LCD_array *****************
  7688 ;; Defined at:
  7689 ;;		line 94 in file "LCD_control.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  x               2    2[BANK0 ] int 
  7692 ;;  y               2    4[BANK0 ] int 
  7693 ;;  date            2    6[BANK0 ] PTR const unsigned char 
  7694 ;;		 -> main@buffer(5), STR_7(4), STR_6(4), STR_5(4), 
  7695 ;;		 -> STR_4(3), STR_3(5), STR_2(5), STR_1(7), 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 300/0
  7704 ;;		On exit  : 300/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7707 ;;      Params:         0       6       0       0       0
  7708 ;;      Locals:         0       0       0       0       0
  7709 ;;      Temps:          0       1       0       0       0
  7710 ;;      Totals:         0       7       0       0       0
  7711 ;;Total ram usage:        7 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    4
  7714 ;; This function calls:
  7715 ;;		_LCD_command
  7716 ;;		_LCD_date
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _LCD_array
  7724  1555                     _LCD_array:
  7725                           
  7726                           ;LCD_control.c: 94: void LCD_array(int x,int y,const char *date);LCD_control.c: 95: {;LC
      +                          D_control.c: 97:     switch(x)
  7727                           
  7728                           ;incstack = 0
  7729                           ; Regs used in _LCD_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7730  1555  2D7A               	goto	l4951
  7731  1556                     l4941:
  7732  1556  0824               	movf	LCD_array@y,w
  7733  1557  3EFF               	addlw	255
  7734  1558  3880               	iorlw	128
  7735  1559  160A  118A  24E5  160A  118A  	fcall	_LCD_command
  7736                           
  7737                           ;LCD_control.c: 100:         break;
  7738  155E  2DAA               	goto	l4959
  7739  155F                     l4943:
  7740  155F  0824               	movf	LCD_array@y,w
  7741  1560  3E3F               	addlw	63
  7742  1561  3880               	iorlw	128
  7743  1562  160A  118A  24E5  160A  118A  	fcall	_LCD_command
  7744                           
  7745                           ;LCD_control.c: 102:         break;
  7746  1567  2DAA               	goto	l4959
  7747  1568                     l4945:
  7748  1568  0824               	movf	LCD_array@y,w
  7749  1569  3E13               	addlw	19
  7750  156A  3880               	iorlw	128
  7751  156B  160A  118A  24E5  160A  118A  	fcall	_LCD_command
  7752                           
  7753                           ;LCD_control.c: 104:         break;
  7754  1570  2DAA               	goto	l4959
  7755  1571                     l4947:
  7756  1571  0824               	movf	LCD_array@y,w
  7757  1572  3E53               	addlw	83
  7758  1573  3880               	iorlw	128
  7759  1574  160A  118A  24E5  160A  118A  	fcall	_LCD_command
  7760                           
  7761                           ;LCD_control.c: 106:         break;
  7762  1579  2DAA               	goto	l4959
  7763  157A                     l4951:
  7764                           
  7765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7766                           ; Switch size 1, requested type "simple"
  7767                           ; Number of cases is 1, Range of values is 0 to 0
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte            4     3 (average)
  7771                           ; direct_byte           11     8 (fixed)
  7772                           ; jumptable            260     6 (fixed)
  7773                           ;	Chosen strategy is simple_byte
  7774  157A  0823               	movf	LCD_array@x+1,w
  7775  157B  3A00               	xorlw	0	; case 0
  7776  157C  1903               	skipnz
  7777  157D  2D7F               	goto	l5399
  7778  157E  2DAA               	goto	l4959
  7779  157F                     l5399:
  7780                           
  7781                           ; Switch size 1, requested type "simple"
  7782                           ; Number of cases is 4, Range of values is 1 to 4
  7783                           ; switch strategies available:
  7784                           ; Name         Instructions Cycles
  7785                           ; simple_byte           13     7 (average)
  7786                           ; direct_byte           23    11 (fixed)
  7787                           ; jumptable            263     9 (fixed)
  7788                           ;	Chosen strategy is simple_byte
  7789  157F  0822               	movf	LCD_array@x,w
  7790  1580  3A01               	xorlw	1	; case 1
  7791  1581  1903               	skipnz
  7792  1582  2D56               	goto	l4941
  7793  1583  3A03               	xorlw	3	; case 2
  7794  1584  1903               	skipnz
  7795  1585  2D5F               	goto	l4943
  7796  1586  3A01               	xorlw	1	; case 3
  7797  1587  1903               	skipnz
  7798  1588  2D68               	goto	l4945
  7799  1589  3A07               	xorlw	7	; case 4
  7800  158A  1903               	skipnz
  7801  158B  2D71               	goto	l4947
  7802  158C  2DAA               	goto	l4959
  7803  158D                     l4953:
  7804                           
  7805                           ;LCD_control.c: 111:     {;LCD_control.c: 112:         LCD_date(*date);
  7806  158D  0827               	movf	LCD_array@date+1,w
  7807  158E  00FF               	movwf	127
  7808  158F  0826               	movf	LCD_array@date,w
  7809  1590  0084               	movwf	4
  7810  1591  160A  118A  2000  160A  118A  	fcall	stringtab
  7811  1596  160A  118A  251C  160A  118A  	fcall	_LCD_date
  7812                           
  7813                           ;LCD_control.c: 113:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  7814  159B  3020               	movlw	32
  7815  159C  1283               	bcf	3,5	;RP0=0, select bank0
  7816  159D  1303               	bcf	3,6	;RP1=0, select bank0
  7817  159E  00A8               	movwf	??_LCD_array
  7818  159F                     u7507:
  7819  159F  0BA8               	decfsz	??_LCD_array,f
  7820  15A0  2D9F               	goto	u7507
  7821  15A1  0000               	nop
  7822                           
  7823                           ;LCD_control.c: 114:         date++;
  7824  15A2  3001               	movlw	1
  7825  15A3  1283               	bcf	3,5	;RP0=0, select bank0
  7826  15A4  1303               	bcf	3,6	;RP1=0, select bank0
  7827  15A5  07A6               	addwf	LCD_array@date,f
  7828  15A6  1803               	skipnc
  7829  15A7  0AA7               	incf	LCD_array@date+1,f
  7830  15A8  3000               	movlw	0
  7831  15A9  07A7               	addwf	LCD_array@date+1,f
  7832  15AA                     l4959:
  7833                           
  7834                           ;LCD_control.c: 110:     while(*date)
  7835  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  7836  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  7837  15AC  0827               	movf	LCD_array@date+1,w
  7838  15AD  00FF               	movwf	127
  7839  15AE  0826               	movf	LCD_array@date,w
  7840  15AF  0084               	movwf	4
  7841  15B0  160A  118A  2000  160A  118A  	fcall	stringtab
  7842  15B5  3A00               	xorlw	0
  7843  15B6  1903               	btfsc	3,2
  7844  15B7  0008               	return
  7845  15B8  2D8D               	goto	l4953
  7846  15B9                     __end_of_LCD_array:
  7847                           
  7848                           	psect	text31
  7849  151C                     __ptext31:	
  7850 ;; *************** function _LCD_date *****************
  7851 ;; Defined at:
  7852 ;;		line 59 in file "LCD_control.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  date            1    wreg     unsigned char 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  date            1    5[COMMON] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/100
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7866 ;;      Params:         0       0       0       0       0
  7867 ;;      Locals:         1       0       0       0       0
  7868 ;;      Temps:          0       2       0       0       0
  7869 ;;      Totals:         1       2       0       0       0
  7870 ;;Total ram usage:        3 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    3
  7873 ;; This function calls:
  7874 ;;		_LCD_E
  7875 ;; This function is called by:
  7876 ;;		_main
  7877 ;;		_LCD_array
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function _LCD_date
  7883  151C                     _LCD_date:
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in _LCD_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7887                           ;LCD_date@date stored from wreg
  7888  151C  00F5               	movwf	LCD_date@date
  7889                           
  7890                           ;LCD_control.c: 59: void LCD_date(char date);LCD_control.c: 60: {;LCD_control.c: 62:    
      +                           TRISD &= 0x00;
  7891  151D  1683               	bsf	3,5	;RP0=1, select bank1
  7892  151E  1303               	bcf	3,6	;RP1=0, select bank1
  7893  151F  0188               	clrf	8	;volatile
  7894                           
  7895                           ;LCD_control.c: 65:     PORTD &= 0x00;
  7896  1520  1283               	bcf	3,5	;RP0=0, select bank0
  7897  1521  0188               	clrf	8	;volatile
  7898                           
  7899                           ;LCD_control.c: 66:     PORTD |= (date & 0xF0);
  7900  1522  0875               	movf	LCD_date@date,w
  7901  1523  39F0               	andlw	240
  7902  1524  00FF               	movwf	127
  7903  1525  087F               	movf	127,w
  7904  1526  0488               	iorwf	8,f	;volatile
  7905                           
  7906                           ;LCD_control.c: 67:     PORTDbits.RD1 = 1;
  7907  1527  1488               	bsf	8,1	;volatile
  7908                           
  7909                           ;LCD_control.c: 68:     LCD_E();
  7910  1528  160A  118A  23B0  160A  118A  	fcall	_LCD_E
  7911                           
  7912                           ;LCD_control.c: 69:     PORTD &= 0x00;
  7913  152D  1283               	bcf	3,5	;RP0=0, select bank0
  7914  152E  1303               	bcf	3,6	;RP1=0, select bank0
  7915  152F  0188               	clrf	8	;volatile
  7916                           
  7917                           ;LCD_control.c: 70:     PORTD |= (date<<4 & 0xF0);
  7918  1530  0875               	movf	LCD_date@date,w
  7919  1531  00A0               	movwf	??_LCD_date
  7920  1532  3003               	movlw	3
  7921  1533                     u5555:
  7922  1533  1003               	clrc
  7923  1534  0DA0               	rlf	??_LCD_date,f
  7924  1535  3EFF               	addlw	-1
  7925  1536  1D03               	skipz
  7926  1537  2D33               	goto	u5555
  7927  1538  1003               	clrc
  7928  1539  0D20               	rlf	??_LCD_date,w
  7929  153A  39F0               	andlw	240
  7930  153B  00FF               	movwf	127
  7931  153C  087F               	movf	127,w
  7932  153D  0488               	iorwf	8,f	;volatile
  7933                           
  7934                           ;LCD_control.c: 71:     PORTDbits.RD1 = 1;
  7935  153E  1488               	bsf	8,1	;volatile
  7936                           
  7937                           ;LCD_control.c: 72:     LCD_E();
  7938  153F  160A  118A  23B0  160A  118A  	fcall	_LCD_E
  7939                           
  7940                           ;LCD_control.c: 74:     TRISD &= 0xF0;
  7941  1544  30F0               	movlw	240
  7942  1545  00FF               	movwf	127
  7943  1546  087F               	movf	127,w
  7944  1547  1683               	bsf	3,5	;RP0=1, select bank1
  7945  1548  1303               	bcf	3,6	;RP1=0, select bank1
  7946  1549  0588               	andwf	8,f	;volatile
  7947                           
  7948                           ;LCD_control.c: 76:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7949  154A  3003               	movlw	3
  7950  154B  1283               	bcf	3,5	;RP0=0, select bank0
  7951  154C  1303               	bcf	3,6	;RP1=0, select bank0
  7952  154D  00A1               	movwf	??_LCD_date+1
  7953  154E  3097               	movlw	151
  7954  154F  00A0               	movwf	??_LCD_date
  7955  1550                     u7517:
  7956  1550  0BA0               	decfsz	??_LCD_date,f
  7957  1551  2D50               	goto	u7517
  7958  1552  0BA1               	decfsz	??_LCD_date+1,f
  7959  1553  2D50               	goto	u7517
  7960  1554  0008               	return
  7961  1555                     __end_of_LCD_date:
  7962                           
  7963                           	psect	text32
  7964  14E5                     __ptext32:	
  7965 ;; *************** function _LCD_command *****************
  7966 ;; Defined at:
  7967 ;;		line 37 in file "LCD_control.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  cmd             1    wreg     unsigned char 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  cmd             1    5[COMMON] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7981 ;;      Params:         0       0       0       0       0
  7982 ;;      Locals:         1       0       0       0       0
  7983 ;;      Temps:          0       2       0       0       0
  7984 ;;      Totals:         1       2       0       0       0
  7985 ;;Total ram usage:        3 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		_LCD_E
  7990 ;; This function is called by:
  7991 ;;		_main
  7992 ;;		_LCD_init
  7993 ;;		_LCD_array
  7994 ;;		_LCD_xy
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _LCD_command
  8000  14E5                     _LCD_command:
  8001                           
  8002                           ;incstack = 0
  8003                           ; Regs used in _LCD_command: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8004                           ;LCD_command@cmd stored from wreg
  8005  14E5  00F5               	movwf	LCD_command@cmd
  8006                           
  8007                           ;LCD_control.c: 37: void LCD_command(unsigned char cmd);LCD_control.c: 38: {;LCD_control
      +                          .c: 40:     TRISD &= 0x00;
  8008  14E6  1683               	bsf	3,5	;RP0=1, select bank1
  8009  14E7  1303               	bcf	3,6	;RP1=0, select bank1
  8010  14E8  0188               	clrf	8	;volatile
  8011                           
  8012                           ;LCD_control.c: 43:     PORTD &= 0x00;
  8013  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  8014  14EA  0188               	clrf	8	;volatile
  8015                           
  8016                           ;LCD_control.c: 44:     PORTD |= (cmd & 0xF0);
  8017  14EB  0875               	movf	LCD_command@cmd,w
  8018  14EC  39F0               	andlw	240
  8019  14ED  00FF               	movwf	127
  8020  14EE  087F               	movf	127,w
  8021  14EF  0488               	iorwf	8,f	;volatile
  8022                           
  8023                           ;LCD_control.c: 45:     LCD_E();
  8024  14F0  160A  118A  23B0  160A  118A  	fcall	_LCD_E
  8025                           
  8026                           ;LCD_control.c: 46:     PORTD &= 0x00;
  8027  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  8028  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  8029  14F7  0188               	clrf	8	;volatile
  8030                           
  8031                           ;LCD_control.c: 47:     PORTD |= (cmd<<4 & 0xF0);
  8032  14F8  0875               	movf	LCD_command@cmd,w
  8033  14F9  00A0               	movwf	??_LCD_command
  8034  14FA  3003               	movlw	3
  8035  14FB                     u5545:
  8036  14FB  1003               	clrc
  8037  14FC  0DA0               	rlf	??_LCD_command,f
  8038  14FD  3EFF               	addlw	-1
  8039  14FE  1D03               	skipz
  8040  14FF  2CFB               	goto	u5545
  8041  1500  1003               	clrc
  8042  1501  0D20               	rlf	??_LCD_command,w
  8043  1502  39F0               	andlw	240
  8044  1503  00FF               	movwf	127
  8045  1504  087F               	movf	127,w
  8046  1505  0488               	iorwf	8,f	;volatile
  8047                           
  8048                           ;LCD_control.c: 48:     LCD_E();
  8049  1506  160A  118A  23B0  160A  118A  	fcall	_LCD_E
  8050                           
  8051                           ;LCD_control.c: 50:     TRISD &= 0xF0;
  8052  150B  30F0               	movlw	240
  8053  150C  00FF               	movwf	127
  8054  150D  087F               	movf	127,w
  8055  150E  1683               	bsf	3,5	;RP0=1, select bank1
  8056  150F  1303               	bcf	3,6	;RP1=0, select bank1
  8057  1510  0588               	andwf	8,f	;volatile
  8058                           
  8059                           ;LCD_control.c: 52:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8060  1511  3003               	movlw	3
  8061  1512  1283               	bcf	3,5	;RP0=0, select bank0
  8062  1513  1303               	bcf	3,6	;RP1=0, select bank0
  8063  1514  00A1               	movwf	??_LCD_command+1
  8064  1515  3097               	movlw	151
  8065  1516  00A0               	movwf	??_LCD_command
  8066  1517                     u7527:
  8067  1517  0BA0               	decfsz	??_LCD_command,f
  8068  1518  2D17               	goto	u7527
  8069  1519  0BA1               	decfsz	??_LCD_command+1,f
  8070  151A  2D17               	goto	u7527
  8071  151B  0008               	return
  8072  151C                     __end_of_LCD_command:
  8073                           
  8074                           	psect	text33
  8075  13B0                     __ptext33:	
  8076 ;; *************** function _LCD_E *****************
  8077 ;; Defined at:
  8078 ;;		line 83 in file "LCD_control.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		None
  8087 ;; Tracked objects:
  8088 ;;		On entry : 300/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8092 ;;      Params:         0       0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0
  8095 ;;      Totals:         0       0       0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    2
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_LCD_command
  8103 ;;		_LCD_date
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function _LCD_E
  8109  13B0                     _LCD_E:
  8110                           
  8111                           ;LCD_control.c: 85:     PORTDbits.RD3 = 1;
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _LCD_E: []
  8115  13B0  1588               	bsf	8,3	;volatile
  8116                           
  8117                           ;LCD_control.c: 86:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8118  13B1  2BB2               	nop2	;2 cycle nop
  8119  13B2  2BB3               	nop2	;2 cycle nop
  8120  13B3  0000               	nop
  8121                           
  8122                           ;LCD_control.c: 87:     PORTDbits.RD3 = 0;
  8123  13B4  1283               	bcf	3,5	;RP0=0, select bank0
  8124  13B5  1303               	bcf	3,6	;RP1=0, select bank0
  8125  13B6  1188               	bcf	8,3	;volatile
  8126                           
  8127                           ;LCD_control.c: 88:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8128  13B7  2BB8               	nop2	;2 cycle nop
  8129  13B8  2BB9               	nop2	;2 cycle nop
  8130  13B9  0000               	nop
  8131  13BA  0008               	return
  8132  13BB                     __end_of_LCD_E:
  8133                           
  8134                           	psect	text34
  8135  08BC                     __ptext34:	
  8136 ;; *************** function _ventana *****************
  8137 ;; Defined at:
  8138 ;;		line 178 in file "Main.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  tecla           1    4[COMMON] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 300/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8152 ;;      Params:         0       0       0       0       0
  8153 ;;      Locals:         1       0       0       0       0
  8154 ;;      Temps:          3       0       0       0       0
  8155 ;;      Totals:         4       0       0       0       0
  8156 ;;Total ram usage:        4 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    1
  8159 ;; This function calls:
  8160 ;;		_UART_read
  8161 ;;		i1_UART_write
  8162 ;; This function is called by:
  8163 ;;		Interrupt level 1
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _ventana
  8169  08BC                     _ventana:
  8170                           
  8171                           ;Main.c: 180:     if(INTCONbits.INTF == 1)
  8172  08BC  1C8B               	btfss	11,1	;volatile
  8173  08BD  28D5               	goto	i1l4057
  8174                           
  8175                           ;Main.c: 181:     {;Main.c: 183:         if(flanco == 1)
  8176  08BE  0378               	decf	_flanco,w
  8177  08BF  1903               	btfsc	3,2
  8178                           
  8179                           ;Main.c: 184:         {;Main.c: 185:             if(PIR1bits.TMR1IF == 1)
  8180  08C0  1C0C               	btfss	12,0	;volatile
  8181  08C1  28C5               	goto	i1l4043
  8182                           
  8183                           ;Main.c: 186:             {;Main.c: 187:                 TMR1 = 0;
  8184  08C2  018E               	clrf	14	;volatile
  8185  08C3  018F               	clrf	15	;volatile
  8186                           
  8187                           ;Main.c: 188:                 PIR1bits.TMR1IF = 0;
  8188  08C4  100C               	bcf	12,0	;volatile
  8189  08C5                     i1l4043:
  8190                           
  8191                           ;Main.c: 193:         if(flanco == 2)
  8192  08C5  3002               	movlw	2
  8193  08C6  0678               	xorwf	_flanco,w
  8194  08C7  1D03               	btfss	3,2
  8195  08C8  28D0               	goto	i1l4053
  8196                           
  8197                           ;Main.c: 194:         {;Main.c: 196:             T1CONbits.TMR1ON = 0;
  8198  08C9  1010               	bcf	16,0	;volatile
  8199                           
  8200                           ;Main.c: 197:             T = TMR1;
  8201  08CA  080F               	movf	15,w	;volatile
  8202  08CB  00F7               	movwf	_T+1
  8203  08CC  080E               	movf	14,w	;volatile
  8204  08CD  00F6               	movwf	_T
  8205                           
  8206                           ;Main.c: 198:             T1CONbits.TMR1ON = 1;
  8207  08CE  1410               	bsf	16,0	;volatile
  8208                           
  8209                           ;Main.c: 199:             INTCONbits.INTE = 0;
  8210  08CF  120B               	bcf	11,4	;volatile
  8211  08D0                     i1l4053:
  8212                           
  8213                           ;Main.c: 202:         INTCONbits.INTF = 0;
  8214  08D0  108B               	bcf	11,1	;volatile
  8215                           
  8216                           ;Main.c: 203:         flanco++;
  8217  08D1  3001               	movlw	1
  8218  08D2  00FF               	movwf	127
  8219  08D3  087F               	movf	127,w
  8220  08D4  07F8               	addwf	_flanco,f
  8221  08D5                     i1l4057:
  8222                           
  8223                           ;Main.c: 206:     if(PIR1bits.RCIF == 1)
  8224  08D5  1E8C               	btfss	12,5	;volatile
  8225  08D6  2945               	goto	i1l128
  8226                           
  8227                           ;Main.c: 210:         tecla = UART_read();
  8228  08D7  160A  118A  2390  120A  158A  	fcall	_UART_read
  8229  08DC  00FF               	movwf	127
  8230  08DD  087F               	movf	127,w
  8231  08DE  00F4               	movwf	ventana@tecla
  8232                           
  8233                           ;Main.c: 211:         UART_write(tecla);
  8234  08DF  0874               	movf	ventana@tecla,w
  8235  08E0  160A  118A  23A2  120A  158A  	fcall	i1_UART_write
  8236                           
  8237                           ;Main.c: 214:         if(tecla == 'A' || tecla == 'a') if(on == 0) on = ! on;
  8238  08E5  3041               	movlw	65
  8239  08E6  0674               	xorwf	ventana@tecla,w
  8240  08E7  1903               	btfsc	3,2
  8241  08E8  28ED               	goto	i1l4069
  8242  08E9  3061               	movlw	97
  8243  08EA  0674               	xorwf	ventana@tecla,w
  8244  08EB  1D03               	btfss	3,2
  8245  08EC  28F9               	goto	i1l4073
  8246  08ED                     i1l4069:
  8247  08ED  084A               	movf	_on^(0+128),w
  8248  08EE  1D03               	btfss	3,2
  8249  08EF  28F9               	goto	i1l4073
  8250  08F0  084A               	movf	_on^(0+128),w
  8251  08F1  1D03               	btfss	3,2
  8252  08F2  28F5               	goto	u521_20
  8253  08F3  3001               	movlw	1
  8254  08F4  28F6               	goto	u522_20
  8255  08F5                     u521_20:
  8256  08F5  3000               	movlw	0
  8257  08F6                     u522_20:
  8258  08F6  00FF               	movwf	127
  8259  08F7  087F               	movf	127,w
  8260  08F8  00CA               	movwf	_on^(0+128)
  8261  08F9                     i1l4073:
  8262                           
  8263                           ;Main.c: 216:         if(tecla == 'D' || tecla == 'd') if(on == 1) on = ! on;
  8264  08F9  3044               	movlw	68
  8265  08FA  0674               	xorwf	ventana@tecla,w
  8266  08FB  1903               	btfsc	3,2
  8267  08FC  2901               	goto	i1l4077
  8268  08FD  3064               	movlw	100
  8269  08FE  0674               	xorwf	ventana@tecla,w
  8270  08FF  1D03               	btfss	3,2
  8271  0900  290D               	goto	i1l4081
  8272  0901                     i1l4077:
  8273  0901  034A               	decf	_on^(0+128),w
  8274  0902  1D03               	btfss	3,2
  8275  0903  290D               	goto	i1l4081
  8276  0904  084A               	movf	_on^(0+128),w
  8277  0905  1D03               	btfss	3,2
  8278  0906  2909               	goto	u526_20
  8279  0907  3001               	movlw	1
  8280  0908  290A               	goto	u527_20
  8281  0909                     u526_20:
  8282  0909  3000               	movlw	0
  8283  090A                     u527_20:
  8284  090A  00FF               	movwf	127
  8285  090B  087F               	movf	127,w
  8286  090C  00CA               	movwf	_on^(0+128)
  8287  090D                     i1l4081:
  8288                           
  8289                           ;Main.c: 218:         if(tecla == 'W' || tecla == 'w')
  8290  090D  3057               	movlw	87
  8291  090E  0674               	xorwf	ventana@tecla,w
  8292  090F  1903               	btfsc	3,2
  8293  0910  2915               	goto	i1l4085
  8294  0911  3077               	movlw	119
  8295  0912  0674               	xorwf	ventana@tecla,w
  8296  0913  1D03               	btfss	3,2
  8297  0914  291D               	goto	i1l4091
  8298  0915                     i1l4085:
  8299                           
  8300                           ;Main.c: 219:         {;Main.c: 220:             pwm+=25;
  8301  0915  3019               	movlw	25
  8302  0916  00FF               	movwf	127
  8303  0917  087F               	movf	127,w
  8304  0918  07C9               	addwf	_pwm^(0+128),f
  8305                           
  8306                           ;Main.c: 221:             if(pwm > 100) pwm = 0;
  8307  0919  3065               	movlw	101
  8308  091A  0249               	subwf	_pwm^(0+128),w
  8309  091B  1803               	btfsc	3,0
  8310  091C  01C9               	clrf	_pwm^(0+128)
  8311  091D                     i1l4091:
  8312                           
  8313                           ;Main.c: 224:         if(tecla == 'S' || tecla == 's')
  8314  091D  3053               	movlw	83
  8315  091E  0674               	xorwf	ventana@tecla,w
  8316  091F  1903               	btfsc	3,2
  8317  0920  2925               	goto	i1l4095
  8318  0921  3073               	movlw	115
  8319  0922  0674               	xorwf	ventana@tecla,w
  8320  0923  1D03               	btfss	3,2
  8321  0924  292F               	goto	i1l120
  8322  0925                     i1l4095:
  8323                           
  8324                           ;Main.c: 225:         {;Main.c: 226:             if(pwm == 0) pwm = 100;
  8325  0925  0849               	movf	_pwm^(0+128),w
  8326  0926  1D03               	btfss	3,2
  8327  0927  292D               	goto	i1l4099
  8328  0928  3064               	movlw	100
  8329  0929  00FF               	movwf	127
  8330  092A  087F               	movf	127,w
  8331  092B  00C9               	movwf	_pwm^(0+128)
  8332  092C  292F               	goto	i1l120
  8333  092D                     i1l4099:
  8334  092D  3019               	movlw	25
  8335  092E  02C9               	subwf	_pwm^(0+128),f
  8336  092F                     i1l120:	
  8337                           ;Main.c: 228:         }
  8338                           
  8339                           
  8340                           ;Main.c: 229:         if((tecla == 'G' || tecla == 'g') && on == 0) giro=!giro;
  8341  092F  3047               	movlw	71
  8342  0930  0674               	xorwf	ventana@tecla,w
  8343  0931  1903               	btfsc	3,2
  8344  0932  2937               	goto	i1l4103
  8345  0933  3067               	movlw	103
  8346  0934  0674               	xorwf	ventana@tecla,w
  8347  0935  1D03               	btfss	3,2
  8348  0936  2943               	goto	i1l4107
  8349  0937                     i1l4103:
  8350  0937  084A               	movf	_on^(0+128),w
  8351  0938  1D03               	btfss	3,2
  8352  0939  2943               	goto	i1l4107
  8353  093A  084B               	movf	_giro^(0+128),w
  8354  093B  1D03               	btfss	3,2
  8355  093C  293F               	goto	u537_20
  8356  093D  3001               	movlw	1
  8357  093E  2940               	goto	u538_20
  8358  093F                     u537_20:
  8359  093F  3000               	movlw	0
  8360  0940                     u538_20:
  8361  0940  00FF               	movwf	127
  8362  0941  087F               	movf	127,w
  8363  0942  00CB               	movwf	_giro^(0+128)
  8364  0943                     i1l4107:
  8365                           
  8366                           ;Main.c: 231:         PIR1bits.RCIF = 0;
  8367  0943  1283               	bcf	3,5	;RP0=0, select bank0
  8368  0944  128C               	bcf	12,5	;volatile
  8369  0945                     i1l128:
  8370  0945  0873               	movf	??_ventana+2,w
  8371  0946  00FF               	movwf	127
  8372  0947  0872               	movf	??_ventana+1,w
  8373  0948  008A               	movwf	10
  8374  0949  0E71               	swapf	??_ventana^(0+4294967168),w
  8375  094A  0083               	movwf	3
  8376  094B  0EFE               	swapf	126,f
  8377  094C  0E7E               	swapf	126,w
  8378  094D  0009               	retfie
  8379  094E                     __end_of_ventana:
  8380                           
  8381                           	psect	intentry
  8382  0004                     __pintentry:	
  8383                           ;incstack = 0
  8384                           ; Regs used in _ventana: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8385                           
  8386  0004                     interrupt_function:
  8387  007E                     saved_w	set	btemp
  8388  0004  00FE               	movwf	btemp
  8389  0005  0E03               	swapf	3,w
  8390  0006  00F1               	movwf	??_ventana
  8391  0007  080A               	movf	10,w
  8392  0008  00F2               	movwf	??_ventana+1
  8393  0009  1283               	bcf	3,5	;RP0=0, select bank0
  8394  000A  1303               	bcf	3,6	;RP1=0, select bank0
  8395  000B  087F               	movf	btemp+1,w
  8396  000C  00F3               	movwf	??_ventana+2
  8397  000D  120A  158A  28BC   	ljmp	_ventana
  8398                           
  8399                           	psect	text35
  8400  13A2                     __ptext35:	
  8401 ;; *************** function i1_UART_write *****************
  8402 ;; Defined at:
  8403 ;;		line 38 in file "UART_com.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  dato            1    wreg     unsigned char 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  dato            1    0[COMMON] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg
  8412 ;; Tracked objects:
  8413 ;;		On entry : 300/0
  8414 ;;		On exit  : 300/100
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8417 ;;      Params:         0       0       0       0       0
  8418 ;;      Locals:         1       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0
  8420 ;;      Totals:         1       0       0       0       0
  8421 ;;Total ram usage:        1 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_ventana
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function i1_UART_write
  8432  13A2                     i1_UART_write:
  8433                           
  8434                           ;incstack = 0
  8435                           ; Regs used in i1_UART_write: [wreg]
  8436                           ;i1UART_write@dato stored from wreg
  8437  13A2  00F0               	movwf	i1UART_write@dato
  8438                           
  8439                           ;UART_com.c: 38: void UART_write(char dato);UART_com.c: 39: {;UART_com.c: 40:     TXREG 
      +                          = dato;
  8440  13A3  0870               	movf	i1UART_write@dato,w
  8441  13A4  0099               	movwf	25	;volatile
  8442  13A5                     i1l235:	
  8443                           ;UART_com.c: 41:     while(TXSTAbits.TRMT == 0);
  8444                           
  8445  13A5  1683               	bsf	3,5	;RP0=1, select bank1
  8446  13A6  1898               	btfsc	24,1	;volatile
  8447  13A7  0008               	return
  8448  13A8  2BA5               	goto	i1l235
  8449  13A9                     __end_ofi1_UART_write:
  8450                           
  8451                           	psect	text36
  8452  1390                     __ptext36:	
  8453 ;; *************** function _UART_read *****************
  8454 ;; Defined at:
  8455 ;;		line 69 in file "UART_com.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg
  8464 ;; Tracked objects:
  8465 ;;		On entry : 300/0
  8466 ;;		On exit  : 300/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0
  8472 ;;      Totals:         0       0       0       0       0
  8473 ;;Total ram usage:        0 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_ventana
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           
  8483                           ;psect for function _UART_read
  8484  1390                     _UART_read:
  8485                           
  8486                           ;UART_com.c: 71:     if(PIR1bits.RCIF == 1) return RCREG;
  8487                           
  8488                           ;incstack = 0
  8489                           ; Regs used in _UART_read: [wreg]
  8490  1390  1E8C               	btfss	12,5	;volatile
  8491  1391  2B94               	goto	i1l3903
  8492  1392  081A               	movf	26,w	;volatile
  8493  1393  0008               	return
  8494  1394                     i1l3903:
  8495  1394  3000               	movlw	0
  8496  1395  0008               	return
  8497  1396                     __end_of_UART_read:
  8498  007E                     btemp	set	126	;btemp
  8499  007E                     wtemp0	set	126
  8500                           
  8501                           	psect	config
  8502                           
  8503                           ;Config register CONFIG @ 0x2007
  8504                           ;	Oscillator Selection bits
  8505                           ;	FOSC = XT, XT oscillator
  8506                           ;	Watchdog Timer Enable bit
  8507                           ;	WDTE = OFF, WDT disabled
  8508                           ;	Power-up Timer Enable bit
  8509                           ;	PWRTE = OFF, PWRT disabled
  8510                           ;	Brown-out Reset Enable bit
  8511                           ;	BOREN = OFF, BOR disabled
  8512                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8513                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8514                           ;	Data EEPROM Memory Code Protection bit
  8515                           ;	CPD = OFF, Data EEPROM code protection off
  8516                           ;	Flash Program Memory Write Enable bits
  8517                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8518                           ;	In-Circuit Debugger Mode bit
  8519                           ;	DEBUG = 0x1, unprogrammed default
  8520                           ;	Flash Program Memory Code Protection bit
  8521                           ;	CP = OFF, Code protection off
  8522  2007                     	org	8199
  8523  2007  3F39               	dw	16185

Data Sizes:
    Strings     42
    Constant    10
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     80      80
    BANK1            80     41      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[5]), STR_8(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> main@buffer(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_array@cadena	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), main@buffer(BANK1[5]), 

    LCD_array@date	PTR const unsigned char  size(2) Largest target is 7
		 -> main@buffer(BANK1[5]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_LCD_command
    _main->_LCD_date
    _main->_UART_write
    _sprintf->___lwmod
    _UART_array->_UART_write
    _PWM_2->___awtoft
    _PWM_1->___awtoft
    ___ftmul->___awtoft
    ___fldiv->___awtoft
    _LCD_xy->_LCD_command
    _LCD_init->_LCD_command
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date

Critical Paths under _ventana in COMMON

    _ventana->i1_UART_write

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RPM_read->___fldiv
    ___flmul->___xxtofl
    _PWM_init_2->___fltol
    ___fladd->___fldiv
    _PWM_init_1->___fltol
    ___fltol->___fladd
    ___fttol->_RPM_read
    ___ftmul->___awtoft
    ___fldiv->___flmul
    ___awtoft->___ftpack
    _LCD_xy->_LCD_command
    _LCD_init->_LCD_command
    _LCD_array->_LCD_command
    _LCD_array->_LCD_date

Critical Paths under _ventana in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PWM_1
    _main->_PWM_2
    _PWM_init_2->___fltol
    _PWM_init_1->___fltol
    ___fltol->___fladd
    _PWM_2->___fttol
    _PWM_1->___fttol

Critical Paths under _ventana in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ventana in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ventana in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   51320
                                             31 BANK1     10    10      0
                          _LCD_array
                        _LCD_command
                           _LCD_date
                           _LCD_init
                             _LCD_xy
                              _PWM_1
                              _PWM_2
                         _PWM_Stop_1
                         _PWM_Stop_2
                         _PWM_init_1
                         _PWM_init_2
                           _RPM_init
                           _RPM_read
                         _UART_array
                          _UART_init
                         _UART_write
                            ___fttol
                        _antirrebote
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2895
                                             11 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              5 COMMON     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _antirrebote                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_array                                           2     0      2     267
                                              0 BANK0      2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (1) _UART_write                                           1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RPM_read                                            13    10      3    7329
                                             66 BANK0     13    10      3
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3536
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _RPM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init_2                                           9     7      2    7520
                                             16 BANK1      9     7      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3262
                                             66 BANK0     12     4      8
                                              0 BANK1      8     8      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_init_1                                           9     7      2    4289
                                             16 BANK1      9     7      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             78 BANK0      2     2      0
                                              8 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_Stop_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Stop_1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_2                                               18    18      0   12247
                                             13 BANK1     18    18      0
                           ___awtoft
                            ___fldiv
                            ___ftmul
                            ___fttol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM_1                                               18    18      0   12247
                                             13 BANK1     18    18      0
                           ___awtoft
                            ___fldiv
                            ___ftmul
                            ___fttol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     926
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             13     9      4     731
                                              0 BANK1     13     9      4
                           _RPM_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4047
                                             11 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2793
                                             40 BANK0     26    18      8
                           ___awtoft (ARG)
                            ___flmul (ARG)
                            ___ftmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3506
                                              5 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3193
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_xy                                               4     0      4     397
                                              2 BANK0      4     0      4
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     130
                                              2 BANK0      3     3      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_array                                            7     1      6    2774
                                              2 BANK0      7     1      6
                        _LCD_command
                           _LCD_date
 ---------------------------------------------------------------------------------
 (1) _LCD_date                                             3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _LCD_E
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _LCD_E
 ---------------------------------------------------------------------------------
 (3) _LCD_E                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ventana                                              4     4      0     266
                                              1 COMMON     4     4      0
                          _UART_read
                       i1_UART_write
 ---------------------------------------------------------------------------------
 (5) i1_UART_write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_array
     _LCD_command
       _LCD_E
     _LCD_date
       _LCD_E
   _LCD_command
     _LCD_E
   _LCD_date
     _LCD_E
   _LCD_init
     _LCD_command
       _LCD_E
   _LCD_xy
     _LCD_command
       _LCD_E
   _PWM_1
     ___awtoft
       ___ftpack
     ___fldiv
       ___awtoft (ARG)
         ___ftpack
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___xxtofl (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       _RPM_read (ARG)
         ___fldiv
           ___awtoft (ARG)
             ___ftpack
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     ___xxtofl
   _PWM_2
     ___awtoft
       ___ftpack
     ___fldiv
       ___awtoft (ARG)
         ___ftpack
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___xxtofl (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       _RPM_read (ARG)
         ___fldiv
           ___awtoft (ARG)
             ___ftpack
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     ___xxtofl
   _PWM_Stop_1
   _PWM_Stop_2
   _PWM_init_1
     ___fldiv
       ___awtoft (ARG)
         ___ftpack
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _PWM_init_2
     ___fladd
       ___fldiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___xxtofl (ARG)
     ___fldiv
       ___awtoft (ARG)
         ___ftpack
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _RPM_init
   _RPM_read
     ___fldiv
       ___awtoft (ARG)
         ___ftpack
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _UART_array
     _UART_write
   _UART_init
   _UART_write
   ___fttol
     _RPM_read (ARG)
       ___fldiv
         ___awtoft (ARG)
           ___ftpack
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _antirrebote
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ventana (ROOT)
   _UART_read
   i1_UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     29      2E       7       57.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      87      12        0.0%
ABS                  0      0      87       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Sep 03 00:30:52 2020

           ?_antirrebote 0070                        _T 0076             ___fldiv@aexp 0061  
           ___fldiv@bexp 0060                        pc 0002             ___fldiv@sign 0059  
                     l95 13F3                       _on 00CA                       fsr 0004  
    ___wmul@multiplicand 0022               _PWM_Stop_1 1396               _PWM_Stop_2 139C  
    __Umul8_16@word_mpld 0026                      l200 14B2                      l235 13AC  
                    l403 0E78                      l415 0EF9                      l424 0F50  
                    l417 0ED7                      l445 1426                      l680 1604  
                    l681 160C                      l913 040E                      l930 04E7  
                    l915 03E6                      l693 16EB                      l909 036C  
                    l951 0579                      l778 17DA                      l965 0CFA  
                    l989 0E47                      _PR2 0092                      fsr0 0004  
                    _pwm 00C9                      indf 0000               _PWM_init_1 170C  
             _PWM_init_2 077A             ___flmul@aexp 003C             ___flmul@bexp 003D  
           ___flmul@sign 003B             ___flmul@temp 0046             ___flmul@prod 0042  
           ___fltol@exp1 006F                     l1024 1471                     l1017 030B  
                   l1062 09C1                     l1063 09CB                     l1049 096B  
                   l3203 0CC9                     l3223 0CEF                     l3207 0CCC  
                   l4201 15C8                     l3321 0E39                     l3313 0E1F  
                   l3209 0CD4                     l3243 0D25                     l3227 0CF2  
                   l4213 15EF                     l4205 15D4                     l3309 0E06  
                   l3237 0D19                     l4207 15D9                     l3327 0E43  
                   l3263 0D74                     l3271 0D50                     l5023 162F  
                   l5103 0F1F                     l4217 1602                     l4313 1405  
                   l3273 0D98                     l4401 17D6                     l5041 0BED  
                   l4233 1469                     l4219 15F4                     l4323 0A07  
                   l2803 16A0                     l3269 0D93                     l4413 17F7  
                   l5125 0F65                     l5117 0F42                     l5109 0F21  
                   l3295 0DD2                     l3287 0D9E                     l4351 0A50  
                   l2823 16D5                     l2807 16AA                     l4503 0361  
                   l5151 0FA9                     l5135 0F7A                     l5143 0F90  
                   l5127 0F69                     l5071 0E7D                     l5231 0607  
                   l3289 0DBB                     l4329 0A1D                     l4409 17E9  
                   l4513 0376                     l5145 0F94                     l5073 0E90  
                   l5065 0E74                     l5225 05F5                     l3299 0DD4  
                   l4363 0A78                     l4347 0A40                     l2835 16FC  
                   l2827 16E7                     l4611 04F9                     l4603 04D9  
                   l4507 0364                     l4435 082C                     l4427 0808  
                   l4451 14B9                     l4197 15C1                     l4701 0065  
                   l4429 0816                     l4453 14C7                     l4461 14E0  
                   l4293 141E                     l5165 0FBC                     l5157 0FB8  
                   l5077 0EA0                     l5253 0668                     l5237 0613  
                   l4359 0A68                     l4375 1794                     l4543 03B2  
                   l4711 007B                     l4703 006D                     l4439 0837  
                   l4287 13D5                     l5087 0ED9                     l5167 0E54  
                   l5263 0699                     l4633 051E                     l4625 0513  
                   l4457 14D5                     l5169 0FFB                     l4379 179D  
                   l4619 050C                     l4627 0515                     l4555 03F3  
                   l4483 0338                     l5187 143D                     l5099 0F13  
                   l5291 06F5                     l4397 17C6                     l4821 097A  
                   l4661 0575                     l4637 0520                     l4581 043F  
                   l4573 041C                     l4557 03F5                     l4565 0408  
                   l4485 0340                     l5285 06DE                     l4815 0963  
                   l4647 0561                     l4583 0441                     l4591 0455  
                   l4479 0335                     l5279 06CD                     l4841 09B0  
                   l4657 0571                     l4681 003E                     l5393 0E8B  
                   l4835 09AB                     l4827 097E                     l4771 0291  
                   l4763 025D                     l4683 0040                     l5395 0EEB  
                   l4941 1556                     l5397 14A4                     l4853 09E8  
                   l4829 0990                     l4765 027A                     l4685 0048  
                   l5399 157F                     l4943 155F                     l4951 157A  
                   l4839 09BF                     l4775 0293                     l4953 158D  
                   l4945 1568                     l4865 084A                     l4785 02C5  
                   l4947 1571                     l4795 02F4                     l4699 0063  
                   l4973 1483                     l4789 02DB                     l4959 15AA  
                   l4975 148A                     l4983 149F                     l4977 1491  
                   l4979 1498                     l4999 0AE8                     STR_1 101A  
                   STR_2 1021                     STR_3 1026                     STR_4 1041  
                   STR_5 1035                     STR_6 1039                     STR_7 103D  
                   STR_8 102B                     STR_9 1030             ?_LCD_command 0070  
                   u3025 16F1                     u4025 0DA2                     u4115 0DF1  
                   u4125 0E0F                     u4045 0DAD                     u4135 0E2A  
                   u7005 0B8C                     u6221 048C                     u6213 0467  
                   u6205 0446                     u6125 03FA                     u6230 04A7  
                   u6222 048E                     _INTF 0059                     u5415 15CD  
                   u6231 04A8                     u6223 0494                     u6232 04AD  
                   u6224 0496                     u6080 03D5                     u6233 04AE  
                   u6225 049C                     u6226 049E                     u6090 03D6  
                   u5435 15E8                     u7035 0C91                     u6075 03C9  
                   u2965 16B4                     u5525 1472                     u5605 142E  
                   u5455 15FB                     u7135 0F57                     u5545 14FB  
                   u7330 06C9                     u7250 05FE                     u5555 1533  
                   u3955 0D59                     u2995 16D6                     u6275 04FC  
                   u7340 06CA                     u7260 05FF                     u3965 0D62  
                   u5725 0A79                     u5495 1613                     u5735 0A81  
                   u6375 0544                     u7095 0F38                     u7407 0759  
                   u3985 0D6D                     u5825 17DF                     u7417 13EE  
                   u5905 082D                     u7507 159F                     u7427 0842  
                   u3995 0D82                     u5675 0A51                     u6635 0212  
                   u5595 1427                     u7517 1550                     u7437 0856  
                   u5685 0A59                     u5765 17A4                     u6565 0125  
                   u7527 1517                     u7447 086F                     u5935 14BC  
                   u7457 087E                     u6665 0249                     u5865 080B  
                   u7467 088D                     u5795 17C7                     u6915 09D3  
                   u6835 0987                     u6675 0261                     u6595 017E  
                   u5955 14CD                     u7477 089A                     u6765 02B0  
                   u5885 0817                     u5965 14D6                     u7487 08A7  
                   u6855 09A3                     u6775 02CE                     u6695 026C  
                   u5895 0823                     u7497 08B6                     u6785 02E6  
                   u6875 09B8                     _TMR1 000E                     _main 0586  
                   _giro 00CB                     _freq 00CC             ___ftpack@arg 0020  
           ___ftpack@exp 0023                     btemp 007E         i1UART_write@dato 0070  
                   start 0010          ___fldiv@new_exp 005A       __size_of_LCD_array 0064  
           ___ftmul@cntr 0038             ___ftmul@sign 0039             ___fttol@exp1 00AC  
           ___fttol@lval 00A8         __end_of_LCD_date 1555         __end_of_LCD_init 08BC  
          ___fltol@sign1 006E          __end_of___fladd 0586                    ?_main 0070  
                  _CCP1X 00BD          __end_of___fldiv 0E4F                    _CCP1Y 00BC  
                  _CCP2X 00ED                    _CCP2Y 00EC                    STR_10 1021  
        __end_of___flmul 0318          __end_of___fltol 170C          __end_of___ftmul 0AA4  
        __end_of___fttol 1800                    _LCD_E 13B0          __end_of___lwdiv 083C  
                  i1l120 092F             ventana@tecla 0074                    i1l128 0945  
                  i1l235 13A5          __end_of___lwmod 14E5                    _RCREG 001A  
                  _SPBRG 0099                    _PORTD 0008                    _PWM_1 0AA4  
                  _TRISB 0086                    _PWM_2 0BA9                    _TRISD 0088  
                  _TXREG 0019              ?_UART_array 0020            ___awtoft@sign 0075  
     __size_of_UART_init 0011       __size_of_UART_read 0006          __end_of_dpowers 101A  
        __end_of_isdigit 13D7            ___ftpack@sign 0024              ?_UART_write 0070  
                  pclath 000A         __end_of_RPM_init 13C9         __end_of_RPM_read 1696  
        __end_of_ventana 094E                    status 0003                    wtemp0 007E  
        __end_of_sprintf 1000          __initialization 0013             __end_of_main 077A  
            ?_PWM_Stop_1 0070              ?_PWM_Stop_2 0070                   ??_main 00BF  
          ___fttol@sign1 00A7                   ?_LCD_E 0070                   ?_PWM_1 0070  
                 ?_PWM_2 0070              ?_PWM_init_1 00B0              ?_PWM_init_2 00B0  
      __end_of_LCD_array 15B9                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP2M2 00EA                   _CCP2M3 00EB                   _CCPR1L 0015  
                 _CCPR2L 001B         __end_of___awtoft 141C         __end_of___ftpack 1625  
                 i1l4103 0937                   i1l4107 0943                   i1l4043 08C5  
                 i1l4053 08D0                   i1l4081 090D                   i1l4073 08F9  
                 i1l4057 08D5                   i1l4091 091D                   i1l4085 0915  
                 i1l4077 0901                   i1l4069 08ED                   i1l4095 0925  
                 i1l4099 092D                   i1l3903 1394                   _INTEDG 040E  
                 _LCD_xy 1482                   u521_20 08F5                   u522_20 08F6  
                 u526_20 0909                   u527_20 090A                   u537_20 093F  
                 u538_20 0940                   _TMR1IF 0060                   _TMR2ON 0092  
       __end_of___xxtofl 09F1                ??___fladd 00A0                   ___wmul 141C  
      __end_of_UART_init 13E8        __end_of_UART_read 1396                ??___fldiv 0050  
              ??___flmul 0036                ??___fltol 00AC      __size_of_UART_array 0022  
              ??___ftmul 0031                ??___fttol 00A4                ??___lwdiv 0075  
                 _flanco 0078                ??___lwmod 0075     __size_of_antirrebote 0013  
    __size_of_UART_write 0007             LCD_date@date 0075    ___ftmul@f3_as_product 0035  
           __pdataCOMMON 0078                ??_isdigit 0075       __size_of__Umul8_16 0023  
                 saved_w 007E                ??_ventana 0071                ??_sprintf 002E  
           ___xxtofl@arg 002A             ___xxtofl@exp 0029             ___xxtofl@val 0020  
__end_of__initialization 001F     __size_of_LCD_command 0037                ?_LCD_date 0070  
              ?_LCD_init 0070      __size_of_PWM_Stop_1 0006      __size_of_PWM_Stop_2 0006  
             ___fltol@f1 00A8            __end_of_LCD_E 13BB               ___awtoft@c 0028  
          __end_of_PWM_1 0BA9            __end_of_PWM_2 0CAE             RPM_read@freq 0069  
             ___ftmul@f1 002B               ___ftmul@f2 002E      __size_of_PWM_init_1 0079  
    __size_of_PWM_init_2 0086               ___fttol@f1 00A0           __pcstackCOMMON 0070  
          ?i1_UART_write 0070                LCD_init@i 0024                ?_RPM_init 0070  
              ?_RPM_read 0062                  ??_LCD_E 0075                  ??_PWM_1 00AD  
                ??_PWM_2 00AD             sprintf@width 0036               __pbssBANK1 00C9  
                ?_LCD_xy 0022               ??_LCD_date 0020                  LCD_xy@x 0022  
                LCD_xy@y 0024               ??_LCD_init 0022         UART_array@cadena 0020  
      __end_of__Umul8_16 1482               __pmaintext 0586           ??i1_UART_write 0070  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D                ?___awtoft 0028                ?___ftpack 0020  
             ??_RPM_init 0075               ??_RPM_read 0065                  _T2CKPS0 0090  
                _T2CKPS1 0091                ?___xxtofl 0020             ??_UART_array 0076  
           ??_UART_write 0075               __stringtab 1000                PWM_1@duty 00BC  
              PWM_2@duty 00BC          __size_of_LCD_xy 0031          PWM_1@pulso_alto 00B6  
                ___fladd 0318                  ___fldiv 0CAE                  ___flmul 0023  
                ___fltol 1696          __size_of___wmul 0021                  ___ftmul 09F1  
                ___fttol 1785                  ___lwdiv 0800                  ___lwmod 14B3  
     __end_of_UART_array 145F               ??___awtoft 0075               ??___ftpack 0025  
     __end_of_UART_write 13B0             ??_PWM_Stop_1 0075             ??_PWM_Stop_2 0075  
                __ptext1 0E4F                  __ptext2 13C9                  __ptext3 141C  
                __ptext4 14B3                  __ptext5 0800                  __ptext6 13E8  
                __ptext7 13D7                  __ptext8 143D                  __ptext9 13A9  
              _T1CONbits 0010                  _dpowers 1010                  _isdigit 13C9  
           ??_PWM_init_1 00B2             ??_PWM_init_2 00B2               ??___xxtofl 0024  
                _ventana 08BC          PWM_2@pulso_alto 00B6                  _sprintf 0E4F  
                main@rpm 00C7     end_of_initialization 001F                _LCD_array 1555  
     __end_of_PWM_Stop_1 139C       __end_of_PWM_Stop_2 13A2                _RCSTAbits 0018  
     __end_of_PWM_init_1 1785       __end_of_PWM_init_2 0800                _PORTBbits 0006  
              _UART_init 13D7                _UART_read 1390                _PORTDbits 0008  
            ___fladd@grs 006D            LCD_array@date 0026            ___xxtofl@sign 0028  
              _TRISBbits 0086                _TRISCbits 0087              ___fldiv@grs 005C  
            ___fldiv@rem 0055     __end_ofi1_UART_write 13A9               ?_LCD_array 0022  
            ___flmul@grs 003E               main@buffer 00C2           __end_of_LCD_xy 14B3  
              _TXSTAbits 0098        __size_of_LCD_date 0039        __size_of_LCD_init 0080  
            ___ftmul@exp 0034            ??_antirrebote 0020           __end_of___wmul 143D  
          __pidataCOMMON 0003               ?_UART_init 0070               ?_UART_read 0070  
             LCD_array@x 0022               LCD_array@y 0024      start_initialization 0013  
      __size_of_RPM_init 000E        __size_of_RPM_read 0071            ??_LCD_command 0020  
               ??_LCD_xy 0076                 ??___wmul 0075                __Umul8_16 145F  
    __end_of_antirrebote 13FB                ___fladd@a 0066                ___fladd@b 0062  
      __size_of___awtoft 0021        __size_of___ftpack 006C                ___fldiv@a 0048  
              ___fldiv@b 004C                ___flmul@a 0032                ___flmul@b 002E  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0              RPM_read@rpm 006C        __size_of___xxtofl 00A3  
           _isdigit$1228 0020              ??_LCD_array 0028              sprintf@flag 0035  
            sprintf@prec 0031      __end_of_LCD_command 151C         ___lwdiv@dividend 0022  
               ?___fladd 0062                 ?___fldiv 0048                 ?___flmul 002E  
               ?___fltol 00A8                 ?___ftmul 002B                 ?___fttol 00A0  
             ?__Umul8_16 0020                 ?___lwdiv 0020                 ?___lwmod 0027  
              __pstrings 1000              ??_UART_init 0075              ??_UART_read 0070  
   PWM_init_1@frecuencia 00B0                 PWM_1@aux 00B9                 PWM_2@aux 00B9  
               PWM_1@per 00B3                 PWM_2@per 00B3                 PWM_1@pwm 00BD  
         __size_of_LCD_E 000B                 PWM_2@pwm 00BD                 ?_isdigit 0070  
         __size_of_PWM_1 0105           __size_of_PWM_2 0105    __size_ofi1_UART_write 0007  
               ?_ventana 0070         ___lwdiv@quotient 0025                 ?_sprintf 002B  
      interrupt_function 0004     PWM_init_2@frecuencia 00B0           ___wmul@product 0024  
               _LCD_date 151C                 _LCD_init 083C            PWM_init_1@per 00B6  
          PWM_init_2@per 00B6                 _PIE1bits 008C                 _PIR1bits 000C  
            _antirrebote 13E8             i1_UART_write 13A2              __stringbase 100F  
      ___wmul@multiplier 0020                 _RPM_init 13BB                 _RPM_read 1625  
         UART_write@dato 0075              _LCD_command 14E5              ??__Umul8_16 0022  
       __size_of___fladd 026E         __size_of___fldiv 01A1         __size_of___flmul 02F5  
       __size_of___fltol 0076         __size_of___ftmul 00B3         __size_of___fttol 007B  
       __size_of___lwdiv 003C         __size_of___lwmod 0032                 ___awtoft 13FB  
               ___ftpack 15B9       __end_of__stringtab 1010               sprintf@val 0033  
               ___xxtofl 094E         __size_of_isdigit 000E          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0024                 __ptext10 1625                 __ptext11 0023  
               __ptext20 0BA9                 __ptext12 145F                 __ptext21 0AA4  
               __ptext13 13BB                 __ptext30 1555                 __ptext22 094E  
               __ptext14 077A                 __ptext31 151C                 __ptext23 1785  
               __ptext15 0318                 __ptext32 14E5                 __ptext24 09F1  
               __ptext16 170C                 __ptext33 13B0                 __ptext25 0CAE  
               __ptext17 1696                 __ptext34 08BC                 __ptext26 13FB  
               __ptext18 139C                 __ptext35 13A2                 __ptext27 15B9  
               __ptext19 1396                 __ptext36 1390                 __ptext28 1482  
               __ptext29 083C         __size_of_ventana 0092         __size_of_sprintf 01B1  
          __size_of_main 01F4               _INTCONbits 000B                 isdigit@c 0021  
               intlevel1 0000                sprintf@ap 0032                sprintf@sp 0038  
       ___lwmod@dividend 0029                stringcode 100A   __Umul8_16@multiplicand 0020  
               sprintf@c 0039                 sprintf@f 002B          ___lwmod@divisor 0027  
        ___lwmod@counter 0075                 stringdir 100A                 stringtab 1000  
             _UART_array 143D            ___fladd@signs 006A               _UART_write 13A9  
           ___fladd@aexp 006B             ___fladd@bexp 006C     __Umul8_16@multiplier 0028  
         LCD_command@cmd 0075        __Umul8_16@product 0024  
